<?xml version="1.0" encoding="utf-8"?>
<search> 
  
  
    
    <entry>
      <title>习惯</title>
      <link href="/620403/"/>
      <url>/620403/</url>
      
        <content type="html"><![CDATA[<p>习惯的养成，依赖于四个部分：</p><ul><li>触机（cue）</li><li>惯性行为（routine）</li><li>奖励（reward）</li><li>信念（belief）</li></ul><a id="more"></a><p><strong>触机</strong><br>即触发习惯的原因，你可以想象成手枪的扳机，按下扳机，子弹就打出去了。习惯的触机有很多，可能是时间、地点或场景。你早上刷牙的触机是起床这个动作；去吃午饭是因为时间到了（额，好吧，还有肚子饿了）；有人习惯睡前刷微博，那么触机可能是你躺下来盖上被子。触机本身没有好坏之分，决定习惯好坏的，是它引发的惯性行为。</p><p><strong>惯性行为</strong><br>之所以叫惯性，是因为它是无意识的，比如一打开电脑就先上网看看娱乐新闻；比如睡前一定要刷一下朋友圈。在建立新习惯的过程中，我们的自制力，就用于修正那些引起拖延的旧行为，将其替换为新的惯性。在更正坏习惯时，你需要格外留意引发它的触机，同时关注自己的行为，不断提醒自己不要重蹈覆辙。这一步是最消耗时间和精力的过程，可能要与旧习惯反复拉锯，因为良好惯性行为的建立不仅需要有自制力去克服旧的行为，还需要在行为结束时获得正向的反馈，也就是下面要说的“奖励”。</p><p><strong>奖励</strong><br>这是习惯养成中至关重要的一环，它往往被人们忽略。为什么坏习惯容易养成且难以改变？因为它们的奖励往往即时而明显：打游戏、刷网页、吃零食这些哪个不是这样？好习惯难以形成，也恰恰因为短期的奖励不够明显。背单词、健身、练书法这些行为往往需要较长的时间才能看到效果，有些人天生能从过程中获得精神激励，但很多人不行，那我们需要人为的赋予自己奖励：比如记录自己的成长和进步、时不时发个微博鼓励下自己、达成一些小目标时吃顿好的庆祝下等等（啊喂也不要暴饮暴食啊！）关于奖励，稍稍多说几句。诸如学习、健身这种事本身是有点反人性的，有没有什么办法能快速建立正向奖励机制呢？这个展开能写两本书…知乎上有很多学习、健身相关的优质答案了，我这里不赘述。我想提供一种思维：积极的、开放性的、成长性的思维。即多去看看那些享受学习、享受健身的人是怎么做到这些事情的，尝试去学习他们的方法，把目光放在积极面上，而不是怀疑自己能力不行，觉得自己做不好。此外，强化你的“信念”有助于你获得精神上的正反馈。</p><p><strong>信念</strong><br>这是支撑你建立习惯的内在动力：你想要每天背单词，是为了干掉英语考试；你想要学会弹吉他，是为了能在各种晚会上一显身。你想要规律饮食、早睡早起，是为了身体健康；你想要健身减肥，可能是想俘获女神/男神的芳心。总之，你是想成为一个更好的人。信念能让你你在养成好的习惯时获得精神上的正向反馈，同时，你的信念越强烈，就越能忍受改变过程中的痛苦与反复。</p>]]></content>
      
      
      <categories>
          
          <category> 620401：意志力 </category>
          
      </categories>
      
      
    </entry>
    
    
    
    <entry>
      <title>读书笔记 / 自控力</title>
      <link href="/620402/"/>
      <url>/620402/</url>
      
        <content type="html"><![CDATA[]]></content>
      
      
      <categories>
          
          <category> 620401：意志力 </category>
          
      </categories>
      
      
    </entry>
    
    
    
    <entry>
      <title>意志力</title>
      <link href="/620401/"/>
      <url>/620401/</url>
      
        <content type="html"><![CDATA[]]></content>
      
      
      <categories>
          
          <category> 620401：意志力 </category>
          
      </categories>
      
      
    </entry>
    
    
    
    <entry>
      <title>脑力开发</title>
      <link href="/620601/"/>
      <url>/620601/</url>
      
        <content type="html"><![CDATA[<h1><span id="da-nao-zheng-li-zhu">大脑整理术</span><a href="#da-nao-zheng-li-zhu" class="header-anchor">#</a></h1><p>读书笔记</p><h2><span id="pdi-yi-zhang">第一章</span><a href="#pdi-yi-zhang" class="header-anchor">#</a></h2><p>大脑具有相当大的可塑性<br>保持镇定和积极心态是重要的两个能力</p><h2><span id="pzhai-chao">摘抄</span><a href="#pzhai-chao" class="header-anchor">#</a></h2><ul><li>媒体中所有频闪的画面都会搞得你筋疲力尽，持续消耗你的定向反应能力（对新奇信息的反应能力）。 在儿童时期看太多电视会长生持久的不良影响，例如，他会减弱人控制冲动的能力。1-3岁观看电视节目的时间与7岁之前注意障碍和多动障碍有关。</li><li>身体和大脑遵从自然法则，适用于轻松自如这个概念的自然法则被称作能量守恒定律。</li><li>动机是神经可塑性的一个非常关键的要素。除非你真的想改变，否则你是不会改变的。被动的努力不能解决问题，只有当前额叶皮层这个大脑中的大脑被激活时，才会调动起所有的资源。</li><li>运动可以促进血液的氧和作用，当血液被输送到大脑，你会觉得思维敏捷，心情平静。此外，运动也会降低你体内的酸性水平，增强你的体能。</li><li>心智练习的几个方法：阅读非小说类的书籍，选修其他课程、旅游、参加有启发性的对话或辩论。</li><li>练习专注于一项活动，而且时间要越来越长。不要同时做好几件事，也不要从一件事快速跳转到另一件事情上。要让自己沉浸到感兴趣的某项活动之中，而且要全身心的投入。</li><li>他们不知道的是，如果他们吃早餐，他们得到的将远不止是思路清晰、记住重要的信息、精力旺盛和情绪积极。在某种程度上，早餐是一天中最重要的一餐，它标志着长时间持续的不进食阶段结束了。</li><li>通过保持旁观者的视角，你可以养成不做评判的态度，如果你在任何时间只是旁观而不是对正在发生的事情做出反应，你就会延迟对情景的反应，一直到所有的信息都被正确的看待。扩大视野与拓展注意力是一致的。</li></ul>]]></content>
      
      
      <categories>
          
          <category> 6206：脑力开发 </category>
          
      </categories>
      
      
    </entry>
    
    
    
    <entry>
      <title>读书笔记 / 如何高效学习</title>
      <link href="/640202/"/>
      <url>/640202/</url>
      
        <content type="html"><![CDATA[<blockquote><p>斯科特 · 杨</p></blockquote><p>斯科特·杨（Scott Young）在《如何高效学习》（Learn More,Study Less）中把高效学习的关键分成五步。他应用了自己发明的这套学习方法，10天学完了线性代数，1年学完了4年MIT的课程。</p><p>一、能量管理</p><p>他分析发现自己保持学习的高效率具有以下特点：</p><p>1、管理体型：</p><p>①每日运动，保持体型。</p><p>②不熬夜。</p><p>③每周休息一天。</p><p>2、绝不拖延：建立每周和每日目标。</p><p>3、批处理：类似的工作批量完成。</p><p>4、有组织。</p><p>二、时间控制</p><p>这是柳比歇夫的某日工作时间表。</p><p>（这里缺张图）</p><p>实际上，不仅仅柳比歇夫有这个习惯，如日本作家村上春树也是一个自律的典范。每日10点睡觉，4点起床，跑步吃早点后，打开电脑固定每天写10页字。这种高强度的时间控制是他稳定输出作品的保证，而反观其他天赋型作家，往往一本惊世之作后再无建树。</p><p>而在实际操作中，我发现绝大多数人的每日计划日程都完不成。以前我和许多人一样很焦虑，老想着今天的学习或者工作计划没有完成，其实大可不必。完全做到当日的时间安排表才是不正常的。</p><p>心理学中上有个定律叫“墨菲定律”（Murphy’s law），在社会中广泛存在，在股市里散户的追涨杀跌把这一定律表现得淋漓尽致。恩…或者说表现得惨绝人寰…</p><p>主要内容：</p><p>一、任何事都没有表面看起来那么简单；</p><p>二、所有的事都会比你预计的时间长；</p><p>三、会出错的事总会出错；</p><p>四、如果你担心某种情况发生，那么它就更有可能发生。</p><p>墨菲定律的原句是这样的：</p><p>如果有两种或两种以上的方式去做某件事情，而其中一种选择方式将导致灾难，则必定有人会做出这种选择。</p><p>为什么计划总是完不成，墨菲定律的第二条阐释了，所有的事儿都会比你预计的时间长。</p><p>三、习惯养成</p><p>据研究，大脑构筑一条新的神经通道需要21天时间。所以，人的行为暗示，经21天以上的重复，会形成习惯，而90天以上的重复，会形成稳定的习惯。习惯的形成大致分三个阶段：</p><p>第一阶段：1一7天，这个阶段你必须不时提醒自己注意改变，并刻意要求自己。因为你一不留意，你的坏情绪、坏毛病就会浮出水面，让你又回到从前。你在提醒自己、要求自己的同时，也许会感到很不自然、很不舒服，然而，这种“不自然、不舒服”是正常的。</p><p>第二阶段：7—21天，经过一周的刻意要求，你已经觉得比较自然、比较舒服了，但你不可大意，一不留神，你的坏情绪、坏毛病还会再来破坏你，让你回到从前。所以，你还要刻意提醒自己，要求自己。</p><p>第三阶段：21一90天，这一阶段是习惯的稳定期，它会使新习惯成为你生命的一部分。在这个阶段，你已经不必刻意要求自己，它已经像你抬手看表一样的自然了。</p><p>如果你使用此法失败了，如果你听过了却没有切实改变，请你别气馁！切记，潜意识只有在习惯成自然之后，才能任你随意驱使，你可能还没有了解持续的力量，你要有耐心，务必坚韧不拔。</p><p>但是，很多的坏习惯，由于你以前不止90或100次的暗示甚至更多的是亲自实践，已经根深蒂固了。所以，你需要花费更大的力气，但方法很简单，就是你重做一次。</p><p>四、批处理</p><p>批处理包括：</p><p>1、统计应有的工作量</p><p>2、一次性完成作业：例如中学期间的某科作业，最好一口气完成。某些作业的完成切勿切割开来，某些技能，如练习书法和磨练英语，需要日复一日，勤学苦练。总之，看任务的性质。</p><p>3、提高注意力阈值：现代社会的阅读方式已经碎片化，很多人学不了几分钟就要刷一次朋友圈，注意力高度不集中。办法是做自己喜欢的事儿，哪怕是用电脑看电影，做到期间不刷朋友圈。互联网化社会最重要的就是注意力，保持自己的注意力尤为重要。</p><p>五、自我处理</p><p>包括：</p><p>所有的物品都放在固定的位置</p><p>坚持随身记录</p><p>坚持日历和做事清单</p>]]></content>
      
      
      <categories>
          
          <category> 6402：学习管理 </category>
          
      </categories>
      
      
    </entry>
    
    
    
    <entry>
      <title>记忆</title>
      <link href="/640301/"/>
      <url>/640301/</url>
      
        <content type="html"><![CDATA[<p>人类思维中信息内容的储存和使用过程。是人脑对经验过事物的识记、保持、再现或再认，它是进行思维、想象等高级心理活动的基础。记忆作为一种基本的心理过程，是和其他心理活动密切联系着的。记忆联结着人的心理活动，是人们学习、工作和生活的基本机能。把抽象无序转变成形象有序的过程就是记忆的关键。</p><h2><span id="pshun-shi-ji-yi-duan-shi-ji-yi-chang-shi-ji-yi">瞬时记忆 · 短时记忆 · 长时记忆</span><a href="#pshun-shi-ji-yi-duan-shi-ji-yi-chang-shi-ji-yi" class="header-anchor">#</a></h2><p><strong>瞬时记忆</strong>又叫感觉记忆，这种记忆是指作用于人们的剌激停止后，剌激信息在感觉通道内的短暂保留。信息的保存时间很短，一般在0.25～2秒之间。瞬时记忆的内容只有经过注意才能被意识到，进入短时记忆。<br><strong>短时记忆</strong>是保持时间大约在1分钟之内的记忆。据实验研究，在没有复述的情况下，18秒后回忆的正确率就下降到10%左右。如不经复述大约在1分钟之内就会衰退或消失。有人认为，短时记忆也是工作记忆，是一种为当前动作而服务的记忆，即人在工作状态下所需记忆内容的短暂提取与保留。</p><p>短时记忆有三个特点：</p><ul><li>记忆容量有限，据米勒的研究为7±2个组块。“组块”就是记忆单位，组块的大小因人的知识经验等的不同而有所不同。组块可以是一个字、一个词、一个数字，也可以是一个短语、句子、字表等。</li><li>短时记忆以听觉编码为主，兼有视觉编码。</li><li>短时记忆的内容一般要经过复述才能进入长时记忆。</li></ul><p><strong>长时记忆</strong>指信息经过充分的和有一定深度的加工后，在头脑中长时间保留下来的记忆。从时间上看，凡是在头脑中保留时间超过1分钟的记忆都是长时记忆。长时记忆的容量很大，所存贮的信息也都经过意义编码。我们平时常说的记忆好坏，主要是指长时记忆。</p><p>瞬时记忆系统、短时记忆系统和长时记忆系统虽各有自己的对信息加工的特点，但从时间衔接看是连续的，关系也是很密切的。</p><h2><span id="pji-yi-yi-wang-qu-xian">记忆遗忘曲线</span><a href="#pji-yi-yi-wang-qu-xian" class="header-anchor">#</a></h2><p>即<strong>艾宾浩斯记忆遗忘曲线</strong>。</p>]]></content>
      
      
      <categories>
          
          <category> 6403：记忆 </category>
          
      </categories>
      
      
    </entry>
    
    
    
    <entry>
      <title>摘抄集 / 趣味</title>
      <link href="/730111/"/>
      <url>/730111/</url>
      
        <content type="html"><![CDATA[<p>通过标志重捕法诸葛亮发现巴蜀地区盛产孟获。</p>]]></content>
      
      
      <categories>
          
          <category> 7301：摘抄 </category>
          
      </categories>
      
      
    </entry>
    
    
    
    <entry>
      <title>摘抄集 / 2019年</title>
      <link href="/730119/"/>
      <url>/730119/</url>
      
        <content type="html"><![CDATA[<ol><li>And, when he shall die<br>Take him and cut him out in little stars<br>And he will make the face of heaven so fine<br>That all the world will be in love with night<br>And pay no worship to the garish sun.<br>等他死了以后，<br>你再把他带去，分散成无数的星星，<br>把天空装饰得如此美丽，<br>使全世界都恋着黑夜，<br>不再崇拜炫目的太阳。<br>—— 莎士比亚《罗密欧与朱丽叶（朱生豪译本）》</li></ol>]]></content>
      
      
      <categories>
          
          <category> 7301：摘抄 </category>
          
      </categories>
      
      
    </entry>
    
    
    
    <entry>
      <title>摘抄集 / 2021年</title>
      <link href="/730121/"/>
      <url>/730121/</url>
      
        <content type="html"><![CDATA[<h1><span id="chun">春</span><a href="#chun" class="header-anchor">#</a></h1><ol><li>可是重要的是你目标明确，从未停止，在那天到来之前，就已经做好了准备。</li><li>洛丽塔，我生命之光，我欲念之火。我的罪恶，我的灵魂。—— 《洛丽塔》</li><li>正是江南好风景，落花时节又逢君。—— 杜甫《江南逢李龟年》</li><li>Do what you love, love what you do.</li><li>长风破浪会有时，直挂云帆济沧海。</li><li>草堂春睡足，窗外日迟迟。</li></ol>]]></content>
      
      
      <categories>
          
          <category> 7301：摘抄 </category>
          
      </categories>
      
      
    </entry>
    
    
    
    <entry>
      <title>摘抄集 / 2020年</title>
      <link href="/730120/"/>
      <url>/730120/</url>
      
        <content type="html"><![CDATA[<ol><li>我无限的热爱着新的一日<br>今天的太阳 今天的马 今天的花楸树<br>使我健康富足 拥有一生<br>从黎明到黄昏 阳光充足<br>胜过一切过去的诗<br>—— 海子《幸福一日》</li><li>长夜将至，我从今开始守望，至死方休。我将不娶妻、不封地、不生子。我将不戴宝冠，不争荣宠。我将尽忠职守，生死於斯。我是黑暗中的利剑，长城中的守卫。我是抵御寒冷的烈焰，破晓时分的光线，唤醒死者的号角，守护王国的铁卫。我将生命与荣耀献给守夜人，今夜如此，夜夜皆然。</li><li>黯然销魂者，唯别而已矣。—— 江淹《别赋》</li><li><strong>春有百花秋有月，夏有凉风冬有雪，若无闲事挂心头，便是人间好时节。</strong><br>—— 宋·无门和尚《颂》</li><li>愿妻娘子相离之后，重梳蝉鬓，美扫娥眉，巧逞窈窕之姿，选聘高官之主，弄影庭前，美效琴瑟合韵之态。解怨释结，更莫相憎；<strong>一别两宽，各生欢喜。</strong></li><li>喜今日两姓联姻，一堂缔约，良缘永结，匹配同称。看此日桃花灼灼，宜室宜家，卜他年瓜瓞绵绵，尔昌尔炽。谨以白头之约，书向鸿笺，好将红叶之盟，载明鸳谱。</li><li>让我们热爱的美成为我们的所为。—— 诗人，鲁米</li><li>夫唯不争，天下莫能与之争。</li><li>云腾致雨，露结为霜。金生丽水，玉出昆冈。</li><li>殷勤昨夜三更雨，又得浮生一日凉。—— 苏轼</li><li>绿蚁新醅酒，红泥小火炉。—— 白居易《问刘十九》</li><li>剑分三等，庶人剑，诸侯剑，天子剑。行凶斗狠，招摇过市，为庶人之剑；以勇武为锋，以清廉为锷，以贤良为脊，以忠圣为铗，为诸侯之剑；以七国为锋，以山海为锷，制以五行，开以阴阳，持以春夏，行以秋冬，举世无双，天下归服，为天子之剑。</li><li>If these ruins frighten you, take comfort from the knowledge that I am here.<br>如果这些废墟使你害怕的话，请你同时记得我也在你身边。</li><li>我，罗伯斯庇尔，长眠于此，过往的行人啊，不要为我哀伤，如果我活着，你们谁也活不了。—— 罗伯斯庇尔的墓志铭</li><li>有酒盈杯，聊为故人持。绿鬓朱颜，不似少年时。</li><li>死非生的对立面，而作为生的一部分永存。</li></ol>]]></content>
      
      
      <categories>
          
          <category> 7301：摘抄 </category>
          
      </categories>
      
      
    </entry>
    
    
    
    <entry>
      <title>摘抄集 / 2018年</title>
      <link href="/730118/"/>
      <url>/730118/</url>
      
        <content type="html"><![CDATA[<p>但她穿越天际与白昼<br>直到所有牵挂之上<br>彼处无尘俗羁绊她的飞翔<br>也没有阴影蒙蔽道路<br>—— 托马斯·摩尔《假如我有翅膀》</p><ul><li>All the leaves are brown and the sky is gray<br>所有的叶子是褐色的，天空是灰色的。</li><li>Good things should last forever.<br>好事应该永远持续下去。</li><li>Wishing you all the blessings of a beautiful Christmas season.<br>愿你拥有圣诞节所有美好的祝福。</li><li>说到底，世界也是身外之物。</li><li>人们很少做他们相信是对的事，他们做比较方便的事，然后后悔。—— 鲍勃·迪伦</li><li>我们的孤独就像天空中漂浮的城市，仿佛是一个秘密，却无从述说。—— 宫崎骏</li><li>“Some of us don’t get to grow old with the one we love.”<br>“I’ll grow old with her,Mr Reese. Just from afar.”<br>“总有人无法和所爱之人一起白头。”<br>“我会和她一起白头，里瑟先生，只是天各一方。”</li><li>万物在同一高潮点，如尖利闪电般湮灭。</li><li>万物皆有裂痕，那是光照进来的地方。</li><li>We’re not walking in the dark. We are the dark.<br>我们不是行走于黑暗，我们就是黑暗本身。</li><li>We age not by years，but by stories.</li><li>我的开始就是我的结束，我的结束就是我的开始。</li><li>其疾如风，其徐如林，侵掠如火，不动如山。</li><li>风吹起星际尘埃穿过视场，<br>辐射追逐着物质流淌，<br>遍布宇宙洪荒。<br>时间陪伴着空间膨胀，哈勃的深场，<br>你在星际间扩散了亿万年，<br>却只让我见你微弱波前，燃尽时间。<br>造父变星的大气振荡，<br>所有周光关系都描在画上，<br>从天枢一路走到摇光，<br>原来束缚只是因为引力连绵。</li><li>纵豆蔻词工，青楼梦好，难赋深情。—— 姜夔</li><li>只愿即墨烟花隽永，不求青鸾白发长生。</li><li>Onde a terra acaba e o mar começa. 陆止于此，海始于斯。</li><li>火星的轨道处于地球的轨道之外，在地球上是不可能看到火星凌日的，只有处于地球轨道之内的行星才可以看到。</li><li>取乎其上，得乎其中；取乎其中，得乎其下；取乎其下，则无所得矣。—— 《论语》</li><li>对于信息接收方来说，重要的是要关注内容，而不是形式；<br>而对信息传达方来说，新颖独特的形式是使对方有效地接收信息的保障。</li><li>如果你想掌握一个男人的命运，那就让他喜欢上你吧。</li><li>这个世界是真的吗？<br>你肉眼所见一切都是过去的，因为光需要时间射入你的眼中。<br>你的所有意识都是大脑告诉你的。<br>所以如果大脑在欺骗你的话，你所见的一切都是假的。<br>你所认知的世界是你唯一拥有的东西。<br>就算它本质是虚假的，对你来说也是唯一的真实的东西。<br>珍惜眼前的一切吧。</li><li>其耆欲深者，其天机浅。—— 《庄子·大宗师》</li><li>世间至为难得的，不过最微薄的行李，和最丰盛的自己。</li><li>随着年龄的增长，你所拥有的时间会越来越少。</li><li>为学日益，为道日损。</li><li>检测你智慧的增长恰恰是你的痛苦减少。</li><li>远离负能量。<br>情绪是会互相传染的，在安静的人身边会平和，在有趣的人身边会快乐；<br>同时在尖酸刻薄的人身边会狭隘，在低沉的人身边会忧郁。</li><li>任何人答应你的都可以不作数。<br>要想别人对承诺负责，你必须要保证对方背叛你的成本远远大于收益。<br>这个成本有可能是法律，有可能是利益，甚至有可能是名誉，<br>但绝不可以仅仅是道德。</li><li>那根柱子，已经不能拴住你了。<br>不管你小时候曾经被怎样地伤害，欺骗，挫败，欺辱，那些都已经过去了。<br>伤痛也许需要时间愈合，但你已经不是那个任人宰割的孩子了。<br>看看你的手——那只曾经柔弱的手，现在可以拿笔，可以握拳，可以创造财富，抚摸爱人，把握机会。<br>可以向任何人伸出，也可以毫不留情地收回。<br>你已经长大了，你已经强大，已经独立，已经可以独立思考和行动。<br>那只曾经拴住你的木桩，现在再也栓不住你了。<br>可你的心，那孩子一样幼稚的心，还在犹豫，还在畏惧，还在寻找安全，还在一次次被那个木桩拴住。<br>是时候了，对那些恶意的欺辱，善意的欺骗，错误的指示，盲目的限制说一句，你已经不需要他们了。</li><li>你还会得到的，而且更好。</li><li>大部分人的梦想永远都实现不了。</li><li>当我终于意识到我并不是唯一曾经把无意义的消耗当作努力的时候，<br>忽然发现，原来生活中我觉得很努力的人，也许没那么勤奋，如果在正确的方向上坚持行动，超过他们也并不困难。</li><li>生活的美妙之处却在于很多事情在我们没做到一定程度之前，是完全没法理解的。</li><li>我们这一生很我们终将会失去它，所以不妨大胆一点。<br>爱一个人，攀一座山，追一次梦，不妨大胆一点。有很多事都没有答案。</li><li>记住要仰望星空，不要低头看脚下，无论生活如何艰难，请保持一颗好奇心，<br>你总会找到自己的路和属于你的成功。</li><li>少年的时候，总是迫不及待地将自己的满腔爱意表达出来，而结果往往是陷入表演之中而不自知。<br>所以两个人的记忆才会出现偏差，那些你觉得刻骨铭心的过去，对方往往没有同样的感觉，甚至茫然不知。成长的标志就是懂得克制自己。克制自己的情绪，克制自己的表演欲，甚至克制自己的喜欢。少年时候，喜欢一个人恨不能把她变成自己身体的一部分，她刚说冷，我这边心里已经结冰了，她说难过，我立马如丧考妣，比她还难过，唯恐无法将自己的爱意表达出来。而事实上，谁也无法承担起另一个人的价值寄托，只有做一个独立、有价值的人，才能真正学会去爱另一个人。也千万不要尝试改变另一个人，这注定是徒劳的。<strong>做自己就好，爱情的真谛在于相互的吸引、志趣相投的同行，而不是追逐和依附。</strong></li><li>如果把人体比如成一台电脑的话，<br>中医讲究恬淡虚无，清心寡欲，勿大喜大怒大悲，节欲，待人温和，宽宏大量，修性以保神，安心以全身，其本质是减少和制约大功率程序运行，好钢用在刀刃上，只做必须的活动，如饮食男女，尽可能的减少其他消耗，所以生命在于静养，在软件上进行优化，如参禅，打坐，站桩等。西方的运动，锻炼，身体四肢的加强，心脏脉搏提升有力，肺活量变大，弹跳高远等等，这是偏重硬件的升级。站桩是直接锻炼五脏六腑的，但太过于形而上学，一般人把握不住其精髓。反之，体育运动则能通过外练筋骨皮的方式，间接的带动五脏六腑功能改善。</li><li>熬夜是身体的大敌。</li><li>人要长寿无非是精气层面的开源节流。<br>运动能加快代谢废物排出，饮食量增加，消化速度提升，后天吸收更好，这是开源。<br>君子不立围墙之下，不去危险之地，爱惜自己的身体，节房事，饮酒有度（不醉酒），抽烟有制，不过分劳作，避免过于殚精竭虑，这就是节流。</li><li>生活节奏感。</li><li>当你做计划表的时候，列出两件最重要的事情，这两件事是最重要的，你这一天必须要完成的。</li><li>做一件新奇的事情，你不用在计划表上写详细的计划，<br>仅需写下“今天的尝试”，然后就去尝试，比如跟一个陌生人讲话，比如看一本你从未接触过的领域的书，比如去参加一些你未曾去过的活动。（当然有的事情你可以花一个星期甚至是一个月去完成。</li><li>知乎上很多答案都是营销号。<br>很多教你做人做事的答主其实大学还没毕业。<br>很多教你如何提高情商的其实本尊现实中人人烦只是他自己感觉良好。<br>教你如何快速加薪的人其实月薪五千不到一直在为房租发愁。<br>看看就好，认真你就输了。</li><li>对我们自身而言，「老实」是一种主观的个人选择。<br>它也许意味着「遵守规则」、「诚实」、「稳重」等传统美德；<br>但「老实」二字，若从别人的口中说出来，大概并不是什么褒义词。<br>从不友善的角度思考：只有当一个人看起来十分平凡、没什么大优点、也似乎不太可能干出什么大事的时候，我们才会「夸」这个人「老实」。当我们成为别人口中的「老实人」时，他们其实并不是在对我们的「品德」进行描述；事实上，他们是在对我们的过去做一个婉转的总结。<br>老实既意味着平庸。</li><li>与人保持长久舒适的关系, 靠的是共性和吸引。<br>而不是压迫，捆绑，奉承，和一味的付出以及道德式的自我感动。</li><li>好多年了，你一直在我的伤口中幽居，我放下过天地，却从未放下过你，我生命中的千山万水，任你一一告别。</li><li>选择太多会让人更加迷茫、犹豫，提出2、3个最好的选项就好。</li><li>在提出请求时，后面附带一个理由更令人信服。</li><li>这个世界上，有10%的人不管你做什么都喜欢你。<br>还有10%的人不管你做什么都讨厌你，其余的人会根据你的行为来对待你。所以你会发现你从没讨好过一些人，但是他们就是愿意帮助你。当你遇到困难时，去找那些帮过你的人而不是你帮过的人，会让你有更好的结果。</li><li>【帮人保持自己的原则。】<br>有些人喜欢无底线帮别人，容易陷入“老好人”的困局。因为别人对你的期望越来越高，一旦哪天你不想做或做不到了，别人会心存埋怨。</li><li>在愤怒、悲哀等情绪下不要做出任何决定，否则平静后通常会后悔。—— 先安抚自己的情绪。</li><li>很多事情没有立即答应，基本就是拒绝。</li><li>对于喜欢的人不会直接说喜欢，而会说我想见你。<br>对想见的人不会说我想见你，而会说一起吃饭吧，说出口的话和实际想法不一样的。</li><li>无论两条腿如何努力，也无法让两颗心的距离更加接近。</li><li>不要指望任何人，即便是至亲至爱至友也不行。</li><li>将心比心。</li><li>倾听时的沉默，要比言语的安慰更动人心。</li><li>想象并坚信自己所处某种角色，并臣服于这种想象。<br>那么在气场上就不会露怯，情绪就会波澜不惊。而不带情绪地去表达自己的观点，如果准备充分，自然逻辑自洽。</li><li>在亲密关系中，你对自己的想法和行为控制力比你认为得要低得多。<br>尤其是一些不安全依恋风格的人，在感情中基本上处于被自己潜意识控制的状态。</li><li>作为一个弱无神论者，每当看到信徒用自己喜欢的方式供奉神灵时，总忍不住会想到“猫的礼物”。</li><li>和一个人聊天很舒服是什么感觉？<br>当是你最无欲无求的时候。没有企图心（不需要求取信息，不求对方好感，不担心对方对你的印象评价，甚至不在乎是否还有下一次交谈）。这时的你最恣意、随性、真诚、坦率，同时又不乏对对方的尊重与感恩。节奏可快可舒，话题不拘一格，权看对方喜好；间或的沉默也不会令你局促不安，费心地思考如何接下一个话题；当然如若聊到分歧处，也不至于拘谨或懊恼。随处可以终止，随时又可以再捡起继续。这种愉悦并不是来自于被认同感或征服感，而是短暂的，“吾即是世界”的满足感。</li><li>小知不及大知，小年不及大年。奚以知其然也。朝菌不知晦朔，蟪蛄不知春秋，此小年也。<br>楚之南有冥灵者，以五百岁为春，五百岁为秋；上古有大椿者，以八千岁为春，八千岁为秋。此大年也。<br>—— 庄子《逍遥游》</li><li>世上只有一种英雄主义，就是在认清生活真相之后依然热爱生活。 —— 罗曼·罗兰</li><li>马太效应 —— 这几乎是不以个人意志为转移的。优势会不断被强化积累。</li><li>我深以为然，最好的爱情状态应该是：保有自我的基础之上，拥有彼此。</li><li>【焦点效应与透明度错觉】<br>我们往往把自己看做一切的中心，并且直觉地高估别人对我们的关注程度。这可能造成对于他人行为的过分解读，而理解这一点可以帮助自己缓解不利情绪，要清楚你所表现出来的尴尬或紧张别人很可能并未察觉。</li><li>从不说硬话，从不做软事。</li><li>有人尖刻地嘲讽你，你马上尖酸地回敬他。<br>有人毫无理由地看不起你，你马上轻蔑地鄙视他。<br>有人在你面前大肆炫耀，你马上加倍证明你更厉害。<br>有人对你蛮不讲理，你马上对他胡搅蛮缠，<br>有人对你冷漠，你马上对他冷淡疏远。<br>看，你讨厌的那些人，<br>轻易就把你变成了，你自己最讨厌的那种样子。<br>这才是“敌人”对你最大的伤害。<br>—— 《喃喃》</li><li></li><li>摸鱼儿·雁丘词 / 迈陂塘<br>乙丑岁赴试并州，道逢捕雁者云：“今旦获一雁，杀之矣。其脱网者悲鸣不能去，竟自投于地而死。”予因买得之，葬之汾水之上，垒石为识，号曰“雁丘”。同行者多为赋诗，予亦有《雁丘词》。旧所作无宫商，今改定之。<br>问世间，情为何物，直教生死相许？<br>天南地北双飞客，老翅几回寒暑。<br>欢乐趣，离别苦，就中更有痴儿女。<br>君应有语：渺万里层云，千山暮雪，只影向谁去？<br>横汾路，寂寞当年箫鼓，荒烟依旧平楚。<br>招魂楚些何嗟及，山鬼暗啼风雨。<br>天也妒，未信与，莺儿燕子俱黄土。<br>千秋万古，为留待骚人，狂歌痛饮，来访雁丘处。</li><li>绸缪<br>绸缪束薪，三星在天。今夕何夕，见此良人？子兮子兮，如此良人何？<br>绸缪束刍，三星在隅。今夕何夕，见此邂逅？子兮子兮，如此邂逅何？<br>绸缪束楚，三星在户。今夕何夕，见此粲者？子兮子兮，如此粲者何？</li><li>我所有学过的、记过的、念过的、听过的情话，<br>在想你的那一刻，都再说不出口。<br>这眼能所见的，耳能听闻的，心能念想的，<br>不是肩上梅枝，不是山中细雨，不是苦酒山河。而是你，这世间，这呓语。<br>—— 《梦呓》</li><li>时有风吹幡动，一僧曰：风动；一僧曰：幡动；争论不休，惠能进曰：不是风动，亦非幡动，仁者心动。</li><li></li><li>假如再也遇不到你，祝你早安，午安，晚安。—— 《楚门的世界》</li><li>You are my favourite hello and my hardest goodbye.</li><li></li><li>某天，你无端想起一个人，她曾让你对明天有所期许，但是她却完全没有出现在你的明天里。</li><li>二八定律 —— 不值得去做的事情，就不值得做好。</li><li>自我就是叙事的，我们的本质就是我们的人生故事。<br>讲故事的能力根植于人类的生理和心理机制当中，它是宗教、文化、艺术的起源，也是每个个体认知和行为决策的底层机制。总之，我们在时刻构建着关于一切的故事，故事提供安全感、掌控感、意义感和身份感。我们用叙事的方式理解世界，构建自我。</li><li>世界是极度复杂的，而大脑的算力很有限，所以我们会本能地套用各种认知捷径，用尽可能省事的方式来理解世界。<br>当我们痛苦的时候，情绪和生理功能的调节增加能耗，能用来编故事的认知资源就更有限了。所以说痛是必然的，但苦是自找的。当你活在自己需要负全责的故事里时，50%的痛苦来自你和随机事件之间莫须有的归咎。</li><li>人生最重要的四件事：爱，知识，善良和智慧。</li><li>理查德·布兰森：永远不要后悔往事 —— 继续前进。<br>令我震惊的是，人们宁愿浪费大量时间在思索过去的失败上，</li><li>人生的一个基本事实是，我们身处迷宫之中，我们做的任何一件事都是在迷宫中寻找道路并走出迷宫。<br>越努力越焦虑的罪魁祸首是：“努力”在我们这个时代已经成了神话，而无视迷宫的存在。<br>智者的态度是，尽力而为，不断增加成功的可能性。这是我们唯一能做的事情。</li><li>“灰度认知”与“黑白决策”<br>认知能力越高的人，对世界的理解就越是灰度，即不黑不白的。比如，一个高水平的经济学家，是不会动不动就做明确预测的，反而是低水平的人什么都敢说。<br>但是一个人要想生活得好、事业好，每天面对的其实是大量具体的决策。决策是不能灰度的，必须在两难中坚决拍板，非黑即白，所以叫“黑白决策”。</li><li>知易行难是因为未深知<br>有的人经常会说，我就知道房价肯定会一直涨，但当时因为XXX原因，所以没有买，或者我知道比特币、腾讯股票、等等标的物一定会涨，但因为XXX原因，所以没有卖。<br>其实，事后的佯装聪明根本无法掩饰你对事物浅尝辄止的思考，你之所以没买，没有付诸行动，是因为你习惯性的以小聪明式的浅思考，代替了对一件事情的深度认知，因此才没有最终付诸行动。</li><li>“制衡关系”是人与人交往中最重要的关系<br>人的本性是善是恶？如果一个人对另一个人拥有了绝对的支配权会发生怎样的事情？一个著名的实验“斯坦福实验”中，扮演狱卒的人对扮演囚犯的人所做的一切很能说明问题。人和人之间原始状态的平衡来自于感官和心理上对制衡关系的评估，在人际交往中，制衡的逻辑原点永远是你能给对方带来的价值。因此，无论是一味的跪舔还是苦苦的维持都无法让你在人际中得到最好的位置。只有自己能力的不断增强才能帮你最好的拥有人际状态。</li><li>一万小时理论的解读应该是 —— “聚焦与效率” 而非 “聚焦与时间”<br>一万小时理论有两个关键点： 1. 在某个领域 2. 积累一万小时<br>很多人包括我自己，在开始的时候，简单的认为在一个领域重复一万小时的无差别活动，苦行僧式的对待自我成长，就是这个理论最大的价值。这是很大的误解。<br>然而，单纯的追求时间的积累而忽略了决定效率的策略与方法是低效的。</li><li>认识你自己，挖掘你基因深处的能力<br>如果说一万小时理论能帮助你在某个领域有所成就，那么基因就是我们祖祖辈辈几万小时理论留给我们最大的财富。基因往往是人们最强大的武器，试着去了解和发现自己基因深处那来自原始的呼唤是你超脱于平庸最好的方法。</li><li>别让焦虑成为你努力地第一动因。</li><li>任何事情加上时间的维度都会“显得”伟大，要学会甄别事实和吹牛。<br>时间久：他坚持做寿司40年，东瀛就是有工匠精神。他坚持守护雨林30年，他用半生投入在人类共同的事业<br>时间短：1小时转变你的思维；1个月从穷小子变高富帅；英语口语7天速成。</li><li>“心理视障”是客观且普遍存在的。</li><li>不确定性和偶然构成了我们的世界，做规划不做计划。<br>规划跟计划的区别在于，规划更灵活，大方向不变，小方面调整。</li><li>没有什么事情是无法拒绝的<br>绝大部分在当前看起来重要的事情都没有我们想象的重要，<br>那个“重要”与“紧急”的象限理论，只适合每次处理一个单独领域的事情，不要做交叉，<br>比如工作和生活的事情最好不要一起排序。否则某个领域的事情一定会被你自动降权。<br>亲恩比山重，韶华似水流。珍惜亲人，珍重自己，比任何事都重要。</li><li>勇于冒险或许会一时失足，却步不前则迷失自我。</li><li>我们应该尊重人性而不是完善人性，这是精神健康和幸福的重要基础。</li><li>我们对世界的体验受到我们关注点的影响。<br>问题缔造现实，你的关注点影响你的认知。感谢和追求那些美好的事物，美好的事物也会回报你。</li><li>让生活变得简洁而高效只需要一条规则，就是照管好自己，<br>保持一种简约的生活方式，控制好自己的内心，从加法生活过渡到减法生活。</li></ul>]]></content>
      
      
      <categories>
          
          <category> 7301：摘抄 </category>
          
      </categories>
      
      
    </entry>
    
    
    
    <entry>
      <title>摘抄集 / 2017年</title>
      <link href="/730117/"/>
      <url>/730117/</url>
      
        <content type="html"><![CDATA[<ul><li><p>我滑下你的暮色如厌倦滑下一道斜坡的虔诚。<br>年轻的夜晚像你屋顶平台上的一片翅膀。<br>你是我们曾经有的布宜诺斯艾利斯，<br>那座随着岁月悄悄溜走的城市。<br>你是我们的，节日的，<br>像水中倒映的星星。<br>时间中虚假的门，<br>你的街道朝向更轻柔的往昔。<br>黎明之光，它送出的早晨向我们走来，<br>越过甘甜的褐色海水。<br>在照亮我的百叶窗之前，<br>你低低的日色已赐福于你的花园。<br>被听成了一首诗的城市。<br>拥有庭院之光的街道。<br>—— Jorge Luis Borges. 博尔赫斯 / 蒙得维的亚</p></li><li><p>献给贝阿特丽斯 比维罗尼 韦伯斯特 德布尔里奇<br>我给你贫穷的街道、绝望的日落、破败郊区的月亮。/ I offer you lean streets, desperate sunsets, the moon of the jagged suburbs.<br>我给你一个久久地望着孤月的人的悲哀。 / I offer you the bitterness of a man who has looked long and long at the lonely moon.<br>我给你我写的书中所能包含的一切悟力、<br>我生活中所能有的男子气概或幽默。<br>我给你一个从未有过信仰的人的忠诚。<br>我给你我设法保全的我自己的核心 ——<br>不营字造句，不和梦想交易，不被时间、欢乐和逆境触动的核心。<br>我给你，早在你出生前多年的一个傍晚看到的一朵黄玫瑰的记忆。<br>我给你你对自己的解释，关于你自己的理论，你自己的真实而惊人的消息。<br>我给你我的寂寞、我的黑暗、我心的饥渴；我试图用困惑、危险、失败来打动你。<br>—— Jorge Luis Borges. 《我用什么才能留住你（节选）》</p></li><li><p>在我的爱人和我之间<br>必将竖起三百个夜晚如同三百高墙<br>而大海就像我们中间的魔法一场<br>—— Jorge Luis Borges. 博尔赫斯 / 离别</p></li><li><p>日落现如一只狐狸爬越这国度，转瞬间就点亮草丛。<br>空间充满犄角和马蹄，下面四轮马车像阵阴影滑过我父亲燃照的庭院。<br>圣彼得堡与毁灭在同一纬度<br>（你可见那斜塔中的美人？）<br>靠近冰封街屋，像水母般飘动着<br>那身着宽衣的可怜鬼。<br>而这里，为斋戒笼罩的，是从前那些笑声的畜群所包围的人，<br>远远高于树线，它们早把自己带往那地界。<br>人们动摇的台桌。<br>看外面，目睹黑暗是怎样烙住整泊灵魂的星河<br>乘上你火焰马车升起，离开这国家！<br>—— 托马斯 特朗斯特罗默 / 张崇殷译 / 《果戈理》</p></li><li><p>对自我渺小和软弱的认识中，耻辱也有极限；一旦超出极限，就会在自我耻辱中感到莫大享受。<br>一个人的后半辈子由习惯组成，而他的习惯却是在前半辈子养成的。<br>在这世上，人只有透过痛苦才能真正爱。<br>—— 陀思妥耶夫斯基</p></li><li><p>I can’t give you the world , but I can give you my world.<br>我不能给你全世界，但是我的世界可以全部给你。</p></li><li><p>“如果昨天放在明天会变成两天前，试问后天应该是今天或是昨天? ”  —— 时间绪论期末考题，陶拉里亚大学院</p></li><li><p>当布谷鸟在翠绿的橡树怀中歌唱，初次使人们在明媚春天心花怒放。 —— 查普曼</p></li><li><p>弱小和无知不是生存的障碍，傲慢才是。 —— 地球往事</p></li><li><p>有花堪折直须折，莫待无花空折枝。</p></li><li><p>诗人的风，正出经海洋和森林，求它自己的歌声。</p></li><li><p>It’s a fine day with you around. 这是一个美好的日子和你在一起。</p></li><li><p>人总是在接近幸福时倍感幸福，在幸福进行时却患得患失。<br>对于三十岁以后的人来说，十年八年不过是指缝间的事，而对于年轻人而言，三年五年就可以是一生一世。</p></li><li><p>不积跬步，无以至千里。<br>以前觉得老套，写作文都不想用。这几年才发现，此乃神句。<br>生活中绝大多数的问题，都可以用这句话解决。目标太远，想要却够不着，就会焦虑，就不知所措。我就告诉自己，走一点点，一点点就好，不求胜利，但求心安。<br>走一点点，就会想再走一些，走着走着，就不会在意离目标的远近，而把心思放在当下，解决手头问题，不再为太远的事情担心。工作，学习，健康上的目标，也一点点的靠近了。连带情绪问题，睡眠问题，也可以一并解决。<br>其实人的很多痛苦，来自于想的太多，而做的太少。</p></li><li><p>怎么防止一首歌被听腻？<br>节制。再好听也不要过于频繁的听，保持一个半饱的状态。有些古典音乐爱好者为了维持某个演奏版本的新鲜度，可能三四个月才会欣赏一次。人类的大脑就是这样，某种刺激过于频繁，神经系统就会提高相应的阈值。色情品也是这样，美食也是这样，爱情也是这样。</p></li><li><p>Why you don’t let people see the good in you?<br>Because when people see good,they expect good. And I don’t want to have to live up anyone’s expectations.<br>为什么你不让别人看到你善良的一面？<br>因为如果他们看见了，就会期待我一直是善良。我不想活在别人的期待中。</p></li><li><p>不以物喜，不以己悲。</p></li><li><p>共工怒触不周山<br>昔者，共工与颛顼争为帝，怒而触不周之山，天柱折，地维绝。<br>天倾西北，故日月星辰移焉；地不满东南，故水潦尘埃归焉。</p></li></ul>]]></content>
      
      
      <categories>
          
          <category> 7301：摘抄 </category>
          
      </categories>
      
      
    </entry>
    
    
    
    <entry>
      <title>摘抄集 / 2016年</title>
      <link href="/730116/"/>
      <url>/730116/</url>
      
        <content type="html"><![CDATA[<ul><li>我们都是星尘。这一刻，你活着。<br>这是一件了不起的事。你生活在这个星球上，呼吸着空气，喝着水，享受着最近的那颗恒星的温暖。你的DNA世代相传――回溯到更久远的时空，从宇宙的尺度来说，你身体里的每一个细胞、组成这些细胞的所有元素，都生于一颗恒星的熔炉中。—— 卡尔·萨根</li><li>太空浩瀚，岁月悠长，我始终乐于和她分享同一颗行星和同一个时代。—— 卡尔·萨根</li><li>就是这里。就是家。就是我们。<br>在这上面，是你曾经听说过的每一个人，曾经活着和曾经死去的每一个人……这个物种历史上每一个猎人和采集者，每一个英雄和懦夫，每一个文明的创造者和毁灭者，每一个国王和农民，每一对相爱的情侣，每一个充满希望的孩子，每一个父亲和母亲，每一个发明家和探险家，每一个道德导师，每一个腐败政客，每一个超级明星，每一个最高领袖，每一个圣徒和罪人，都在那里——在那悬浮于阳光中的一缕微尘之上。——卡尔·萨根</li><li>So they sprinkled moon dust in your hair<br>所以他们喷洒月亮的尘埃在你金色的头发上<br>of gold and starlight in your eyes of blue<br>散布星辰的光芒在你蓝色的眼睛里<br>—— Close To You / Olivia Ong</li><li>I’ll be the paint on the wall<br>我将会变成墙上的涂画<br>I’ll be the rain in the fall<br>我将会变成秋季的细雨<br>I will be anything you want<br>我将会变成任何你想要的一切<br>—— Glen</li><li>I am young and I am free<br>我是年轻的，我是自由的。<br>—— Pajaro Sunrise / Young &amp; Free<br>—— Something Just Like This / The Chainsmokers &amp; Coldplay</li><li>The sunshine’s come,<br>在阳光下<br>the flowers dance along the river,<br>花儿顺着河流舞蹈<br>the mountain.<br>山峦之间<br>It’s cold in the stream,<br>清凉的溪水顺流而下<br>I jump in and swim,<br>我跃入水中游泳<br>being a dreamer,<br>成为一个追梦者<br>—— Over The Way</li><li>As The last ship sailed towards the distant horizon<br>当最后的船舶驶向遥远的天际<br>I sat there watching on a rock<br>我坐在礁石上眺望<br>My mind slowly drifting away<br>任思绪如烟云般渐渐飘散<br>Forming into my Dreamtale<br>编织成我的梦境传说<br>—— The Dawn</li><li>Life is a maze, and love is a riddle<br>生活是座迷宫 爱是一个谜题</li><li>Walks along the Seine, laughing in the rain.<br>漫步塞纳河，细雨中欢笑</li><li>Are you going to Scarborough Fair?<br>您要去斯卡波罗集市吗？<br>Parsley, sage, rosemary, and thyme.<br>香芹，鼠尾草，迷迭香和百里香</li><li>一切都是瞬息，一切都将会过去。而那过去了的，就会成为亲切的怀念。—— 普希金</li><li>想和你一起生活<br>我想和你一起生活<br>在某个小镇，<br>共享无尽的黄昏<br>和绵绵不绝的钟声。<br>在这个小镇的旅店里——<br>古老时钟敲出的微弱响声<br>像时间轻轻滴落。<br>有时候，在黄昏，<br>自顶楼某个房间传来笛声，<br>吹笛者倚著窗牖，<br>而窗口大朵郁金香。<br>此刻你若不爱我，我也不会在意。</li><li>You say that you love rain,<br>but you open your umbrella when it rains.<br>You say that you love the sun,<br>but you find a shadow spot when the sun shines.<br>You say that you love the wind,<br>but you close your windows when wind blows.<br>This is why I am afraid, you say that you love me too.<br>你说你喜欢雨，<br>但当细雨飘洒时你却撑开了伞；<br>你说你喜欢太阳，<br>但当它当空时你却躲在阴凉之地;<br>你说你喜欢风，<br>但当它轻拂时你却紧紧地关上了自己的窗子；<br>所以当你说你也喜欢我，<br>我却会为此而烦忧。</li><li>Down by the salley gardens my love and I did meet.<br>在莎莉花园深处，吾爱与我曾经相遇。<br>—— William Butler Yeats 《Down By the Salley Garden》</li><li>When you are old and grey and full of sleep<br>And nodding by the fire, take down this book<br>And slowly read, and dream of the soft look<br>Your eyes had once, and of their shadows deep<br>How many loved your moments of glad grace<br>And loved your beauty with love false or true<br>But one man loved the pilgrim Soul in you<br>And loved the sorrows of your changing face<br>And bending down beside the glowing bars<br>Murmur, a little sadly, how Love fled<br>And paced upon the mountains overhead<br>And hid his face amid a crowd of stars<br>—— William Butler Yeats | When You Are Old</li><li>有人总是离开，<br>且不再回来。<br>一幢幢木屋像年老的妻子，<br>等候在路边——它们随处可见，<br>被荒弃，倾斜，渐显灰朽。<br>有人总是为了生计，<br>放弃铁杉和石砌的湖岸。<br>那孤独的美，<br>打点好人生的行李包，<br>驱车前往城市。<br>院子里的苹果树，<br>一直结着果，<br>只是果实一年比一年小。<br>当我们在此踏上这条路，<br>树木早已疯长，<br>房子坍塌了，甚至不值得，<br>人们破门而入。<br>田野会取而代之。<br>我们将认出的，<br>是风，同样狂野的风，<br>它没有过去。<br>—— 风景线</li><li>一月你还没有出现<br>二月你睡在隔壁<br>三月下起了大雨<br>四月里遍地蔷薇<br>五月我们对面坐着  犹如梦中<br>就这样六月到了<br>六月里青草盛开 处处芬芳<br>七月 悲喜交加<br>麦浪翻滚连同草地  直到天涯<br>八月就是八月 八月我守口如瓶<br>八月里我是瓶中的水  你是青天的云<br>九月和十月  是两只眼睛<br>装满了大海<br>你在海上  我在海下<br>十一月尚未到来<br>透过它的窗口  我望见了十二月<br>十二月大雪弥漫<br>—— 林白 / 过程</li><li>大家都在慌张奔波，他们一定也有你无法承受的故事，所以你有什么好绝望的</li><li>我这里今天下了大雨，所有的事物都因为雨水变得温柔起来，希望把这份心情也传达给你们，晚安</li><li>不要把秘密告诉风，风会把它传遍整个森林。</li><li>祝你喜欢的人恰巧也喜欢你，祝你每次考试都能有进步，祝你常在换季的衣服里发现花剩的零钱，祝你在下雨天时路上的空车都不拒载，祝你新尝试的美食总比想象中的更好吃，祝你做过的美梦都不会忘记，祝你的心情永远像周五的下午，祝你永远活的像个孩子。</li><li>如果发出声音是危险的，那就保持沉默。如果自觉无力发光，那就别去照亮别人。<br>但是，不要习惯了黑暗就为黑暗辩护。不要为自己的苟且而得意洋洋。不要嘲讽那些比自己更勇敢、更有热量的人们。可以卑微如尘土，不可扭曲如蛆虫。</li><li>First you hate 'em, then you get used to 'em.<br>Enough time passes, gets so you depend on them. That’s institutionalized.<br>这些墙很有趣。刚入狱的时候，你痛恨周围的高墙；<br>慢慢地，你习惯了生活在其中；最终你会发现自己不得不依靠它而生存。这就叫体制化。<br>Fear can hold you prisoner, hope can set you free.<br>A strong man can save himself, a great man can save another.<br>懦怯囚禁人的灵魂，希望可以令你感受自由。强者自救，圣者渡人。<br>Hope is a good thing, maybe the best of things,<br>and no good thing ever dies.<br>希望是美好的，也许是人间至善，而美好的事物永不消逝。<br>—— 《肖申克的救赎》</li></ul>]]></content>
      
      
      <categories>
          
          <category> 7301：摘抄 </category>
          
      </categories>
      
      
    </entry>
    
    
    
    <entry>
      <title>摘抄集 / 2015年</title>
      <link href="/730115/"/>
      <url>/730115/</url>
      
        <content type="html"><![CDATA[<ol><li>要是爱你爱的少些，话就可以说的多些了。—— 简·奥斯汀</li><li>我向旧日的恋人道歉，因为我对新人如同初恋。—— 辛波斯卡</li><li>你很忙，但知识不慌张。</li><li>可见你的问题主要是读书不多而想得太多。</li><li>Make up forever. 浮生若梦</li><li>也许，等待一切归迹于无声的时候，才能让你真正听到那句，我爱你。不管之前的喧嚣怎样爬过我们的伤口，但剩余的每一天，都会在每一个爱你的日子里。</li><li>You haven’t seen the last of me. 你们还没看见我破釜沉舟的勇气。</li><li>最后一个同伴来向我告别，她从长长的晚霞尽头走来，我身后已经变了颜色。从今以后，我必须要一个人披星戴月了。</li><li>就像从不会分开地等待明天，就像永不曾离去地度过那年。</li><li>这段话有二十七个字，我想表达给你的是第十、十一和第十五个字。</li><li>Live a little. 活在当下。</li><li>我想变成风，去撩一撩你。</li><li>和弦很美，声音很轻，就这样把我唱给你听。</li><li>但凡最登对，必定更精彩。</li><li>许多事情错过了不是错了而是过了。</li><li>草在结它的种子，风在摇它的叶子。我们站着，不说话，就十分美好。—— 顾城《门前》</li><li>梦想翅膀流星天空中划过。</li><li>城堡里藏着寂寞，寂寞在唱歌。旋律很熟悉，歌词很模糊。</li><li>你从这边走到那边，你避开了我的一生。你真远，你叫我的心一直走。—— 顾城</li><li>你是虚假的春天，是不能同归的殊途，是我年复一年藏在枕下的春秋大梦。</li><li>这样看你，用所有眼睛和所有距离，就像风住了，风又起。—— 冯唐《沉溺》</li><li>孤单，是一个人的狂欢。狂欢，是一群人的孤单。</li><li>当我们一起走过。</li><li>做生活的设计师。</li><li>风虽大，都绕过我的灵魂。</li><li>固然场景太歌德，少年已不是维特。</li><li>天，睡在瓦尔德田野的山色间。</li><li>我喜欢我望向别处时你落在我身上的目光。</li><li>我很喜欢你，就像海风喜欢山间的树木絮语。</li><li>遇见你们就是我收到的最好的礼物。</li><li>外面黄昏，火烧云。</li><li>永远记住，你自己决心成功比其它什么都重要。—— 林肯</li><li>一座教堂西提岛咖啡厅，一架白色大钢琴，两个人的合奏，旋律和伴奏开始在一起跳舞。</li><li>但愿山河宽，相隔只一瞬间。</li><li>那些我们一直惴惴不安又充满好奇的未来，会在心里隐隐约约觉得它们是明亮的。</li><li>I will love you forever.</li><li>如果不是相互喜欢，那么你的深情就是负担。</li><li>I will not change, no matter how U change. 电流不随电压的变化而变化。</li><li>永远不要问你不想知道答案的问题，永远不要为尚未发生的事烦恼。</li><li>世界在旋转 ~</li><li>时光之海没有彼岸。</li><li>所爱隔山海，山海不可平。</li><li>四季如梦。</li><li>这个人很懒，什么都没留下。</li><li>You are the apple of my eyes.</li><li>时光之末</li><li>年轻时我想变成任何人，除了我自己。</li><li>当你觉得孤独无助时，想一想还有几十万亿的细胞只为了你一个人而活。</li><li>一个人知道自己为什么而活，就可以忍受任何一种生活。</li><li>像成群结队的候鸟向往南方飞去，依赖那边温暖的冬天。</li><li>生命之所以有意义是因为它会停止。—— 卡夫卡</li><li>你路过玫瑰花园，我躲在你身边悄悄摇曳。你询问去梦之城的路，我藏在熙熙攘攘的人群中。你沉浸在金色的麦田，我的一个喷嚏，让金色随波荡漾。你在游乐场欢笑，我拿着你的小木马安静地坐在摩天轮上。就这样，我们陪伴你们欢笑、质疑、长大、成熟。可是你们总是很忙碌，以为自己看得很远，却往往对身边的我们视而不见。把自己淹没在嘈杂的人海中，日复一日，年复一年。不知道嘈杂的地方只会让你们更孤独，喧嚣之后是更深的落寞。</li><li>生活不是你在电影里看到的，生活更艰难。—— 《天堂电影院》</li><li>Get busy living, or get busy dying.—— 肖申克的救赎</li><li>对于不可说的东西我们必须保持沉默。—— 维特根斯坦</li><li>We laughed and kept saying “see u soon”,but inside we both knew we’d never see each other again. 我们笑着说再见，却深知再见遥遥无期。</li><li>Where we stay awake all night,where the heavens are shallow as the sea,is now deep,and you love me. 我们整夜无眠，天堂浅俗而大海深远，你爱我。—— 伊丽莎白 · 毕肖普《失眠》</li><li>你走你的路，我也走你的路。—— 莱昂纳德·科恩《最甜蜜的短歌》</li><li>她优雅的走着，像夜色一样。—— 拜伦</li><li>人生徘徊于两个世界中，犹如昼夜交替时星辰挂在天空。—— 拜伦 《唐璜》</li><li>我一天看了44次日落。—— 圣埃克苏佩里《小王子》</li><li>你下午四点钟来，那么从三点起，我就开始有了幸福感，时间越临近，我就感到幸福。—— 圣埃克苏佩里《小王子》</li><li>如果你想要制造羁绊，就得承担流泪的风险。—— 圣埃克苏佩里《小王子》</li><li>There is nothing permanent except change. 惟有变化才是永恒的。—— Heracleitus. 赫拉克利特</li><li>空集是任何集合的子集，所以我的每个梦里都有你。</li><li>金色的头发拥揽着少女心里最真诚的梦，纤细的身体收束着缱绻的年华，她的眼睛似夏日长空。</li><li>One day, you will understand, the whole is more than the sum of its parts. 有一天，你会明白，整个是超过它的总和。</li><li>当鲸鱼在海洋中死去，它的尸体会缓慢沉入海底。这个缓慢的过程有一个饱含诗意的名字——鲸落（Whale Fall）。这样一座鲸鱼的尸体可以供养一套以分解者为主的循环系统长达百年，这是它留给大海最后的温柔。</li><li>Que lo mejor de mi pasado sea lo peor de tú futuro.<br>这是一句西班牙语，按照字面意思直译成中文是，但愿我以前经历的最好的事是你以后经历的最差的事，我的西语老师在课堂上直接翻译成，愿你明朝崎路如我昨日佳境。</li></ol>]]></content>
      
      
      <categories>
          
          <category> 7301：摘抄 </category>
          
      </categories>
      
      
    </entry>
    
    
    
    <entry>
      <title>摘抄集 / 2014年</title>
      <link href="/730114/"/>
      <url>/730114/</url>
      
        <content type="html"><![CDATA[<ol><li>Love never ends. 爱是永不止息。—— Corinthians. 哥林多前书</li><li>这才知道我的全部努力，不过完成了普通的生活。 —— 穆旦《冥想》</li><li>爱自己是终身浪漫的开始。—— 奥斯卡·王尔德</li><li>与怪物战斗的人，应当小心自己不要成为怪物。当你凝视深渊时，深渊也在凝视着你。―― 尼采</li><li>Histories make men wise; Poems witty; The mathematics subtle; Natural philosophy deep; Moral grave; Logic and rhetoric able to contend. 历史使人明智；诗词使人灵秀；数学使人周密；自然哲学使人深刻；伦理使人庄重；逻辑修辞学使人善辨。—— Francis Bacon , British philosopher（英国哲学家，弗朗西斯·培根）</li><li>时间决定你会在生命中遇见谁，你的心决定你想要谁出现在你的生命里，而你的行为决定最后谁能留下。<br>—— 戴维·梭罗《瓦尔登湖》</li><li>我们都在阴沟里，但仍有人仰望星空。—— 奥斯卡·王尔德</li><li>未经审视的人生不值得一过。—— 苏格拉底</li><li>唯一配得上一个高等生物的理智态度，就是对不属于他的一切保持平静和冷淡的同情心。不是说这种态度有什么正当或真理的因子，而是说它如此令人艳羡，他必须接受它。—— 佩索阿 《不安选集》</li><li>不能让你毁灭的使你强大。―― 尼采</li><li>我贴在地面步行，不在云端跳舞。—— 维特根斯坦</li><li>大多数人在二十岁或三十岁就死了，他们变成自己的影子，往后的生命只是一天天不断地复制自己。—— 罗曼·罗兰</li><li>我穿过一个个城市，只为遇见你；路过的每一个你，都曾呼唤我的名字。<br>我爱你的双脚，还因为，它们曾踏遍土地，蒙受风尘，涉过水渠，直到你与我相遇。<br>我不再爱她，这是确定的，但我也许爱她，爱情太短，而遗忘太长。<br>—— 聂鲁达</li><li>他穿过人群走到她跟前，仅仅是为了跟她说：“那时候，你还很年轻，人人都说你美。现在，我是特意来告诉你，对我来说，我觉得现在你比年轻的时候更美。与你那时的面貌相比，我更爱你现在备受摧残的面容。”如果有一天，你不再害怕饥寒交迫、不再害怕孤单寂寞。你不会因为你的生活是个冰冻星球，需要一个闪闪发亮的人来拯救。你还是对她念念不忘，我想你一定是爱她的。—— 杜拉斯《情人》</li><li>她留着长长的黄色卷发，穿着白色的拖地长裙。</li><li>当一个人不能拥有的时候，他唯一能做的便是不要忘记。—— 普鲁斯特</li><li>除了没用的肉体自杀和精神逃避，第三种自杀的态度是坚持奋斗，对抗人生的荒谬。—— 加缪</li><li>尽管眼泪是无色的，却会使眼睛变红。—— 阿诺什·艾拉尼《没有悲伤的城市》</li><li>诗人从跃动、喧嚣不已的现实中唤出幻境和梦。—— 马丁·海德格尔</li><li>河的东岸正被乌沉沉的暝色所侵袭。</li><li>窗外星光闪耀，宇宙在猎户星座肩旁熊熊燃烧。</li><li>我喜欢你，因为你比我更像我自己。—— 艾米丽·勃朗特《呼啸山庄》</li><li>你身体里的每一个原子都来自一颗爆炸了的恒星,你左手的原子与右手的原子也许来自不同的恒星。这实在是我所知道的物理学中最富诗意的东西：你的一切都是星尘。星星都死去了，你今天才能在这里。</li><li>我是你路上最后的一个过客，最后的一个春天，最后的一场雪，最后的一次求生的战争。—— 保尔·艾吕雅</li><li>并不是所有黑暗的地方，都需要光明。—— 温特森</li><li>水来我在漩涡中等你，火来我在灰烬中等你。—— 洛夫</li><li>From small beginning come great things. 伟大始于渺小。</li><li>天下熙熙，皆为利来，天下攘攘，皆为利往。——《史记·货殖列传》</li><li>你最可爱，我说时来不及思索，但思索之后，还是这样说。—— 普希金</li><li>诸神的黄昏，整个天空都是玫瑰红色的，好像小王子的花。</li><li>星河里望一眼光年，尘埃里写一幕时间，云海里读一页情书，海岸边坐一夜枯骨。就算时光魂飞魄散。不管是你行将就木，躺在铺满天鹅绒的木床上。还是你心怀碎裂，以为自己走到了世界尽头。闭上眼，就可以看见少年爱人的脸。他依然会穿过时间，越过整饬的青春残骸，带着这一页仍有余温的表白，安抚你心底的波涛。</li><li>一天是永恒的缩影。—— 爱默生</li></ol>]]></content>
      
      
      <categories>
          
          <category> 7301：摘抄 </category>
          
      </categories>
      
      
    </entry>
    
    
    
    <entry>
      <title>摘抄集 / 天南地北</title>
      <link href="/730110/"/>
      <url>/730110/</url>
      
        <content type="html"><![CDATA[<ul><li>瑞士杜欧克斯堡村登山吊车站旁，有一张印上三种文字的告示。英文的字句是：“请勿摘花。”德文写着：“禁止摘花。”法文是：“爱山的人让花留在山上。”</li><li>爱尔兰结婚不许离婚，但是可以选择年限1到100年，<br>过期不续期就相当于自动离了，但是时间越短费用越高，1年的登记费折合人民币2万多，100年的只要6元钱。选择结婚一年的，有一本好厚的关于婚姻的书要看，而选择100年只一张纸，上面写着一句：祝你白头到老。</li><li>1973年10月17日，沙龙指挥的师穿透埃及战线，重新占领苏伊士运河沿岸。<br>随后，以色列军队甚至跨过运河，推进到距开罗仅101公里处，切断了埃及进攻主力第3军的退路。</li><li>1981年6月7日，以色列空军8架F-16A战斗机在6架F-15A战斗机掩护下展开了歌剧行动，<br>旨在摧毁伊拉克的奥西拉克核反应堆。以色列称这次行动为歌剧行动。</li><li>苏格兰有一巨大威士忌酒窖（藏酒值3亿英镑），20多年来都由80只鹅负警戒之责，而且从未失窃。<br>因此，苏格兰打算增加鹅数。</li><li>震网病毒又名Stuxnet病毒，是一个席卷全球工业界的病毒。<br>于2010年6月首次被检测出来，是第一个专门定向攻击真实世界中基础（能源）设施的“蠕虫”病毒，比如核电站，水坝，国家电网。互联网安全专家对此表示担心。作为世界上首个网络“超级破坏性武器”，Stuxnet的计算机病毒已经感染了全球超过 45000个网络，伊朗遭到的攻击最为严重，60%的个人电脑感染了这种病毒。计算机安防专家认为，该病毒是有史以来最高端的“蠕虫”病毒。蠕虫是一种典型的计算机病毒，它能自我复制，并将副本通过网络传输，任何一台个人电脑只要和染毒电脑相连，就会被感染。“震网”病毒利用了微软视窗操作系统之前未被发现的4个漏洞。通常意义上的犯罪性黑客会利用这些漏洞盗取银行和信用卡信息来获取非法收入。而“震网”病毒不像一些恶意软件那样可以赚钱，它需要花钱研制。这是专家们相信“震网”病毒出自情报部门的一个原因。据全球最大网络保安公司赛门铁克（Symantec）和微软（Microsoft）公司的研究，近60%的感染发生在伊朗，其次为印尼（约20%）和印度（约10%）， 阿塞拜疆、美国与巴基斯坦等地亦有小量个案。由于“震网”感染的重灾区集中在伊朗境内。美国和以色列因此被怀疑是“震网”的发明人。这种新病毒采取了多种先进技术，因此具有极强的隐身和破坏力。只要电脑操作员将被病毒感染的U盘插入USB接口，这种病毒就会在神不知鬼不觉的情况下(不会有任何其他操作要求或者提示出现)取得一些工业用电脑系统的控制权。</li><li>津巴布韦是非洲东南部内陆国家。<br>公元1100年前后开始形成中央集权国家。13世纪马卡伦加人建立莫诺塔帕王国，15世纪初王国达到鼎盛时期。1890年沦为英国南非公司殖民地，1923年英国政府接管该地，并给予“自治领地”地位。1980年4月18日独立。津巴布韦在1980年之前原本称为罗得西亚，这名字源自于替英国在这地区建立殖民地的塞西尔·罗兹。津巴布韦曾经经历了严重的恶性通货膨胀，但从2009年用美元和南非兰特替代本国货币后，通货膨胀开始逐渐趋于稳定。津巴布韦是非洲工业较发达的国家，制造业、农业、矿业为经济三大支柱，津巴布韦以出产优质鳄鱼皮而闻名，有“鳄鱼之乡”的誉称。该国自然资源丰富，工农业基础较好。哈拉雷是津巴布韦首都和最大城市，津巴布韦政治、经济、文化中心。位于国境东北高原上。海拔1480米，年降水量1000毫米左右，年均气温18℃。常年凉爽如春，四季宜人。哈拉雷面积477平方千米，人口约86万。由于在2009年之前受到了危害性极大的恶性通货膨胀冲击，若要恢复至上世纪90年代的水平仍旧需要天文数字的资金。2011年8月30日英国经济学家信息社将津巴布韦的首都哈拉雷(Harare)评为全球最不适合居住的城市。哈拉雷始建于1890年，当时英国殖民者为侵略津巴布韦而兴建的城堡。19～20世纪，殖民者不断进行城市扩建，城市初具规模。1935年设市。原名索尔兹伯里，1982年4月18日津巴布韦独立2周年时，将首都更名为哈拉雷。为全国重要的工业城市，工业产值仅次于布拉瓦约居全国第二。因其周围60千米地下遍布铬矿，故有铬都美称。有金属冶炼、卷烟、炼油、化肥、纺织、造纸、橡胶、金属加工、食品、车辆修配等工业部门。为世界较大的烟草集散市场之一，每年3～11月各国烟商云集，交易繁忙。为全国的交通中心，哈拉雷国际机场设备先进，与邻国有定期的航班往来。文教事业发达，津巴布韦大学位于北郊，多体育运动场所，还有博物馆、国家档案馆、国家美术馆、地质博物馆和国家植物园等。</li><li>英国海温坎姆选新市长时，总依据古例，要当众把全部市议会议员的体重量一下，<br>哪一位比上任前轻了或和上任前一样重的，便获得热烈的鼓掌。这证明他没有靠民脂民膏发胖。</li><li>英国诗人柯勒律治把读者分为四类：<br>第一类好比计时的沙漏，读书像漏沙，注进去，漏出来，到头来一点痕迹也没有留下；第二类好像海绵，什么都吸收，挤一挤，流出来的东西原封不变，甚至还脏了些；第三类像滤豆浆的布袋，豆浆都流了，留下的只有豆渣；第四类像是宝石矿床里的苦工，把矿渣甩一旁，只拣些纯净的宝石。</li><li>巴西东北部的西阿拉省气候干燥，常年阳光普照，令人感到单调乏味。<br>碰到阴天，西阿拉人会额手相告：“天气真好！”</li><li>在希腊爱琴海的一个小岛上，有一个名叫阿罗斯安塔利亚的小城。<br>每当大雨滂沱时，全城就会出现一望无际的肥皂“海洋”。这个城下的岩石含有大量的碱性物质，遇水就起泡泡。城市里的居民洗衣时，只要随手捡一土块就可当“肥皂”用。</li><li>郑桓公准备袭击郐国时，先打听郐国有哪些豪杰、良臣和明智果断的人士。<br>全部记下他们的名字，选择郐国好的田地写在他们名下表示已通贿赂，又在他们名下写上官爵名称表示已被收买。然后假装在外城门外设了坛场，把有关记录掩埋在下面，洒上鸡和猪的血来加以祭祀，像结盟似的。郐君相信了这些假证据，因而杀了全部良臣。郑桓公偷袭郐国时，郐国已经没有可用之材了。郑桓公的儿子郑武公最终彻底灭亡郐国。</li><li>现代射电天文望远镜正常工作所需要的能量是巨大的，然而它所接收到的能量却微乎其微。<br>世界上所有的射电天文望远镜所接收到的还抵不上一片雪花“撞”到地面上所产生的能量。</li><li>我在洛杉矶一著名咖啡厅闲坐，发现一件怪事：<br>许多人会多付一杯的钱，然后让服务生“贴墙上”；而服务生就在墙上贴张纸，写着“一杯咖啡”后来我又到那里，这时进来一人，穿着寒酸。他看看墙上说：“墙上的一杯咖啡。”服务生恭敬地端上咖啡，那人喝完没结账就走了。正当我惊讶时，服务生从墙上揭下一张纸。原来如此。那些顾客在享受咖啡时，会想到同样喜欢、却无力支付的人们；这里的服务生，面对穷人依旧恭敬，让对方无须放弃尊严，而只需看看墙上，那面墙，远比咖啡更加美好。</li><li>外出就餐，点菜是一门费神的艺术。<br>伦敦商学院的新研究认为：要想吃得开心，最好尽快点完菜，撤走菜单。研究者认为，这可停止对选择的评估，更好地享受选定的菜肴；如果反复修改，满意度会不断降低。有实验显示：A组顾客所在商店，提供24种风味的果酱，B组只有6种选择。结果A组的购买人数，只有B组的15%。为何选择越多越不满意？诺贝尔经济奖得主康纳曼：人们对“失去”的心理反应，远强于“得到”；当你必须做出决定，更多选择意味更多“失去”，烦恼随之增加。</li><li>1957年9月29日，前苏联乌拉尔山中的秘密核工厂“车里雅宾斯克65 号”一个装有核废料的仓库发生大爆炸，<br>迫使苏联当局紧急撤走当地11000名居民。1957年10月7日，英国东北岸的温德斯凯尔一个核反应堆发生火灾，这次事故产生的放射性物质污染了英国全境，至少有39人患癌症死亡。1961年1月3日，美国爱荷华州一座实验室里的核反应堆发生爆炸，当场炸死3名工人。1967年夏天，前苏联“车里雅宾斯克65号”用于储存核废料的“卡拉察湖”干枯，结果风将许多放射性微粒子吹往各地，当局不得不撤走了9000名居民。1971年11月9日，美国明尼苏达州“北方州电力公司”的一座核反应堆的废水储存设施发生超库存事件，结果导致5000加仑放射性废水流入密西西比河，其中一些水甚至流入圣保罗的城市饮水系统。1979年3月28日，美国三里岛核反应堆因为机械故障和人为的失误而使冷却水和放射性颗粒外逸，但没有人员伤亡报告。1979年8月7日，美国田纳西州浓缩铀外泄，结果导致1000人受伤。1986年1月6日，美国俄克拉荷马一座核电站因错误加热发生爆炸，结果造成一名工人死亡，100人住院。</li><li>1986年4月26日，整个世界见证了历史上最昂贵的事故。<br>切尔诺贝利核电站事故被称作和平时期历史上最大的社会经济大灾难。乌克兰50%的区域被污染，超过20万人需要转移并安置，170万人受到这场灾难的直接影响。切尔诺贝利造成的死亡人数，包括几年后因癌症死亡的，估计有12.5万人。总共的花费包括清理，替换，补偿受害者粗略估计就有2000亿美元。切尔诺贝利核心工厂需要花费20亿美元建造新的钢铁掩蔽层。这场事故官方认定为电力工厂操作员违反工厂程序并且忽视安全需要。切尔诺贝利核电站发生大爆炸后，其放射性云团直抵西欧，造成约八千人死于辐射导致的各种疾病。爆炸最终导致20多万平方公里的土地受到污染，今天的乌克兰、俄罗斯和白俄罗斯受到的核污染最严重。这次事故造成的放射性污染遍及前苏联15万平方公里的地区，那里居住着694.5万人。由于这次事故，核电站周围30公里范围被划为隔离区，附近的居民被疏散，庄稼被全部掩埋，周围7000米内的树木都逐渐死亡。在日后长达半个世纪的时间里，10公里范围以内将不能耕作、放牧；10年内100公里范围内被禁止生产牛奶。切尔诺贝利的核辐射通过风力、雨水等传播途径，污染了乌克兰、白俄罗斯、俄罗斯等一些堪称世界上最富饶的土壤。切尔诺贝利核事故所泄漏的放射性粉尘有70%飘落在白俄罗斯境内。事故发生初期，白俄罗斯大部分公民都受到不同程度的核辐射，6000平方公里土地无法使用，400多个居民点成为无人区，政府不得不关闭了600多所学校、300多个企业以及54个大型农业联合体。</li><li>1962年7月22日，一枚命名为“水手1号”的火箭，在飞往金星途中，突然偏离预定的轨道，凌空爆炸。<br>随即进行的调查表明，导致这次事故的原因是，在控制火箭飞行的电脑程序中省略了一个连字号（一）。只是因为缺少了这么一个小小的标点符号，竟使美国国民损失了1.85千万美元。</li><li>“挑战者”号在卡纳维拉尔角发射基地起飞后，以三倍于音速的速度升到佛罗里达五万英尺的蓝天时发生爆炸。<br>爆炸后，航天飞机变成熊熊燃烧的巨大火球，拖着长蛇般的、然后分叉的火焰和黄白色浓烟坠入距发射地点20英里外的大西洋。燃烧着的飞机碎片散落在广阔的海面，持续了一个小时。这架耗资12亿美元的航天飞机失事后，美国全国上下极为震动，人们几乎中断了一切活动，等待有关这场灾难的详细消息。各大电视网作了整天的特别报道。华盛顿和全国各地下半旗致哀。纽约市通常灯火辉煌的帝国大厦今晚熄了灯火，以示哀悼。</li><li>在一切数中，人们认为最重要和常用的共有五个，即0、1、i、π、e。<br>数学家欧拉在1748年曾得出了一个著名公式：<br>eix＝cos x＋isin x。<br>令x＝π，则可得出：<br>eiπ＋1＝0。<br>这真是一个绝妙的公式，它把这五个最重要的数，用最简洁的方式联系起来。</li><li>古今最大的动物是什么？<br>是现在仍然生存的蓝鲸。久已绝迹的恐龙很大，有些身长约二十七公尺，体重高达四、五十吨，但跟蓝鲸一比，还是小巫见大巫。捕鲸人捉到的蓝鲸，最长的超过三十公尺，体重达到一百吨以上。</li><li>每次下雨，五光十色的热带鸟杜拉克就要脱毛。</li><li>候鸟做距离最远的不着陆飞行是从阿留申群岛到夏威夷群岛。全程4500公里，要不歇气地飞行48—72小时。</li><li>鹦鹉鱼（Amphilophus）学名洛神颈鳍鱼，隆头鱼科的属类，俗称有鹦哥鱼、鹦嘴鱼、红楔鲷等，<br>是生活在珊瑚礁中的热带鱼类。因其色彩艳丽，嘴型酷似鹦鹉嘴型而得名。另有一种由美洲慈鲷雄红魔鬼鱼和紫红火口杂交培育成的淡水赏观鱼，因体色鲜红，又称为血鹦鹉。每当涨潮的时候，大大小小的鹦鹉鱼披着绿莹莹、黄灿灿的外衣，从珊瑚礁外的斜坡的深水中游到浅水礁坪和泻湖中。鹦鹉鱼有特殊的消化系统。鹦鹉鱼用它们板齿状的喙将珊瑚虫连同它们的骨骼一同啃下来，再用咽喉齿磨碎珊瑚虫，然后吞入腹中。有营养的物质被消化吸收，珊瑚的碎屑被排除体外。鹦鹉鱼的咽喉齿不象牙齿一样尖利，而是演变为条石状，咽喉齿的上颌面上凸起，正好和下面的凹处相吻合。</li><li>坦桑尼亚的基戈马山区有一种蜡烛鼠，这种鼠全身的80％是脂肪，只要用火柴一点，就象蜡烛一样燃烧。<br>当地人将它晒干作蜡烛或燃料。厄瓜多尔国家动物园里有不怕高温的烫鼠，它们生活在90℃左右的水中，倒显得更活泼。烫鼠在热水中演技高超，招徕了不少观众。</li><li>大嘴乌鸦（Corvus macrorhynchos）又叫巨嘴鸦，俗称老鸦、老鸹。<br>是雀形目鸟类中体型最大的几个物种之一，成年的大嘴乌鸦体长可达50厘米左右。大嘴乌鸦雌雄同形同色，通身漆黑，除头顶、后颈和颈侧之外的其它部分羽毛，带有一些显蓝色、紫色和绿色的金属光泽。嘴粗大，嘴峰弯曲，峰嵴明显，嘴基有长羽，伸至鼻孔处。额较陡突。尾长、呈楔状。后颈羽毛柔软松散如发状，羽干不明显。大嘴乌鸦是杂食性鸟类，对生活环境不挑剔，无论山区平原均可见到，喜结群活动于城市、郊区等适宜的环境。主要分布于亚洲东部地区，中国全境可见。栖息于低山、平原和山地阔叶林、针阔叶混交林、针叶林、次生杂木林、人工林等各种森林类型中。喜欢在林间路旁、河谷、海岸、农田、沼泽和草地上活动，有时甚至出现在山顶灌丛和高山苔原地带。主要以蝗虫、金龟甲、金针虫等昆虫、昆虫幼虫和蛹为食。</li><li>南美原始密林里，有一种凶猛的蚂蚁，渡河时，几百万、几千万只聚成一个大球，滚入河水，浮动着，然后登岸。<br>附在蚁球表面的蚂蚁被淹死了，但蚂蚁大队继续前进。一次，猎人把野猪架在篝火上，后来发现篝火熄灭了，留下白生生的骨头。原来，蚂蚁嗅到野猪肉香，便结队而来。前面的烧死了，后面的跟上来，这样，火被蚂蚁用尸体压灭了。</li><li>有位富豪宿于旅店，旅店正对着一个染坊。<br>这天下午，富豪坐在窗前，美滋滋地喝着茶水欣赏街景，忽然发现几个人在窗外走过来走过去，且不断地偷眼打量对面染坊。富豪有点纳闷。一人悄悄走到富豪跟前，伏在他耳边说，我们要把这家染坊晾在外面的布匹偷走，你安静点，别声张！富豪说，我是打酱油的，你们偷东西关我屁事。鬼才多嘴呢！那人拱拱手走了。富豪想，染坊的布就晾在大街上，这人来人往的，光天化日之下，我倒要看看你们怎么偷！于是，富豪抿着茶水，饶有兴趣地看现场直播。那几个人时时经过，或左或右，渐久渐疏。傍晚时，都不见了。富豪说，嘿嘿，果然是妄人！白忙活。回转房内收拾行李，才发现所有的财物都被人拿走了。</li><li>世界上最慢的信，是1493年哥伦布放在瓶子内写给西班牙女皇伊萨柏拉的信。<br>它被投入大西洋后，一直漂到1852年才给美国船长发现，整整行走了359年。</li><li>柏拉图说：“蠢人可以根据这两个特征很容易地加以判别：说话时总是语无伦次；回答时总是牛头不对马嘴。”</li><li>英国的萨弗伦沃尔登城，每年6月27日是敲钟日，<br>这一天所有敲钟人都聚集在一起，从黎明到黄昏连续不停地敲12口古老的大钟，整个城市响彻钟声，终日不绝。据说大约在1600年6月27日，该城有一个绸布商人在森林中迷了路，后来凭借钟声才返回城里。他为此十分感激，在遗嘱中把这一天作为敲钟日，用他的钱作这一天敲钟经费。这个习俗一直传到今天。当城里许多居民在这一天都携带东西离开这里，等敲钟结束才返回。但是许多旅行者和好事者却在这一天慕名而来，欣赏盛况。</li><li>1969年的一天，宇航员阿姆斯特朗正在美国的一个沙漠里进行登月前的例行训练。<br>后来在训练时，一个旁观的印第安老人听说他就要去月亮上以后，请求阿姆斯特朗替他老人家给印第安人在月球上的神明带个话。尽管完全不明白那句印第安语是什么意思，可是阿姆斯特朗还是同意了，并且很努力地把话背了下来。后来有一次，阿姆斯特朗和自己的印第安朋友聊天时想起了这件事，就把那句印第安语复述了一遍，他的印第安朋友听后狂笑不已。那句印第安语的意思是：“神啊，不要相信这些白人，他们只是想偷走您的土地。”</li><li>在拉瓦锡的那个年代是如何制造精密的玻璃器皿的？<br>首先，找一个玻璃师傅，吹一个差不多大的瓶子。说到玻璃师傅，这是一个出人才的行业，比如最早记载太阳光谱里面吸收线的夫琅和费就是一个玻璃师傅。洗净，用蒸馏水润湿。然后，找一个天平，称量需要的量的蒸馏水，倒进去。在水位线位置处刻线，此处需要温度控制。最后，倒出蒸馏水，出售瓶子。</li><li>美国在60年代就发明的SR-71“黑鸟”侦察机1964年12月22日首飞，1966年开始服役。<br>最大速度每小时超过3500公里，从纽约飞到伦敦不到两小时。黑鸟大部分由钛构成，理论上由于采用隐身设计在雷达的反射面非常小，然而高速飞行时具有巨大的红外特征在几百公里外就会被雷达发现。不过由于黑鸟飞的比导弹还快摆脱了上千次导弹的攻击至今没有一架被击落过。最大升限可以超过3万米的高空，作战半径达5400公里。一小时内黑鸟就能完成对面积达324000平方千米的地区的光学摄影侦察任务。形象地说，它只需要6分钟就可以拍摄得到覆盖整个意大利的高清晰度照片。黑鸟共制造了32架，由于侦察卫星的发展剩下的20架在1998年被永久退役，但至今依然没有任何一架飞机打破黑鸟创下的高速纪录。</li><li>鲁国有一道法律，如果鲁国人在外国见到同胞遭遇不幸，沦落为奴隶，<br>只要能够把这些人赎回来帮助他们恢复自由，就可以从国家获得金钱的补偿和奖励。 孔子的学生子贡，把鲁国人从外国赎回来，但不却没有向国家领取金钱。孔子听说后，说：“子贡，你错了！圣人做的事，可用来改变民风世俗，教导可以传授给百姓，不仅仅是有利于自己的行为。 现在鲁国富的人少穷人多，向国家领取补偿金，对你没有任何损失；但不领取补偿金，鲁国就没有人再去赎回自己遇难的同胞了。”子路救起一名溺水者，那人感谢他送了一头牛，子路收下了。孔子高兴地说：“鲁国人从此一定会勇于救落水者了。”</li><li>银河系，是太阳系所在的星系，属于棒旋星系，<br>包括1000到4000亿颗恒星和大量的星团、星云，还有各种类型的星际气体和星际尘埃。它的直径约为12万光年，中心厚度约为1.2万光年，可见物质总质量是太阳质量的大约2500万亿倍。2003年1月，英国科学家发现，银河系外围可能镶嵌着一个由数十亿颗恒星组成的巨大的环。2015年3月，科学家发现银河系体积比之前认为的要大50%。</li><li>球状闪电是一种自然现象。球状闪电俗称滚地雷，通常都在雷暴之下发生，形为一个呈圆球形的闪电球。<br>这是一个真实的物理现象，它十分光亮，略呈圆球形，直径大约是15～40厘米不等。通常它只会维持数秒，但也有维持了1-2分钟的纪录。颜色除常见的橙色和红色外，还有黄色、紫色、蓝色、亮白色，幽绿色的光环。火球呈现多种多样的色彩。</li><li>夜光云（Noctilucent Cloud）是深曙暮期间出现于地球高纬度地区高空的一种发光而透明的波状云，<br>距地面的高度一般在80km左右，常呈淡蓝色或银灰色，是夜光云中的冰晶颗粒散射太阳光的结果，这类冰晶颗粒的半径一般为0.05～0.5微米。夜光云看起来有点像卷云，但比它薄得多，而且颜色为银白色或蓝色，出现在落日后太阳与地平线夹角在6-15度之间的时候。这是非常自然的，因为时候太早会因为其太薄而看不见，而太迟了它也会落到地球的阴影之中去。</li><li>1912年，摩纳哥有一名囚犯被判死刑，根据惯例，行刑的刽子手都是从法国请来的。<br>然而当刽子手抵达摩纳哥时，却为这“不愉快”的工作，开口要求1万法郎的报酬。摩纳哥亲王认为索价太高，他们这个小国负担不起。法国刽子手拒绝削价，便回去了。然而更便宜一点的刽子手又找不到，所以行刑只好不定期地拖延下去。这死囚是个穷苦人，没有家也没有亲戚，他在监牢里生活，自然舒适多了。但是他的开销却成为这小国家的负担，他是监牢里的唯一囚犯，也是全国唯一的囚犯。日子这样地过下去，看管囚犯以及囚犯本身的生活费，却越积越高了。终于，不得不想个办法了。如果囚犯肯安分守己，不做逃亡的企图，他可以往在牢狱里，不要人监视，并且每个月给他一笔小“津贴”，直到他死去。囚犯欣然同意。结果，这笔“津贴”一共付了30年。</li><li>一对住在西班牙的父子。经过一连串的事情后，他们的关系变得异常紧张。<br>男孩选择离家而去。父亲心急如焚地寻找他。遍寻不着之际，父亲在马德里的报纸上刊登寻人启事。儿子名叫帕科，在西班牙是个很普通的名字。寻人启事上写着：“亲爱的帕科，爸爸明天在马德里日报社前等你。一切既往不咎。我爱你。”隔天中午，报社门口来了八百多个等待宽恕的“帕科”们。</li><li>英国最畅销杂志《天空》的封面人物，无不是社会名流。<br>但2010年第七期的封面，却是一位牧羊老人贾斯汀，因为他创造的奇迹。贾斯汀年轻时，每天牧羊路过一座荒山，就想在这里种满橡树。家人反对：“荒山有六千亩，你几辈子都种不完！”但他决心干这“傻事”26岁开始，他每天带一百粒橡树籽，上山安顿好羊群，他播种、浇水、用羊粪施肥…三十年不间断，如今荒山已是“橡山”我们常被庞大的任务吓倒，其实任何“大目标”都能拆成“小工作”，只要你不停止前进的脚步。</li><li>杜瓦尔是弗朗索一世的图书管理员。一天，有人出了一道题让他回答，他答道：“我不会”。<br>“可是皇上是根据您的学识给您俸禄的呀。”那个人不怀好意地说。<br>“说得没错，皇上给我俸禄的标准是根据我所懂的东西的多少；如果按我不懂的东西给我俸禄，皇上的全部财宝也不够支付我的。”杜瓦尔答道。</li><li>某国的国王要为他的臣民们修建一座宏伟的图书馆和一条画廊，打算聘请一名主持工程的建筑师。<br>他召集了全国所有的大建筑师。叫他们自报条件候选，并推荐第二候选人。国王耐心倾听每个候选人自荐各自的能耐，最后轻而易举地决定了工程主持人。中选的是得第二候选人票数最多的那个建筑师。</li><li>西绪福斯被罚推巨石上山，每次快到山顶，巨石就滚回山脚，他不得不重新开始这徒劳的苦役。<br>听说他悲观沮丧到了极点。可是，有一天，我遇见正在下山的西绪福斯，却发现他吹着口哨，迈着轻盈的步伐，一脸无忧无虑的神情。我生平最怕见到大不幸的人，譬如说身患绝症的人，或刚死了亲人的人，因为对他们的不幸，我既不能有所表示，怕犯忌，又不能无所表示，怕显得我没心没肺。所以，看见西绪福斯迎面走来，尽管不是传说的那副凄苦模样，深知他的不幸身世的我仍感到局促不安。没想到西绪福斯先开口了，他举起手，对我喊道：“喂，你瞧，我逮了一只多漂亮的蝴蝶！”我望着他渐渐远逝的背影，不禁思忖：总有些事情是宙斯的神威鞭长莫及的，那是一些太细小的事情，在那里便有了西绪福斯(和我们整个人类)的幸福。</li><li>教育学家威廉·坎宁安对加利福尼亚州州长乔治·先克默杰恩说过一则寓言：<br>一个人正在沙漠里散步，突然一个声音对他说：“捡一些卵石放在你的口袋里，明天你会又高兴又后悔。”这个人弯腰捡了一把卵石放进口袋。第二天他将手伸进了口袋，发现了钻石、绿宝石和红宝石。他感到又高兴又后悔。高兴的是他拿了一些；后悔的是没能多拿一点。教育也与此同理。</li><li>一次篮球锦标赛中，保加利亚男队与捷克斯洛伐克男队对垒。<br>保队必须在这场比赛中净胜捷队三个球才能出线，否则将被淘汰。可是当比赛进行到离终场只剩八秒钟的时候，保队仅领先一球，这时保队虽掌握着发球权，但要在短短的八秒钟内再连中两球，已经是不可能了。场内观众都认为保队败局已定。然而保队教练却镇定自若，从容叫停，对上场队员面授机宜。此时捷队队员也严阵以待，全部退防固守篮下。不料保队发球后，一队员突然转向相反方向，向自己篮内投球，球进锣响，捷队队员见状一时目瞪口呆。由于保队为捷队投进一球，终场时使比分拉平。按照竞赛规定，需再战一个延长期。在这最后的比赛时刻，保队队员士气旺盛，配合默契，再加上教练指挥得当，终于净胜三球，进入了第二阶段的比赛。</li><li>爱神星是一颗阿莫尔型小行星，1898年8月13日由德国天文学家威特发现。</li><li>命运如同一个人的影子，有谁能够摆脱自己的影子呢？<br>可是，有一天，一个流浪者对于自己的命运实在不堪忍受，便来到一座神庙，请求神允许他和别人交换命运。神说：“如果你能找到一个对自己命运完全满意的人，你就和他交换吧。”按照神的指示，流浪者出发去寻找了。他遍访城市和乡村，竟然找不到一个对自己命运完全满意的人。凡他遇到的人，只要一说起命运，个个摇头叹息，口出怨言。甚至那些王公贵族，达官富豪，名流权威，他们的命运似乎令人羡慕，但他们自己并不满意。事实上，世人所见的确只是他们的命运之河的表面景色，底下许多阴暗曲折惟有他们自己知道。流浪者终于没有找到一个可以和他交换命运的人。直到今天，他仍然拖着他自己的影子到处流浪。</li><li>一位胆小如鼠的骑士将要进行一次远途旅行，于是他竭力准备好应付旅途中可能遇到的各种问题。<br>他带了一把剑和一副盔甲为的是对付他遇到的敌手，一大瓶药膏为防太阳晒伤皮肤或毒藤挂伤皮肤，一把斧子用来砍柴火，一顶帐篷，一条毯子，锅和盘以及喂马的草料。他出发了，——叮叮，当当，咕咕，咚咚，似乎一座移动的废物堆。他来到一座破木桥的中间，桥板突然塌陷，他和他的马都坠入河中，淹死了。临死前那一刻，他很懊悔，他忘了带一个救生筏。命运加给我们的困难艰辛，我们即使在最狂乱的梦境也难以预想。我倒是更相信那只备一条坚定的信念断然前行的人，他们的旅行才更轻捷，更稳健。</li><li>十九世纪的某个炎炎夏日，教堂里牧师的布道冗长乏味，众人昏昏欲睡。<br>只有一个人坐姿挺直，全神贯注听讲，他就是当时的英国首相格莱斯顿。有人好奇地问：“你觉得今天的布道很精彩吗？”他微笑着说：“我也很想打瞌睡。可转念一想，何不以此试试自己的忍耐力？所以我聚精会神地从头听到尾。有这样的耐心，还有什么难事解决不了？所以，今天我很有收获”。《圣经》有言“万事都互相效力”。意思是说，每件事不管好坏，都能找出积极的意义。秉此一念，许多原本不堪的局面，都可改观。</li><li>津巴布韦元是由津巴布韦央行发行的货币，是津巴布韦的法定货币，每一元分为100分（cents）。<br>盾面上的波纹象征津巴布韦广阔的水域。盾面下部是举世闻名的文化遗址“石头城”。盾形上端竖立着五角星和津巴韦鸟。该鸟是国家和民族的愿望之象征，也是津巴布韦和非洲国家古老文化之象征。盾形下端的山坡上有玉米、棉花图案，象征津巴布韦丰富的农产品和丰富的矿藏资源。两侧是津巴布韦羚羊。绶带上用英文写着“团结、自由、劳动”。津巴布韦的物价越来越高，钱却是越来越薄，通货膨胀让许多人大喊吃不消，位于非洲的津巴布韦，感触绝对特别深，一张面额1000万津巴布韦币的纸钞，只能换到美金1.5元，而在津巴布韦买一只鸡要1300万津巴布韦币，游民至少要捡两个月的垃圾，加上不吃不喝才能买到一只鸡。</li><li>古希腊人季诺，曾拥有一艘货船，衣食无忧。虽然他经常讲授哲学，但别人总把他当生意人。<br>某日，他的货船在暴风雨中沉没。不幸的消息传来，他却松了口气：“感谢命运之神！今后我只能以哲学为业了！”只剩哲学的季诺，后来创立了著名的斯多葛学派。芭蕾编舞大师巴伦仙曾说：“我不要想跳芭蕾舞的人，我要不得不跳芭蕾舞的人。”他的意思是，不要业余者，要的是真正为生活挣扎的人。为兴趣做一件事，是不可靠的。而为生活，忍辱负重地背起工作担子，工多艺熟，日后自有长进。</li><li>一个瞎子在路上走。另外一个人过来把他引上正路。<br>可是瞎子却不知道他的指路人是谁。一个人正在酣睡。忽然一条毒蛇昂着头向他爬了过来。另一个人赶过来一刀把毒蛇杀死。可是酣睡者却依然在梦中。当半夜时分，躺在清真寺里生病的旅行者发出沉重呻吟的时候，有一个人一直服侍他到天明。清晨，旅行者死了。可是他到底也没认清这位帮助他的人是谁。他走在路上，把水果送给孩子们，在沙漠中把水送给了一位渴得要死的人，把自己的干粮平分给饥饿者。可是，谁也不与他相识。他把荆棘和碎石从大路上除掉。可是早晨当人们在这条大路上行走的时候，谁也不知这是他干的。谁也不认识他。真的，我们真的不认得那些为我们服务的人们。可是，我们对于那些达官贵人们却认识得这么清楚！ —— 乌尔法特</li><li>乞力马扎罗山（Kilimanjaro）位于坦桑尼亚东北部及东非大裂谷以南约160公里，<br>奈洛比以南约225公，赤道与南纬3度之间，是坦桑尼亚和肯尼亚的分水岭，非洲最高的山脉，也是同时是火山和雪山。该山的主体沿东西向延伸将近80公里，主要由基博、马温西和希拉三个死火山构成，面积756平方公里，其中央火山锥呼鲁峰，海拔5,895米，是非洲最高点。乞力马扎罗山素有“非洲屋脊”之称，而许多地理学家称它为“非洲之王”。该山的主体以典型火山曲线向下面的平原倾斜，平原的高度约海拔900米，山顶终年满布冰雪，但冰川消融现象非常严重。该山四周都是山林，生活着众多哺乳动物，其中一些是濒危物种。</li><li>同是一条溪中的水，可是有的人用金杯盛它，有的人却用泥制的土杯子喝它。<br>那些既无金杯又无土杯的人就只好用手捧水喝了。水，本来是没有任何差别的。差别就在于盛水的器皿。君王与乞丐的差别就在“器皿”上面。只有那些最渴的人才最了解水的甜美。从沙漠中走来的疲渴交加的旅行者是最知道水的滋味的人。在烈日炎炎的正午，当农民们忙于耕种而大汗淋漓的时候，水对他们是最宝贵的东西。当一个牧羊人从山上下来，口干舌燥的时候，要是能够趴在河边痛饮一顿，那他就是最了解水的甜美的人。可是，另外一个人，尽管他坐在绿阴下的靠椅上，身边放着漂亮的水壶，拿着精致的茶杯喝上几口，也仍然品不出这水的甜美来。为什么呢？因为他没有旅行者和牧羊人那样的干渴，没有在烈日当头的中午耕过地，所以他不会觉得那样需要水。无论什么人，只要他没有尝过饥与渴是什么味道，他就永远也享受不到饭与水的甜美，不懂得生活到底是什么滋味。 —— 乌尔法特</li><li>一个时候，哲学家第欧根尼常常在大白天也点着灯走路。<br>每当人们诧异地问他时，便回答说：“我正在找人。”这是在讽刺当时社会上没有一个真正配得上“人”这一称呼的有德行的人。亚历山大帝来到科林特市时拜记了这位哲学家，并且对他说：“你有什么希望都请讲，我可以满足你的一切要求。”爬进了自己所住的酒桶、正在晒太阳的第欧根尼说：“只希望请你向那边让开，因为你遮住了我身上的阳光。”亚历山大帝听了后说：“我若不是亚历山大的话，就想做第欧根尼。”</li><li>我陪客人到海上钓鱼，他告诉我说他钓鲑30年，却从来没有钓起过一条大得可以得奖的大鱼，<br>说后不久，他就钓到了一条巨大的大西洋鲑。这条巨鱼疯狂地在钓线所及的大范围内挣扎，我的客人用尽技能将鱼控住。我担任向导45年，从未见过这样剧烈奋战的鱼。人鱼大战了整整三个小时，还难以预测胜负。最后客人终于把鱼赶到岸边，我手持鱼叉站在那里。“不要叉它，”客人忽然大叫，“把钓饵线切断吧。”我在惊愕中切断了钓线，巨鱼得到了自由，游去无踪。“不管得不得奖，”他轻轻地说，“像这样智勇善战的鱼是不该让人为了娱乐而杀死的。”</li><li>英国人对放风筝的兴趣很浓，在伦敦区设有“风筝玩赏者协会”，<br>英国每年销风筝200万个，平均每9家就有一个风筝。圣地亚哥的萨卡别斯村，如果哪个青年能成为放风筝的优胜者，他就会赢得姑娘的爱情。危地马拉的印第安人把风筝当作祭品。每逢圣节，人们便把五彩缤纷、绘有各种图案的风筝带到附近的小山上放出，表达对亡者的怀念。新西兰的莫斯兰地区，风筝是和平的象征，每个村子都把一个风筝放上天空，如果掉下来，就意味着不吉利，村民们不顾路途遥远，都去把风筝找回来重新放上空中。西班牙上的一个小岛上的居民，每年春播时要集体放风筝，他们将装有粮食的小布袋拴在风筝上，当风筝放出时把线剪断，以求风调雨顺，粮食丰收。南朝鲜人常把自己的忧愁和不幸写于纸条挂在风筝上，把风筝放到空中，然后将线剪断，让风筝把忧愁和不幸随风带走。</li><li>麦哲伦海峡（Strait of Magellan），南美洲大陆南端同火地岛等岛屿之间的海峡(71°W，54°S）。<br>因航海家麦哲伦于1520年首先由此通过进入太平洋，故名。峡湾曲折，长563千米，最窄处仅有3.3千米，最宽处却有32千米左右。是沟通南大西洋和南太平洋的通道。风大流急，航行困难。</li><li>阿库雷里是冰岛的第二大城市，总共只有四百居民，主要是渔民。<br>这座城市以生长着冰岛唯一的一棵树而闻名全国。这棵树是几百年前栽植的，奇迹般地活到现在。冰岛人象爱护自己的眼珠那样爱护这棵古树。在冰岛，动物多于植物，岛上白熊随处可见，它们成群结队地袭击村庄，在街道上大摇大摆地走来走去，穿户入室。</li><li>20世纪30年代，德瑞贝克兄弟西德和哈里在黎斯腾所住的街区开了一家男装裁缝店。<br>每当西德有新客户对着店里的三开大镜子试衣服，他就会告诉对方，自己听力有些问题，并反复让客户说话时提高音量。只要客户喜欢上了哪套衣服，问起价格，西德就会大声叫他兄弟。哈里是首席裁缝，在殿堂后面。“哈里，这套衣服要多少钱？”哈里抬头看着自己做的衣服–并大大地抬高真实价格–高喊着回答说：“那件漂亮的纯羊毛西服，要42美元。”西德假装没听见，用手在耳边做个敞口杯子的形状，再问上一遍。哈里再次回答&quot;42美元。“此时，西德转过身。对客户说：”他说要22美元。“好多人都会急急忙忙地付了钱，抢在可怜的西德发现自己”搞错了“之前，抓着西服狂奔出店。满心以为自己捡了天大的便宜呢。</li><li>英语字母是从腓尼基语、希腊语、拉丁语进近代欧洲语言的。<br>腓尼基位于地中海东岸，相当于现在的叙利亚、黎巴嫩一带地方。腓尼基文字约有三千年历史。Ａ在字母表上名列前茅，这是事出有因的。在古腓尼基的时候，字母Ａ叫aleph，意思是牛。当时Ａ的写法是Ｖ，样子象牛的双角。当中并有斜斜的一横。希腊人把它翻转过来，成为现在这个样子。牛给腓尼基人以肉食，从事劳役，提供鞋靴、衣著的原料。一群牛对他们来说就意味着一大笔财富。</li><li>在世界最大的产金地南非，有一家名叫兰特的炼金厂，是世界最大的炼金厂。<br>这家炼金厂的总经理室里放着一块金砖，并立了一条规定：任何参观者，如果能单靠人力能把它拿起，就可以随意带走。但是这么多年来，所有到那里参观的人，都曾咬紧牙关去碰碰运气，却没有一个人能拿起。现在这金砖依然放在那里。</li><li>罗素的茶壶（Russell’s Teapot）是由哲学家伯特兰·罗素塑造的一个类比概念，<br>说明举证责任在于提出不可证伪的宣称的人，特别是在宗教的情况。罗素以之驳斥怀疑论在怀疑宗教主张的不可证伪性时具有举证责任的说法。罗素写道，如果他声称，有一个茶壶在小行星带围绕太阳转，而他指望别人相信他的理由是他们不能证明这声明是错，这是荒谬的。罗素的茶壶至今仍然频繁出现在有关神是否存在的讨论中。罗素写到：“如果我说，在小行星带有个瓷制茶壶以椭圆轨道绕太阳公转，只要我小心地补充说明这茶壶实在太小，即使用我们最强大的望远镜也找不到它，那么没有人可以证伪我的主张。但如果我要声明道，即然我的声明无法被推翻，那么向它提出怀疑对人类理性来说就是不可容忍的，我自然应当被看作在胡言乱语。”</li><li>在星期天不去酒店喝个醉，却安静地在他的苹果树下读书的农民；<br>厌弃跑马场的纷扰喧嚣却去看一场高雅的戏或者只度过一个宁静的午后的小市民；不去街上唱粗俗的歌或哼些无聊的曲子，却走向田间或者到城墙上看日落的工人，他们都把无名的、无意识的，但绝不是不重要的柴薪投进人类的大火之中。——梅特林克</li><li>秦朝上层社会吃肉，需要用鼎把整块的肉煮熟，再用“匕”插在肉上取出来，<br>放在砧板“俎”上，用小刀切开，蘸调料吃，这就是“人为刀俎，我为鱼肉”的由来。</li><li>一公里约等于八分之五英里。</li><li>在一盘国际象棋中至少有170，000，000，000，000，000，000，000，000种方法来走开局的十步棋。</li><li>方形骰子相对两面的数字相加总是七。</li><li>英国诗人雪莱好读书，常站在一个地方，一动也不动地读，一天可以读上十六小时。</li><li>美国诗人爱伦·坡，要先让他的暹罗猫坐在他的肩头上，然后才能写作。</li><li>刘易斯·卡罗尔在1865年出版了《爱丽丝梦游仙境》。</li><li>亨利 · 马蒂斯的画《浮舟》，1961年在纽约现代艺术馆展览时倒挂了一个半月。</li><li>伦敦的猫比挪威的人还多。</li><li>爱斯基摩人用电冰箱的目的是防止食物结冰。</li><li>巴拿马草帽产地是厄瓜多尔，不是巴拿马。</li><li>哈密瓜主要并不产在哈密，而是产在哈密以西的鄯善。</li><li>西西里岛埃特纳火山每天朝天喷出大量火山气体，其中含银9克，含金2.4克。</li><li>哈雷彗星上一次回归是在1986年，而下一次回归将在2061年中。<br>哈雷彗星是唯一能用裸眼直接从地球看见的短周期彗星，也是人一生中唯一可能以裸眼看见两次的彗星。其它能以裸眼看见的彗星可能会更壮观和更美丽，但那些都是数千年才会出现一次的彗星。</li><li>1928年国际天文学联合会正式公布国际通用的88个星座方案。<br>同时规定以1875年的春分点和赤道为基准。根据88个星座在天球上的不同位置和恒星出没的情况，又划成五大区域，即北天拱极星座（5个）、北天星座（19个）、黄道十二星座（天球上黄道附近的12个星座）、赤道带星座（10个）、南天星座（42个）。</li><li>一天，美国布朗克斯的一名公共汽车司机开走了他的空车，直至好几天后才在佛罗里达被警察抓获。<br>他解释说，由于厌倦了每天在同一条路线上行驶，他决定来一次这样的旅行。这个消息见报之后，他成了布朗克斯轰动性的人物，许多素不相识的人到机场欢迎他归来，公司也决定不对他进行处罚，而只让他保证以后不再做这样的旅行。这是《罗洛·梅文集》里的一个小故事，其中的韵味让人难以释怀。罗洛·梅认为，司机的行为代表了美国中产阶级某种相似的空虚感和无效感。人们之所以能够忍受这种千篇一律的生活，就是因为他们可以偶尔地爆发，或者至少认同他人的爆发。但这种爆发，凸显的正是人们生活的无意义与荒谬。</li><li>1917年斯特拉文斯基访罗马和那不勒斯。<br>这次旅行结识了西班牙的大画家毕加索，两人结成密友。他在回瑞士时，海关人员检查行李，发现皮箱里有一个他觉得很奇怪的文件。“这上面画的是什么？”——他们问斯特拉文斯基道：“毕加索给我的肖像画”。“不可能。这是平面图”。“对了！是我的脸的平面图”。但是认真负责的海关还是把画给没收了，认为这是某个战略工事的经过伪装了的平面图。</li><li>地中海的沿岸夏季炎热干燥，冬季温暖湿润，被称作地中海性气候。<br>植被，叶质坚硬，叶面有蜡质，根系深，有适应夏季干热气候的耐旱特征，属亚热带常绿硬叶林。这里光热充足，是欧洲主要的亚热带水果产区，盛产柑橘、无花果，和葡萄等，还有木本油料作物油橄榄。</li><li>位于西非几内亚海湾的三点交合处，被人们称做“最不靠近任何地区的地区。<br>因为那地方纬度是零，经度也是零，海拔高度还是零。</li><li>尼泊尔境内有273座山峰，其中122座允许外国人攀登探险或游览。<br>这些山峰都标了价。要登山，必须先交钱，山越高价钱越贵。最便宜的是二万一千五百英尺以下非游览性质的山峰，610美元；超过二万六千英尺以上的山要价1,069美元；至于珠穆朗玛峰，先交1,145美元，然后须办理繁杂的手续并耐心等待。据说申请登珠峰者已排到1988年以后了。</li><li>儒略历（Julian Calendar）是由罗马共和国执政官盖乌斯·尤里乌斯·凯撒采纳<br>数学家兼天文学家索西琴尼的计算后，于公元前45年1月1日起执行的取代旧罗马历法的一种历法。儒略历中，一年被划分为12个月，大小月交替；四年一闰，平年365日，闰年366日为在当年二月底增加一闰日，年平均长度为365.25日。由于实际使用过程中累积的误差随着时间越来越大，1582年教皇格里高利十三世颁布、推行了以儒略历为基础改善而来的格里历，即沿用至今的公历。</li><li>闰年(Leap Year)是为了弥补因人为历法规定造成的年度天数与地球实际公转周期的时间差而设立的。<br>补上时间差的年份为闰年。最根本的原因是：地球绕太阳运行周期为365天5小时48分46秒（合365.24219天）即一回归年（tropical year）。公历的平年只有365日，比回归年短约0.2422 日，所余下的时间约为每四年累计一天，故第四年于2月末加1天，使当年的历年长度为366日，这一年就为闰年。现行公历中每400年有97个闰年。按照每四年一个闰年计算，平均每年就要多算出0.0078天，这样经过四百年就会多算出大约3天来。因此每四百年中要减少三个闰年。所以公历规定：年份是整百数时，必须是400的倍数才是闰年；不是400的倍数的年份，即使是4的倍数也不是闰年。这就是通常所说的：四年一闰，百年不闰，四百年再闰。 例如，2000年是闰年，2100年则是平年。</li><li>在中东一些国家的城市里，晚上常有骆驼在街上行走，造成许多交通事故。<br>因此这些国家政府采取一种措施，规定在骆驼挽具上涂一层含磷的发光物质，以使司机在晚间看得清楚。</li><li>第十二位美国总统是艾奇逊，他是著名的只当了一天总统的人。<br>1849年3月3日是波尔克担任总统的最后一天,与此同时,3月4日星期日开始，扎卡里·泰勒将军将宣誓就职。但后者是个虔诚的圣公会教徒，他拒绝在星期日就职，于是美国就遇到两个总统交接之间有一整天的空隙没有总统。根据法律，参议院议长就自动成为美国的临时总统。于是临时议长艾奇逊就当了一天总统。据他自己说：“我忙了两三个晚上，因此那个星期天的大部分时间我都在睡觉。”</li><li>美国马萨诸塞州有一个风景如画、碧波荡漾的小湖，<br>湖名中文音译为“查尔戈格加戈格曼乔加戈格乔布纳根加莫格”。湖名是由早先栖居此地的所第安人所起，意为“你在那边捕鱼，我在这边捕鱼，谁也不能在中间捕鱼”。</li><li>最初的火柴是由英国化学家约翰 · 华尔克发明的。<br>在一次偶然的机会中，华尔克发现用砂皮纸摩擦氯化钾和硫化锑的混合物能产生火焰。在1827年，华尔克出售第一盒氯化钾和硫化锑做的火柴。当时每购买一盒火柴，免费奉送一块砂皮纸。</li><li>1884年，英国工程师柏里斯曾著文建议，功的测量单位为“驴力”。他指出，1驴力＝2/3马力。</li><li>上世纪末在美国旧金山兴起的淘金热中，当地一把铁铲的价值要超过同等重量的黄金。</li><li>津巴布韦火车时刻表上印着：“表上所列仅为火车在此以前决不开行的时间。”</li><li>在墨西哥的瓦哈卡州一带的印第安部落里，蚂蚁是一道名菜，并且只有在款待尊贵的客人时才会上一盆蚂蚁。</li><li>新几内亚人非常信仰平等原则，那里学校训练学生踢足球时，<br>规定训练中每场球双方必须踢成平局，只有在训练完毕，正式比赛中才能有胜负。</li><li>Thomas “Blind Tom” Wiggins(1849–1908)是19世纪美国极负盛名的盲人钢琴演奏家，<br>也是一个自闭症天才。1850年，黑人奴隶汤姆与其父母一起被卖给了乔治亚州的白求恩上将。因天生眼盲，年幼的汤姆，只能在农场里做些简单的粗活。彼时从主人女儿房间传来的音乐深深地吸引着他。四岁时，他无师自通，仅靠感觉就能把听到的旋律用钢琴弹奏出来，五岁时，他已经可以自己创作乐曲。汤姆的音乐才华受到主人的赏识，他被安排住在一间配有钢琴的小房间里，日夜弹奏。八岁时，他开始在全美巡演名声鹊起。伴着悠扬的卡农变奏，创作才子Great-Lee Phillips通过低沉忧郁的吟唱让我们仿佛看到了小小的汤姆紧闭双眼弹奏钢琴的场景。这是个只为音乐而生的天才，他的世界里除了黑暗，就只剩下音乐，再无其他。他在风中学会了怎样弹奏动听的乐曲，却学不会怎样生活，怎样与人交流。Blind Tom的故事正是Phillips擅长的叙事风格，用音乐揭示社会的不公和人性的悲剧，这样的音乐，正如Phillips所希望的那样，像缓慢但坚韧的藤曼，编织在一起，延展攀爬，直诉心灵。</li><li>有人间第奥根：“如果你住的大桶被打破了，你怎么办呢？”<br>他答道：“对此我毫不担心。需知，我所占据的地位是不能打破的。”据说第奥根常年住在大木桶里。</li><li>1954年，生物学家F.A.Brown从康奈提格的海边挖下来了一批牡蛎（Ostrea virginica），<br>放进了千里之外芝加哥一个地下室里的水族箱。他是一个生物节律研究者，他知道牡蛎会随着潮水的涨落而起居。<br>搬入新居的头两个星期，什么都没有改变。牡蛎们依然按照它们正常的规律生活：它们时而缩回去，时而张开壳，捕捉海水里的浮游生物，喂养自己，一切遵循着遥远的康奈提格海岸的潮起潮落。但是接下来的两星期里，发生了一件难以解释的事情。它们依然像潮水一样起伏，但是它们的高潮期行为却不再和康奈提格的潮水吻合了。不是佛罗里达，不是加利福尼亚，不是多佛，不符合科学所知的任何一张潮汐表。经过反复计算，Brown意识到一点：这是芝加哥的涨潮时间。但是芝加哥没有海。这些牡蛎生活在钢筋混凝土的地下室里，生活在玻璃箱的人造海水中。但它们知道海的存在，它们的祖先已经在海边生活了几亿年；它们可以离开海，海却不会离开它们。Brown猜测，也许牡蛎是感知到了气压的变化，从中反推出了潮汐应来的时间、自己应有的节律。没有任何一只牡蛎是有意识地在做这一切——但在某种深层的意义上，它们正想象着这样的一片海，一片不存在于地球上任何角落的海，在那里会有潮起潮落，而它们会随着海的节律而开合。<br>芝加哥没有海，但牡蛎带来了海。<br>F. A. Brown, Jr., Persistent activity rhythms in the oyster. The American journal of physiology, 1954.</li><li>如果有一天你拜访了曼哈顿的第五大道，可以注意一下路边行道树。<br>你也许会发现一棵非常不友好的树——它的树干上缠绕着巨大而尖锐的棘刺。这些刺有的能长到比人的手掌还长，刚出生时还是柔软而嫩绿，但很快就会变得坚硬无比。倘若你走累了想倚靠树干歇息一下，必定会被扎得头破血流。<br>它叫美国皂荚（Gleditsia triacanthos）。它的拉丁文种加词意思是“三刺”，想必命名人也对它印象深刻。<br>可是这些刺毫无用途。它们虽然巨大尖锐，可是太长也太稀疏了。常见的食草动物——比如鹿——几乎不会被这些刺困扰，它们灵巧的嘴不需太多工夫就能绕过尖刺啃到树皮，就像蚂蚁从篱笆的缝隙间穿过。<br>这没有道理。皂荚不应该做这样毫无意义的事情，它们不可能费心费力建筑一道无用的篱笆，在蚂蚁的世界里对抗巨人—— 除非，有巨人曾在此驻足，生态学家盖伊·罗宾逊说。<br>远在有第五大道之前，远在任何大道之前，远在人类还没有抵达美洲之前，在曼哈顿，在整个北美，曾经生活着一种巨兽。它叫乳齿象。它和今天的大象差不多大。它很可能是一种喜欢吃树皮的动物。它随着一万三千年前人类的到来而灭绝了。没有关系，树还记得。乳齿象在这里生活了至少几百万年，美国皂荚也在这里生活了至少几百万年。它们是老邻居，哪怕是充满敌意的邻居。在今天的非洲，金合欢树为了抵御非洲象而演化出了长而锐利的刺；完全可以想象，百万年前美洲的皂荚树也做出了一样的尝试。哪怕乳齿象已经一万三千年不曾拜访，基因也不会那么快被遗忘；它和它的刺还将留存许久。谁知道呢，也许再过一万三千年，第五大道就会深埋在尘埃之中，布朗克斯动物园里大象的后代又将在美洲漫游，重访每一个遥远亲戚所曾踏足的故地；树也将想起久远的恩怨，它的棘刺又将重新派上用场。<br>但是故事还没有完。树也记住了人。<br>Sharon Levy. Once and Future Giants: What Ice Age Extinctions Tell Us About the Fate of Earth’s Largest Animals. Oxford University Press, 2012.</li><li>1895年，植物学家约翰·麦德利·伍德在南非见到了一棵漂亮的树。<br>它站在一片小森林的边缘，看起来就像是一株棕榈，长达3米的叶子弯曲成优雅的弧形，远远望去就像是浓密的伞形王冠。伍德拔下了树周围的几株蘖生苗，把一株寄给了伦敦。它将被命名为伍德苏铁（Encephalartos woodii）。它很可能是这星球上最后一棵伍德苏铁。两亿多年前，苏铁曾经遍布世界。铁树的森林延伸到大地的每一个角落，伴随了恐龙从诞生到衰亡的全部历史。苏铁的生长很缓慢，往往要几年甚至几十年才能开花；但它们的寿命很长，它们不急。侏罗纪时代，地球上20%的植物可能都是苏铁。但今天苏铁只剩下大约300个物种，伍德苏铁是其中一员。它的祖先也曾经历了二叠末、三叠末和白垩末的三次大灭绝，经历了不计其数的冰河时代。它很可能也曾经繁盛过，但终究无法与更高更快的被子植物竞争；它也许曾经广泛分布在非洲大地，但今天只剩下了这最后一株。而苏铁是雌雄异体的植物。这是一株雄树。此刻它还不会灭绝。它的克隆体生长在全世界的植物园里，但是这些克隆体当然也都是雄性。所有这些克隆和它的遗传特征都几乎完全一样，突变带来的变化可以忽略不计；它们将这样永远静止下去，直到最终消失——或者，直到找到一株雌树，绽开金黄色的美丽“花朵”，结出饱满的种子，重新踏上演化的漫漫旅途。然而植物学家已经在南非的森林里搜寻了很久，直到今天依然一无所获。<br>托尔金以另一种方式想象过这个场景。在他笔下的中土大陆，有一个种族叫做树人。他们是森林的牧人，外形像树，能够移动和说话，只是非常缓慢（树人的寿命很长，他们不急）。树人的雌性成员在很久以前的战乱中消失了，许多树人们相信她们只是躲避到了遥远而不可触及的世界角落，但这一切都只是猜测和传说。一切迹象都表明，树人作为一个种族终将消亡。<br>除非……<br>不，不应该有除非。无论读者如何心怀不可能的希望，托尔金知道雌树人不会复活。她们不应该复活，这将是一个廉价的奇迹。奇迹也许真的会发生，一株雌性的伍德苏铁也许还藏在非洲某片无人涉足的森林里——但是，苏铁的时代已经结束了。即使挽救了这一棵树，也不能改变任何事情。<br>或许就这么看着它凝固在时间里，看着它成为一个伟大的克隆，经人之手传遍所有的庭园，然后随着人类文明一起消失吧。这将是一个孤独的结局——但有些时候，孤独才是最真实的。<br>Donaldson, J.S. (2003). ‘Encephalartos woodii’. 2006. IUCN Red List of Threatened Species.</li><li>诺贝尔奖得主理查德-费曼提出的反物质猜想。<br>他由麦克斯韦方程推导出两个解，发现在数学上，一个在时间中正向前进的负电子和一个在时间中逆行的正电子是一样的。换句话说，反物质不过是在时间中逆行，即从未来向过去前进的正物质而已。反物质和正物质的对消泯灭，实质上是正物质在时间轴上的突然掉头，回到过去的同时变成了反物质。即2分钟前的反物质，在1分钟前和正物质对消，实质上是该正物质在1分钟前开始了时间上的逆行，变成了反物质。2分钟前你看到的反物质就是在时间轴上逆行回去的这个正物质而已。更加震撼的理论如下，费曼由此解决了困扰物理学界多年的基本粒子问题：为何世间万物、大至星系、小到原子，都会展现出不同的属性，例如银河系和仙女星系、我和马克思，氢原子和氧原子，没有完全相同的个体。但是在电子身上是个例外，世上没有“大电子”、“小电子”、“性感电子”、“美丽电子”之说，你也无法在一个电子上刻字，然后送给自己的女友。组成宇宙万物的无穷多的电子，是一模一样的，找不出任何差异的。费曼由自己的反物质假设完美地解释了这一困扰：因为从宇宙大爆炸的那一刻起，整个宇宙本来就只有一个电子。没错，全宇宙的庞大的空间、数不尽的星体和物质，其实都是这一个电子在不同时空的分身而已。它从大爆炸开始，在时间轴上正向前进，直到宇宙的末日，又掉头回去，变成正电子，在时间里逆行，逆行到了宇宙诞生之初。就这样永世无休止地循环下去，这个电子出现在了时间轴上的每一个点，出现在了宇宙的每一个角落，在三维世界的我们看来，空间里布满了数不尽的电子，构成了世间万物。其实它们，包括我们自身，你的父母亲人，你的恋人，你养的猫，狗拉的屎，曼哈顿川流不息的人潮，塔克拉玛干寂如死水的无人区，兰桂坊莺歌燕舞的不夜城，海底两万里那只无尽孤独的蛇颈龙，万事万物都一样，都只不过是那同一个电子正行逆行了无数次的分身而已。整个宇宙就这么一个电子，孤零零地从天地混沌走到宇宙毁灭，再倒回去重来，周而复始。</li><li>相对论并不禁止超光速的存在，而只是禁止「超越」光速。<br>前者指的是速度大于光速的状态，后者指的是从亚光速加速至超光速的过程。即所谓：亚光速的永远亚光速，超光速的永远超光速。真实的普通物质都是亚光速的，所以通常才说光速是自然界速度的上限。如果将快子一类物质也包括进来的话，则更普适的说法是：「光速」是一种速度的「屏障」或者「壁垒」，即普通物质：质量为实数（质量平方为正数），速度比光速低，且永远不可向上超光速；快子类物质：质量为虚数（质量平方为负数），速度比光速快，且永远不可向下亚光速。</li><li>天空本来没有颜色。阳光含有彩虹的所有色彩，它穿过大气层时，受到浮沉空中的亿万微粒所散射。<br>蓝色光波较短，比光波较长的红色或黄色更容易散射，所以天空出现一片蓝色。</li><li>TNT炸药是一种烈性炸药，由J•威尔勃兰德发明，呈黄色粉末或鱼鳞片状，难溶于水，可用于水下爆破。<br>由于威力大，常用来做副起爆药。爆炸后呈负氧平衡，产生有毒气体 。性质稳定，不易爆炸，即使直接被子弹击中也不会引爆。需要雷管进行引爆。</li><li>铅笔芯不是铅做的，而是石墨加粘土制成，起源于英国。</li><li>1997年，网络游戏的鼻祖之一《网络创世纪》诞生了，它被誉为史上一款成功的图形化网络游戏。<br>制作者是现年 54 岁的理查德·加里奥特爵士，他曾经缔造过在欧美无人不晓的 RPG《创世纪》 系列，如今坐拥城堡、上过太空，是名副其实的人生赢家。在《网络创世纪》的测试阶段，他作为公司的大老板，游戏的总设计师，自然也在游戏中拥有自己的专属账号，不仅属性无敌，更拥有“不列颠之王”的美名。这一天，他在游戏里的城堡门口对玩家发表公开演讲，所有玩家的注意力都被这个在《网络创世纪》里如神明一般的男人所吸引了。然而，此时一道火墙立起，我们的不列颠之王就这么被烧死了。事后人们得知，当时一名盗贼玩家从 NPC 身上偷了一本魔法卷轴，就随手试了一下。本来这种魔法石烧不死无敌的不列颠之王的，不想由于之前服务器重启，开发人员忘记打开无敌选项，导致了这一网络游戏史上最知名事件的诞生。</li><li>地球两极地区从来不是地震震源。</li><li>北半球海洋中的水都是顺时针流动，南半球则都是逆时针流动。</li><li>地球的旋转速度正在变慢。</li><li>地球在冬天转得慢，夏天转得快。</li><li>沿着南纬60°线，乘船可以毫无阻拦地航行一周。</li><li>猫没有甜味的味觉。</li><li>鱼和昆虫是利用太阳作指南针，为短距离游动导游。</li><li>蝙蝠有复眼，即使在最强烈的阳光中飞行，也不会眩晕。</li><li>很多鸟类总把它生下来时第一个看到的活动物认作是它的妈妈。</li><li>鸟类的羽毛五光十色，歌喉委婉动听，生命充满活力。它们的体温一般都高达四十到四十三摄氏度。</li><li>人的瞳孔，在看到一些令自己赏心的事时，能扩张到比平常大45％。</li><li>智利的600英里长的阿塔卡玛沙漠是世界上最干燥的地区，自从16世纪白人移民到达以后，从来没下过雨。</li></ul>]]></content>
      
      
      <categories>
          
          <category> 7301：摘抄 </category>
          
      </categories>
      
      
    </entry>
    
    
    
    <entry>
      <title>摘抄集 / 泰戈尔</title>
      <link href="/730102/"/>
      <url>/730102/</url>
      
        <content type="html"><![CDATA[<ul><li>Let life be beautiful like summer flowers and death like autumn leaves.<br>使生如夏花之绚烂，死如秋叶之静美。</li><li>云把水倒在河的水杯里，它们自己却藏在远山之中。</li><li>我的昼间之花，落下它那被遗忘的花瓣。在黄昏中，这花成熟为一颗记忆的金果。</li><li>世界以痛吻我，要我报之以歌。</li><li>青烟对天空夸口，灰烬对大地夸口，都以为它们是火的兄弟。</li><li>夜秘密地把花开放了，却让白日去领受谢词。</li><li>太阳在西方落下时，他的早晨的东方已静悄悄地站在他面前。</li><li>夜之黑暗是一只口袋，迸出黎明的金光。</li><li>真理之川从它的错误之沟渠中流过。</li><li>在我的心头燃点起那休憩的黄昏星吧，然后让黑夜向我微语着爱情。</li><li>寂静在喧嚣里低头不语，沉默在黑夜里与目光结交。于是，我们看错了世界，却说世界欺骗了我们。</li><li>雾，象爱情一样，在山峰的心上游戏，生出种种美丽的变幻。</li><li>浓雾仿佛是大地的愿望。它藏起了太阳，而太阳原是她所呼求的。</li><li>白云谦逊地站在天之一隅。晨光给它戴上霞彩。</li><li>太阳只穿一件朴素的光衣，白云却披了灿烂的裙裾。</li><li>世界上的一队小小的漂泊者呀，请留下你们的足印在我的文字里。</li><li>世界对着它的爱人，把它浩翰的面具揭下了。它变小了，小如一首歌，小如一回永恒的接吻。</li><li>是大地的泪点，使她的微笑保持着青春不谢。</li><li>如果你因失去了太阳而流泪，那么你也将失去群星了。</li><li>当我和拥挤的人群一同在路上走过时，我看见你从阳台上送过来的微笑，我歌唱着，忘却了所有的喧哗。<br>你微微地笑着，不同我说什么话。而我觉得，为了这个，我已等待得久了。</li><li>夏天的飞鸟，飞到我的窗前唱歌，又飞去了。秋天的黄叶，它们没有什么可唱，只叹息一声，飞落在那里。</li><li>鸟儿愿为一朵云。云儿愿为一只鸟。</li><li>鸟翼上系上了黄金，这鸟便永不能再在天上翱翔了。</li><li>我不能选择那最好的。是那最好的选择我。</li><li>远远去了的夏之音乐，翱翔于秋间，寻求它的旧垒。</li><li>麻雀看见孔雀负担着它的翎尾，替它担忧。</li><li>我的心是旷野的鸟，在你的眼睛里找到了它的天空。</li><li>小草在大地寻找群聚，树木向天空寻找孤寂。</li><li>我们在热爱世界时便生活在这世界上。</li><li>黑暗向光明旅行，但是盲者却向死亡旅行。</li><li>不要试图填满生命的空白，因为，音乐就来自那空白深处。</li><li>昨夜的暴风雨用金色的和平为今晨加冕。</li><li>当太阳横过西方的海面时，对着东方留下他的最后的敬礼。</li><li>世界在踌躇之心的琴弦上跑过去，奏出忧郁的乐声。</li><li>夜的序曲是开始于夕阳西下的音乐，开始于它对难以形容的黑暗所作的庄严的赞歌。</li><li>你若爱她，让你的爱像阳光一样包围她，并且给她自由。</li><li>当你没胃口时，不要抱怨食物。</li><li>根是地下的枝，枝是空中的根。</li><li>绿树长到了我的窗前，仿佛是喑哑的大地发出的渴望的声音。</li><li>樵夫的斧头，问树要斧柄。树便给了他。</li></ul>]]></content>
      
      
      <categories>
          
          <category> 7301：摘抄 </category>
          
      </categories>
      
      
    </entry>
    
    
    
    <entry>
      <title>摄影</title>
      <link href="/5704/"/>
      <url>/5704/</url>
      
        <content type="html"><![CDATA[<h1><span id="shao-ji-shi-duo-less-is-more">少即是多 <code>Less is more</code></span><a href="#shao-ji-shi-duo-less-is-more" class="header-anchor">#</a></h1><p>摄影最经典的法则之一。化繁为简，少即是多。<br>因此，在拍照片的时候，一定要想一下，是不是可以少一点儿，再少一点儿。</p>]]></content>
      
      
      <categories>
          
          <category> 5704：摄影 </category>
          
      </categories>
      
      
    </entry>
    
    
    
    <entry>
      <title>日常用语 | 英语</title>
      <link href="/510410/"/>
      <url>/510410/</url>
      
        <content type="html"><![CDATA[<ul><li>FYI = For your information.<br>仅供参考。</li><li>Best Regards.<br>诚挚的问候，最好的祝福，致敬。</li><li>Thank you<br>回复：<br>With pleasure. 很乐意帮忙。<br>My pleasure. 不用谢。<br>这个回答的完整形式是 It’s my pleasure. 这种表达非常有礼貌。<br>而且显得说话人非常绅士。男生在回答女生的感谢时可以用上。<br>Not a problem. 别放在心上。<br>No trouble/ problem. 不麻烦，没什么难的。<br>Any time. 有事随时说<br>It’s okay/alright/nothing. 没事。</li></ul>]]></content>
      
      
      <categories>
          
          <category> 5104：英语 </category>
          
      </categories>
      
      
    </entry>
    
    
    
    <entry>
      <title>歌词 / Lemon</title>
      <link href="/730203/"/>
      <url>/730203/</url>
      
        <content type="html"><![CDATA[<p>夢ならばどれほどよかったでしょう<br>如果这一切都是梦境该有多好<br>未だにあなたのことを夢にみる<br>至今仍能与你在梦中相遇<br>忘れた物を取りに帰るように<br>如同取回遗忘之物一般<br>古びた思い出の埃を払う<br>细细拂去将回忆覆盖的尘埃<br>戻らない幸せがあることを<br>最终是你让我懂得了<br>最後にあなたが教えてくれた<br>这世间亦有无法挽回的幸福<br>言えずに隠してた昏い過去も<br>那些未对他人提及过的黑暗往事<br>あなたがいなきゃ永遠に昏いまま<br>如果不曾有你的话 它们将永远沉睡在黑暗中<br>きっともうこれ以上 傷つくことなど<br>我知道这世上一定没有<br>ありはしないとわかっている<br>比这更令人难过的事情了<br>あの日の悲しみさえ<br>那日的悲伤<br>あの日の苦しみさえ<br>与那日的痛苦<br>そのすべてを愛してた あなたとともに<br>连同深爱着这一切的你<br>胸に残り離れない<br>化作了深深烙印在我心中的<br>苦いレモンの匂い<br>苦涩柠檬的香气<br>雨が降り止むまでは帰れない<br>在雨过天晴前都无法归去<br>今でもあなたはわたしの光<br>时至今日 你仍是我的光芒<br>暗闇であなたの背をなぞった<br>在黑暗中追寻着你的身影<br>その輪郭を鮮明に覚えている<br>那轮廓至今仍鲜明地刻印于心<br>受け止めきれないものと出会うたび<br>每当遇到无法承受的苦痛时<br>溢れてやまないのは涙だけ<br>总是不禁泪如泉涌<br>何をしていたの<br>你都经历过什么<br>何を見ていたの<br>又目睹过什么呢<br>わたしの知らない横顔で<br>脸上浮现着我不曾见过的神情<br>どこかであなたが今<br>如果你正在什么地方<br>わたしと同じ様な<br>与我一样<br>涙にくれ 淋しさの中にいるなら<br>终日过着以泪洗面的寂寞生活的话<br>わたしのことなどどうか 忘れてください<br>就请你将我的一切全部遗忘吧<br>そんなことを心から願うほどに<br>这是我发自内心深处唯一的祈愿<br>今でもあなたはわたしの光<br>时至今日 你仍是我的光芒<br>自分が思うより 恋をしていたあなたに<br>我深深地恋慕着你 甚至超出了我自己的想象<br>あれから思うように 息ができない<br>自此每当想起你 都如同窒息般痛苦<br>あんなに側にいたのにまるで嘘みたい<br>你曾亲密伴我身旁 如今却如烟云般消散<br>とても忘れられないそれだけが確か<br>唯一能确定的是 我永远都不会将你遗忘<br>あの日の悲しみさえ<br>那日的悲伤<br>あの日の苦しみさえ<br>与那日的痛苦<br>その全てを愛してたあなたと共に<br>连同深爱着这一切的你<br>胸に残り離れない<br>化作了深深烙印在我心中的<br>苦いレモンの匂い<br>苦涩柠檬的香气<br>雨が降り止むまでは帰れない<br>在雨过天晴前都无法归去<br>切り分けた果実の片方の様に<br>如同被切开的半个柠檬一般<br><strong>今でもあなたはわたしの光</strong><br>时至今日 你仍是我的光芒</p>]]></content>
      
      
      <categories>
          
          <category> 7310：日本語の音 </category>
          
      </categories>
      
      
    </entry>
    
    
    
    <entry>
      <title>歌词 / 恋愛サーキュレーション</title>
      <link href="/730202/"/>
      <url>/730202/</url>
      
        <content type="html"><![CDATA[<p>せーの<br>预备<br>でもそんなんじゃ だめ<br>但是那样不行哦<br>もうそんなんじゃ ほら<br>真是那样的话你看<br>心は進化するよ もっともっと<br>真心是会进化的 不断 不断</p><p>言葉にすれば消えちゃう関係なら<br>如果说出来的话关系就会消失的话<br>言葉を消せばいいやって<br>那么只要不说就好啦<br>思ってた 恐れてた<br>这样想过，也这样害怕过<br>だけど あれ? なんかちがうかも<br>但是 唉？ 好像有什么误解<br>せんりのみちもいっぽから!<br>千里之行始于足下<br>石のようにかたい そんな意志で<br>就已坚如磐石的意志<br>ちりもつもればやまとなでしこ?<br>沉积成为大和抚子？<br>「し」抜きで いや 死ぬ気で!<br>去掉し ，不对 拼死去做！</p><p>ふわふわり ふわふわる<br>轻飘飘 轻飘飘<br>あなたが名前を呼ぶ それだけで宙へ浮かぶ<br>你轻唤的名字 只是这样就让我飘在空中<br>ふわふわる ふわふわり<br>轻飘飘 轻飘飘<br>あなたが笑っている それだけで笑顔になる<br>你在笑着 只是这样就能让我流出笑容</p><p>神様 ありがとう 運命のいたずらでも<br>神啊谢谢你 即使是命运的恶作剧也好<br>めぐり逢えたことが しあわせなの<br>和他的邂逅 让我感觉幸福</p><p>でもそんなんじゃ だめ<br>但是那样不行哦<br>もうそんなんじゃ ほら<br>真是那样的话你看<br>心は進化するよ もっともっと<br>真心是会进化的 不断 不断<br>そうそんなんじゃ やだ<br>没错 那样的话 不要<br>ねぇそんなんじゃ まだ<br>呐~那样还是不行<br>私のこと見ててね ずっとずっと<br>请一直这样看着我吧 永远 永远</p><p>私の中のあなたほど<br>比起你在我心中的情形<br>あなたの中の私の存在は<br>你心中的那个我的存在<br>まだまだ 大きくないことも わかってるけれど<br>还是不大 虽然我明白<br>今この同じ 瞬間<br>但现在同样的瞬间<br>共有してる 実感<br>共有的实感<br>ちりもつもればやまとなでしこ!<br>沉积成为大和抚子<br>略して?ちりつもやまとなでこ!<br>省略就是集腋成裘大和抚子</p><p>くらくらり くらくらる<br>晕晕晕晕晕晕<br>あなたを見上げたら それだけで まぶしすぎて<br>仰视着你 只是这样就光彩夺目<br>くらくらる くらくらり<br>晕晕晕晕晕晕<br>あなたを想っている それだけで とけてしまう<br>想念着你 只是这样记忆让我快要融化掉了</p><p>神様 ありがとう 運命のいたずらでも<br>神啊谢谢你 即使是命运的恶作剧也好<br>めぐり逢えたことが しあわせなの<br>和他的邂逅 让我感觉幸福</p><p>コイスル キセツハ ヨクバリ circulation<br>恋爱的季节 贪念循环<br>コイスル キモチハ ヨクバリ circulation<br>恋爱的心情 贪念流动<br>コイスル ヒトミハ ヨクバリ circulation<br>恋爱的眼睛 贪念循环<br>コイスル オトメハ ヨクバリ circulation<br>恋爱的少女 贪念流动恋</p><p>ふわふわり ふわふわる<br>轻飘飘 轻飘飘<br>あなたが名前を呼ぶ それだけで 宙へ浮かぶ<br>你轻唤的名字 只是这样就让我飘在空中<br>ふわふわる ふわふわり<br>轻飘飘 轻飘飘<br>あなたが笑っている それだけで 笑顔になる<br>你在笑着 只是这样就能让我流出笑容</p><p>神様 ありがとう 運命のいたずらでも<br>神啊谢谢你 即使是命运的恶作剧也好<br>めぐり逢えたことが しあわせなの<br>和他的邂逅 让我感觉幸福</p><p>でもそんなんじゃ だめ<br>但是那样不行哦<br>もうそんなんじゃ ほら<br>真是那样的话你看<br>心は進化するよ もっともっと<br>真心是会进化的 不断 不断<br>そうそんなんじゃ やだ<br>没错 那样的话 不要<br>ねぇそんなんじゃ まだ<br>呐~那样还是不行<br>私のこと見ててね ずっとずっと<br>请一直这样看着我吧 永远 永远<br>でもそんなんじゃだめ</p><p>もうそんなんじゃほら</p>]]></content>
      
      
      <categories>
          
          <category> 7310：日本語の音 </category>
          
      </categories>
      
      
    </entry>
    
    
    
    <entry>
      <title>歌词 / なごり雪</title>
      <link href="/730201/"/>
      <url>/730201/</url>
      
        <content type="html"><![CDATA[<p>汽車を待つ君の横で僕は<br>在等待火车的你的一旁<br>時計を気にしてる<br>我注意着时钟<br>季節はずれの雪が降ってる<br>不合时节的雪落了下来<br>東京で見る雪はこれが最後ねと<br>这是在东京看见的最后的雪了吧<br>さみしそうに君がつぶやく<br>你寂寞地喃喃自语道</p><p>なごり雪も降る時を知り<br>残雪也知道要落下的时候<br>ふざけすぎた季節のあとで<br>在这愚弄人的季节之后<br>今春が来て君はきれいになった<br>如今春天来临，你变得更加美丽<br>去年よりずっときれいになった<br>美丽动人更甚去年</p><p>動き始めた汽車の窓に顔をつけて<br>发动的火车的车窗，你将脸贴在上面<br>君は何か言おうとしている<br>似乎要说些什么<br>君の口びるがさようならと動くことが<br>害怕你的嘴唇轻吐出道别的话语<br>こわくて下をむいてた<br>我低下头不敢看你</p><p>時がゆけば幼い君も<br>时光飞逝，年幼的你<br>大人になると気づかないまま<br>不知不觉已长大成人<br>今春が来て君はきれいになった<br>如今春天来临，你变得更加美丽<br>去年よりずっときれいになった<br>美丽动人更甚去年</p><p>君が去ったホームにのこり<br>留在你离去后的月台<br>落ちてはとける雪を見ていた<br>看着落下又融化的雪<br>今春が来て君はきれいになった<br>如今春天来临，你变得更加美丽<br>去年よりずっときれいになった<br>美丽动人更甚去年</p>]]></content>
      
      
      <categories>
          
          <category> 7310：日本語の音 </category>
          
      </categories>
      
      
    </entry>
    
    
    
    <entry>
      <title>Vue 商城项目</title>
      <link href="/252001/"/>
      <url>/252001/</url>
      
        <content type="html"><![CDATA[<a id="more"></a><h1><span id="9-yue-16-ri-day-0">9月16日（day 0）</span><a href="#9-yue-16-ri-day-0" class="header-anchor">#</a></h1><h2><span id="p0-kai-fa-suo-xu">0 开发所需</span><a href="#p0-kai-fa-suo-xu" class="header-anchor">#</a></h2><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"># node.js# vuenpm uninstall vue-cli -g # 先全局卸载脚手架2npm install @vue&#x2F;cli -g  # 安装脚手架4vue -V                   # 检查版本<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span></span></code></pre><h2><span id="p1-xin-jian-xiang-mu-bing-an-zhuang-xiang-mu-yi-lai">1 新建项目并安装项目依赖</span><a href="#p1-xin-jian-xiang-mu-bing-an-zhuang-xiang-mu-yi-lai" class="header-anchor">#</a></h2><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash">vue create gshop_clientcd gshop_client# 安装项目所需依赖 --&gt; 建议一个一个装npm install vuex vue-router axios less less-loadernpm install nprogress<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>如果使用的是 stylus ，换成 <code>stylus stylus-loader</code></p><h2><span id="p2-xiang-mu-mu-lu-pei-zhi">2 项目目录配置</span><a href="#p2-xiang-mu-mu-lu-pei-zhi" class="header-anchor">#</a></h2><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"># 项目目录（部分）...├── jsconfig.json         # VSCode 路径配置文件├── vue.config.json       # Vue 配置文件，设置代理，设置语法检查开关├── public│   ├── css              │   ├── font│   ├── images│   └── index.html└── src                    ├── api               # --&gt; 存储封装后的api接口函数及二次封装的axios    ├── components        # --&gt; 普通组件目录    │   ├── Footer            │   │   └── index.vue    │   └── Header    │       └── index.vue    ├── pages             # --&gt; 路由组件目录    │   ├── Home    │   │   └── index.vue    │   ├── Login    │   │   └── index.vue    │   ├── Register    │   │   └── index.vue    │   └── Search    │       └── index.vue    ├── router            # --&gt; 路由器配置    │   ├── index.js    │   └── routes.js    ├── store             # --&gt; Vuex 配置    │   ├── modules       # Vue 模块化    │   ├── index.js    │   ├── state.js    │   ├── mutations.js    │   ├── actions.js    │   └── getters.js    ├── mock              # --&gt; 模拟后台数据    ├── utils             # --&gt; 工具    ├── App.vue           # --&gt; 根组件    └── main.js           # --&gt; 主入口<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>配置 <code>jsconfig.json</code> 文件</p><pre class="line-numbers language-json" data-language="json"><code class="language-json">&#123;  &quot;compilerOptions&quot;: &#123;    &quot;baseUrl&quot;: &quot;.&#x2F;&quot;,    &quot;paths&quot;: &#123;        &quot;@&#x2F;*&quot;: [&quot;src&#x2F;*&quot;]    &#125;  &#125;,  &quot;exclude&quot;: [&quot;node_modules&quot;, &quot;dist&quot;] &#125;<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h2><span id="p3-pei-zhi-zhu-ru-kou-wen-jian">3 配置主入口文件</span><a href="#p3-pei-zhi-zhu-ru-kou-wen-jian" class="header-anchor">#</a></h2><p>main.js</p><pre class="line-numbers language-js" data-language="js"><code class="language-js"><span class="token comment">// main.js</span><span class="token keyword">import</span> Vue <span class="token keyword">from</span> <span class="token string">'vue'</span><span class="token keyword">import</span> App <span class="token keyword">from</span> <span class="token string">'./App.vue'</span>Vue<span class="token punctuation">.</span>config<span class="token punctuation">.</span>productionTip <span class="token operator">=</span> <span class="token boolean">false</span><span class="token keyword">new</span> <span class="token class-name">Vue</span><span class="token punctuation">(</span><span class="token punctuation">&#123;</span>  <span class="token function-variable function">render</span><span class="token operator">:</span> <span class="token parameter">h</span> <span class="token operator">=></span> <span class="token function">h</span><span class="token punctuation">(</span>App<span class="token punctuation">)</span><span class="token punctuation">,</span>     <span class="token comment">// 渲染组件</span><span class="token punctuation">&#125;</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">$mount</span><span class="token punctuation">(</span><span class="token string">'#app'</span><span class="token punctuation">)</span> <span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h2><span id="p4-pei-zhi-gen-zu-jian">4 配置根组件</span><a href="#p4-pei-zhi-gen-zu-jian" class="header-anchor">#</a></h2><p>引入普通组件</p><p>注册组件</p><p>App.vue</p><pre class="line-numbers language-vue" data-language="vue"><code class="language-vue">&lt;template&gt;  &lt;div&gt;   &lt;Header&#x2F;&gt;   &lt;Footer&#x2F;&gt;  &lt;&#x2F;div&gt;&lt;&#x2F;template&gt;&lt;script&gt;&#x2F;&#x2F; 引入组件import Header from &#39;.&#x2F;components&#x2F;Header&#39;import Footer from &#39;.&#x2F;components&#x2F;Footer&#39;    export default &#123;  name:&#39;App&#39;,  &#x2F;&#x2F; 注册组件  components: &#123;    Header,    Footer  &#125;&#125;&lt;&#x2F;script&gt;&lt;style rel&#x3D;&quot;stylesheet&#x2F;less&quot; scoped&gt;&lt;&#x2F;style&gt;<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h2><span id="p5-xin-jian-zu-jian">5 新建组件</span><a href="#p5-xin-jian-zu-jian" class="header-anchor">#</a></h2><p>新建 <code>Header</code> <code>Footer</code> <code>Home</code> <code>Login</code> <code>Register</code> <code>Search</code> 目录下的 <code>index.vue</code></p><p>模板如下</p><pre class="line-numbers language-vue" data-language="vue"><code class="language-vue">&lt;template&gt;  &lt;div&gt;    Footer  &lt;&#x2F;div&gt;&lt;&#x2F;template&gt;&lt;script&gt;export default &#123;  name:&#39;Footer&#39; &#x2F;&#x2F; 这里改成各组件名字&#125;&lt;&#x2F;script&gt;&lt;style lang&#x3D;&quot;less&quot; rel&#x3D;&quot;stylesheet&#x2F;less&quot; scoped&gt;&lt;&#x2F;style&gt;<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h2><span id="p6-pei-zhi-lu-you">6 配置路由</span><a href="#p6-pei-zhi-lu-you" class="header-anchor">#</a></h2><p><code>router/index.js</code></p><pre class="line-numbers language-js" data-language="js"><code class="language-js"><span class="token comment">// 引入</span><span class="token keyword">import</span> Vue <span class="token keyword">from</span> <span class="token string">'vue'</span><span class="token keyword">import</span> VueRouter <span class="token keyword">from</span> <span class="token string">'vue-router'</span><span class="token keyword">import</span> routes <span class="token keyword">from</span> <span class="token string">'./routes'</span><span class="token comment">// 声明使用路由插件</span>Vue<span class="token punctuation">.</span><span class="token function">use</span><span class="token punctuation">(</span>VueRouter<span class="token punctuation">)</span><span class="token comment">// 实例化路由对象并暴露出去</span><span class="token keyword">export</span> <span class="token keyword">default</span> <span class="token keyword">new</span> <span class="token class-name">VueRouter</span><span class="token punctuation">(</span><span class="token punctuation">&#123;</span>  mode<span class="token operator">:</span> <span class="token string">'history'</span><span class="token punctuation">,</span>  routes<span class="token punctuation">&#125;</span><span class="token punctuation">)</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p><code>router/routes.js</code></p><pre class="line-numbers language-js" data-language="js"><code class="language-js"><span class="token comment">// 引入组件</span><span class="token keyword">import</span> Home <span class="token keyword">from</span> <span class="token string">'@/pages/Home'</span><span class="token keyword">import</span> Search <span class="token keyword">from</span> <span class="token string">'@/pages/Search'</span><span class="token keyword">import</span> Login <span class="token keyword">from</span> <span class="token string">'@/pages/Login'</span><span class="token keyword">import</span> Register <span class="token keyword">from</span> <span class="token string">'@/pages/Register'</span><span class="token comment">// 向外暴露所有组件对象的数组</span><span class="token keyword">export</span> <span class="token keyword">default</span> <span class="token punctuation">[</span>  <span class="token comment">// 注册组件对象</span>  <span class="token punctuation">&#123;</span>    path<span class="token operator">:</span> <span class="token string">'/'</span><span class="token punctuation">,</span>    component<span class="token operator">:</span> Home  <span class="token punctuation">&#125;</span><span class="token punctuation">,</span> <span class="token punctuation">&#123;</span>    path<span class="token operator">:</span> <span class="token string">'/search'</span><span class="token punctuation">,</span>    component<span class="token operator">:</span> Search  <span class="token punctuation">&#125;</span><span class="token punctuation">,</span> <span class="token punctuation">&#123;</span>    path<span class="token operator">:</span> <span class="token string">'/login'</span><span class="token punctuation">,</span>    component<span class="token operator">:</span> Login  <span class="token punctuation">&#125;</span><span class="token punctuation">,</span> <span class="token punctuation">&#123;</span>    path<span class="token operator">:</span> <span class="token string">'/register'</span><span class="token punctuation">,</span>    component<span class="token operator">:</span> Register  <span class="token punctuation">&#125;</span><span class="token punctuation">,</span>  <span class="token comment">// 重定向</span>  <span class="token punctuation">&#123;</span>    path<span class="token operator">:</span> <span class="token string">'/'</span><span class="token punctuation">,</span>    redirect<span class="token operator">:</span> <span class="token string">'/'</span>  <span class="token punctuation">&#125;</span><span class="token punctuation">]</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h2><span id="p7-zhu-ce-lu-you-qi">7 注册路由器</span><a href="#p7-zhu-ce-lu-you-qi" class="header-anchor">#</a></h2><p>main.js</p><pre class="line-numbers language-js" data-language="js"><code class="language-js"><span class="token keyword">import</span> Vue <span class="token keyword">from</span> <span class="token string">'vue'</span><span class="token keyword">import</span> App <span class="token keyword">from</span> <span class="token string">'./App.vue'</span><span class="token comment">// 引入路由器</span><span class="token keyword">import</span> router <span class="token keyword">from</span> <span class="token string">'./router'</span>Vue<span class="token punctuation">.</span>config<span class="token punctuation">.</span>productionTip <span class="token operator">=</span> <span class="token boolean">false</span><span class="token keyword">new</span> <span class="token class-name">Vue</span><span class="token punctuation">(</span><span class="token punctuation">&#123;</span>  <span class="token comment">// 注册路由器</span>  router<span class="token punctuation">,</span>  <span class="token function-variable function">render</span><span class="token operator">:</span> <span class="token parameter">h</span> <span class="token operator">=></span> <span class="token function">h</span><span class="token punctuation">(</span>App<span class="token punctuation">)</span><span class="token punctuation">,</span><span class="token punctuation">&#125;</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">$mount</span><span class="token punctuation">(</span><span class="token string">'#app'</span><span class="token punctuation">)</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h1><span id="9-yue-18-ri-day-1">9月18日（day 1）</span><a href="#9-yue-18-ri-day-1" class="header-anchor">#</a></h1><h2><span id="p8-jia-zai-lu-you-shi-tu">8 加载路由视图</span><a href="#p8-jia-zai-lu-you-shi-tu" class="header-anchor">#</a></h2><p>App.vue</p><pre class="line-numbers language-html" data-language="html"><code class="language-html">// App.vue<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>template</span><span class="token punctuation">></span></span>  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>Header</span> <span class="token punctuation">/></span></span>    <span class="token comment">&lt;!-- 加载路由视图 --></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>router-view</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>router-view</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>Footer</span> <span class="token punctuation">/></span></span>  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>template</span><span class="token punctuation">></span></span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h2><span id="p9-lu-you-zhong-tian-jia-can-shu-shu-ju-geng-xin-shi-tu">9 路由中添加参数数据，更新视图</span><a href="#p9-lu-you-zhong-tian-jia-can-shu-shu-ju-geng-xin-shi-tu" class="header-anchor">#</a></h2><p>路由中加入参数数据</p><p>routes.js</p><pre class="line-numbers language-js" data-language="js"><code class="language-js"><span class="token punctuation">&#125;</span><span class="token punctuation">,</span> <span class="token punctuation">&#123;</span>  path<span class="token operator">:</span> <span class="token string">'/login'</span><span class="token punctuation">,</span>  component<span class="token operator">:</span> Login<span class="token punctuation">,</span>  <span class="token comment">// 加入参数数据</span>  meta<span class="token operator">:</span> <span class="token punctuation">&#123;</span>    isHideFooter<span class="token operator">:</span> <span class="token boolean">true</span>  <span class="token punctuation">&#125;</span><span class="token punctuation">&#125;</span><span class="token punctuation">,</span> <span class="token punctuation">&#123;</span>  path<span class="token operator">:</span> <span class="token string">'/register'</span><span class="token punctuation">,</span>  component<span class="token operator">:</span> Register<span class="token punctuation">,</span>  <span class="token comment">// 加入参数数据</span>  meta<span class="token operator">:</span> <span class="token punctuation">&#123;</span>    isHideFooter<span class="token operator">:</span> <span class="token boolean">true</span>  <span class="token punctuation">&#125;</span><span class="token punctuation">&#125;</span><span class="token punctuation">,</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>更新视图</p><p>App.vue</p><pre class="line-numbers language-vue" data-language="vue"><code class="language-vue">&#x2F;&#x2F; App.vue&lt;template&gt;  &lt;div&gt;    &lt;Header &#x2F;&gt;    &lt;router-view&gt;&lt;&#x2F;router-view&gt;    &lt;!-- 加上 v-if 指令 --&gt;    &lt;Footer v-if&#x3D;&quot;!$route.meta.isHideFooter&quot; &#x2F;&gt;  &lt;&#x2F;div&gt;&lt;&#x2F;template&gt;<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>实现在 <code>Login</code> 页面 和 <code>Resister</code> 页面不显示 <code>Footer</code> 组件</p><h2><span id="p10-index-html-jia-ru-yang-shi-wen-jian">10 index.html 加入样式文件</span><a href="#p10-index-html-jia-ru-yang-shi-wen-jian" class="header-anchor">#</a></h2><p>拷贝辉鸿的 <code>iconfont.css</code>   <code>reset.css</code> 放在 <code>/public/css</code>中</p><p>加入样式文件（🐛 用绝对路径）</p><p>public/index.html</p><pre class="line-numbers language-html" data-language="html"><code class="language-html"><span class="token doctype"><span class="token punctuation">&lt;!</span><span class="token doctype-tag">DOCTYPE</span> <span class="token name">html</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>html</span> <span class="token attr-name">lang</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>en<span class="token punctuation">"</span></span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>head</span><span class="token punctuation">></span></span>  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>meta</span> <span class="token attr-name">charset</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>utf-8<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>meta</span> <span class="token attr-name">http-equiv</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>X-UA-Compatible<span class="token punctuation">"</span></span> <span class="token attr-name">content</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>IE=edge<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>meta</span> <span class="token attr-name">name</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>viewport<span class="token punctuation">"</span></span> <span class="token attr-name">content</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>width=device-width,initial-scale=1.0<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>  <span class="token comment">&lt;!-- 样式重置文件 --></span>  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>link</span> <span class="token attr-name">rel</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>stylesheet<span class="token punctuation">"</span></span> <span class="token attr-name">href</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>/css/reset.css<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>  <span class="token comment">&lt;!-- 图标字体文件 --></span>  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>link</span> <span class="token attr-name">rel</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>stylesheet<span class="token punctuation">"</span></span> <span class="token attr-name">href</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>/css/iconfont.css<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>title</span><span class="token punctuation">></span></span>&lt;%= htmlWebpackPlugin.options.title %><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>title</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>head</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>body</span><span class="token punctuation">></span></span>  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">id</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>app<span class="token punctuation">"</span></span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>body</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>html</span><span class="token punctuation">></span></span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h2><span id="p11-chai-fen-jing-tai-ye-mian-zhi-yi">11 拆分静态页面之一</span><a href="#p11-chai-fen-jing-tai-ye-mian-zhi-yi" class="header-anchor">#</a></h2><p>（在实际开发中，静态页面自己写）</p><p>辉鸿的 home/index.html   <code>&lt;header class=&quot;header&quot;&gt;</code> 内容复制到</p><p>components/Header/index.vue <code>&lt;template&gt;</code> 内</p><p>辉鸿的 home/css/home.less  <code>.header</code> 复制到</p><p>components/Header/index.vue <code>&lt;style lang=&quot;less&quot; rel=&quot;stylesheet/less&quot; scoped&gt;</code> 内</p><p>在这个目录新建 images 目录，把  Logo.png  复制过来</p><p>辉鸿的 home/index.html    <code>&lt;header class=&quot;footer&quot;&gt;</code> 内容复制到</p><p>components/Footer/index.vue <code>&lt;template&gt;</code> 内</p><p>辉鸿的 home/css/home.less  <code>.footer</code> 复制到</p><p>components/Footer/index.vue <code>&lt;style lang=&quot;less&quot; rel=&quot;stylesheet/less&quot; scoped&gt;</code> 内</p><p>在这个目录新建 images 目录，把  wz_cz.jpg  复制过来</p><p>如果出现错误可以<strong>重启</strong>一下（ <code>npm run serve</code>）排查问题</p><h2><span id="p12-chai-fen-jing-tai-ye-mian-zhi-er">12 拆分静态页面之二</span><a href="#p12-chai-fen-jing-tai-ye-mian-zhi-er" class="header-anchor">#</a></h2><p>辉鸿的 home/index.html   <code>&lt;header class=&quot;header&quot;&gt;</code> 到 <code>&lt;header class=&quot;footer&quot;&gt;</code> 之间的 内容复制到 <code>pages/Home/index.vue</code>  的 <code>&lt;template&gt; &lt;div&gt;</code> 内</p><p>拷贝对应的 less 样式</p><p>拷贝对应图片并修正图片路径</p><ul><li><code>./images/home</code> 替换成 <code>./images</code></li><li><code>../images</code> 替换成 <code>./images</code></li></ul><p>注释部分轮播图：查找 swiper 并注释（有三个地方），就是有多张图留一张就行，剩下的注释</p><h2><span id="p13-xin-jian-typenav-zu-jian-bing-zhu-ce-wei-gong-gong-zu-jian">13 新建 TypeNav 组件 并注册为公共组件</span><a href="#p13-xin-jian-typenav-zu-jian-bing-zhu-ce-wei-gong-gong-zu-jian" class="header-anchor">#</a></h2><p>在 <code>componets</code> 中新建 <code>TyperNav</code> ，再在里面新建 <code>index.vue</code></p><pre class="line-numbers language-vue" data-language="vue"><code class="language-vue">&lt;template&gt;&lt;&#x2F;template&gt;&lt;script&gt;export default &#123;  name: &#39;TypeNav&#39;,&#125;&lt;&#x2F;script&gt;&lt;style lang&#x3D;&quot;less&quot; rel&#x3D;&quot;stylesheet&#x2F;less&quot; scoped&gt;&lt;&#x2F;style&gt;<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>从 Home组件 中剪切对应的 结构+样式  黏贴在这个文件</p><p><strong>在 main.js 中注册为公共组件</strong></p><pre class="line-numbers language-js" data-language="js"><code class="language-js"><span class="token comment">// main.js</span><span class="token keyword">import</span> Vue <span class="token keyword">from</span> <span class="token string">'vue'</span><span class="token keyword">import</span> App <span class="token keyword">from</span> <span class="token string">'./App.vue'</span><span class="token keyword">import</span> router <span class="token keyword">from</span> <span class="token string">'./router'</span><span class="token comment">// 引入的公共组件</span><span class="token keyword">import</span> TypeNav <span class="token keyword">from</span> <span class="token string">'@/components/TypeNav'</span><span class="token comment">// 设置为全局的公共组件</span>Vue<span class="token punctuation">.</span><span class="token function">component</span><span class="token punctuation">(</span><span class="token string">'TypeNav'</span><span class="token punctuation">,</span> TypeNav<span class="token punctuation">)</span><span class="token operator">...</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>在 <code>pages/Home/index.vue</code>  使用这个组件</p><pre class="line-numbers language-vue" data-language="vue"><code class="language-vue">&lt;template&gt;  &lt;div&gt;    &lt;!-- 在这里使用 --&gt;    &lt;TypeNav &#x2F;&gt;     ...<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h2><span id="p14-chai-fen-jing-tai-ye-mian-zhi-san">14 拆分静态页面之三</span><a href="#p14-chai-fen-jing-tai-ye-mian-zhi-san" class="header-anchor">#</a></h2><p>在 <code>pages/Home</code> 中新建  <code>ListContainer</code> <code>TodayRecommend</code> <code>Rank</code> <code>Floor</code> <code>Brand</code> <code>Like</code></p><p>新建 index.vue 拷贝对应的 html+css+images（注意修正路径）</p><p>在Home组件中引入并注册这六个组件，然后使用这些组件</p><pre class="line-numbers language-vue" data-language="vue"><code class="language-vue">&lt;!-- @&#x2F;pages&#x2F;Home&#x2F;index.vue--&gt;&lt;template&gt;  &lt;div&gt;    &lt;!-- 导航 --&gt;    &lt;TypeNav &#x2F;&gt;    &lt;!-- 列表 --&gt;    &lt;ListContainer &#x2F;&gt;    &lt;!-- 今日推荐 --&gt;    &lt;TodayRecommend &#x2F;&gt;    &lt;!-- 商品排行 --&gt;    &lt;Rank &#x2F;&gt;    &lt;!-- 猜你喜欢 --&gt;    &lt;Like &#x2F;&gt;    &lt;!-- 楼层 --&gt;    &lt;Floor &#x2F;&gt;    &lt;Floor &#x2F;&gt;    &lt;!-- 商标--&gt;    &lt;Brand &#x2F;&gt;  &lt;&#x2F;div&gt;&lt;&#x2F;template&gt;&lt;script&gt;  &#x2F;&#x2F; 引入组件  import Brand from &#39;.&#x2F;Brand&#39;  import Floor from &#39;.&#x2F;Floor&#39;  import ListContainer from &#39;.&#x2F;ListContainer&#39;  import Like from &#39;.&#x2F;Like&#39;  import Rank from &#39;.&#x2F;Rank&#39;  import TodayRecommend from &#39;.&#x2F;TodayRecommend&#39;    export default &#123;    name: &#39;Home&#39;,    &#x2F;&#x2F; 注册组件    components: &#123;      Brand,      Floor,      ListContainer,      Like,      Rank,      TodayRecommend    &#125;  &#125;&lt;&#x2F;script&gt;&lt;style lang&#x3D;&quot;less&quot; rel&#x3D;&quot;stylesheet&#x2F;less&quot; scoped&gt;&lt;&#x2F;style&gt;<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h2><span id="p15-chai-fen-jing-tai-ye-mian-zhi-si">15 拆分静态页面之四</span><a href="#p15-chai-fen-jing-tai-ye-mian-zhi-si" class="header-anchor">#</a></h2><p>志远的页面（仅复制登录和注册 div 以及 less）</p><p>登录 html + less + images （🐛 修正图片路径） <code>images/ --&gt; ./images</code></p><p>注册 html + less + images</p><pre class="line-numbers language-vue" data-language="vue"><code class="language-vue">&#x2F;&#x2F; Login组件&lt;template&gt;  &lt;!-- 登录 --&gt;  &lt;div class&#x3D;&quot;login-wrap&quot;&gt;...&lt;style lang&#x3D;&quot;less&quot; rel&#x3D;&quot;stylesheet&#x2F;less&quot; scoped&gt;  .login-wrap <span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><pre class="line-numbers language-vue" data-language="vue"><code class="language-vue">&#x2F;&#x2F; Register组件&lt;template&gt;  &lt;!-- 注册 --&gt;  &lt;div class&#x3D;&quot;register&quot;&gt;...&lt;style lang&#x3D;&quot;less&quot; rel&#x3D;&quot;stylesheet&#x2F;less&quot; scoped&gt;  .register<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h2><span id="p16-jia-ji-ge-lu-you-lian-jie-sheng-ming-shi-lu-you-tiao-zhuan">16 加几个路由链接（声明式路由跳转）</span><a href="#p16-jia-ji-ge-lu-you-lian-jie-sheng-ming-shi-lu-you-tiao-zhuan" class="header-anchor">#</a></h2><p>点击头部的 <code>登陆</code> <code>免费注册</code> <code>logo</code> 和 登录页的 <code>立即跳转</code> 和 注册页的 <code>登录</code> 均会跳转到相应的页面</p><pre class="line-numbers language-vue" data-language="vue"><code class="language-vue">&#x2F;&#x2F; Header  10 line&lt;!-- &lt;a href&#x3D;&quot;###&quot;&gt;登录&lt;&#x2F;a&gt;&lt;a href&#x3D;&quot;###&quot; class&#x3D;&quot;register&quot;&gt;免费注册&lt;&#x2F;a&gt; --&gt;&lt;router-link to&#x3D;&quot;&#x2F;login&quot;&gt;登录&lt;&#x2F;router-link&gt;&lt;router-link to&#x3D;&quot;&#x2F;register&quot; class&#x3D;&quot;register&quot;&gt;免费注册&lt;&#x2F;router-link&gt;&#x2F;&#x2F; 31 line&lt;!-- &lt;a class&#x3D;&quot;logo&quot; title&#x3D;&quot;尚品汇&quot; href&#x3D;&quot;###&quot; target&#x3D;&quot;_blank&quot;&gt;  &lt;img src&#x3D;&quot;.&#x2F;images&#x2F;Logo.png&quot; alt&#x3D;&quot;&quot;&gt;&lt;&#x2F;a&gt; --&gt;&lt;router-link class&#x3D;&quot;logo&quot; title&#x3D;&quot;尚品汇&quot; to&#x3D;&quot;&#x2F;&quot;&gt;  &lt;img src&#x3D;&quot;.&#x2F;images&#x2F;Logo.png&quot; alt&#x3D;&quot;&quot;&gt;&lt;&#x2F;router-link&gt;&#x2F;&#x2F; Register  6 line&lt;!-- &lt;a href&#x3D;&quot;login.html&quot; target&#x3D;&quot;_blank&quot;&gt;登陆&lt;&#x2F;a&gt; --&gt;&lt;router-link to&#x3D;&quot;&#x2F;login&quot;&gt;登陆&lt;&#x2F;router-link&gt;&#x2F;&#x2F; Login  42 line&lt;!-- &lt;a href&#x3D;&quot;##&quot; class&#x3D;&quot;register&quot;&gt;立即注册&lt;&#x2F;a&gt; --&gt;&lt;router-link to&#x3D;&quot;&#x2F;register&quot; class&#x3D;&quot;register&quot;&gt;立即注册&lt;&#x2F;router-link&gt;<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h2><span id="p17-dian-ji-sou-suo-hou-tiao-zhuan-search-bian-cheng-shi-lu-you-tiao-zhuan">17 点击搜索后跳转 search（编程式路由跳转）  △</span><a href="#p17-dian-ji-sou-suo-hou-tiao-zhuan-search-bian-cheng-shi-lu-you-tiao-zhuan" class="header-anchor">#</a></h2><p>绑定事件</p><pre class="line-numbers language-vue" data-language="vue"><code class="language-vue">&#x2F;&#x2F; Header 42 line&lt;button class&#x3D;&quot;sui-btn btn-xlarge btn-danger&quot; type&#x3D;&quot;button&quot; @click&#x3D;&quot;toSearch&quot;&gt;搜索&lt;&#x2F;button&gt;<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span></span></code></pre><p>对应的回调函数</p><pre class="line-numbers language-js" data-language="js"><code class="language-js"><span class="token comment">// Header 50 line</span><span class="token keyword">export</span> <span class="token keyword">default</span> <span class="token punctuation">&#123;</span>  name<span class="token operator">:</span> <span class="token string">'Header'</span><span class="token punctuation">,</span>  methods<span class="token operator">:</span> <span class="token punctuation">&#123;</span>    <span class="token comment">// 点击按钮跳转到Search页面</span>    <span class="token function">toSearch</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>      <span class="token comment">// 此时多次点击按钮会报错，是 vue-router 中的一个 bug</span>      <span class="token keyword">this</span><span class="token punctuation">.</span>$router<span class="token punctuation">.</span><span class="token function">push</span><span class="token punctuation">(</span><span class="token string">'/search'</span><span class="token punctuation">)</span>    <span class="token punctuation">&#125;</span>  <span class="token punctuation">&#125;</span><span class="token punctuation">&#125;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>点击搜索按钮后 地址变为<code>/search</code></p><p>此处有一个 🐛 ，<code>this.$router.push</code> 上面那种方法使用，多次点击会报错，需传入成功和失败回调。</p><p><code>replace</code> 也有这个问题，考虑到多次使用，要从根本上解决就只能重写</p><h2><span id="p18-chong-xie-push-he-replace">18 重写 push 和 replace</span><a href="#p18-chong-xie-push-he-replace" class="header-anchor">#</a></h2><pre class="line-numbers language-js" data-language="js"><code class="language-js"><span class="token comment">// router/index.js 11 line</span><span class="token comment">// 重写 push 和 replace</span><span class="token keyword">const</span> pushOrigin <span class="token operator">=</span> <span class="token class-name">VueRouter</span><span class="token punctuation">.</span>prototype<span class="token punctuation">.</span>push<span class="token class-name">VueRouter</span><span class="token punctuation">.</span>prototype<span class="token punctuation">.</span><span class="token function-variable function">push</span> <span class="token operator">=</span> <span class="token keyword">function</span> <span class="token punctuation">(</span>location<span class="token punctuation">,</span> <span class="token function-variable function">onComplete</span> <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=></span> <span class="token punctuation">&#123;</span><span class="token punctuation">&#125;</span><span class="token punctuation">,</span> onAbort<span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>  <span class="token keyword">return</span> <span class="token function">pushOrigin</span><span class="token punctuation">.</span><span class="token function">call</span><span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">,</span> location<span class="token punctuation">,</span> onComplete<span class="token punctuation">,</span> onAbort<span class="token punctuation">)</span><span class="token punctuation">&#125;</span><span class="token keyword">const</span> replaceOrigin <span class="token operator">=</span> <span class="token class-name">VueRouter</span><span class="token punctuation">.</span>prototype<span class="token punctuation">.</span>replace<span class="token class-name">VueRouter</span><span class="token punctuation">.</span>prototype<span class="token punctuation">.</span><span class="token function-variable function">replace</span> <span class="token operator">=</span> <span class="token keyword">function</span> <span class="token punctuation">(</span>location<span class="token punctuation">,</span> onComplete<span class="token punctuation">,</span> <span class="token function-variable function">onAbort</span> <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=></span> <span class="token punctuation">&#123;</span><span class="token punctuation">&#125;</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>  <span class="token keyword">return</span> <span class="token function">replaceOrigin</span><span class="token punctuation">.</span><span class="token function">call</span><span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">,</span> location<span class="token punctuation">,</span> onComplete<span class="token punctuation">,</span> onAbort<span class="token punctuation">)</span><span class="token punctuation">&#125;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>此时出现报错就 <code>npm install --save core-js</code></p><h2><span id="p19-lu-you-chuan-can-params">19 路由传参（params） △</span><a href="#p19-lu-you-chuan-can-params" class="header-anchor">#</a></h2><p>💡  路由传参方式</p><p>获取搜索框输入内容，点击跳转，比如输入 <code>123</code> 则跳转到 <code>search/123</code></p><pre class="line-numbers language-js" data-language="js"><code class="language-js"><span class="token comment">//  Header 41 line</span><span class="token operator">&lt;</span>input type<span class="token operator">=</span><span class="token string">"text"</span> id<span class="token operator">=</span><span class="token string">"autocomplete"</span> <span class="token keyword">class</span><span class="token operator">=</span><span class="token string">"input-error input-xxlarge"</span> v<span class="token operator">-</span>model<span class="token operator">=</span><span class="token string">"keyword"</span> <span class="token operator">/</span><span class="token operator">></span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span></span></code></pre><pre class="line-numbers language-js" data-language="js"><code class="language-js"><span class="token comment">// Header 51 line</span><span class="token comment">// 数据对象</span><span class="token function">data</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>  <span class="token keyword">return</span> <span class="token punctuation">&#123;</span>    keyword<span class="token operator">:</span> <span class="token string">''</span> <span class="token comment">// 用来收集搜索框中的关键字</span>  <span class="token punctuation">&#125;</span><span class="token punctuation">&#125;</span><span class="token punctuation">,</span>methods<span class="token operator">:</span> <span class="token punctuation">&#123;</span>  <span class="token comment">// 点击按钮跳转到Search页面</span>  <span class="token function">toSearch</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>    <span class="token comment">// 判断文本框是否输入内容</span>    <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">.</span>keyword<span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>      <span class="token keyword">this</span><span class="token punctuation">.</span>$router<span class="token punctuation">.</span><span class="token function">push</span><span class="token punctuation">(</span><span class="token punctuation">&#123;</span>        name<span class="token operator">:</span> <span class="token string">'search'</span><span class="token punctuation">,</span>        params<span class="token operator">:</span> <span class="token punctuation">&#123;</span>          keyword<span class="token operator">:</span> <span class="token keyword">this</span><span class="token punctuation">.</span>keyword        <span class="token punctuation">&#125;</span>      <span class="token punctuation">&#125;</span><span class="token punctuation">)</span>    <span class="token punctuation">&#125;</span> <span class="token keyword">else</span> <span class="token punctuation">&#123;</span>      <span class="token keyword">this</span><span class="token punctuation">.</span>$router<span class="token punctuation">.</span><span class="token function">push</span><span class="token punctuation">(</span><span class="token punctuation">&#123;</span>        name<span class="token operator">:</span> <span class="token string">'search'</span>      <span class="token punctuation">&#125;</span><span class="token punctuation">)</span>    <span class="token punctuation">&#125;</span>  <span class="token punctuation">&#125;</span><span class="token punctuation">&#125;</span><span class="token punctuation">&#125;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><pre class="line-numbers language-js" data-language="js"><code class="language-js"><span class="token comment">// routes.js 14 line</span>path<span class="token operator">:</span> <span class="token string">'/search/:keyword?'</span><span class="token punctuation">,</span> <span class="token comment">// ? 表示参数可传可不传</span>component<span class="token operator">:</span> Search<span class="token punctuation">,</span>name<span class="token operator">:</span> <span class="token string">'search'</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span></span></code></pre><h2><span id="p20-er-ci-feng-zhuang-axios">20 二次封装 axios △</span><a href="#p20-er-ci-feng-zhuang-axios" class="header-anchor">#</a></h2><p>安装 Nprogress</p><p><code>npm install --save nprogress </code></p><p>新建 <code>api/ajax.js</code> 文件，内容如下</p><pre class="line-numbers language-js" data-language="js"><code class="language-js"><span class="token comment">// 二次封装 axios</span><span class="token keyword">import</span> axios <span class="token keyword">from</span> <span class="token string">'axios'</span><span class="token comment">// 引入Nprogress插件和插件的样式文件</span><span class="token comment">// 可以在发送请求或者作出响应的时候有进度条的效果</span><span class="token keyword">import</span> Nprogress <span class="token keyword">from</span> <span class="token string">'nprogress'</span><span class="token keyword">import</span> <span class="token string">'nprogress/nprogress.css'</span><span class="token comment">// 设置请求时的根路径和及请求超时时间 </span><span class="token keyword">const</span> ajax <span class="token operator">=</span> axios<span class="token punctuation">.</span><span class="token function">create</span><span class="token punctuation">(</span><span class="token punctuation">&#123;</span>  baseURL<span class="token operator">:</span> <span class="token string">'/api'</span><span class="token punctuation">,</span> <span class="token comment">// 设置根路径</span>  timeOut<span class="token operator">:</span> <span class="token number">20000</span> <span class="token comment">// 设置超时时间</span><span class="token punctuation">&#125;</span><span class="token punctuation">)</span><span class="token comment">// 请求拦截器</span>ajax<span class="token punctuation">.</span>interceptors<span class="token punctuation">.</span>request<span class="token punctuation">.</span><span class="token function">use</span><span class="token punctuation">(</span><span class="token parameter">config</span> <span class="token operator">=></span> <span class="token punctuation">&#123;</span>  Nprogress<span class="token punctuation">.</span><span class="token function">start</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token comment">// 显示进度条</span>  <span class="token keyword">return</span> config<span class="token punctuation">&#125;</span><span class="token punctuation">)</span><span class="token comment">// 响应拦截器</span>ajax<span class="token punctuation">.</span>interceptors<span class="token punctuation">.</span>response<span class="token punctuation">.</span><span class="token function">use</span><span class="token punctuation">(</span><span class="token parameter">response</span> <span class="token operator">=></span> <span class="token punctuation">&#123;</span>  Nprogress<span class="token punctuation">.</span><span class="token function">done</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token comment">// 隐藏进度条</span>  <span class="token keyword">return</span> response<span class="token punctuation">.</span>data<span class="token punctuation">&#125;</span><span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token parameter">error</span> <span class="token operator">=></span> <span class="token punctuation">&#123;</span>  Nprogress<span class="token punctuation">.</span><span class="token function">done</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token comment">// 隐藏进度条</span>  <span class="token function">alert</span><span class="token punctuation">(</span>error<span class="token punctuation">.</span>message<span class="token punctuation">)</span>  <span class="token comment">// 返回错误信息，外部可以处理</span>  <span class="token keyword">return</span> Promise<span class="token punctuation">.</span><span class="token function">reject</span><span class="token punctuation">(</span>error<span class="token punctuation">)</span><span class="token punctuation">&#125;</span><span class="token keyword">export</span> <span class="token keyword">default</span> ajax<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>新建 <code>api/index.js</code> 文件，内容如下</p><pre class="line-numbers language-js" data-language="js"><code class="language-js"><span class="token comment">// api/index.js</span><span class="token comment">// 封装每个接口的api函数</span><span class="token keyword">import</span> ajax <span class="token keyword">from</span> <span class="token string">'./ajax'</span><span class="token comment">// 获取首页三级分类信息的api接口函数</span><span class="token keyword">export</span> <span class="token keyword">const</span> <span class="token function-variable function">reqBaseCategoryList</span> <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=></span> ajax<span class="token punctuation">.</span><span class="token function">get</span><span class="token punctuation">(</span><span class="token template-string"><span class="token template-punctuation string">`</span><span class="token string">/product/getBaseCategoryList</span><span class="token template-punctuation string">`</span></span><span class="token punctuation">)</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>修改 <code>App.vue </code></p><pre class="line-numbers language-js" data-language="js"><code class="language-js"><span class="token operator">--</span><span class="token operator">></span> <span class="token string">"App.vue"</span> <span class="token number">15</span> line<span class="token comment">// 引入 api 接口函数</span><span class="token keyword">import</span> <span class="token punctuation">&#123;</span>  reqBaseCategoryList<span class="token punctuation">&#125;</span> <span class="token keyword">from</span> <span class="token string">'@/api'</span><span class="token operator">--</span><span class="token operator">></span> <span class="token number">27</span> line<span class="token keyword">async</span> <span class="token function">mounted</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>  <span class="token keyword">const</span> result <span class="token operator">=</span> <span class="token keyword">await</span> <span class="token function">reqBaseCategoryList</span><span class="token punctuation">(</span><span class="token punctuation">)</span>  console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>result<span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h2><span id="p21-vue-config-js-eslint-she-zhi-kua-yu-dai-li-she-zhi">21 vue.config.js / eslint 设置 / 跨域代理设置</span><a href="#p21-vue-config-js-eslint-she-zhi-kua-yu-dai-li-she-zhi" class="header-anchor">#</a></h2><pre class="line-numbers language-js" data-language="js"><code class="language-js"><span class="token operator">--</span><span class="token operator">></span> <span class="token string">"vue.config.js"</span>module<span class="token punctuation">.</span>exports <span class="token operator">=</span> <span class="token punctuation">&#123;</span>  lintOnSave<span class="token operator">:</span> <span class="token boolean">true</span><span class="token punctuation">,</span> <span class="token comment">// eslint 语法检查开关</span>  devServer<span class="token operator">:</span> <span class="token punctuation">&#123;</span>    proxy<span class="token operator">:</span> <span class="token punctuation">&#123;</span>      <span class="token string">'/api'</span><span class="token operator">:</span> <span class="token punctuation">&#123;</span>        target<span class="token operator">:</span> <span class="token string">'http://182.92.128.115'</span><span class="token punctuation">,</span>        changeOrigin<span class="token operator">:</span> <span class="token boolean">true</span>  <span class="token comment">// 开启跨域</span>      <span class="token punctuation">&#125;</span>    <span class="token punctuation">&#125;</span>  <span class="token punctuation">&#125;</span><span class="token punctuation">&#125;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h1><span id="9-yue-19-ri-day-2">9月19日（day 2）</span><a href="#9-yue-19-ri-day-2" class="header-anchor">#</a></h1><h2><span id="p22-store-da-jian-he-zhu-ce">22 store 搭建和注册</span><a href="#p22-store-da-jian-he-zhu-ce" class="header-anchor">#</a></h2><p>创建 <code>store/index.js</code></p><pre class="line-numbers language-js" data-language="js"><code class="language-js"><span class="token comment">// 引入</span><span class="token keyword">import</span> Vue <span class="token keyword">from</span> <span class="token string">'vue'</span><span class="token keyword">import</span> Vuex <span class="token keyword">from</span> <span class="token string">'vuex'</span><span class="token comment">// 引入核心对象</span><span class="token keyword">import</span> state <span class="token keyword">from</span> <span class="token string">'./state'</span><span class="token keyword">import</span> mutations <span class="token keyword">from</span> <span class="token string">'./mutations'</span><span class="token keyword">import</span> actions <span class="token keyword">from</span> <span class="token string">'./actions'</span><span class="token keyword">import</span> getters <span class="token keyword">from</span> <span class="token string">'./getters'</span><span class="token comment">// 声明使用插件</span>Vue<span class="token punctuation">.</span><span class="token function">use</span><span class="token punctuation">(</span>Vuex<span class="token punctuation">)</span><span class="token comment">// 实例化 + 暴露</span><span class="token keyword">export</span> <span class="token keyword">default</span> <span class="token keyword">new</span> <span class="token class-name">Vuex<span class="token punctuation">.</span>Store</span><span class="token punctuation">(</span><span class="token punctuation">&#123;</span>  state<span class="token punctuation">,</span>  mutations<span class="token punctuation">,</span>  actions<span class="token punctuation">,</span>  getters<span class="token punctuation">&#125;</span><span class="token punctuation">)</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>创建 <code>store/state.js</code>  <code>store/mutations.js</code> <code>store/actions.js</code> <code>store/getters.js</code></p><pre class="line-numbers language-js" data-language="js"><code class="language-js"><span class="token keyword">export</span> <span class="token keyword">default</span> <span class="token punctuation">&#123;</span><span class="token punctuation">&#125;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span></span></code></pre><p>更新 <code>main.js</code></p><pre class="line-numbers language-js" data-language="js"><code class="language-js"><span class="token operator">--</span><span class="token operator">></span> <span class="token string">"main.js"</span><span class="token operator">--</span><span class="token operator">></span> <span class="token number">7</span> line<span class="token comment">// 引入store</span><span class="token keyword">import</span> store <span class="token keyword">from</span> <span class="token string">'./store'</span><span class="token operator">--</span><span class="token operator">></span> <span class="token number">20</span> line<span class="token comment">// 注册store</span>store<span class="token punctuation">,</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h2><span id="p23-vuex-zhi-modules">23 Vuex 之 modules</span><a href="#p23-vuex-zhi-modules" class="header-anchor">#</a></h2><p>💡 Vuex 的 modules 知识</p><p><code>store</code> 新建 目录 <code>modules</code></p><p>里面新建文件 <code>home.js</code></p><pre class="line-numbers language-js" data-language="js"><code class="language-js"><span class="token keyword">export</span> <span class="token keyword">default</span> <span class="token punctuation">&#123;</span>  state<span class="token operator">:</span><span class="token punctuation">&#123;</span><span class="token punctuation">&#125;</span><span class="token punctuation">,</span>  mutations<span class="token operator">:</span><span class="token punctuation">&#123;</span><span class="token punctuation">&#125;</span><span class="token punctuation">,</span>  actions<span class="token operator">:</span><span class="token punctuation">&#123;</span><span class="token punctuation">&#125;</span><span class="token punctuation">,</span>  getters<span class="token operator">:</span><span class="token punctuation">&#123;</span><span class="token punctuation">&#125;</span><span class="token punctuation">&#125;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>新建文件 <code>index.js</code></p><pre class="line-numbers language-js" data-language="js"><code class="language-js"><span class="token keyword">import</span> home <span class="token keyword">from</span> <span class="token string">'./home'</span><span class="token keyword">export</span> <span class="token keyword">default</span> <span class="token punctuation">&#123;</span>  home<span class="token punctuation">&#125;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span></span></code></pre><p>修改 <code>store/index.js</code> 文件</p><pre class="line-numbers language-js" data-language="js"><code class="language-js"><span class="token keyword">import</span> modules <span class="token keyword">from</span> <span class="token string">'./modules'</span>getters<span class="token punctuation">,</span><span class="token comment">// 管理模块</span>modules<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span></span></code></pre><blockquote><p>组件中获取状态数据方式</p><p><code>this.$store.state.xxxx</code> / <code>...mapState/(['xxx'])</code></p><p><code>this.store.state.模块名字.xxx</code> / <code>..mapState(&#123; xxx:&#125;)</code></p><p>尽量不能让方法重名，如果总actions有一个a方法，某模块中也有a方法，最终这两个方法都会执行</p></blockquote><h2><span id="p24-home-zu-jian-xiang-guan-de-store">24 Home组件相关的 store</span><a href="#p24-home-zu-jian-xiang-guan-de-store" class="header-anchor">#</a></h2><p>修改 <code>store</code> 中的 <code>home.js</code></p><pre class="line-numbers language-js" data-language="js"><code class="language-js"><span class="token comment">// 引入API接口函数</span><span class="token keyword">import</span> <span class="token punctuation">&#123;</span>  reqBaseCategoryList<span class="token punctuation">&#125;</span> <span class="token keyword">from</span> <span class="token string">"@/api"</span><span class="token punctuation">;</span><span class="token comment">// 管理首页中的数据</span><span class="token keyword">export</span> <span class="token keyword">default</span> <span class="token punctuation">&#123;</span>  state<span class="token operator">:</span> <span class="token punctuation">&#123;</span>    <span class="token comment">// 三级分类信息数据数组</span>    baseCategoryList<span class="token operator">:</span> <span class="token punctuation">[</span><span class="token punctuation">]</span>  <span class="token punctuation">&#125;</span><span class="token punctuation">,</span>  mutations<span class="token operator">:</span> <span class="token punctuation">&#123;</span>    <span class="token comment">// 直接修改三级分类信息数据 </span>    <span class="token constant">RECEIVE_BASE_CATEGORY_LIST</span><span class="token punctuation">(</span><span class="token parameter">state<span class="token punctuation">,</span> baseCategoryList</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>      state<span class="token punctuation">.</span>baseCategoryList <span class="token operator">=</span> baseCategoryList<span class="token punctuation">;</span>    <span class="token punctuation">&#125;</span>  <span class="token punctuation">&#125;</span><span class="token punctuation">,</span>  actions<span class="token operator">:</span> <span class="token punctuation">&#123;</span>    <span class="token comment">// 异步请求，获取三级分类信息数据</span>    <span class="token keyword">async</span> <span class="token function">getBaseCategoryList</span><span class="token punctuation">(</span><span class="token parameter"><span class="token punctuation">&#123;</span>      commit    <span class="token punctuation">&#125;</span></span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>      <span class="token comment">// 调用接口发送异步请求</span>      <span class="token keyword">const</span> result <span class="token operator">=</span> <span class="token keyword">await</span> <span class="token function">reqBaseCategoryList</span><span class="token punctuation">(</span><span class="token punctuation">)</span>      <span class="token comment">// 判断</span>      <span class="token keyword">if</span> <span class="token punctuation">(</span>result<span class="token punctuation">.</span>code <span class="token operator">===</span> <span class="token number">200</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>        <span class="token comment">// 提交</span>        <span class="token function">commit</span><span class="token punctuation">(</span><span class="token string">'RECEIVE_BASE_CATEGORY_LIST'</span><span class="token punctuation">,</span> result<span class="token punctuation">.</span>data<span class="token punctuation">)</span>      <span class="token punctuation">&#125;</span>    <span class="token punctuation">&#125;</span>  <span class="token punctuation">&#125;</span><span class="token punctuation">,</span>  getters<span class="token operator">:</span> <span class="token punctuation">&#123;</span><span class="token punctuation">&#125;</span><span class="token punctuation">&#125;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>删除 <code>App.vue</code> 15行的引入api接口语句</p><pre class="line-numbers language-js" data-language="js"><code class="language-js"><span class="token comment">// 删除这个</span><span class="token keyword">import</span> <span class="token punctuation">&#123;</span>  reqGetBaseCategoryList<span class="token punctuation">&#125;</span> <span class="token keyword">from</span> <span class="token string">'@/api'</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span></span></code></pre><p>修改22行的 <code>async mounted()&#123;&#125;</code></p><pre class="line-numbers language-js" data-language="js"><code class="language-js"><span class="token keyword">async</span> <span class="token function">mounted</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>   <span class="token comment">// 分发</span>   <span class="token keyword">this</span><span class="token punctuation">.</span>$store<span class="token punctuation">.</span><span class="token function">dispatch</span><span class="token punctuation">(</span><span class="token string">'getBaseCategoryList'</span><span class="token punctuation">)</span><span class="token punctuation">&#125;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span></span></code></pre><h2><span id="p25-bian-li-typenav-san-ji-fen-lei-shu-ju-bing-xian-shi">25 遍历 TypeNav 三级分类数据并显示</span><a href="#p25-bian-li-typenav-san-ji-fen-lei-shu-ju-bing-xian-shi" class="header-anchor">#</a></h2><p>删除 TypeNav 组件 <code>&lt;div class=&quot;item&quot;&gt;</code> 46 - 1688行</p><p>视图部分更新如下</p><pre class="line-numbers language-html" data-language="html"><code class="language-html">// "TypeNav" 6 line<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>sort<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>all-sort-list2<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>    <span class="token comment">&lt;!-- 遍历第一层 --></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>item<span class="token punctuation">"</span></span> <span class="token attr-name">v-for</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>(c1, index) in baseCategoryList<span class="token punctuation">"</span></span> <span class="token attr-name">:key</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>c1.categoryId<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>      <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>h3</span><span class="token punctuation">></span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>a</span> <span class="token attr-name">href</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span><span class="token punctuation">"</span></span><span class="token punctuation">></span></span>&#123;&#123;c1.categoryName&#125;&#125;<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>a</span><span class="token punctuation">></span></span>      <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>h3</span><span class="token punctuation">></span></span>      <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>item-list clearfix<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>subitem<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>          <span class="token comment">&lt;!-- 遍历第二层 --></span>          <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>dl</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>fore<span class="token punctuation">"</span></span> <span class="token attr-name">v-for</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>(c2) in c1.categoryChild<span class="token punctuation">"</span></span> <span class="token attr-name">:key</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>c2.categoryId<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>dt</span><span class="token punctuation">></span></span>              <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>a</span> <span class="token attr-name">href</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span><span class="token punctuation">"</span></span><span class="token punctuation">></span></span>&#123;&#123;c2.categoryName&#125;&#125;<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>a</span><span class="token punctuation">></span></span>            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>dt</span><span class="token punctuation">></span></span>            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>dd</span><span class="token punctuation">></span></span>              <span class="token comment">&lt;!-- 遍历第三层 --></span>              <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>em</span> <span class="token attr-name">v-for</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>(c3) in c2.categoryChild<span class="token punctuation">"</span></span> <span class="token attr-name">:key</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>c3.categoryId<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>                <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>a</span> <span class="token attr-name">href</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span><span class="token punctuation">"</span></span><span class="token punctuation">></span></span>&#123;&#123;c3.categoryName&#125;&#125;<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>a</span><span class="token punctuation">></span></span>              <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>em</span><span class="token punctuation">></span></span>            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>dd</span><span class="token punctuation">></span></span>          <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>dl</span><span class="token punctuation">></span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">></span></span>      <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">></span></span>  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">></span></span><span class="token comment">&lt;!-- 这个移动到这里 --></span>  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>nav</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>nav<span class="token punctuation">"</span></span><span class="token punctuation">></span></span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>脚本更新如下</p><pre class="line-numbers language-js" data-language="js"><code class="language-js"><span class="token comment">// "TypeNav"</span><span class="token operator">&lt;</span>script<span class="token operator">></span>  <span class="token keyword">import</span> <span class="token punctuation">&#123;</span>    mapState  <span class="token punctuation">&#125;</span> <span class="token keyword">from</span> <span class="token string">'vuex'</span>  <span class="token keyword">export</span> <span class="token keyword">default</span> <span class="token punctuation">&#123;</span>    name<span class="token operator">:</span> <span class="token string">'TypeNav'</span><span class="token punctuation">,</span>    computed<span class="token operator">:</span> <span class="token punctuation">&#123;</span>      <span class="token comment">// 获取状态数据</span>      <span class="token operator">...</span><span class="token function">mapState</span><span class="token punctuation">(</span><span class="token punctuation">&#123;</span>        <span class="token function-variable function">baseCategoryList</span><span class="token operator">:</span> <span class="token punctuation">(</span><span class="token parameter">state</span><span class="token punctuation">)</span> <span class="token operator">=></span> state<span class="token punctuation">.</span>home<span class="token punctuation">.</span>baseCategoryList      <span class="token punctuation">&#125;</span><span class="token punctuation">)</span>    <span class="token punctuation">&#125;</span><span class="token punctuation">,</span>  <span class="token punctuation">&#125;</span><span class="token operator">&lt;</span><span class="token operator">/</span>script<span class="token operator">></span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h2><span id="p26-shu-biao-yi-ru-yi-chu-xiao-guo">26 鼠标移入移出效果</span><a href="#p26-shu-biao-yi-ru-yi-chu-xiao-guo" class="header-anchor">#</a></h2><p>TypeNav  添加事件和绑定样式属性 如下中的 1 和 2</p><pre class="line-numbers language-html" data-language="html"><code class="language-html">// TypeNav 第4行   <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>container<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>      <span class="token comment">&lt;!-- 1 --></span>      <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">@mouseleave</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>currentIndex=-2<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>h2</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>all<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>全部商品分类<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>h2</span><span class="token punctuation">></span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>sort<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>          <span class="token comment">&lt;!-- 遍历显示导航数据 --></span>          <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>all-sort-list2<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>            <span class="token comment">&lt;!-- 遍历第一层 --></span>            <span class="token comment">&lt;!-- 2 --></span>            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>item<span class="token punctuation">"</span></span> <span class="token attr-name">v-for</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>(c1,index) in baseCategoryList<span class="token punctuation">"</span></span> <span class="token attr-name">:key</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>c1.categoryId<span class="token punctuation">"</span></span>              <span class="token attr-name">:class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>&#123;item_on:currentIndex===index&#125;<span class="token punctuation">"</span></span> <span class="token attr-name">@mouseenter</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>showSubCategory(index)<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>              <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>h3</span><span class="token punctuation">></span></span>                <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>a</span> <span class="token attr-name">href</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span><span class="token punctuation">"</span></span><span class="token punctuation">></span></span>&#123;&#123;c1.categoryName&#125;&#125;<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>a</span><span class="token punctuation">></span></span>              <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>h3</span><span class="token punctuation">></span></span>              <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>item-list clearfix<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>                <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>subitem<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>                  <span class="token comment">&lt;!-- 遍历第二层 --></span>                  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>dl</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>fore<span class="token punctuation">"</span></span> <span class="token attr-name">v-for</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>(c2) in c1.categoryChild<span class="token punctuation">"</span></span> <span class="token attr-name">:key</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>c2.categoryId<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>                    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>dt</span><span class="token punctuation">></span></span>                      <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>a</span> <span class="token attr-name">href</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span><span class="token punctuation">"</span></span><span class="token punctuation">></span></span>&#123;&#123;c2.categoryName&#125;&#125;<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>a</span><span class="token punctuation">></span></span>                    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>dt</span><span class="token punctuation">></span></span>                    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>dd</span><span class="token punctuation">></span></span>                      <span class="token comment">&lt;!-- 遍历第三层 --></span>                      <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>em</span> <span class="token attr-name">v-for</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>(c3) in c2.categoryChild<span class="token punctuation">"</span></span> <span class="token attr-name">:key</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>c3.categoryId<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>                        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>a</span> <span class="token attr-name">href</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span><span class="token punctuation">"</span></span><span class="token punctuation">></span></span>&#123;&#123;c3.categoryName&#125;&#125;<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>a</span><span class="token punctuation">></span></span>                      <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>em</span><span class="token punctuation">></span></span>                    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>dd</span><span class="token punctuation">></span></span>                  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>dl</span><span class="token punctuation">></span></span>                <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">></span></span>              <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">></span></span>            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">></span></span>          <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">></span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">></span></span>    <span class="token comment">&lt;!-- @mouseleave 事件那个div到这里结束 --></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>nav</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>nav<span class="token punctuation">"</span></span><span class="token punctuation">></span></span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>data更新</p><pre class="line-numbers language-js" data-language="js"><code class="language-js"><span class="token function">data</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>  <span class="token keyword">return</span> <span class="token punctuation">&#123;</span>    currentIndex<span class="token operator">:</span> <span class="token operator">-</span><span class="token number">2</span> <span class="token comment">// 用来储存鼠标进入某一项的时候的索引</span>  <span class="token punctuation">&#125;</span><span class="token punctuation">&#125;</span><span class="token punctuation">,</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>methods更新</p><pre class="line-numbers language-js" data-language="js"><code class="language-js">methods<span class="token operator">:</span> <span class="token punctuation">&#123;</span>  <span class="token comment">// 鼠标进入事件</span>  <span class="token function">showSubCategory</span><span class="token punctuation">(</span><span class="token parameter">index</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>    <span class="token comment">// 鼠标进入的时候把当前这个项的索引保存起来</span>    <span class="token keyword">this</span><span class="token punctuation">.</span>currentIndex <span class="token operator">=</span> index  <span class="token punctuation">&#125;</span><span class="token punctuation">&#125;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>样式更新 <code>&amp;:hover </code> 改成 <code>&amp;.item_on</code></p><pre class="line-numbers language-less" data-language="less"><code class="language-less">&#x2F;&#x2F; 187行            &amp;.item_on &#123;              background-color: #02a774;              .item-list &#123;                display: block;              &#125;            &#125;<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>呈现鼠标移入标记效果</p><h2><span id="p27-an-xu-yin-ru-lodash-zhong-jie-liu-han-shu">27 按需引入lodash中节流函数</span><a href="#p27-an-xu-yin-ru-lodash-zhong-jie-liu-han-shu" class="header-anchor">#</a></h2><p>💡 节流 / 防抖函数</p><p>安装 lodash</p><p><code>npm install lodash</code></p><p>引入 lodash</p><pre class="line-numbers language-js" data-language="js"><code class="language-js"><span class="token comment">// TypeNav 55行</span>  <span class="token comment">// 按需引入 lodash 中的 节流函数</span>  <span class="token keyword">import</span> throttle <span class="token keyword">from</span> <span class="token string">'lodash/throttle'</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span></span></code></pre><p>更新 methods</p><pre class="line-numbers language-js" data-language="js"><code class="language-js"><span class="token comment">// 鼠标进入事件</span>showSubCategory<span class="token operator">:</span> <span class="token function">throttle</span><span class="token punctuation">(</span> <span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token parameter">index</span><span class="token punctuation">)</span><span class="token punctuation">&#123;</span>   <span class="token comment">// 鼠标进入的时候把当前这个项的索引保存起来</span>  <span class="token keyword">this</span><span class="token punctuation">.</span>currentIndex <span class="token operator">=</span> index<span class="token punctuation">&#125;</span><span class="token punctuation">,</span> <span class="token number">333</span><span class="token punctuation">)</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span></span></code></pre><h2><span id="p28-query-fang-shi-lu-you-chuan-can-shi-jian-wei-tuo-mou-pao">28 query方式路由传参 + 事件委托（冒泡） △</span><a href="#p28-query-fang-shi-lu-you-chuan-can-shi-jian-wei-tuo-mou-pao" class="header-anchor">#</a></h2><p>这里不宜采用三层 <code>v-for</code> 嵌套的路由视图或者是事件，应该采用事件委托的方式</p><p>通过事件绑定委托绑定点击事件如 1 所示</p><p>给a标签添加自定义属性如 2 3 4 所示</p><pre class="line-numbers language-html" data-language="html"><code class="language-html">// TypeNav 7行       <span class="token comment">&lt;!-- 1 这里加了一个点击事件（事件委托） --></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>sort<span class="token punctuation">"</span></span> <span class="token attr-name">@click</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>toSearch<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>          <span class="token comment">&lt;!-- 遍历显示导航数据 --></span>          <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>all-sort-list2<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>            <span class="token comment">&lt;!-- 遍历第一层 --></span>            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>item<span class="token punctuation">"</span></span> <span class="token attr-name">v-for</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>(c1,index) in baseCategoryList<span class="token punctuation">"</span></span> <span class="token attr-name">:key</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>c1.categoryId<span class="token punctuation">"</span></span>              <span class="token attr-name">:class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>&#123; item_on:currentIndex===index&#125;<span class="token punctuation">"</span></span> <span class="token attr-name">@mouseenter</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>showSubCategory(index)<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>              <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>h3</span><span class="token punctuation">></span></span>                <span class="token comment">&lt;!-- 2 --></span>                <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>a</span> <span class="token attr-name">href</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>javascript:;<span class="token punctuation">"</span></span> <span class="token attr-name">:data-categoryName</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>c1.categoryName<span class="token punctuation">"</span></span>                  <span class="token attr-name">:data-category1Id</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>c1.categoryId<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>&#123;&#123;c1.categoryName&#125;&#125;<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>a</span><span class="token punctuation">></span></span>              <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>h3</span><span class="token punctuation">></span></span>              <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>item-list clearfix<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>                <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>subitem<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>                  <span class="token comment">&lt;!-- 遍历第二层 --></span>                  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>dl</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>fore<span class="token punctuation">"</span></span> <span class="token attr-name">v-for</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>(c2) in c1.categoryChild<span class="token punctuation">"</span></span> <span class="token attr-name">:key</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>c2.categoryId<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>                    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>dt</span><span class="token punctuation">></span></span>                      <span class="token comment">&lt;!-- 3 --></span>                      <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>a</span> <span class="token attr-name">href</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>javascript:;<span class="token punctuation">"</span></span> <span class="token attr-name">:data-categoryName</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>c2.categoryName<span class="token punctuation">"</span></span>                        <span class="token attr-name">:data-category2Id</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>c2.categoryId<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>&#123;&#123;c2.categoryName&#125;&#125;<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>a</span><span class="token punctuation">></span></span>                    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>dt</span><span class="token punctuation">></span></span>                    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>dd</span><span class="token punctuation">></span></span>                      <span class="token comment">&lt;!-- 遍历第三层 --></span>                      <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>em</span> <span class="token attr-name">v-for</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>(c3) in c2.categoryChild<span class="token punctuation">"</span></span> <span class="token attr-name">:key</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>c3.categoryId<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>                        <span class="token comment">&lt;!-- 4 --></span>                        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>a</span> <span class="token attr-name">href</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>javascript:;<span class="token punctuation">"</span></span> <span class="token attr-name">:data-categoryName</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>c3.categoryName<span class="token punctuation">"</span></span>                          <span class="token attr-name">:data-category3Id</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>c3.categoryId<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>&#123;&#123;c3.categoryName&#125;&#125;<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>a</span><span class="token punctuation">></span></span>                      <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>em</span><span class="token punctuation">></span></span>                    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>dd</span><span class="token punctuation">></span></span>                  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>dl</span><span class="token punctuation">></span></span>                <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">></span></span>              <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">></span></span>            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">></span></span>          <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">></span></span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>更新对应的点击事件 <code>toSearch</code></p><pre class="line-numbers language-js" data-language="js"><code class="language-js"><span class="token comment">// TypeNav 73行</span>  methods<span class="token operator">:</span> <span class="token punctuation">&#123;</span>      <span class="token operator">...</span>      <span class="token comment">// 点击跳转事件（点击外层div，实现路由跳转）</span>      <span class="token function">toSearch</span><span class="token punctuation">(</span><span class="token parameter">e</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>        <span class="token comment">// 事件委托</span>        <span class="token keyword">const</span> nodeTarget <span class="token operator">=</span> e<span class="token punctuation">.</span>target        <span class="token comment">// 判断是不是a标签</span>        <span class="token keyword">if</span> <span class="token punctuation">(</span>nodeTarget<span class="token punctuation">.</span>nodeName <span class="token operator">===</span> <span class="token string">'A'</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>          <span class="token comment">// 解构</span>          <span class="token keyword">const</span> <span class="token punctuation">&#123;</span>            categoryname<span class="token punctuation">,</span>            category1id<span class="token punctuation">,</span>            category2id<span class="token punctuation">,</span>            category3id          <span class="token punctuation">&#125;</span> <span class="token operator">=</span> nodeTarget<span class="token punctuation">.</span>dataset          <span class="token keyword">const</span> query <span class="token operator">=</span> <span class="token punctuation">&#123;</span>            categoryName<span class="token operator">:</span> categoryname          <span class="token punctuation">&#125;</span>          <span class="token comment">// 判断</span>          <span class="token keyword">if</span> <span class="token punctuation">(</span>category1id<span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>            query<span class="token punctuation">.</span>category1Id <span class="token operator">=</span> category1id          <span class="token punctuation">&#125;</span> <span class="token keyword">else</span> <span class="token keyword">if</span> <span class="token punctuation">(</span>category2id<span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>            query<span class="token punctuation">.</span>category2Id <span class="token operator">=</span> category2id          <span class="token punctuation">&#125;</span> <span class="token keyword">else</span> <span class="token keyword">if</span> <span class="token punctuation">(</span>category3id<span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>            query<span class="token punctuation">.</span>category3Id <span class="token operator">=</span> category3id          <span class="token punctuation">&#125;</span>          <span class="token comment">// 路由跳转</span>          <span class="token keyword">this</span><span class="token punctuation">.</span>$router<span class="token punctuation">.</span><span class="token function">push</span><span class="token punctuation">(</span><span class="token punctuation">&#123;</span>            path<span class="token operator">:</span> <span class="token string">'/search'</span><span class="token punctuation">,</span>            query          <span class="token punctuation">&#125;</span><span class="token punctuation">)</span>          <span class="token comment">// 隐藏高亮效果</span>          <span class="token keyword">this</span><span class="token punctuation">.</span>currentIndex <span class="token operator">=</span> <span class="token operator">-</span><span class="token number">2</span>                    <span class="token keyword">this</span><span class="token punctuation">.</span>isShowFirst <span class="token operator">=</span> <span class="token boolean">false</span>        <span class="token punctuation">&#125;</span>      <span class="token punctuation">&#125;</span>    <span class="token punctuation">&#125;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>以上可以实现点击 TypeNav 中的一级二级三级链接跳转 Search</p><p>URL 为 <code>search?categoryName=电脑办公&amp;categoryId=6</code>  之类的效果</p><h2><span id="p29-search-ye-mian-tian-jia-typenav">29 Search 页面添加 TypeNav</span><a href="#p29-search-ye-mian-tian-jia-typenav" class="header-anchor">#</a></h2><p>Search 添加 TypeNav 标签</p><pre class="line-numbers language-html" data-language="html"><code class="language-html"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>template</span><span class="token punctuation">></span></span>  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>TypeNav</span> <span class="token punctuation">/></span></span>  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">></span></span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span></span></code></pre><p>TypeNav 第8行添加一个 <code>v-if</code></p><pre class="line-numbers language-html" data-language="html"><code class="language-html"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>sort<span class="token punctuation">"</span></span> <span class="token attr-name">@click</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>toSearch<span class="token punctuation">"</span></span> <span class="token attr-name">v-if</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>isShowFirst<span class="token punctuation">"</span></span><span class="token punctuation">></span></span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>data 添加一个 isShowFirst  数据</p><pre class="line-numbers language-js" data-language="js"><code class="language-js"><span class="token function">data</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>  <span class="token keyword">return</span> <span class="token punctuation">&#123;</span>    currentIndex<span class="token operator">:</span> <span class="token operator">-</span><span class="token number">2</span><span class="token punctuation">,</span> <span class="token comment">// 用来储存鼠标进入某一项的时候的索引</span>    isShowFirst<span class="token operator">:</span> <span class="token boolean">true</span> <span class="token comment">// 默认 true</span>  <span class="token punctuation">&#125;</span><span class="token punctuation">&#125;</span><span class="token punctuation">,</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>第5行 更新</p><pre class="line-numbers language-html" data-language="html"><code class="language-html"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">@mouseleave</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>hideFirst<span class="token punctuation">"</span></span> <span class="token attr-name">@mouseenter</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>showFirst<span class="token punctuation">"</span></span><span class="token punctuation">></span></span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>第114行 添加</p><pre class="line-numbers language-js" data-language="js"><code class="language-js"><span class="token comment">// 该组件加载完毕的时候里面的菜单是否隐藏取决于当前的地址（路由地址/路径）</span><span class="token function">mounted</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>  <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">.</span>$route<span class="token punctuation">.</span>path <span class="token operator">!==</span> <span class="token string">'/'</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>    <span class="token comment">// 如果不是首页 就隐藏菜单</span>    <span class="token keyword">this</span><span class="token punctuation">.</span>isShowFirst <span class="token operator">=</span> <span class="token boolean">false</span>  <span class="token punctuation">&#125;</span><span class="token punctuation">&#125;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>methods 中添加两个方法</p><pre class="line-numbers language-js" data-language="js"><code class="language-js"> <span class="token comment">// 鼠标进入</span>  <span class="token function">showFirst</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>    <span class="token keyword">this</span><span class="token punctuation">.</span>isShowFirst <span class="token operator">=</span> <span class="token boolean">true</span>    <span class="token keyword">this</span><span class="token punctuation">.</span>currentIndex <span class="token operator">=</span> <span class="token operator">-</span><span class="token number">1</span>  <span class="token punctuation">&#125;</span><span class="token punctuation">,</span>  <span class="token comment">// 鼠标离开</span>  <span class="token function">hideFirst</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>    <span class="token keyword">this</span><span class="token punctuation">.</span>currentIndex <span class="token operator">=</span> <span class="token operator">-</span><span class="token number">2</span>    <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">.</span>$route<span class="token punctuation">.</span>path <span class="token operator">!=</span> <span class="token string">'/'</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>      <span class="token keyword">this</span><span class="token punctuation">.</span>isShowFirst <span class="token operator">=</span> <span class="token boolean">false</span>    <span class="token punctuation">&#125;</span>  <span class="token punctuation">&#125;</span><span class="token punctuation">&#125;</span><span class="token punctuation">,</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>修改 showSubCategory</p><pre class="line-numbers language-js" data-language="js"><code class="language-js">showSubCategory<span class="token operator">:</span> <span class="token function">throttle</span><span class="token punctuation">(</span><span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token parameter">index</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>  <span class="token comment">// 鼠标进入的时候把当前这个项的索引保存起来</span>  <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">.</span>currentIndex <span class="token operator">!==</span> <span class="token operator">-</span><span class="token number">2</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>    <span class="token keyword">this</span><span class="token punctuation">.</span>currentIndex <span class="token operator">=</span> index  <span class="token punctuation">&#125;</span><span class="token punctuation">&#125;</span><span class="token punctuation">,</span> <span class="token number">300</span><span class="token punctuation">)</span><span class="token punctuation">,</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h2><span id="p30-yin-ru-mockjs">30 引入 mockJS</span><a href="#p30-yin-ru-mockjs" class="header-anchor">#</a></h2><p>生成随机数据，拦截ajax请求</p><p>安装 <code>npm install mockjs</code></p><p>mock 目录新建 <code>banners.json</code> （直接拷贝代码）</p><pre class="line-numbers language-json" data-language="json"><code class="language-json">[  &#123;    &quot;id|1-10&quot;: &quot;1&quot;,    &quot;imgUrl&quot;: &quot;&#x2F;images&#x2F;banner1.jpg&quot;  &#125;,  &#123;    &quot;id&quot;: &quot;2&quot;,    &quot;imgUrl&quot;: &quot;&#x2F;images&#x2F;banner2.jpg&quot;  &#125;,  &#123;    &quot;id&quot;: &quot;3&quot;,    &quot;imgUrl&quot;: &quot;&#x2F;images&#x2F;banner3.jpg&quot;  &#125;,  &#123;    &quot;id&quot;: &quot;4&quot;,    &quot;imgUrl&quot;: &quot;&#x2F;images&#x2F;banner4.jpg&quot;  &#125;]<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>mock 目录新建 <code>floors.json</code> （直接拷贝代码）</p><pre class="line-numbers language-json" data-language="json"><code class="language-json">[  &#123;    &quot;id&quot;: &quot;001&quot;,    &quot;name&quot;: &quot;家用电器&quot;,    &quot;keywords&quot;: [      &quot;节能补贴&quot;,      &quot;4K电视&quot;,      &quot;空气净化器&quot;,      &quot;IH电饭煲&quot;,      &quot;滚筒洗衣机&quot;,      &quot;电热水器&quot;    ],    &quot;imgUrl&quot;: &quot;&#x2F;images&#x2F;floor-1-1.png&quot;,    &quot;navList&quot;: [      &#123;        &quot;url&quot;: &quot;#&quot;,        &quot;text&quot;: &quot;热门&quot;      &#125;,      &#123;        &quot;url&quot;: &quot;#&quot;,        &quot;text&quot;: &quot;大家电&quot;      &#125;,      &#123;        &quot;url&quot;: &quot;#&quot;,        &quot;text&quot;: &quot;生活电器&quot;      &#125;,      &#123;        &quot;url&quot;: &quot;#&quot;,        &quot;text&quot;: &quot;厨房电器&quot;      &#125;,      &#123;        &quot;url&quot;: &quot;#&quot;,        &quot;text&quot;: &quot;应季电器&quot;      &#125;,      &#123;        &quot;url&quot;: &quot;#&quot;,        &quot;text&quot;: &quot;空气&#x2F;净水&quot;      &#125;,      &#123;        &quot;url&quot;: &quot;#&quot;,        &quot;text&quot;: &quot;高端电器&quot;      &#125;    ],    &quot;carouselList&quot;: [      &#123;        &quot;id&quot;: &quot;0011&quot;,        &quot;imgUrl&quot;: &quot;&#x2F;images&#x2F;floor-1-b01.png&quot;      &#125;,      &#123;        &quot;id&quot;: &quot;0012&quot;,        &quot;imgUrl&quot;: &quot;&#x2F;images&#x2F;floor-1-b02.png&quot;      &#125;,      &#123;        &quot;id&quot;: &quot;0013&quot;,        &quot;imgUrl&quot;: &quot;&#x2F;images&#x2F;floor-1-b03.png&quot;      &#125;    ],    &quot;recommendList&quot;: [      &quot;&#x2F;images&#x2F;floor-1-2.png&quot;,      &quot;&#x2F;images&#x2F;floor-1-3.png&quot;,      &quot;&#x2F;images&#x2F;floor-1-5.png&quot;,      &quot;&#x2F;images&#x2F;floor-1-6.png&quot;    ],    &quot;bigImg&quot;: &quot;&#x2F;images&#x2F;floor-1-4.png&quot;  &#125;,  &#123;    &quot;id&quot;: &quot;002&quot;,    &quot;name&quot;: &quot;手机通讯&quot;,    &quot;keywords&quot;: [      &quot;节能补贴2&quot;,      &quot;4K电视2&quot;,      &quot;空气净化器2&quot;,      &quot;IH电饭煲2&quot;,      &quot;滚筒洗衣机2&quot;,      &quot;电热水器2&quot;    ],    &quot;imgUrl&quot;: &quot;&#x2F;images&#x2F;floor-1-1.png&quot;,    &quot;navList&quot;: [      &#123;        &quot;url&quot;: &quot;#&quot;,        &quot;text&quot;: &quot;热门2&quot;      &#125;,      &#123;        &quot;url&quot;: &quot;#&quot;,        &quot;text&quot;: &quot;大家电2&quot;      &#125;,      &#123;        &quot;url&quot;: &quot;#&quot;,        &quot;text&quot;: &quot;生活电器2&quot;      &#125;,      &#123;        &quot;url&quot;: &quot;#&quot;,        &quot;text&quot;: &quot;厨房电器2&quot;      &#125;,      &#123;        &quot;url&quot;: &quot;#&quot;,        &quot;text&quot;: &quot;应季电器2&quot;      &#125;,      &#123;        &quot;url&quot;: &quot;#&quot;,        &quot;text&quot;: &quot;空气&#x2F;净水2&quot;      &#125;,      &#123;        &quot;url&quot;: &quot;#&quot;,        &quot;text&quot;: &quot;高端电器2&quot;      &#125;    ],    &quot;carouselList&quot;: [      &#123;        &quot;id&quot;: &quot;0011&quot;,        &quot;imgUrl&quot;: &quot;&#x2F;images&#x2F;floor-1-b01.png&quot;      &#125;,      &#123;        &quot;id&quot;: &quot;0012&quot;,        &quot;imgUrl&quot;: &quot;&#x2F;images&#x2F;floor-1-b02.png&quot;      &#125;,      &#123;        &quot;id&quot;: &quot;0013&quot;,        &quot;imgUrl&quot;: &quot;&#x2F;images&#x2F;floor-1-b03.png&quot;      &#125;    ],    &quot;recommendList&quot;: [      &quot;&#x2F;images&#x2F;floor-1-2.png&quot;,      &quot;&#x2F;images&#x2F;floor-1-3.png&quot;,      &quot;&#x2F;images&#x2F;floor-1-5.png&quot;,      &quot;&#x2F;images&#x2F;floor-1-6.png&quot;    ],    &quot;bigImg&quot;: &quot;&#x2F;images&#x2F;floor-1-4.png&quot;  &#125;]<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>mock 目录新建 <code>index.js</code></p><pre class="line-numbers language-js" data-language="js"><code class="language-js"><span class="token comment">// 引入 Mock</span><span class="token keyword">import</span> Mock <span class="token keyword">from</span> <span class="token string">'mockjs'</span><span class="token comment">// 引入模版数据</span><span class="token keyword">import</span> banners <span class="token keyword">from</span> <span class="token string">'./banners.json'</span><span class="token keyword">import</span> floors <span class="token keyword">from</span> <span class="token string">'./floors.json'</span><span class="token comment">// 根据指定的地址生成随机的数据</span>Mock<span class="token punctuation">.</span><span class="token function">mock</span><span class="token punctuation">(</span><span class="token string">'/mock/banners'</span><span class="token punctuation">,</span> <span class="token punctuation">&#123;</span>  code<span class="token operator">:</span> <span class="token number">200</span><span class="token punctuation">,</span>  message<span class="token operator">:</span> <span class="token string">'成功'</span><span class="token punctuation">,</span>  data<span class="token operator">:</span> banners<span class="token punctuation">&#125;</span><span class="token punctuation">)</span>Mock<span class="token punctuation">.</span><span class="token function">mock</span><span class="token punctuation">(</span><span class="token string">'/mock/floors'</span><span class="token punctuation">,</span> <span class="token punctuation">&#123;</span>  code<span class="token operator">:</span> <span class="token number">200</span><span class="token punctuation">,</span>  message<span class="token operator">:</span> <span class="token string">'成功'</span><span class="token punctuation">,</span>  data<span class="token operator">:</span> floors<span class="token punctuation">&#125;</span><span class="token punctuation">)</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>复制一份 <code>api/ajax.js</code> 改名 <code>ajaxMock.js</code></p><p>把其中根路径（第11行）<code>baseURL:'/api'</code> 改成 <code>baseURL:'/mock'</code></p><p><code>api/index.js</code> 引入 ajaxMock</p><pre class="line-numbers language-js" data-language="js"><code class="language-js"><span class="token keyword">import</span> ajaxMock <span class="token keyword">from</span> <span class="token string">'./ajaxMock'</span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>末尾 加</p><pre class="line-numbers language-js" data-language="js"><code class="language-js"><span class="token comment">// 设置 mock 相关的接口函数</span><span class="token keyword">export</span> <span class="token keyword">const</span> <span class="token function-variable function">reqBanners</span> <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=></span> ajaxMock<span class="token punctuation">.</span><span class="token function">get</span><span class="token punctuation">(</span><span class="token string">'/mock/banners'</span><span class="token punctuation">)</span><span class="token keyword">export</span> <span class="token keyword">const</span> <span class="token function-variable function">reqFloors</span> <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=></span> ajaxMock<span class="token punctuation">.</span><span class="token function">get</span><span class="token punctuation">(</span><span class="token string">'/mock/floors'</span><span class="token punctuation">)</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span></span></code></pre><p><code>main.js</code> 加</p><pre class="line-numbers language-js" data-language="js"><code class="language-js"><span class="token keyword">import</span> <span class="token string">"./mock"</span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>Home 组件引入测试</p><pre class="line-numbers language-js" data-language="js"><code class="language-js"><span class="token keyword">import</span> <span class="token punctuation">&#123;</span>    reqBanners<span class="token punctuation">,</span>    reqFloors  <span class="token punctuation">&#125;</span> <span class="token keyword">from</span> <span class="token string">'@/api'</span> <span class="token keyword">async</span> <span class="token function">mounted</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>      <span class="token keyword">const</span> r1 <span class="token operator">=</span> <span class="token keyword">await</span> <span class="token function">reqBanners</span><span class="token punctuation">(</span><span class="token punctuation">)</span>      <span class="token keyword">const</span> r2 <span class="token operator">=</span> <span class="token keyword">await</span> <span class="token function">reqFloors</span><span class="token punctuation">(</span><span class="token punctuation">)</span>      console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>r1<span class="token punctuation">,</span> r2<span class="token punctuation">)</span>    <span class="token punctuation">&#125;</span><span class="token punctuation">,</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h2><span id="p31-mock-xiang-guan-shu-ju-jia-ru-store-zhong">31 mock相关数据加入 store 中</span><a href="#p31-mock-xiang-guan-shu-ju-jia-ru-store-zhong" class="header-anchor">#</a></h2><p><code>store/modules/home.js</code></p><p>修改引入</p><pre class="line-numbers language-js" data-language="js"><code class="language-js"><span class="token keyword">import</span> <span class="token punctuation">&#123;</span>  reqBaseCategoryList<span class="token punctuation">,</span>  reqBanners<span class="token punctuation">,</span>  reqFloors<span class="token punctuation">&#125;</span> <span class="token keyword">from</span> <span class="token string">'@/api'</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>state 加入</p><pre class="line-numbers language-js" data-language="js"><code class="language-js"><span class="token comment">// 大轮播图数据</span>banners<span class="token operator">:</span> <span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">,</span><span class="token comment">// 楼层数据</span>floors<span class="token operator">:</span> <span class="token punctuation">[</span><span class="token punctuation">]</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span></span></code></pre><p>mutations 加入</p><pre class="line-numbers language-js" data-language="js"><code class="language-js"><span class="token comment">// 直接修改大轮播图的数据</span><span class="token constant">RECEIVE_BANNERS</span><span class="token punctuation">(</span><span class="token parameter">state<span class="token punctuation">,</span> banners</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>  state<span class="token punctuation">.</span>banners <span class="token operator">=</span> banners<span class="token punctuation">&#125;</span><span class="token punctuation">,</span><span class="token comment">// 直接修改楼层的数据</span><span class="token constant">RECEIVE_FLOORS</span><span class="token punctuation">(</span><span class="token parameter">state<span class="token punctuation">,</span> floors</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>  state<span class="token punctuation">.</span>floors <span class="token operator">=</span> floors<span class="token punctuation">&#125;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>actions 加入</p><pre class="line-numbers language-js" data-language="js"><code class="language-js"><span class="token comment">// 异步获取大轮播图的数据</span><span class="token keyword">async</span> <span class="token function">getBanners</span> <span class="token punctuation">(</span><span class="token parameter"><span class="token punctuation">&#123;</span> commit <span class="token punctuation">&#125;</span></span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>  <span class="token keyword">const</span> result <span class="token operator">=</span> <span class="token keyword">await</span> <span class="token function">reqBanners</span><span class="token punctuation">(</span><span class="token punctuation">)</span>  <span class="token keyword">if</span> <span class="token punctuation">(</span>result<span class="token punctuation">.</span>code <span class="token operator">===</span> <span class="token number">200</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>    <span class="token function">commit</span><span class="token punctuation">(</span><span class="token string">'RECEIVE_BANNERS'</span><span class="token punctuation">,</span> result<span class="token punctuation">.</span>data<span class="token punctuation">)</span>  <span class="token punctuation">&#125;</span><span class="token punctuation">&#125;</span><span class="token punctuation">,</span><span class="token comment">// 异步获取楼层的数据</span><span class="token keyword">async</span> <span class="token function">getFloors</span> <span class="token punctuation">(</span><span class="token parameter"><span class="token punctuation">&#123;</span> commit <span class="token punctuation">&#125;</span></span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>  <span class="token keyword">const</span> result <span class="token operator">=</span> <span class="token keyword">await</span> <span class="token function">reqFloors</span><span class="token punctuation">(</span><span class="token punctuation">)</span>  <span class="token keyword">if</span> <span class="token punctuation">(</span>result<span class="token punctuation">.</span>code <span class="token operator">===</span> <span class="token number">200</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>    <span class="token function">commit</span><span class="token punctuation">(</span><span class="token string">'RECEIVE_FLOORS'</span><span class="token punctuation">,</span> result<span class="token punctuation">.</span>data<span class="token punctuation">)</span>  <span class="token punctuation">&#125;</span><span class="token punctuation">&#125;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>Home 组件引入测试</p><p>删除前面的</p><pre class="line-numbers language-js" data-language="js"><code class="language-js"><span class="token keyword">import</span> <span class="token punctuation">&#123;</span>    reqBanners<span class="token punctuation">,</span>    reqFloors  <span class="token punctuation">&#125;</span> <span class="token keyword">from</span> <span class="token string">'@/api'</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span></span></code></pre><p>修改</p><pre class="line-numbers language-js" data-language="js"><code class="language-js"><span class="token keyword">async</span> <span class="token function">mounted</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>  <span class="token keyword">this</span><span class="token punctuation">.</span>$store<span class="token punctuation">.</span><span class="token function">dispatch</span><span class="token punctuation">(</span><span class="token string">'getBanners'</span><span class="token punctuation">)</span>  <span class="token keyword">this</span><span class="token punctuation">.</span>$store<span class="token punctuation">.</span><span class="token function">dispatch</span><span class="token punctuation">(</span><span class="token string">'getFloors'</span><span class="token punctuation">)</span><span class="token punctuation">&#125;</span><span class="token punctuation">,</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span></span></code></pre><p>Home-&gt;ListContainer 组件</p><pre class="line-numbers language-js" data-language="js"><code class="language-js"><span class="token keyword">import</span> <span class="token punctuation">&#123;</span> mapState <span class="token punctuation">&#125;</span> <span class="token keyword">from</span> <span class="token string">'vuex'</span><span class="token keyword">export</span> <span class="token keyword">default</span> <span class="token punctuation">&#123;</span>  name<span class="token operator">:</span> <span class="token string">'ListContainer'</span><span class="token punctuation">,</span>  computed<span class="token operator">:</span> <span class="token punctuation">&#123;</span>    <span class="token operator">...</span><span class="token function">mapState</span><span class="token punctuation">(</span><span class="token punctuation">&#123;</span>      <span class="token function-variable function">banners</span><span class="token operator">:</span><span class="token parameter">state</span><span class="token operator">=></span>state<span class="token punctuation">.</span>home<span class="token punctuation">.</span>banners    <span class="token punctuation">&#125;</span><span class="token punctuation">)</span>  <span class="token punctuation">&#125;</span><span class="token punctuation">&#125;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h2><span id="p32-swiper-shi-xian-lun-bo-tu">32 Swiper 实现轮播图</span><a href="#p32-swiper-shi-xian-lun-bo-tu" class="header-anchor">#</a></h2><p>安装 Swiper <code>npm install swiper@5.4.2</code></p><p>ListContainer 轮播图 第5行</p><pre class="line-numbers language-html" data-language="html"><code class="language-html"><span class="token comment">&lt;!--banner轮播--></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>swiper-container<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>swiper-wrapper<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>swiper-slide<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>      <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>img</span> <span class="token attr-name">src</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>./images/banner1.jpg<span class="token punctuation">"</span></span> <span class="token attr-name">alt</span> <span class="token punctuation">/></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>swiper-slide<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>      <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>img</span> <span class="token attr-name">src</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>./images/banner2.jpg<span class="token punctuation">"</span></span> <span class="token attr-name">alt</span> <span class="token punctuation">/></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>swiper-slide<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>      <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>img</span> <span class="token attr-name">src</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>./images/banner3.jpg<span class="token punctuation">"</span></span> <span class="token attr-name">alt</span> <span class="token punctuation">/></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>swiper-slide<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>      <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>img</span> <span class="token attr-name">src</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>./images/banner4.jpg<span class="token punctuation">"</span></span> <span class="token attr-name">alt</span> <span class="token punctuation">/></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">></span></span>  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">></span></span>  <span class="token comment">&lt;!-- 如果需要分页器 --></span>  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>swiper-pagination<span class="token punctuation">"</span></span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">></span></span>  <span class="token comment">&lt;!-- 如果需要导航按钮 --></span>  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>swiper-button-prev<span class="token punctuation">"</span></span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">></span></span>  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>swiper-button-next<span class="token punctuation">"</span></span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">></span></span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>115行</p><pre class="line-numbers language-js" data-language="js"><code class="language-js"><span class="token comment">// 引入swiper对象</span><span class="token keyword">import</span> Swiper <span class="token keyword">from</span> <span class="token string">'swiper'</span><span class="token comment">// 引入swiper的样式</span><span class="token keyword">import</span> <span class="token string">'swiper/css/swiper.css'</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span></span></code></pre><p>126行</p><pre class="line-numbers language-js" data-language="js"><code class="language-js"><span class="token punctuation">&#125;</span><span class="token punctuation">,</span><span class="token comment">// 当前组件渲染完毕的生命周期回调</span><span class="token function">mounted</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>  <span class="token keyword">var</span> mySwiper <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Swiper</span><span class="token punctuation">(</span><span class="token string">'.swiper-container'</span><span class="token punctuation">,</span> <span class="token punctuation">&#123;</span>    loop<span class="token operator">:</span> <span class="token boolean">true</span><span class="token punctuation">,</span> <span class="token comment">// 循环模式选项</span>    <span class="token comment">// 如果需要分页器</span>    pagination<span class="token operator">:</span> <span class="token punctuation">&#123;</span>      el<span class="token operator">:</span> <span class="token string">'.swiper-pagination'</span><span class="token punctuation">,</span>    <span class="token punctuation">&#125;</span><span class="token punctuation">,</span>    <span class="token comment">// 如果需要前进后退按钮</span>    navigation<span class="token operator">:</span> <span class="token punctuation">&#123;</span>      nextEl<span class="token operator">:</span> <span class="token string">'.swiper-button-next'</span><span class="token punctuation">,</span>      prevEl<span class="token operator">:</span> <span class="token string">'.swiper-button-prev'</span><span class="token punctuation">,</span>    <span class="token punctuation">&#125;</span>  <span class="token punctuation">&#125;</span><span class="token punctuation">)</span><span class="token punctuation">&#125;</span><span class="token punctuation">,</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>实现轮播图效果</p><h1><span id="9-yue-21-ri-day-3">9月21日（day 3）</span><a href="#9-yue-21-ri-day-3" class="header-anchor">#</a></h1><h2><span id="p33-xiang-mu-you-hua">33 项目优化</span><a href="#p33-xiang-mu-you-hua" class="header-anchor">#</a></h2><p>store/modules/home.js 20行</p><pre class="line-numbers language-js" data-language="js"><code class="language-js"><span class="token constant">RECEIVE_BASE_CATEGORY_LIST</span><span class="token punctuation">(</span><span class="token parameter">state<span class="token punctuation">,</span> baseCategoryList</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>  state<span class="token punctuation">.</span>baseCategoryList <span class="token operator">=</span> baseCategoryList<span class="token punctuation">.</span><span class="token function">splice</span><span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">,</span> baseCategoryList<span class="token punctuation">.</span>length <span class="token operator">-</span> <span class="token number">2</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span class="token punctuation">,</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span></span></code></pre><p>ListContainer <code>  import 'swiper/css/swiper.css'</code> 去掉，改为在 <code>main.js</code> 中引入</p><h2><span id="p34-lun-bo-tu-yu-shu-ju-jia-zai-yu-xuan-ran-swiper-dui-xiang-chuang-jian-shi-ji">34 轮播图与数据加载与渲染，Swiper对象创建时机</span><a href="#p34-lun-bo-tu-yu-shu-ju-jia-zai-yu-xuan-ran-swiper-dui-xiang-chuang-jian-shi-ji" class="header-anchor">#</a></h2><p>public/image 里面要有轮播使用的图</p><p>ListContainer 5行</p><pre class="line-numbers language-html" data-language="html"><code class="language-html"><span class="token comment">&lt;!--banner轮播--></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>swiper-container<span class="token punctuation">"</span></span> <span class="token attr-name">ref</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>sw<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>swiper-wrapper<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>swiper-slide<span class="token punctuation">"</span></span> <span class="token attr-name">v-for</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>(carousel) in banners<span class="token punctuation">"</span></span> <span class="token attr-name">:key</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>carousel.id<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>      <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>img</span> <span class="token attr-name">:src</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>carousel.imgUrl<span class="token punctuation">"</span></span> <span class="token attr-name">alt</span> <span class="token punctuation">/></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">></span></span>  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">></span></span>  <span class="token comment">&lt;!-- 如果需要分页器 --></span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>script部分更新为</p><pre class="line-numbers language-js" data-language="js"><code class="language-js">  computed<span class="token operator">:</span> <span class="token punctuation">&#123;</span>    <span class="token operator">...</span><span class="token function">mapState</span><span class="token punctuation">(</span><span class="token punctuation">&#123;</span>      <span class="token function-variable function">banners</span><span class="token operator">:</span> <span class="token parameter">state</span> <span class="token operator">=></span> state<span class="token punctuation">.</span>home<span class="token punctuation">.</span>banners    <span class="token punctuation">&#125;</span><span class="token punctuation">)</span>  <span class="token punctuation">&#125;</span><span class="token punctuation">,</span>  watch<span class="token operator">:</span> <span class="token punctuation">&#123;</span>    <span class="token function">banners</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>      <span class="token keyword">this</span><span class="token punctuation">.</span><span class="token function">$nextTick</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=></span> <span class="token punctuation">&#123;</span>        <span class="token keyword">var</span> mySwiper <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Swiper</span><span class="token punctuation">(</span><span class="token string">'.swiper-container'</span><span class="token punctuation">,</span> <span class="token punctuation">&#123;</span>          loop<span class="token operator">:</span> <span class="token boolean">true</span><span class="token punctuation">,</span> <span class="token comment">// 循环模式选项</span>          <span class="token comment">// 如果需要分页器</span>          pagination<span class="token operator">:</span> <span class="token punctuation">&#123;</span>            el<span class="token operator">:</span> <span class="token string">'.swiper-pagination'</span><span class="token punctuation">,</span>          <span class="token punctuation">&#125;</span><span class="token punctuation">,</span>          <span class="token comment">// 如果需要前进后退按钮</span>          navigation<span class="token operator">:</span> <span class="token punctuation">&#123;</span>            nextEl<span class="token operator">:</span> <span class="token string">'.swiper-button-next'</span><span class="token punctuation">,</span>            prevEl<span class="token operator">:</span> <span class="token string">'.swiper-button-prev'</span><span class="token punctuation">,</span>          <span class="token punctuation">&#125;</span>        <span class="token punctuation">&#125;</span><span class="token punctuation">)</span>      <span class="token punctuation">&#125;</span><span class="token punctuation">)</span>    <span class="token punctuation">&#125;</span>  <span class="token punctuation">&#125;</span><span class="token punctuation">&#125;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>这里应该可以看到轮播图效果（banner）</p><h2><span id="p35-floor-shi-tu-sheng-cheng">35 Floor 视图生成</span><a href="#p35-floor-shi-tu-sheng-cheng" class="header-anchor">#</a></h2><p>Home 组件中</p><pre class="line-numbers language-js" data-language="js"><code class="language-js"><span class="token comment">// 引入辅助函数</span><span class="token keyword">import</span> <span class="token punctuation">&#123;</span>  mapState<span class="token punctuation">&#125;</span> <span class="token keyword">from</span> <span class="token string">'vuex'</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span></span></code></pre><pre class="line-numbers language-js" data-language="js"><code class="language-js"><span class="token comment">// 获取数据</span>computed<span class="token operator">:</span> <span class="token punctuation">&#123;</span>  <span class="token operator">...</span><span class="token function">mapState</span><span class="token punctuation">(</span><span class="token punctuation">&#123;</span>    <span class="token function-variable function">floors</span><span class="token operator">:</span> <span class="token parameter">state</span> <span class="token operator">=></span> state<span class="token punctuation">.</span>home<span class="token punctuation">.</span>floors  <span class="token punctuation">&#125;</span><span class="token punctuation">)</span><span class="token punctuation">&#125;</span><span class="token punctuation">,</span><span class="token comment">// 分发 actions</span><span class="token keyword">async</span> <span class="token function">mounted</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>  <span class="token keyword">this</span><span class="token punctuation">.</span>$store<span class="token punctuation">.</span><span class="token function">dispatch</span><span class="token punctuation">(</span><span class="token string">'getBanners'</span><span class="token punctuation">)</span>  <span class="token keyword">this</span><span class="token punctuation">.</span>$store<span class="token punctuation">.</span><span class="token function">dispatch</span><span class="token punctuation">(</span><span class="token string">'getFloors'</span><span class="token punctuation">)</span><span class="token punctuation">&#125;</span><span class="token punctuation">,</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>14行，删除一个留一个</p><pre class="line-numbers language-html" data-language="html"><code class="language-html"><span class="token comment">&lt;!-- 楼层 --></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>Floor</span> <span class="token attr-name">v-for</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>(floor) in floors<span class="token punctuation">"</span></span> <span class="token attr-name">:key</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>floor.id<span class="token punctuation">"</span></span> <span class="token attr-name">:floor</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>floor<span class="token punctuation">"</span></span> <span class="token punctuation">/></span></span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre><p>Floor中</p><pre class="line-numbers language-js" data-language="js"><code class="language-js"><span class="token comment">// 获取参数</span>props<span class="token operator">:</span> <span class="token punctuation">&#123;</span>  floor<span class="token operator">:</span> Object<span class="token punctuation">&#125;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span></span></code></pre><p>第6行修改</p><pre class="line-numbers language-html" data-language="html"><code class="language-html"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>h3</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>fl<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>&#123;&#123;floor.name&#125;&#125;<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>h3</span><span class="token punctuation">></span></span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>第8行修改</p><pre class="line-numbers language-html" data-language="html"><code class="language-html"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>ul</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>nav-tabs clearfix<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>li</span> <span class="token attr-name">:class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>&#123;active:index===0&#125;<span class="token punctuation">"</span></span> <span class="token attr-name">v-for</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>(nav,index) in floor.navList<span class="token punctuation">"</span></span> <span class="token attr-name">:key</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>index<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>a</span> <span class="token attr-name">href</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>javascript:;<span class="token punctuation">"</span></span> <span class="token attr-name">data-toggle</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>tab<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>&#123;&#123;nav.text&#125;&#125;<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>a</span><span class="token punctuation">></span></span>  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>li</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>ul</span><span class="token punctuation">></span></span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>第19行修改</p><pre class="line-numbers language-js" data-language="js"><code class="language-js"><span class="token operator">&lt;</span>ul <span class="token keyword">class</span><span class="token operator">=</span><span class="token string">"jd-list"</span><span class="token operator">></span>  <span class="token operator">&lt;</span>li v<span class="token operator">-</span><span class="token keyword">for</span><span class="token operator">=</span><span class="token string">"(keyword,index) in floor.keywords"</span> <span class="token operator">:</span>key<span class="token operator">=</span><span class="token string">"index"</span><span class="token operator">></span>    <span class="token punctuation">&#123;</span><span class="token punctuation">&#123;</span>keyword<span class="token punctuation">&#125;</span><span class="token punctuation">&#125;</span>  <span class="token operator">&lt;</span><span class="token operator">/</span>li<span class="token operator">></span><span class="token operator">&lt;</span><span class="token operator">/</span>ul<span class="token operator">></span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>第51行修改</p><pre class="line-numbers language-html" data-language="html"><code class="language-html"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>floor-conver-pit<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>      <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>img</span> <span class="token attr-name">:src</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>floor.recommendList[0]<span class="token punctuation">"</span></span> <span class="token punctuation">/></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>floor-conver-pit<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>      <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>img</span> <span class="token attr-name">:src</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>floor.recommendList[1]<span class="token punctuation">"</span></span> <span class="token punctuation">/></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">></span></span>  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">></span></span>  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>split center<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>img</span> <span class="token attr-name">:src</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>floor.bigImg<span class="token punctuation">"</span></span> <span class="token punctuation">/></span></span>  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">></span></span>  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>split<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>span</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>floor-x-line<span class="token punctuation">"</span></span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>span</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>floor-conver-pit<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>      <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>img</span> <span class="token attr-name">:src</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>floor.recommendList[2]<span class="token punctuation">"</span></span> <span class="token punctuation">/></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>floor-conver-pit<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>      <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>img</span> <span class="token attr-name">:src</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>floor.recommendList[3]<span class="token punctuation">"</span></span> <span class="token punctuation">/></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">></span></span>  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">></span></span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h2><span id="p36-lun-bo-tu-feng-zhuang-wei-gong-gong-zu-jian">36 轮播图封装为公共组件</span><a href="#p36-lun-bo-tu-feng-zhuang-wei-gong-gong-zu-jian" class="header-anchor">#</a></h2><p>在 components 新建 Carousel 新建 index.vue</p><pre class="line-numbers language-js" data-language="js"><code class="language-js"><span class="token operator">&lt;</span>template<span class="token operator">></span>  <span class="token operator">&lt;</span>div <span class="token keyword">class</span><span class="token operator">=</span><span class="token string">"swiper-container"</span> id<span class="token operator">=</span><span class="token string">"swL"</span> ref<span class="token operator">=</span><span class="token string">"sw"</span><span class="token operator">></span>    <span class="token operator">&lt;</span>div <span class="token keyword">class</span><span class="token operator">=</span><span class="token string">"swiper-wrapper"</span><span class="token operator">></span>      <span class="token operator">&lt;</span>div <span class="token keyword">class</span><span class="token operator">=</span><span class="token string">"swiper-slide"</span> v<span class="token operator">-</span><span class="token keyword">for</span><span class="token operator">=</span><span class="token string">"(carousel,index) in carouselList"</span> <span class="token operator">:</span>key<span class="token operator">=</span><span class="token string">"carousel.id"</span><span class="token operator">></span>        <span class="token operator">&lt;</span>img <span class="token operator">:</span>src<span class="token operator">=</span><span class="token string">"carousel.imgUrl"</span> alt <span class="token operator">/</span><span class="token operator">></span>      <span class="token operator">&lt;</span><span class="token operator">/</span>div<span class="token operator">></span>    <span class="token operator">&lt;</span><span class="token operator">/</span>div<span class="token operator">></span>    <span class="token operator">&lt;</span><span class="token operator">!</span><span class="token operator">--</span> 如果需要分页器 <span class="token operator">--</span><span class="token operator">></span>    <span class="token operator">&lt;</span>div <span class="token keyword">class</span><span class="token operator">=</span><span class="token string">"swiper-pagination"</span><span class="token operator">></span><span class="token operator">&lt;</span><span class="token operator">/</span>div<span class="token operator">></span>    <span class="token operator">&lt;</span><span class="token operator">!</span><span class="token operator">--</span> 如果需要导航按钮 <span class="token operator">--</span><span class="token operator">></span>    <span class="token operator">&lt;</span>div <span class="token keyword">class</span><span class="token operator">=</span><span class="token string">"swiper-button-prev"</span><span class="token operator">></span><span class="token operator">&lt;</span><span class="token operator">/</span>div<span class="token operator">></span>    <span class="token operator">&lt;</span>div <span class="token keyword">class</span><span class="token operator">=</span><span class="token string">"swiper-button-next"</span><span class="token operator">></span><span class="token operator">&lt;</span><span class="token operator">/</span>div<span class="token operator">></span>  <span class="token operator">&lt;</span><span class="token operator">/</span>div<span class="token operator">></span><span class="token operator">&lt;</span><span class="token operator">/</span>template<span class="token operator">></span><span class="token operator">&lt;</span>script<span class="token operator">></span><span class="token comment">// 引入swiper对象</span><span class="token keyword">import</span> Swiper <span class="token keyword">from</span> <span class="token string">'swiper'</span><span class="token keyword">export</span> <span class="token keyword">default</span> <span class="token punctuation">&#123;</span>  name<span class="token operator">:</span> <span class="token string">'Carousel'</span><span class="token punctuation">,</span>  props<span class="token operator">:</span><span class="token punctuation">&#123;</span>    carouselList<span class="token operator">:</span>Array  <span class="token punctuation">&#125;</span><span class="token punctuation">,</span>  watch<span class="token operator">:</span> <span class="token punctuation">&#123;</span>    <span class="token function">carouselList</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>      <span class="token comment">// 将回调延迟到下次 DOM 更新循环之后执行。在修改数据之后立即使用它，然后等待 DOM 更新。</span>      <span class="token keyword">this</span><span class="token punctuation">.</span><span class="token function">$nextTick</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=></span> <span class="token punctuation">&#123;</span>        <span class="token keyword">var</span> mySwiper <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Swiper</span><span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">.</span>$refs<span class="token punctuation">.</span>sw<span class="token punctuation">,</span> <span class="token punctuation">&#123;</span>          loop<span class="token operator">:</span> <span class="token boolean">true</span><span class="token punctuation">,</span> <span class="token comment">// 循环模式选项</span>          <span class="token comment">// 如果需要分页器</span>          pagination<span class="token operator">:</span> <span class="token punctuation">&#123;</span>            el<span class="token operator">:</span> <span class="token string">'.swiper-pagination'</span><span class="token punctuation">,</span>          <span class="token punctuation">&#125;</span><span class="token punctuation">,</span>          <span class="token comment">// 如果需要前进后退按钮</span>          navigation<span class="token operator">:</span> <span class="token punctuation">&#123;</span>            nextEl<span class="token operator">:</span> <span class="token string">'.swiper-button-next'</span><span class="token punctuation">,</span>            prevEl<span class="token operator">:</span> <span class="token string">'.swiper-button-prev'</span><span class="token punctuation">,</span>          <span class="token punctuation">&#125;</span><span class="token punctuation">,</span>        <span class="token punctuation">&#125;</span><span class="token punctuation">)</span>      <span class="token punctuation">&#125;</span><span class="token punctuation">)</span>    <span class="token punctuation">&#125;</span><span class="token punctuation">,</span>  <span class="token punctuation">&#125;</span><span class="token punctuation">,</span><span class="token punctuation">&#125;</span><span class="token operator">&lt;</span><span class="token operator">/</span>script<span class="token operator">></span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>在 main.js 注册</p><pre class="line-numbers language-js" data-language="js"><code class="language-js"><span class="token comment">// 引入Carousel组件---轮播图组件(ListContainer和Floor组件中使用)</span><span class="token keyword">import</span> Carousel <span class="token keyword">from</span> <span class="token string">'@/components/Carousel'</span><span class="token comment">// 参数1:组件的名字,参数2:组件对象</span>Vue<span class="token punctuation">.</span><span class="token function">component</span><span class="token punctuation">(</span><span class="token string">'Carousel'</span><span class="token punctuation">,</span>Carousel<span class="token punctuation">)</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>Floor 26行更新</p><pre class="line-numbers language-html" data-language="html"><code class="language-html"><span class="token comment">&lt;!-- 轮播图 --></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>floorBanner<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>   <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>Carousel</span> <span class="token attr-name">:carouselList</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>floor.carouselList<span class="token punctuation">"</span></span> <span class="token punctuation">/></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">></span></span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span></span></code></pre><p>ListContainer 4行</p><pre class="line-numbers language-html" data-language="html"><code class="language-html"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>center<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>  <span class="token comment">&lt;!--banner轮播--></span>  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>Carousel</span> <span class="token attr-name">:carouselList</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>banners<span class="token punctuation">"</span></span> <span class="token punctuation">/></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">></span></span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span></span></code></pre><p>清理 ListContainer 组件轮播图相关的数据</p><p>此时大轮播图可以，小轮播图不能轮播，接下去分析 🐛</p><h2><span id="p37-xiu-fu-lun-bo-tu-wen-ti">37 修复轮播图问题</span><a href="#p37-xiu-fu-lun-bo-tu-wen-ti" class="header-anchor">#</a></h2><p>Carousel 中 watch 修改为</p><pre class="line-numbers language-js" data-language="js"><code class="language-js">watch<span class="token operator">:</span> <span class="token punctuation">&#123;</span>  carouselList<span class="token operator">:</span> <span class="token punctuation">&#123;</span>    <span class="token comment">// 该回调会在监听开始被立即调用</span>    <span class="token function-variable function">handler</span><span class="token operator">:</span> <span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>      <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">.</span>carouselList<span class="token punctuation">.</span>length <span class="token operator">===</span> <span class="token number">0</span><span class="token punctuation">)</span> <span class="token keyword">return</span>      <span class="token keyword">this</span><span class="token punctuation">.</span><span class="token function">$nextTick</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=></span> <span class="token punctuation">&#123;</span>         <span class="token operator">...</span><span class="token punctuation">.</span>      <span class="token punctuation">&#125;</span><span class="token punctuation">)</span>    <span class="token punctuation">&#125;</span><span class="token punctuation">,</span>    immediate<span class="token operator">:</span> <span class="token boolean">true</span>  <span class="token punctuation">&#125;</span><span class="token punctuation">&#125;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h2><span id="p38-search-zu-jian">38 Search 组件</span><a href="#p38-search-zu-jian" class="header-anchor">#</a></h2><p>封装api接口函数 api/index.js 加</p><pre class="line-numbers language-js" data-language="js"><code class="language-js"><span class="token comment">// 获取商品信息数据对象</span><span class="token keyword">export</span> <span class="token keyword">const</span> <span class="token function-variable function">reqProductList</span> <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token parameter">searchParams</span><span class="token punctuation">)</span> <span class="token operator">=></span> ajax<span class="token punctuation">.</span><span class="token function">post</span><span class="token punctuation">(</span><span class="token string">'list'</span><span class="token punctuation">,</span> searchParams<span class="token punctuation">)</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre><p>去静态组件文件夹拿Search</p><p>封装Vuex modules/新建 search.js</p><pre class="line-numbers language-js" data-language="js"><code class="language-js"><span class="token comment">// 引入API接口函数</span><span class="token keyword">import</span> <span class="token punctuation">&#123;</span>  reqProductList<span class="token punctuation">&#125;</span> <span class="token keyword">from</span> <span class="token string">'@/api'</span><span class="token comment">// 管理Search组件中的数据</span><span class="token keyword">export</span> <span class="token keyword">default</span> <span class="token punctuation">&#123;</span>  state<span class="token operator">:</span> <span class="token punctuation">&#123;</span>    <span class="token comment">// 商品信息数据对象</span>    productList<span class="token operator">:</span> <span class="token punctuation">&#123;</span><span class="token punctuation">&#125;</span>  <span class="token punctuation">&#125;</span><span class="token punctuation">,</span>  mutations<span class="token operator">:</span> <span class="token punctuation">&#123;</span>    <span class="token comment">// 直接更新商品信息数据对象</span>    <span class="token constant">RECEIVE_PRODUCT_LIST</span><span class="token punctuation">(</span><span class="token parameter">state<span class="token punctuation">,</span> productList</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>      state<span class="token punctuation">.</span>productList <span class="token operator">=</span> productList    <span class="token punctuation">&#125;</span>  <span class="token punctuation">&#125;</span><span class="token punctuation">,</span>  actions<span class="token operator">:</span> <span class="token punctuation">&#123;</span>    <span class="token comment">// 获取商品信息数据对象</span>    <span class="token keyword">async</span> <span class="token function">getProductList</span><span class="token punctuation">(</span><span class="token parameter"><span class="token punctuation">&#123;</span>      commit    <span class="token punctuation">&#125;</span><span class="token punctuation">,</span> searchParams</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>      <span class="token keyword">const</span> result <span class="token operator">=</span> <span class="token keyword">await</span> <span class="token function">reqProductList</span><span class="token punctuation">(</span>searchParams<span class="token punctuation">)</span>      <span class="token keyword">if</span> <span class="token punctuation">(</span>result<span class="token punctuation">.</span>code <span class="token operator">===</span> <span class="token number">200</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>        <span class="token function">commit</span><span class="token punctuation">(</span><span class="token string">'RECEIVE_PRODUCT_LIST'</span><span class="token punctuation">,</span> result<span class="token punctuation">.</span>data<span class="token punctuation">)</span>      <span class="token punctuation">&#125;</span>    <span class="token punctuation">&#125;</span>  <span class="token punctuation">&#125;</span><span class="token punctuation">,</span>  getters<span class="token operator">:</span> <span class="token punctuation">&#123;</span>    <span class="token function">trademarkList</span><span class="token punctuation">(</span><span class="token parameter">state</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>      <span class="token keyword">return</span> state<span class="token punctuation">.</span>productList<span class="token punctuation">.</span>trademarkList <span class="token operator">||</span> <span class="token punctuation">[</span><span class="token punctuation">]</span>    <span class="token punctuation">&#125;</span><span class="token punctuation">,</span>    <span class="token function">attrsList</span><span class="token punctuation">(</span><span class="token parameter">state</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>      <span class="token keyword">return</span> state<span class="token punctuation">.</span>productList<span class="token punctuation">.</span>attrsList <span class="token operator">||</span> <span class="token punctuation">[</span><span class="token punctuation">]</span>    <span class="token punctuation">&#125;</span><span class="token punctuation">,</span>    <span class="token function">goodsList</span><span class="token punctuation">(</span><span class="token parameter">state</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>      <span class="token keyword">return</span> state<span class="token punctuation">.</span>productList<span class="token punctuation">.</span>goodsList <span class="token operator">||</span> <span class="token punctuation">[</span><span class="token punctuation">]</span>    <span class="token punctuation">&#125;</span>  <span class="token punctuation">&#125;</span><span class="token punctuation">&#125;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>更新 index.js</p><pre class="line-numbers language-js" data-language="js"><code class="language-js"><span class="token keyword">import</span> home <span class="token keyword">from</span> <span class="token string">'./home'</span><span class="token keyword">import</span> search <span class="token keyword">from</span> <span class="token string">'./search'</span><span class="token keyword">export</span> <span class="token keyword">default</span> <span class="token punctuation">&#123;</span>  home<span class="token punctuation">,</span>  search<span class="token punctuation">&#125;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>Search 去分发 Vuex</p><pre class="line-numbers language-js" data-language="js"><code class="language-js"><span class="token function">data</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>  <span class="token keyword">return</span> <span class="token punctuation">&#123;</span>    options<span class="token operator">:</span> <span class="token punctuation">&#123;</span><span class="token punctuation">&#125;</span>  <span class="token punctuation">&#125;</span><span class="token punctuation">&#125;</span><span class="token punctuation">,</span><span class="token function">mounted</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>  <span class="token comment">// 分发 actions</span>  <span class="token keyword">this</span><span class="token punctuation">.</span><span class="token function">getProductList</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">&#125;</span><span class="token punctuation">,</span>methods<span class="token operator">:</span> <span class="token punctuation">&#123;</span>  <span class="token comment">// 获取商品信息数据对象</span>  <span class="token function">getProductList</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>    <span class="token keyword">this</span><span class="token punctuation">.</span>$store<span class="token punctuation">.</span><span class="token function">dispatch</span><span class="token punctuation">(</span><span class="token string">'getProductList'</span><span class="token punctuation">,</span> <span class="token keyword">this</span><span class="token punctuation">.</span>options<span class="token punctuation">)</span>  <span class="token punctuation">&#125;</span><span class="token punctuation">&#125;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h2><span id="p39-bian-li-shang-pin-fen-lei-xin-xi">39 遍历商品分类信息</span><a href="#p39-bian-li-shang-pin-fen-lei-xin-xi" class="header-anchor">#</a></h2><p>Search 下面 SearchSelector 前面部分修改</p><pre class="line-numbers language-js" data-language="js"><code class="language-js"><span class="token operator">&lt;</span>div <span class="token keyword">class</span><span class="token operator">=</span><span class="token string">"clearfix selector"</span><span class="token operator">></span>  <span class="token operator">&lt;</span>div <span class="token keyword">class</span><span class="token operator">=</span><span class="token string">"type-wrap logo"</span><span class="token operator">></span>    <span class="token operator">&lt;</span>div <span class="token keyword">class</span><span class="token operator">=</span><span class="token string">"fl key brand"</span><span class="token operator">></span>品牌<span class="token operator">&lt;</span><span class="token operator">/</span>div<span class="token operator">></span>    <span class="token operator">&lt;</span>div <span class="token keyword">class</span><span class="token operator">=</span><span class="token string">"value logos"</span><span class="token operator">></span>      <span class="token operator">&lt;</span>ul <span class="token keyword">class</span><span class="token operator">=</span><span class="token string">"logo-list"</span><span class="token operator">></span>        <span class="token operator">&lt;</span>li v<span class="token operator">-</span><span class="token keyword">for</span><span class="token operator">=</span><span class="token string">"(tm) in trademarkList"</span> <span class="token operator">:</span>key<span class="token operator">=</span><span class="token string">"tm.tmId"</span><span class="token operator">></span><span class="token punctuation">&#123;</span><span class="token punctuation">&#123;</span>tm<span class="token punctuation">.</span>tmName<span class="token punctuation">&#125;</span><span class="token punctuation">&#125;</span><span class="token operator">&lt;</span><span class="token operator">/</span>li<span class="token operator">></span>      <span class="token operator">&lt;</span><span class="token operator">/</span>ul<span class="token operator">></span>    <span class="token operator">&lt;</span><span class="token operator">/</span>div<span class="token operator">></span>  <span class="token operator">&lt;</span><span class="token operator">/</span>div<span class="token operator">></span>  <span class="token operator">&lt;</span>div <span class="token keyword">class</span><span class="token operator">=</span><span class="token string">"type-wrap"</span> v<span class="token operator">-</span><span class="token keyword">for</span><span class="token operator">=</span><span class="token string">"(attr) in attrsList"</span> <span class="token operator">:</span>key<span class="token operator">=</span><span class="token string">"attr.attrId"</span><span class="token operator">></span>    <span class="token operator">&lt;</span>div <span class="token keyword">class</span><span class="token operator">=</span><span class="token string">"fl key"</span><span class="token operator">></span><span class="token punctuation">&#123;</span><span class="token punctuation">&#123;</span>attr<span class="token punctuation">.</span>attrName<span class="token punctuation">&#125;</span><span class="token punctuation">&#125;</span><span class="token operator">&lt;</span><span class="token operator">/</span>div<span class="token operator">></span>    <span class="token operator">&lt;</span>div <span class="token keyword">class</span><span class="token operator">=</span><span class="token string">"fl value"</span><span class="token operator">></span>      <span class="token operator">&lt;</span>ul <span class="token keyword">class</span><span class="token operator">=</span><span class="token string">"type-list"</span><span class="token operator">></span>        <span class="token operator">&lt;</span>li v<span class="token operator">-</span><span class="token keyword">for</span><span class="token operator">=</span><span class="token string">"(value,index) in attr.attrValueList"</span> <span class="token operator">:</span>key<span class="token operator">=</span><span class="token string">"index"</span><span class="token operator">></span>          <span class="token operator">&lt;</span>a<span class="token operator">></span><span class="token punctuation">&#123;</span><span class="token punctuation">&#123;</span>value<span class="token punctuation">&#125;</span><span class="token punctuation">&#125;</span><span class="token operator">&lt;</span><span class="token operator">/</span>a<span class="token operator">></span>        <span class="token operator">&lt;</span><span class="token operator">/</span>li<span class="token operator">></span>      <span class="token operator">&lt;</span><span class="token operator">/</span>ul<span class="token operator">></span>    <span class="token operator">&lt;</span><span class="token operator">/</span>div<span class="token operator">></span>    <span class="token operator">&lt;</span>div <span class="token keyword">class</span><span class="token operator">=</span><span class="token string">"fl ext"</span><span class="token operator">></span><span class="token operator">&lt;</span><span class="token operator">/</span>div<span class="token operator">></span>  <span class="token operator">&lt;</span><span class="token operator">/</span>div<span class="token operator">></span><span class="token operator">&lt;</span><span class="token operator">/</span>div<span class="token operator">></span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>script 部分修改</p><pre class="line-numbers language-js" data-language="js"><code class="language-js"><span class="token comment">// 引入辅助函数</span><span class="token keyword">import</span> <span class="token punctuation">&#123;</span>  mapGetters<span class="token punctuation">&#125;</span> <span class="token keyword">from</span> <span class="token string">'vuex'</span><span class="token keyword">export</span> <span class="token keyword">default</span> <span class="token punctuation">&#123;</span>  name<span class="token operator">:</span> <span class="token string">'SearchSelector'</span><span class="token punctuation">,</span>  <span class="token comment">// 获取数据</span>  computed<span class="token operator">:</span> <span class="token punctuation">&#123;</span>    <span class="token operator">...</span><span class="token function">mapGetters</span><span class="token punctuation">(</span><span class="token punctuation">[</span><span class="token string">'trademarkList'</span><span class="token punctuation">,</span> <span class="token string">'attrsList'</span><span class="token punctuation">]</span><span class="token punctuation">)</span>  <span class="token punctuation">&#125;</span><span class="token punctuation">,</span><span class="token punctuation">&#125;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h1><span id="9-yue-22-ri-day-4">9月22日（day 4）</span><a href="#9-yue-22-ri-day-4" class="header-anchor">#</a></h1><h2><span id="p40-search-zu-jian-xian-shi-shang-pin-xin-xi">40 Search 组件显示商品信息</span><a href="#p40-search-zu-jian-xian-shi-shang-pin-xin-xi" class="header-anchor">#</a></h2><p>Search 更新</p><pre class="line-numbers language-js" data-language="js"><code class="language-js"><span class="token keyword">import</span> <span class="token punctuation">&#123;</span>  mapState<span class="token punctuation">,</span>  mapGetters<span class="token punctuation">&#125;</span> <span class="token keyword">from</span> <span class="token string">'vuex'</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span></span></code></pre><pre class="line-numbers language-js" data-language="js"><code class="language-js">computed<span class="token operator">:</span> <span class="token punctuation">&#123;</span>  <span class="token comment">// 获取商品信息数据对象</span>  <span class="token operator">...</span><span class="token function">mapState</span><span class="token punctuation">(</span><span class="token punctuation">&#123;</span>    <span class="token function-variable function">productList</span><span class="token operator">:</span> <span class="token parameter">state</span> <span class="token operator">=></span> state<span class="token punctuation">.</span>search<span class="token punctuation">.</span>productList  <span class="token punctuation">&#125;</span><span class="token punctuation">)</span><span class="token punctuation">,</span>  <span class="token comment">// 获取当前这一页的商品信息数据</span>  <span class="token operator">...</span><span class="token function">mapGetters</span><span class="token punctuation">(</span><span class="token punctuation">[</span><span class="token string">'goodsList'</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">&#125;</span><span class="token punctuation">,</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p><code>&lt;li class=&quot;yui3-u-1-5&quot;&gt;</code> 删除留一个，进行以下更新</p><pre class="line-numbers language-html" data-language="html"><code class="language-html"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>goods-list<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>ul</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>yui3-g<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>              <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>li</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>yui3-u-1-5<span class="token punctuation">"</span></span> <span class="token attr-name">v-for</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>(goods, index) in goodsList<span class="token punctuation">"</span></span> <span class="token attr-name">:key</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>goods.id<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>                <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>list-wrap<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>                  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>p-img<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>                    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>a</span> <span class="token attr-name">href</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>item.html<span class="token punctuation">"</span></span> <span class="token attr-name">target</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>_blank<span class="token punctuation">"</span></span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>img</span> <span class="token attr-name">:src</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>goods.defaultImg<span class="token punctuation">"</span></span> <span class="token punctuation">/></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>a</span><span class="token punctuation">></span></span>                  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">></span></span>                  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>price<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>                    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>strong</span><span class="token punctuation">></span></span>                      <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>em</span><span class="token punctuation">></span></span>¥<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>em</span><span class="token punctuation">></span></span>                      <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>i</span><span class="token punctuation">></span></span>&#123;&#123;goods.price&#125;&#125;<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>i</span><span class="token punctuation">></span></span>                    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>strong</span><span class="token punctuation">></span></span>                  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">></span></span>                  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>attr<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>                    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>a</span> <span class="token attr-name">target</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>_blank<span class="token punctuation">"</span></span> <span class="token attr-name">href</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>item.html<span class="token punctuation">"</span></span> <span class="token attr-name">:title</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>goods.title<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>&#123;&#123;goods.title&#125;&#125;<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>a</span><span class="token punctuation">></span></span>                  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">></span></span>                  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>commit<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>                    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>i</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>command<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>已有<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>span</span><span class="token punctuation">></span></span>2000<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>span</span><span class="token punctuation">></span></span>人评价<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>i</span><span class="token punctuation">></span></span>                  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">></span></span>                  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>operate<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>                    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>a</span> <span class="token attr-name">href</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>success-cart.html<span class="token punctuation">"</span></span> <span class="token attr-name">target</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>_blank<span class="token punctuation">"</span></span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>sui-btn btn-bordered btn-danger<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>加入购物车<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>a</span><span class="token punctuation">></span></span>                    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>a</span> <span class="token attr-name">href</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>javascript:void(0);<span class="token punctuation">"</span></span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>sui-btn btn-bordered<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>收藏<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>a</span><span class="token punctuation">></span></span>                  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">></span></span>                <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">></span></span>              <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>li</span><span class="token punctuation">></span></span>            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>ul</span><span class="token punctuation">></span></span>          <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">></span></span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h2><span id="p41-jie-jue-yi-ge-tiao-zhuan-bug">41 解决一个跳转bug</span><a href="#p41-jie-jue-yi-ge-tiao-zhuan-bug" class="header-anchor">#</a></h2><p>TypeNav 106行修改（路由跳转）</p><pre class="line-numbers language-js" data-language="js"><code class="language-js"><span class="token comment">// 路由跳转</span><span class="token comment">// 如果当前组件路由跳转的时候，地址栏有 params 参数，那么和 query 参数应该一起携带，如果没有，那么携带 query参数即可</span><span class="token keyword">const</span> <span class="token punctuation">&#123;</span>  path<span class="token punctuation">,</span>  params<span class="token punctuation">&#125;</span> <span class="token operator">=</span> <span class="token keyword">this</span><span class="token punctuation">.</span>$route<span class="token comment">// 判断当前的路径有没有 /search</span><span class="token keyword">if</span> <span class="token punctuation">(</span>path<span class="token punctuation">.</span><span class="token function">indexOf</span><span class="token punctuation">(</span><span class="token string">'/search'</span><span class="token punctuation">)</span> <span class="token operator">===</span> <span class="token number">0</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>  <span class="token keyword">this</span><span class="token punctuation">.</span>$router<span class="token punctuation">.</span><span class="token function">replace</span><span class="token punctuation">(</span><span class="token punctuation">&#123;</span>    path<span class="token punctuation">,</span>    query<span class="token punctuation">,</span>    params  <span class="token punctuation">&#125;</span><span class="token punctuation">)</span><span class="token punctuation">&#125;</span> <span class="token keyword">else</span> <span class="token punctuation">&#123;</span>  <span class="token keyword">this</span><span class="token punctuation">.</span>$router<span class="token punctuation">.</span><span class="token function">replace</span><span class="token punctuation">(</span><span class="token punctuation">&#123;</span>    path<span class="token operator">:</span> <span class="token string">'/search'</span><span class="token punctuation">,</span>    query  <span class="token punctuation">&#125;</span><span class="token punctuation">)</span><span class="token punctuation">&#125;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>知识点：</p><ul><li>路由信息对象 <code>route</code></li><li>字符串的<code>indexOf</code> 方法</li><li>路由的 <code>params</code> 和 <code>query</code> 传参方式</li><li>路由的编程式跳转 <code>push</code> <code>replace</code></li></ul><p>Header 更新 <code>toSearch</code></p><pre class="line-numbers language-js" data-language="js"><code class="language-js">  <span class="token function">toSearch</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>    <span class="token keyword">const</span> <span class="token punctuation">&#123;</span>      path<span class="token punctuation">,</span>      query    <span class="token punctuation">&#125;</span> <span class="token operator">=</span> <span class="token keyword">this</span><span class="token punctuation">.</span>$route    <span class="token comment">// 判断文本框是否输入内容</span>    <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">.</span>keyword<span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>      <span class="token comment">// 此时说明文本框中已经有内容</span>      <span class="token keyword">if</span> <span class="token punctuation">(</span>path<span class="token punctuation">.</span><span class="token function">indexOf</span><span class="token punctuation">(</span><span class="token string">'/search'</span><span class="token punctuation">)</span> <span class="token operator">===</span> <span class="token number">0</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>        <span class="token comment">// 此时说明点击按钮的时候，文本框中有搜索关键字，而且也点击了分类信息</span>        <span class="token comment">// 需要携带 params 和 query 参数</span>        <span class="token keyword">this</span><span class="token punctuation">.</span>$router<span class="token punctuation">.</span><span class="token function">push</span><span class="token punctuation">(</span><span class="token punctuation">&#123;</span>          name<span class="token operator">:</span> <span class="token string">'search'</span><span class="token punctuation">,</span>          params<span class="token operator">:</span> <span class="token punctuation">&#123;</span>            keyword<span class="token operator">:</span> <span class="token keyword">this</span><span class="token punctuation">.</span>keyword          <span class="token punctuation">&#125;</span><span class="token punctuation">,</span>          query        <span class="token punctuation">&#125;</span><span class="token punctuation">)</span>      <span class="token punctuation">&#125;</span> <span class="token keyword">else</span> <span class="token punctuation">&#123;</span>        <span class="token comment">// 此时说明文本框有搜索关键字，但是没有 search 界面中，所以，也不需要携带 query 参数</span>        <span class="token keyword">this</span><span class="token punctuation">.</span>$router<span class="token punctuation">.</span><span class="token function">push</span><span class="token punctuation">(</span><span class="token punctuation">&#123;</span>          name<span class="token operator">:</span> <span class="token string">'search'</span><span class="token punctuation">,</span>          params<span class="token operator">:</span> <span class="token punctuation">&#123;</span>            keyword<span class="token operator">:</span> <span class="token keyword">this</span><span class="token punctuation">.</span>keyword          <span class="token punctuation">&#125;</span>        <span class="token punctuation">&#125;</span><span class="token punctuation">)</span>      <span class="token punctuation">&#125;</span>    <span class="token punctuation">&#125;</span> <span class="token keyword">else</span> <span class="token punctuation">&#123;</span>      <span class="token comment">// 此时文本框中没有搜索关键字</span>      <span class="token keyword">if</span> <span class="token punctuation">(</span>path<span class="token punctuation">.</span><span class="token function">indexOf</span><span class="token punctuation">(</span><span class="token string">'/search'</span><span class="token punctuation">)</span> <span class="token operator">===</span> <span class="token number">0</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>        <span class="token comment">// 确实在 search 中，所以要携带 query 参数</span>        <span class="token keyword">this</span><span class="token punctuation">.</span>$router<span class="token punctuation">.</span><span class="token function">push</span><span class="token punctuation">(</span><span class="token punctuation">&#123;</span>          name<span class="token operator">:</span> <span class="token string">'search'</span><span class="token punctuation">,</span>          query        <span class="token punctuation">&#125;</span><span class="token punctuation">)</span>      <span class="token punctuation">&#125;</span> <span class="token keyword">else</span> <span class="token punctuation">&#123;</span>        <span class="token comment">// 没有搜索关键字，也没有在 /search 中</span>        <span class="token keyword">this</span><span class="token punctuation">.</span>$router<span class="token punctuation">.</span><span class="token function">push</span><span class="token punctuation">(</span><span class="token punctuation">&#123;</span>          name<span class="token operator">:</span> <span class="token string">'search'</span>        <span class="token punctuation">&#125;</span><span class="token punctuation">)</span>      <span class="token punctuation">&#125;</span>    <span class="token punctuation">&#125;</span>  <span class="token punctuation">&#125;</span><span class="token punctuation">&#125;</span> <span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h2><span id="p42-search-fen-fa-shi-chuan-ru-can-shu">42 Search 分发时传入参数</span><a href="#p42-search-fen-fa-shi-chuan-ru-can-shu" class="header-anchor">#</a></h2><p>Search 更新data数据</p><pre class="line-numbers language-js" data-language="js"><code class="language-js"><span class="token function">data</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>  <span class="token keyword">return</span> <span class="token punctuation">&#123;</span>    options<span class="token operator">:</span> <span class="token punctuation">&#123;</span>      category1Id<span class="token operator">:</span> <span class="token string">''</span><span class="token punctuation">,</span> <span class="token comment">// 各级分类的id</span>      category2Id<span class="token operator">:</span> <span class="token string">''</span><span class="token punctuation">,</span>      category3Id<span class="token operator">:</span> <span class="token string">''</span><span class="token punctuation">,</span>      categoryName<span class="token operator">:</span> <span class="token string">''</span><span class="token punctuation">,</span>  <span class="token comment">// 分级名字</span>      props<span class="token operator">:</span> <span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">,</span> <span class="token comment">// ['2218:6.75-6.84英寸:屏幕尺寸']--->['平台属性的id:属性值:属性名字']</span>      trademark<span class="token operator">:</span> <span class="token string">''</span><span class="token punctuation">,</span> <span class="token comment">// 品牌的名字  '品牌的id:品牌的名字'</span>      order<span class="token operator">:</span> <span class="token string">'1:desc'</span><span class="token punctuation">,</span> <span class="token comment">// 排序的方式 1--->排序的标识,desc--->排序的方式 ,1--综合,2---价格 ,desc---降序,asc---升序</span>      pageNo<span class="token operator">:</span> <span class="token number">1</span><span class="token punctuation">,</span> <span class="token comment">// 获取的是第一页的数据</span>      pageSize<span class="token operator">:</span> <span class="token number">3</span><span class="token punctuation">,</span> <span class="token comment">// 默认每页三条数据</span>      keyword<span class="token operator">:</span> <span class="token string">''</span> <span class="token comment">// 搜索关键字</span>    <span class="token punctuation">&#125;</span><span class="token punctuation">,</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>更新mounted数据</p><pre class="line-numbers language-js" data-language="js"><code class="language-js"><span class="token function">mounted</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>  <span class="token keyword">const</span> <span class="token punctuation">&#123;</span>    query<span class="token punctuation">,</span>    params  <span class="token punctuation">&#125;</span> <span class="token operator">=</span> <span class="token keyword">this</span><span class="token punctuation">.</span>$route  <span class="token keyword">const</span> options <span class="token operator">=</span> <span class="token punctuation">&#123;</span>    <span class="token operator">...</span><span class="token keyword">this</span><span class="token punctuation">.</span>options<span class="token punctuation">,</span>    <span class="token operator">...</span>query<span class="token punctuation">,</span>    <span class="token operator">...</span>params  <span class="token punctuation">&#125;</span>  <span class="token keyword">this</span><span class="token punctuation">.</span>options <span class="token operator">=</span> options  <span class="token comment">// 分发 actions</span>  <span class="token keyword">this</span><span class="token punctuation">.</span><span class="token function">getProductList</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">&#125;</span><span class="token punctuation">,</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>更新watch数据</p><pre class="line-numbers language-js" data-language="js"><code class="language-js">watch<span class="token operator">:</span> <span class="token punctuation">&#123;</span>  <span class="token comment">// to 模版路由器对象</span>  <span class="token comment">// from 从哪里来的路由信息对象</span>  <span class="token function">$route</span><span class="token punctuation">(</span><span class="token parameter">to<span class="token punctuation">,</span> <span class="token keyword">from</span></span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>    <span class="token keyword">const</span> <span class="token punctuation">&#123;</span>      query<span class="token punctuation">,</span>      params    <span class="token punctuation">&#125;</span> <span class="token operator">=</span> to    <span class="token keyword">const</span> options <span class="token operator">=</span> <span class="token punctuation">&#123;</span>      <span class="token operator">...</span><span class="token keyword">this</span><span class="token punctuation">.</span>options<span class="token punctuation">,</span>      <span class="token comment">// 重置数据</span>      category1Id<span class="token operator">:</span> <span class="token string">''</span><span class="token punctuation">,</span>      category2Id<span class="token operator">:</span> <span class="token string">''</span><span class="token punctuation">,</span>      category3Id<span class="token operator">:</span> <span class="token string">''</span><span class="token punctuation">,</span>      categoryName<span class="token operator">:</span> <span class="token string">''</span><span class="token punctuation">,</span>      <span class="token operator">...</span>query<span class="token punctuation">,</span>      <span class="token operator">...</span>params    <span class="token punctuation">&#125;</span>    <span class="token keyword">this</span><span class="token punctuation">.</span>options <span class="token operator">=</span> options    <span class="token comment">// 分发 actions</span>    <span class="token keyword">this</span><span class="token punctuation">.</span><span class="token function">getProductList</span><span class="token punctuation">(</span><span class="token punctuation">)</span>  <span class="token punctuation">&#125;</span><span class="token punctuation">&#125;</span><span class="token punctuation">,</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h2><span id="p43-dian-ji-biao-qian-de-yi-chu-yi-ji-di-zhi-de-xiu-zheng">43 点击标签的移除以及地址的修正</span><a href="#p43-dian-ji-biao-qian-de-yi-chu-yi-ji-di-zhi-de-xiu-zheng" class="header-anchor">#</a></h2><p>Search 第13行</p><pre class="line-numbers language-html" data-language="html"><code class="language-html"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>ul</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>fl sui-tag<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>  <span class="token comment">&lt;!-- 分类信息的名字 --></span>  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>li</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>with-x<span class="token punctuation">"</span></span> <span class="token attr-name">v-if</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>options.categoryName<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>    &#123;&#123;options.categoryName&#125;&#125;<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>i</span> <span class="token attr-name">@click</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>removeCategory<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>×<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>i</span><span class="token punctuation">></span></span>  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>li</span><span class="token punctuation">></span></span>  <span class="token comment">&lt;!-- 搜索关键字 --></span>  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>li</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>with-x<span class="token punctuation">"</span></span> <span class="token attr-name">v-if</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>options.keyword<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>    &#123;&#123;options.keyword&#125;&#125;    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>i</span> <span class="token attr-name">@click</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>removeKeyword<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>×<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>i</span><span class="token punctuation">></span></span>  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>li</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>ul</span><span class="token punctuation">></span></span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>更新 methods</p><pre class="line-numbers language-js" data-language="js"><code class="language-js"><span class="token comment">// 移除分类信息的名字</span><span class="token function">removeCategory</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>  <span class="token keyword">this</span><span class="token punctuation">.</span>options<span class="token punctuation">.</span>category1Id <span class="token operator">=</span> <span class="token string">""</span>  <span class="token keyword">this</span><span class="token punctuation">.</span>options<span class="token punctuation">.</span>category2Id <span class="token operator">=</span> <span class="token string">""</span>  <span class="token keyword">this</span><span class="token punctuation">.</span>options<span class="token punctuation">.</span>category3Id <span class="token operator">=</span> <span class="token string">""</span>  <span class="token keyword">this</span><span class="token punctuation">.</span>options<span class="token punctuation">.</span>categoryName <span class="token operator">=</span> <span class="token string">""</span>  <span class="token keyword">this</span><span class="token punctuation">.</span>$router<span class="token punctuation">.</span><span class="token function">replace</span><span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">.</span>$route<span class="token punctuation">.</span>path<span class="token punctuation">)</span><span class="token punctuation">&#125;</span><span class="token punctuation">,</span>  <span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>创建事件总线 main.js</p><pre class="line-numbers language-js" data-language="js"><code class="language-js"><span class="token keyword">new</span> <span class="token class-name">Vue</span><span class="token punctuation">(</span><span class="token punctuation">&#123;</span>  <span class="token comment">// 注册路由器</span>  router<span class="token punctuation">,</span>  <span class="token comment">// 注册store</span>  store<span class="token punctuation">,</span>  <span class="token comment">// 数据初始化之前</span>  <span class="token function">beforeCreate</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>    <span class="token comment">// 事件总线</span>    <span class="token class-name">Vue</span><span class="token punctuation">.</span>prototype<span class="token punctuation">.</span>$bus <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Vue</span><span class="token punctuation">(</span><span class="token punctuation">)</span>  <span class="token punctuation">&#125;</span><span class="token punctuation">,</span>  <span class="token comment">// 渲染组件</span>  <span class="token function-variable function">render</span><span class="token operator">:</span> <span class="token parameter">h</span> <span class="token operator">=></span> <span class="token function">h</span><span class="token punctuation">(</span>App<span class="token punctuation">)</span><span class="token punctuation">,</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>Header 组件中</p><pre class="line-numbers language-js" data-language="js"><code class="language-js"><span class="token function">mounted</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>  <span class="token keyword">this</span><span class="token punctuation">.</span>$bus<span class="token punctuation">.</span><span class="token function">$on</span><span class="token punctuation">(</span><span class="token string">'removeKeyword'</span><span class="token punctuation">,</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=></span> <span class="token punctuation">&#123;</span>    <span class="token keyword">this</span><span class="token punctuation">.</span>keyword <span class="token operator">=</span> <span class="token string">''</span> <span class="token comment">// 清空文本框</span>  <span class="token punctuation">&#125;</span><span class="token punctuation">)</span><span class="token punctuation">&#125;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>Search 组件 methods</p><pre class="line-numbers language-js" data-language="js"><code class="language-js"><span class="token comment">// 移除搜索关键字</span><span class="token function">removeKeyword</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>  <span class="token keyword">this</span><span class="token punctuation">.</span>options<span class="token punctuation">.</span>keyword <span class="token operator">=</span> <span class="token string">""</span>  <span class="token comment">// 路由跳转</span>  <span class="token keyword">this</span><span class="token punctuation">.</span>$router<span class="token punctuation">.</span><span class="token function">replace</span><span class="token punctuation">(</span><span class="token punctuation">&#123;</span>    path<span class="token operator">:</span> <span class="token string">'/search'</span><span class="token punctuation">,</span>    query<span class="token operator">:</span> <span class="token keyword">this</span><span class="token punctuation">.</span>$route<span class="token punctuation">.</span>query  <span class="token punctuation">&#125;</span><span class="token punctuation">)</span>  <span class="token comment">// 清理Header组件中的搜索框数据</span>  <span class="token keyword">this</span><span class="token punctuation">.</span>$bus<span class="token punctuation">.</span><span class="token function">$emit</span><span class="token punctuation">(</span><span class="token string">'removeKeyword'</span><span class="token punctuation">)</span><span class="token punctuation">&#125;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h2><span id="p44-dian-ji-pin-pai-biao-qian-jin-xing-shai-xuan">44 点击品牌标签进行筛选</span><a href="#p44-dian-ji-pin-pai-biao-qian-jin-xing-shai-xuan" class="header-anchor">#</a></h2><p>Search组件中 methods 加</p><pre class="line-numbers language-js" data-language="js"><code class="language-js"><span class="token comment">// 更新品牌的参数数据</span><span class="token function">setTrademark</span><span class="token punctuation">(</span><span class="token parameter">tmId<span class="token punctuation">,</span> tmName</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>  <span class="token keyword">this</span><span class="token punctuation">.</span>options<span class="token punctuation">.</span>trademark <span class="token operator">=</span> <span class="token template-string"><span class="token template-punctuation string">`</span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">$&#123;</span>tmId<span class="token interpolation-punctuation punctuation">&#125;</span></span><span class="token string">:</span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">$&#123;</span>tmName<span class="token interpolation-punctuation punctuation">&#125;</span></span><span class="token template-punctuation string">`</span></span>  <span class="token comment">// 重新发送请求，获取商品信息数据</span>  <span class="token keyword">this</span><span class="token punctuation">.</span><span class="token function">getProductList</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">&#125;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>26行</p><pre class="line-numbers language-html" data-language="html"><code class="language-html"><span class="token comment">&lt;!--selector--></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>SearchSelector</span> <span class="token attr-name">:setTrademark</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>setTrademark<span class="token punctuation">"</span></span><span class="token punctuation">/></span></span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre><p>SearchSelector</p><pre class="line-numbers language-js" data-language="js"><code class="language-js">name<span class="token operator">:</span> <span class="token string">'SearchSelector'</span><span class="token punctuation">,</span>props<span class="token operator">:</span> <span class="token punctuation">&#123;</span>  setTrademark<span class="token operator">:</span> Function<span class="token punctuation">&#125;</span><span class="token punctuation">,</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span></span></code></pre><p>7行 加点击事件</p><pre class="line-numbers language-html" data-language="html"><code class="language-html"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>li</span> <span class="token attr-name">v-for</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>(tm) in trademarkList<span class="token punctuation">"</span></span> <span class="token attr-name">:key</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>tm.tmId<span class="token punctuation">"</span></span> <span class="token attr-name">@click</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>setTrademark(tm.tmId, tm.tmName)<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>&#123;&#123;tm.tmName&#125;&#125;<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>li</span><span class="token punctuation">></span></span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>Search 23行</p><pre class="line-numbers language-html" data-language="html"><code class="language-html"><span class="token comment">&lt;!-- 品牌关键字 --></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>li</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>with-x<span class="token punctuation">"</span></span> <span class="token attr-name">v-if</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>options.trademark<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>  &#123;&#123;options.trademark&#125;&#125;  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>i</span> <span class="token attr-name">@click</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>removeTrademark<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>×<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>i</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>li</span><span class="token punctuation">></span></span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>methods 新增</p><pre class="line-numbers language-js" data-language="js"><code class="language-js"><span class="token comment">// 移除品牌的名字</span><span class="token function">removeTrademark</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">&#123;</span>  <span class="token keyword">this</span><span class="token punctuation">.</span>options<span class="token punctuation">.</span>trademark <span class="token operator">=</span> <span class="token string">""</span>  <span class="token comment">// 重新发送请求，获取商品信息数据</span>  <span class="token keyword">this</span><span class="token punctuation">.</span><span class="token function">getProductList</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">&#125;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h2><span id="p45-ping-tai-shu-xing-xiang-guan">45 平台属性相关</span><a href="#p45-ping-tai-shu-xing-xiang-guan" class="header-anchor">#</a></h2><p>Search methods 新增</p><pre class="line-numbers language-js" data-language="js"><code class="language-js"><span class="token comment">// 更新平台属性数组的数据</span><span class="token function">addProps</span><span class="token punctuation">(</span><span class="token parameter">propId<span class="token punctuation">,</span> propVal<span class="token punctuation">,</span> propName</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>  <span class="token comment">// 拼接平台属性的值</span>  <span class="token keyword">const</span> prop <span class="token operator">=</span> <span class="token template-string"><span class="token template-punctuation string">`</span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">$&#123;</span>propId<span class="token interpolation-punctuation punctuation">&#125;</span></span><span class="token string">:</span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">$&#123;</span>propVal<span class="token interpolation-punctuation punctuation">&#125;</span></span><span class="token string">:</span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">$&#123;</span>propName<span class="token interpolation-punctuation punctuation">&#125;</span></span><span class="token template-punctuation string">`</span></span>  <span class="token comment">// 判断这该数组中这个数据是否存在，不存在就则增加</span>  <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">.</span>options<span class="token punctuation">.</span>props<span class="token punctuation">.</span><span class="token function">indexOf</span><span class="token punctuation">(</span>prop<span class="token punctuation">)</span> <span class="token operator">===</span> <span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>    <span class="token keyword">this</span><span class="token punctuation">.</span>options<span class="token punctuation">.</span>props<span class="token punctuation">.</span><span class="token function">push</span><span class="token punctuation">(</span>prop<span class="token punctuation">)</span>    <span class="token comment">// 重新获取数据</span>    <span class="token keyword">this</span><span class="token punctuation">.</span><span class="token function">getProductList</span><span class="token punctuation">(</span><span class="token punctuation">)</span>  <span class="token punctuation">&#125;</span><span class="token punctuation">&#125;</span><span class="token punctuation">,</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>30行</p><pre class="line-numbers language-html" data-language="html"><code class="language-html"><span class="token comment">&lt;!--selector--></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>SearchSelector</span> <span class="token attr-name">:setTrademark</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>setTrademark<span class="token punctuation">"</span></span> <span class="token attr-name">:addProps</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>addProps<span class="token punctuation">"</span></span> <span class="token punctuation">/></span></span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre><p>SearchSelector 更新 props</p><pre class="line-numbers language-js" data-language="js"><code class="language-js">props<span class="token operator">:</span> <span class="token punctuation">&#123;</span>  setTrademark<span class="token operator">:</span> Function<span class="token punctuation">,</span>  addProps<span class="token operator">:</span> Function<span class="token punctuation">&#125;</span><span class="token punctuation">,</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span></span></code></pre><p>13行</p><pre class="line-numbers language-html" data-language="html"><code class="language-html"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>fl key<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>&#123;&#123;attr.attrName&#125;&#125;<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>fl value<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>ul</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>type-list<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>li</span> <span class="token attr-name">v-for</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>(value,index) in attr.attrValueList<span class="token punctuation">"</span></span> <span class="token attr-name">:key</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>index<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>      <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>a</span> <span class="token attr-name">href</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>javascript:;<span class="token punctuation">"</span></span> <span class="token attr-name">@click</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>addProps(attr.attrId,value, attr.attrName)<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>&#123;&#123;value&#125;&#125;<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>a</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>li</span><span class="token punctuation">></span></span>  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>ul</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">></span></span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>Search 28行</p><pre class="line-numbers language-html" data-language="html"><code class="language-html"><span class="token comment">&lt;!-- 平台属性关键字 --></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>li</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>with-x<span class="token punctuation">"</span></span> <span class="token attr-name">v-for</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>(prop, index) in options.props<span class="token punctuation">"</span></span> <span class="token attr-name">:key</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>prop<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>  &#123;&#123;prop&#125;&#125;  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>i</span> <span class="token attr-name">@click</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>removeProp(index)<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>×<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>i</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>li</span><span class="token punctuation">></span></span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>methods 新增</p><pre class="line-numbers language-js" data-language="js"><code class="language-js"><span class="token comment">// 移除平台属性数据</span><span class="token function">removeProp</span><span class="token punctuation">(</span><span class="token parameter">index</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>  <span class="token keyword">this</span><span class="token punctuation">.</span>options<span class="token punctuation">.</span>props<span class="token punctuation">.</span><span class="token function">splice</span><span class="token punctuation">(</span>index<span class="token punctuation">,</span> <span class="token number">1</span><span class="token punctuation">)</span>  <span class="token comment">// 重新获取数据</span>  <span class="token keyword">this</span><span class="token punctuation">.</span><span class="token function">getProductList</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">&#125;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h2><span id="p46-pai-xu">46 排序</span><a href="#p46-pai-xu" class="header-anchor">#</a></h2><p>Search 40行</p><pre class="line-numbers language-html" data-language="html"><code class="language-html"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span> details clearfix<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>sui-navbar<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>navbar-inner filter<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>      <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>ul</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>sui-nav<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>li</span> <span class="token attr-name">:class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>&#123;active:isActive(<span class="token punctuation">'</span>1<span class="token punctuation">'</span>)&#125;<span class="token punctuation">"</span></span> <span class="token attr-name">@click</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>setOrder(<span class="token punctuation">'</span>1<span class="token punctuation">'</span>)<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>          <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>a</span> <span class="token attr-name">href</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>javascript:;<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>综合&#123;&#123;getOrderText('1')&#125;&#125;<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>a</span><span class="token punctuation">></span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>li</span><span class="token punctuation">></span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>li</span><span class="token punctuation">></span></span>          <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>a</span> <span class="token attr-name">href</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>javascript:;<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>销量<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>a</span><span class="token punctuation">></span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>li</span><span class="token punctuation">></span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>li</span><span class="token punctuation">></span></span>          <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>a</span> <span class="token attr-name">href</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>javascript:;<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>新品<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>a</span><span class="token punctuation">></span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>li</span><span class="token punctuation">></span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>li</span><span class="token punctuation">></span></span>          <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>a</span> <span class="token attr-name">href</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>javascript:;<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>评价<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>a</span><span class="token punctuation">></span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>li</span><span class="token punctuation">></span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>li</span> <span class="token attr-name">:class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>&#123;active:isActive(<span class="token punctuation">'</span>2<span class="token punctuation">'</span>)&#125;<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>          <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>a</span> <span class="token attr-name">href</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>javascript:;<span class="token punctuation">"</span></span>             <span class="token attr-name">@click</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>setOrder(<span class="token punctuation">'</span>2<span class="token punctuation">'</span>)<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>价格&#123;&#123;getOrderText('2')&#125;&#125;<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>a</span><span class="token punctuation">></span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>li</span><span class="token punctuation">></span></span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>methods 新增</p><pre class="line-numbers language-js" data-language="js"><code class="language-js"><span class="token comment">// 设置排序的选项类样式</span><span class="token function">isActive</span><span class="token punctuation">(</span><span class="token parameter">flag</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>  <span class="token keyword">return</span> <span class="token keyword">this</span><span class="token punctuation">.</span>options<span class="token punctuation">.</span>order<span class="token punctuation">.</span><span class="token function">indexOf</span><span class="token punctuation">(</span>flag<span class="token punctuation">)</span> <span class="token operator">===</span> <span class="token number">0</span><span class="token punctuation">&#125;</span><span class="token punctuation">,</span><span class="token comment">// 改变排序的方式</span><span class="token function">setOrder</span><span class="token punctuation">(</span><span class="token parameter">flag</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>  <span class="token comment">// 获取排序的标识和排序方式</span>  <span class="token keyword">let</span> <span class="token punctuation">[</span>    orderFlag<span class="token punctuation">,</span>    orderType  <span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token keyword">this</span><span class="token punctuation">.</span>options<span class="token punctuation">.</span>order<span class="token punctuation">.</span><span class="token function">split</span><span class="token punctuation">(</span><span class="token string">':'</span><span class="token punctuation">)</span>  <span class="token comment">// 判断排序的标识是否一致</span>  <span class="token keyword">if</span> <span class="token punctuation">(</span>orderFlag <span class="token operator">===</span> flag<span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>    orderType <span class="token operator">=</span> orderType <span class="token operator">===</span> <span class="token string">'desc'</span> <span class="token operator">?</span> <span class="token string">'asc'</span> <span class="token operator">:</span> <span class="token string">'desc'</span>  <span class="token punctuation">&#125;</span> <span class="token keyword">else</span> <span class="token punctuation">&#123;</span>    orderFlag <span class="token operator">=</span> flag <span class="token comment">// 标识已经改变</span>    orderType <span class="token operator">=</span> <span class="token string">'desc'</span> <span class="token comment">// 默认是降序</span>  <span class="token punctuation">&#125;</span>  <span class="token comment">// 更新参数数据</span>  <span class="token keyword">this</span><span class="token punctuation">.</span>options<span class="token punctuation">.</span>order <span class="token operator">=</span> orderFlag <span class="token operator">+</span> <span class="token string">":"</span> <span class="token operator">+</span> orderType  <span class="token comment">// 重新获取数据</span>  <span class="token keyword">this</span><span class="token punctuation">.</span><span class="token function">getProductList</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">&#125;</span><span class="token punctuation">,</span><span class="token comment">// 显示箭头</span><span class="token function">getOrderText</span><span class="token punctuation">(</span><span class="token parameter">flag</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>  <span class="token comment">// 获取排序的标识和方式</span>  <span class="token keyword">let</span> <span class="token punctuation">[</span>orderFlag<span class="token punctuation">,</span> orderType<span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token keyword">this</span><span class="token punctuation">.</span>options<span class="token punctuation">.</span>order<span class="token punctuation">.</span><span class="token function">split</span><span class="token punctuation">(</span><span class="token string">':'</span><span class="token punctuation">)</span>  <span class="token comment">// 判断标识符是否一致</span>  <span class="token keyword">if</span> <span class="token punctuation">(</span>orderFlag <span class="token operator">===</span> flag<span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>    <span class="token keyword">return</span> orderType <span class="token operator">===</span> <span class="token string">'desc'</span><span class="token operator">?</span> <span class="token string">"↓"</span><span class="token operator">:</span> <span class="token string">"↑"</span>  <span class="token punctuation">&#125;</span> <span class="token keyword">else</span> <span class="token punctuation">&#123;</span>    <span class="token keyword">return</span>  <span class="token punctuation">&#125;</span><span class="token punctuation">&#125;</span><span class="token punctuation">,</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h2><span id="p47-qing-li-kong-shu-ju">47 清理空数据</span><a href="#p47-qing-li-kong-shu-ju" class="header-anchor">#</a></h2><p>data 中的数据是响应式的，会触发视图更新</p><p>不能用常规方法增加或者删除</p><p>用 <code>Vue.get</code> <code>Vue.delete</code></p><p>Search 的 data 中 注释</p><pre class="line-numbers language-js" data-language="js"><code class="language-js"><span class="token comment">// trademark: '', // 品牌的名字  '品牌的id:品牌的名字'</span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>setTrademark  和 removeTrademark 修改为</p><pre class="line-numbers language-js" data-language="js"><code class="language-js"><span class="token function">setTrademark</span><span class="token punctuation">(</span><span class="token parameter">tmId<span class="token punctuation">,</span> tmName</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>  <span class="token comment">// 这种方式添加的属性属于非响应式属性数据,</span>  <span class="token comment">// 响应式数据:在data中定义的数据,该数据如果发生了变化,页面会自动的渲染</span>  <span class="token comment">// this.options.trademark = `$&#123;tmId&#125;:$&#123;tmName&#125;`</span>  <span class="token keyword">this</span><span class="token punctuation">.</span><span class="token function">$set</span><span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">.</span>options<span class="token punctuation">,</span> <span class="token string">'trademark'</span><span class="token punctuation">,</span> <span class="token template-string"><span class="token template-punctuation string">`</span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">$&#123;</span>tmId<span class="token interpolation-punctuation punctuation">&#125;</span></span><span class="token string">:</span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">$&#123;</span>tmName<span class="token interpolation-punctuation punctuation">&#125;</span></span><span class="token template-punctuation string">`</span></span><span class="token punctuation">)</span>  <span class="token comment">// 重新发送请求，获取商品信息数据</span>  <span class="token keyword">this</span><span class="token punctuation">.</span><span class="token function">getProductList</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">&#125;</span><span class="token punctuation">,</span><span class="token comment">// 移除品牌的名字</span><span class="token function">removeTrademark</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>  <span class="token comment">// 是把数据清空,并不是删除</span>  <span class="token comment">// this.options.trademark = ''</span>  <span class="token comment">// 这种方式不是移除响应式数据的操作</span>  <span class="token comment">// delete this.options.trademark</span>  <span class="token comment">// 删除对象的 property。如果对象是响应式的，确保删除能触发更新视图</span>  <span class="token keyword">this</span><span class="token punctuation">.</span>$<span class="token keyword">delete</span><span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">.</span>options<span class="token punctuation">,</span> <span class="token string">'trademark'</span><span class="token punctuation">)</span>  <span class="token comment">// 重新发送请求，获取商品信息数据</span>  <span class="token keyword">this</span><span class="token punctuation">.</span><span class="token function">getProductList</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">&#125;</span><span class="token punctuation">,</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>store 中的 search.js 的 actions 进行如下更新</p><pre class="line-numbers language-js" data-language="js"><code class="language-js">actions<span class="token operator">:</span> <span class="token punctuation">&#123;</span>  <span class="token comment">// 获取商品信息数据对象</span>  <span class="token keyword">async</span> <span class="token function">getProductList</span><span class="token punctuation">(</span><span class="token parameter"><span class="token punctuation">&#123;</span>    commit  <span class="token punctuation">&#125;</span><span class="token punctuation">,</span> searchParams</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>    <span class="token comment">// 清理无用的参数数据</span>    <span class="token comment">// 浅拷贝</span>    searchParams <span class="token operator">=</span> <span class="token punctuation">&#123;</span>      <span class="token operator">...</span>searchParams    <span class="token punctuation">&#125;</span>    <span class="token comment">// 优化参数处理</span>    Object<span class="token punctuation">.</span><span class="token function">keys</span><span class="token punctuation">(</span>searchParams<span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">forEach</span><span class="token punctuation">(</span><span class="token parameter">key</span> <span class="token operator">=></span> <span class="token punctuation">&#123;</span>        <span class="token comment">// 判断这里的数据是不是空的数据，或者是这里的数据</span>        <span class="token keyword">if</span> <span class="token punctuation">(</span>searchParams<span class="token punctuation">[</span>key<span class="token punctuation">]</span> <span class="token operator">===</span> <span class="token string">''</span> <span class="token operator">||</span> searchParams<span class="token punctuation">[</span>key<span class="token punctuation">]</span> <span class="token keyword">instanceof</span> <span class="token class-name">Array</span> <span class="token operator">&amp;&amp;</span> searchParams<span class="token punctuation">[</span>key<span class="token punctuation">]</span><span class="token punctuation">.</span>length <span class="token operator">===</span> <span class="token number">0</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>          <span class="token keyword">delete</span> searchParams<span class="token punctuation">[</span>key<span class="token punctuation">]</span>        <span class="token punctuation">&#125;</span>      <span class="token punctuation">&#125;</span><span class="token punctuation">)</span>      <span class="token keyword">const</span> result <span class="token operator">=</span> <span class="token keyword">await</span> <span class="token function">reqProductList</span><span class="token punctuation">(</span>searchParams<span class="token punctuation">)</span>      <span class="token keyword">if</span> <span class="token punctuation">(</span>result<span class="token punctuation">.</span>code <span class="token operator">===</span> <span class="token number">200</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>        <span class="token function">commit</span><span class="token punctuation">(</span><span class="token string">'RECEIVE_PRODUCT_LIST'</span><span class="token punctuation">,</span> result<span class="token punctuation">.</span>data<span class="token punctuation">)</span>      <span class="token punctuation">&#125;</span>    <span class="token punctuation">&#125;</span>  <span class="token punctuation">&#125;</span><span class="token punctuation">,</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h1><span id="9-yue-23-ri-day-5">9月23日（day 5）</span><a href="#9-yue-23-ri-day-5" class="header-anchor">#</a></h1><h2><span id="p48-fen-ye-zu-jian">48 分页组件</span><a href="#p48-fen-ye-zu-jian" class="header-anchor">#</a></h2><p>思路：分页组件（Pagination）要注册为公共组件（多次使用）</p><p>components  中新建 Pagination 目录 新建 index.vue （直接拷贝以下代码）</p><pre class="line-numbers language-vue" data-language="vue"><code class="language-vue">&lt;template&gt;  &lt;!--分页组件--&gt;  &lt;div class&#x3D;&quot;pagination&quot; v-if&#x3D;&quot;pageConfig.total&gt;0&quot;&gt;    &lt;!--上一页--&gt;    &lt;button :disabled&#x3D;&quot;currentPage&#x3D;&#x3D;&#x3D;1&quot; @click&#x3D;&quot;changeCurrentPage(currentPage-1)&quot;&gt;上一页&lt;&#x2F;button&gt;    &lt;!-- 第1页 --&gt;    &lt;button v-if&#x3D;&quot;startEnd.start&gt;1&quot; @click&#x3D;&quot;changeCurrentPage(1)&quot;&gt;1&lt;&#x2F;button&gt;    &lt;!-- 省略号 start&gt;2才显示 --&gt;    &lt;button disabled v-if&#x3D;&quot;startEnd.start&gt;2&quot;&gt;···&lt;&#x2F;button&gt;    &lt;!-- 连续页码 --&gt;    &lt;button v-for&#x3D;&quot;no in startEnd.end&quot; :key&#x3D;&quot;no&quot; v-if&#x3D;&quot;no&gt;&#x3D;startEnd.start&quot; :class&#x3D;&quot;&#123;active: currentPage&#x3D;&#x3D;&#x3D;no&#125;&quot;      @click&#x3D;&quot;changeCurrentPage(no)&quot;&gt;&#123;&#123;no&#125;&#125;&lt;&#x2F;button&gt;    &lt;!-- 34567 --&gt;    &lt;!-- 省略号 end&lt;totalPages-1  --&gt;    &lt;button disabled v-if&#x3D;&quot;startEnd.end&lt;totalPages-1&quot;&gt;···&lt;&#x2F;button&gt;    &lt;!-- 最后一页 --&gt;    &lt;button v-if&#x3D;&quot;startEnd.end&lt;totalPages&quot; @click&#x3D;&quot;changeCurrentPage(totalPages)&quot;&gt;&#123;&#123;totalPages&#125;&#125;&lt;&#x2F;button&gt;    &lt;!--下一页--&gt;    &lt;button :disabled&#x3D;&quot;currentPage&#x3D;&#x3D;&#x3D;totalPages&quot; @click&#x3D;&quot;changeCurrentPage(currentPage+1)&quot;&gt;下一页&lt;&#x2F;button&gt;    &lt;!-- 总记录数 --&gt;    &lt;button disabled style&#x3D;&quot;margin-left: 30px&quot;&gt;共 &#123;&#123;pageConfig.total&#125;&#125; 条&lt;&#x2F;button&gt;  &lt;&#x2F;div&gt;&lt;&#x2F;template&gt;&lt;script&gt;  export default &#123;    name: &#39;Pagination&#39;,    props: &#123;      pageConfig: &#123;        type: Object,        default: &#123;          total: 0, &#x2F;&#x2F; 总数据个数          showPageNo: 5, &#x2F;&#x2F; 连续显示的页码数          pageNo: 1, &#x2F;&#x2F; 当前页码          pageSize: 10 &#x2F;&#x2F; 每页的数据个数        &#125;      &#125;    &#125;,    data() &#123;      &#x2F;&#x2F; 在data中可以读取props和Vue原型对象上的属性      &#x2F;&#x2F; console.log(&#39;----&#39;, this.pageConfig, this.$bus)      &#x2F;&#x2F; 在data()中不可以直接读取data对象中的数据      &#x2F;&#x2F; console.log(&#39;++++&#39;, this.currentPage)      return &#123;        currentPage: this.pageConfig.pageNo &#x2F;&#x2F; 当前页码      &#125;    &#125;,    computed: &#123;      &#x2F;*         总页码数        *&#x2F;      totalPages() &#123;        &#x2F;&#x2F; 取出总数量和每页记录数     36 &#x2F; 5  &#x3D;&#x3D;&gt; 8页        const &#123;          total,          pageSize        &#125; &#x3D; this.pageConfig        if (total &lt;&#x3D; 0 || pageSize &lt;&#x3D; 0) return 0        return Math.ceil(total &#x2F; pageSize) &#x2F;&#x2F; 需要向上取整      &#125;,      &#x2F;*         计算得到连续页码的start和end             连续页码数: pageConfig.showPageNo   5            当前页码: currentPage    4       23456            总页码数: totalPages 10&#x2F;5        *&#x2F;      startEnd() &#123;        let start &#x3D; 0        let end &#x3D; 0        &#x2F;&#x2F; 取出相关数据        &#x2F;&#x2F; const &#123; showPageNo &#125; &#x3D; this.pageConfig        &#x2F;&#x2F; const &#123;totalPages, currentPage&#125; &#x3D; this        const &#123;          totalPages,          currentPage,          pageConfig: &#123;            showPageNo          &#125;        &#125; &#x3D; this &#x2F;&#x2F; 多层级对象解构        &#x2F;&#x2F; 计算后更新start和end        &#x2F;*           currentPage  showPageNo  totalPages            4             5             10     23456            2             5             10     123445            9             5             10     6789 10          *&#x2F;        &#x2F;&#x2F; 计算start        start &#x3D; currentPage - Math.floor(showPageNo &#x2F; 2)        &#x2F;&#x2F; 如果start页码小于1, 就为1        if (start &lt; 1) &#123;          start &#x3D; 1        &#125;        &#x2F;&#x2F; 计算end        &#x2F;*           9             5             10               start &#x3D; 7  &#x3D;&#x3D;&#x3D;&gt; 6          end &#x3D;7 + 4 &#x3D; 11  &#x3D;&#x3D;&gt; end &#x3D; 10          2             5               3          start &#x3D; 1           end &#x3D; 3          start &#x3D; -1           *&#x2F;        end &#x3D; start + showPageNo - 1        &#x2F;&#x2F; 如果end大于了总页码数        if (end &gt; totalPages) &#123;          &#x2F;&#x2F; end值为总页码数          end &#x3D; totalPages          &#x2F;&#x2F; 修正start: 让start到end为showPageNo          start &#x3D; end - showPageNo + 1          &#x2F;&#x2F; 如果start小于1, 指定为1          if (start &lt; 1) &#123;            start &#x3D; 1          &#125;        &#125;        return &#123;          start,          end        &#125;      &#125;,      &#x2F;*         要根据已有数据计算出连续页码的start和end        *&#x2F;      startEnd2() &#123;        &#x2F;&#x2F; 得到已有依赖数据        &#x2F;&#x2F; 当前页码 &#x2F; 连续数码数 &#x2F; 总页码数        const currentPage &#x3D; this.currentPage        const showPageNo &#x3D; this.pageConfig.showPageNo        const totalPages &#x3D; this.totalPages        &#x2F;&#x2F; 计算产生需要的数据        let start &#x3D; 0        let end &#x3D; 0        &#x2F;*           currentPage  showPageNo  totalPages            4             5             10     &#x3D;&#x3D;&gt; start &#x3D; 4 - 2          *&#x2F;        start &#x3D; currentPage - Math.floor(showPageNo &#x2F; 2)        &#x2F;*           currentPage  showPageNo  totalPages            2             5             10     &#x3D;&#x3D;&gt; start &#x3D; 2 - 2 不对  应该是1          *&#x2F;        if (start &lt; 1) &#123;          start &#x3D; 1        &#125;        &#x2F;*           currentPage  showPageNo  totalPages            4             5             10     &#x3D;&#x3D;&gt;   start + 5 -1         *&#x2F;        &#x2F;&#x2F; end &#x3D; currentPage + Math.floor(showPageNo&#x2F;2)        &#x2F;&#x2F; start&#x3D;1 &#x3D;&#x3D;&gt; 1 + 5 -1   5        &#x2F;&#x2F; start&#x3D;4 &#x3D;&#x3D;&#x3D;&gt; 4 + 5 -1  8        end &#x3D; start + showPageNo - 1        &#x2F;*           currentPage  showPageNo  totalPages            9             5             10     &#x3D;&#x3D;&gt; end &#x3D; 11   9 + 2  超过了最大页码         *&#x2F;        if (end &gt; totalPages) &#123;          end &#x3D; totalPages &#x2F;&#x2F; 如果end超过了最大页码, 修正为最大页码          &#x2F;*              currentPage  showPageNo  totalPages              9             5             10              start &#x3D; 9 - 2  应该是6              end &#x3D; 10            *&#x2F;          start &#x3D; end - showPageNo + 1 &#x2F;&#x2F; 10 - 5 + 1          &#x2F;&#x2F; 如果start小于1, 指定为1          if (start &lt; 1) &#123;            start &#x3D; 1          &#125;        &#125;        &#x2F;&#x2F; 返回数据        return &#123;          start,          end        &#125;      &#125;    &#125;,    watch: &#123;      &#x2F;*        当接收的pageConfig中的pageNo发生改变调用          *&#x2F;      &#39;pageConfig.pageNo&#39;(value) &#123;        &#x2F;&#x2F; 将当前页码指定为外部传入的值        this.currentPage &#x3D; value      &#125;    &#125;,    methods: &#123;      &#x2F;*         将当前页码改为指定页码        *&#x2F;      changeCurrentPage(page) &#123;        &#x2F;&#x2F; 修改当前页码        this.currentPage &#x3D; page        &#x2F;&#x2F; 通知外部父组件        this.$emit(&#39;changeCurrentPage&#39;, page)      &#125;    &#125;,    beforeCreate() &#123;      &#x2F;&#x2F; beforeCreate()在data()之前执行      &#x2F;&#x2F; console.log(&#39;beforeCreate()&#39;, this.currentPage) &#x2F;&#x2F; undefined    &#125;,    created() &#123;      &#x2F;&#x2F; created()在data()之后执行      &#x2F;&#x2F; console.log(&#39;created()&#39;, this.currentPage) &#x2F;&#x2F; 有值    &#125;  &#125;&lt;&#x2F;script&gt;&lt;style lang&#x3D;&quot;less&quot; scoped&gt;  .pagination &#123;    button &#123;      margin: 0 5px;      background-color: #f4f4f5;      color: #606266;      outline: none;      border-radius: 2px;      padding: 0 4px;      vertical-align: top;      display: inline-block;      font-size: 13px;      min-width: 35.5px;      height: 28px;      line-height: 28px;      cursor: pointer;      box-sizing: border-box;      text-align: center;      border: 0;      &amp;[disabled] &#123;        color: #c0c4cc;        cursor: not-allowed;      &#125;      &amp;.active &#123;        cursor: not-allowed;        background-color: #409eff;        color: #fff;      &#125;    &#125;  &#125;&lt;&#x2F;style&gt;<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>main.js 中注册为公共组件</p><pre class="line-numbers language-js" data-language="js"><code class="language-js"><span class="token comment">// 引入分页组件</span><span class="token keyword">import</span> Pagination <span class="token keyword">from</span> <span class="token string">'@/components/Pagination'</span>Vue<span class="token punctuation">.</span><span class="token function">component</span><span class="token punctuation">(</span><span class="token string">'Pagination'</span><span class="token punctuation">,</span> Pagination<span class="token punctuation">)</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span></span></code></pre><p>Search 组件中使用 Pagination 需要传入一个对象 pageConfig</p><pre class="line-numbers language-html" data-language="html"><code class="language-html">// 89行          <span class="token comment">&lt;!-- 分页 --></span>          <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>fr page<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>Pagination</span>              <span class="token attr-name">:pageConfig</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>&#123;total:productList.total, pageNo:options.pageNo, pageSize:options.pageSize, showPageNo:5&#125;<span class="token punctuation">"</span></span>              <span class="token attr-name">@changeCurrentPage</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>changeCurrentPage<span class="token punctuation">"</span></span> <span class="token punctuation">/></span></span>          <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">></span></span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>methods 中新增一个自定义事件</p><pre class="line-numbers language-js" data-language="js"><code class="language-js"><span class="token comment">// 自定义事件</span><span class="token function">changeCurrentPage</span><span class="token punctuation">(</span><span class="token parameter">pageNo</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>  <span class="token keyword">this</span><span class="token punctuation">.</span>options<span class="token punctuation">.</span>pageNo <span class="token operator">=</span> pageNo  <span class="token keyword">this</span><span class="token punctuation">.</span><span class="token function">getProductList</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">&#125;</span><span class="token punctuation">,</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>此时可以实现分页效果。</p><h2><span id="p49-zi-ji-shi-xian-fen-ye-zu-jian">49 自己实现分页组件</span><a href="#p49-zi-ji-shi-xian-fen-ye-zu-jian" class="header-anchor">#</a></h2><p>开发通用组件的思路流程</p><ol><li>搭建结构和样式（html + css）</li><li>初始化数据（data）</li><li>接收调用该组件的时候传入的数据（props） - 考虑健壮性，要有默认值</li><li>考虑接收什么样的事件或者函数</li><li>制作组件</li><li>制作组件使用的文档</li></ol><p>分页组件，有数据才能使用，没有数据也不能报错</p><p>可以分成八块（上一页，第一页，省略号，连续页码，省略号，最后一页，下一页，共多少条）</p><pre class="line-numbers language-vue" data-language="vue"><code class="language-vue">&lt;template&gt;  &lt;!--分页组件 有数据才能使用，没有数据，也不能报错--&gt;  &lt;div class&#x3D;&quot;pagination&quot;&gt;    &lt;!-- 上一页 --&gt;    &lt;button disabled&gt;上一页&lt;&#x2F;button&gt;    &lt;!-- 第一页 --&gt;    &lt;button&gt;1&lt;&#x2F;button&gt;    &lt;!-- 省略号 --&gt;    &lt;button disabled&gt;···&lt;&#x2F;button&gt;    &lt;!-- 连续页码 --&gt;    &lt;button&gt;连续页码&lt;&#x2F;button&gt;    &lt;!-- 省略号 --&gt;    &lt;button disabled&gt;···&lt;&#x2F;button&gt;    &lt;!-- 最后一页 --&gt;    &lt;button&gt;200&lt;&#x2F;button&gt;    &lt;!-- 下一页 --&gt;    &lt;button disabled&gt;下一页&lt;&#x2F;button&gt;    &lt;!-- 共多少条 --&gt;    &lt;button disabled key&#x3D;&quot;&quot; style&#x3D;&quot;margin-left: 30px&quot;&gt;共 1000 条&lt;&#x2F;button&gt;  &lt;&#x2F;div&gt;&lt;&#x2F;template&gt;<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>传入的数据</p><ul><li>总条数 total</li><li>默认选中的页码 pageNo</li><li>每页显示的条数 pageSize</li><li>连续的页码 showPageNo</li></ul><pre class="line-numbers language-js" data-language="js"><code class="language-js">props<span class="token operator">:</span> <span class="token punctuation">&#123;</span>  pageConfig<span class="token operator">:</span> <span class="token punctuation">&#123;</span>    type<span class="token operator">:</span> Object<span class="token punctuation">,</span> <span class="token comment">// 限制传入的数据的类型</span>    <span class="token keyword">default</span><span class="token operator">:</span> <span class="token punctuation">&#123;</span> <span class="token comment">// 设置默认的值</span>      total<span class="token operator">:</span> <span class="token number">0</span><span class="token punctuation">,</span> <span class="token comment">// 总条数</span>      pageNo<span class="token operator">:</span> <span class="token number">1</span><span class="token punctuation">,</span> <span class="token comment">// 默认的第一页</span>      pageSize<span class="token operator">:</span> <span class="token number">5</span><span class="token punctuation">,</span> <span class="token comment">// 每页显示多少条</span>      showPageNo<span class="token operator">:</span> <span class="token number">5</span> <span class="token comment">// 连续显示的页码数</span>    <span class="token punctuation">&#125;</span>  <span class="token punctuation">&#125;</span><span class="token punctuation">&#125;</span><span class="token punctuation">,</span><span class="token function">data</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>  <span class="token keyword">return</span> <span class="token punctuation">&#123;</span>    <span class="token comment">// 选中的页面 --> 页码会随时变化</span>    currentPage<span class="token operator">:</span> <span class="token keyword">this</span><span class="token punctuation">.</span>pageConfig<span class="token punctuation">.</span>pageNo  <span class="token punctuation">&#125;</span><span class="token punctuation">&#125;</span><span class="token punctuation">,</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>计算总的页码数</p><pre class="line-numbers language-js" data-language="js"><code class="language-js">computed<span class="token operator">:</span> <span class="token punctuation">&#123;</span>  <span class="token comment">// 计算总的页码数</span>  <span class="token function">totalPage</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>    <span class="token comment">// 获取总条数和每页的数据条数</span>    <span class="token keyword">const</span> <span class="token punctuation">&#123;</span>      total<span class="token punctuation">,</span>      pageSize    <span class="token punctuation">&#125;</span> <span class="token operator">=</span> <span class="token keyword">this</span><span class="token punctuation">.</span>pageConfig    <span class="token comment">// 判断</span>    <span class="token keyword">if</span> <span class="token punctuation">(</span>total <span class="token operator">&lt;</span> <span class="token number">0</span> <span class="token operator">||</span> pageSize <span class="token operator">&lt;</span> <span class="token number">0</span><span class="token punctuation">)</span> <span class="token keyword">return</span>    <span class="token comment">// 计算总的页码数</span>    <span class="token keyword">return</span> Math<span class="token punctuation">.</span><span class="token function">ceil</span><span class="token punctuation">(</span>total <span class="token operator">/</span> pageSize<span class="token punctuation">)</span>  <span class="token punctuation">&#125;</span><span class="token punctuation">,</span>   <span class="token comment">// 计算连续页码的开始页码和结束页码</span>  <span class="token function">startEnd</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>    <span class="token keyword">const</span> <span class="token punctuation">&#123;</span>      currentPage<span class="token punctuation">,</span>      totalPage<span class="token punctuation">,</span>      pageConfig<span class="token operator">:</span> <span class="token punctuation">&#123;</span>        showPageNo      <span class="token punctuation">&#125;</span>    <span class="token punctuation">&#125;</span> <span class="token operator">=</span> <span class="token keyword">this</span>    <span class="token comment">// 开始页码</span>    <span class="token keyword">let</span> start <span class="token operator">=</span> <span class="token number">0</span>    <span class="token comment">// 结束页码</span>    <span class="token keyword">let</span> end <span class="token operator">=</span> <span class="token number">0</span>    <span class="token comment">// 计算开始页码 当前页码 - 向下取整（连续页码/2）</span>    start <span class="token operator">=</span> currentPage <span class="token operator">-</span> Math<span class="token punctuation">.</span><span class="token function">floor</span><span class="token punctuation">(</span>showPageNo <span class="token operator">/</span> <span class="token number">2</span><span class="token punctuation">)</span>    <span class="token keyword">if</span> <span class="token punctuation">(</span>start <span class="token operator">&lt;</span> <span class="token number">1</span><span class="token punctuation">)</span> start <span class="token operator">=</span> <span class="token number">1</span>    <span class="token comment">// 计算结束页码 当前页码 + 向下取整（连续页码/2）</span>    <span class="token comment">//             开始页码 + 连续页码 -1</span>    <span class="token comment">// end = currentPage + Math.floor(showPageNo / 2)</span>    end <span class="token operator">=</span> start <span class="token operator">+</span> showPageNo <span class="token operator">-</span> <span class="token number">1</span>    <span class="token keyword">if</span> <span class="token punctuation">(</span>end <span class="token operator">></span> totalPage<span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>      end <span class="token operator">=</span> totalPage      <span class="token comment">// 修正一下开始页码</span>      start <span class="token operator">=</span> totalPage <span class="token operator">-</span> showPageNo <span class="token operator">+</span> <span class="token number">1</span>      <span class="token keyword">if</span> <span class="token punctuation">(</span>start <span class="token operator">&lt;</span> <span class="token number">1</span><span class="token punctuation">)</span> start <span class="token operator">=</span> <span class="token number">1</span>    <span class="token punctuation">&#125;</span>    <span class="token keyword">return</span> <span class="token punctuation">&#123;</span>      start<span class="token punctuation">,</span>      end    <span class="token punctuation">&#125;</span>  <span class="token punctuation">&#125;</span><span class="token punctuation">,</span><span class="token punctuation">&#125;</span><span class="token punctuation">,</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><pre class="line-numbers language-js" data-language="js"><code class="language-js"><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>上一页</p><pre class="line-numbers language-html" data-language="html"><code class="language-html"><span class="token comment">&lt;!-- 上一页 --></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>button</span> <span class="token attr-name">:disabled</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>currentPage===1<span class="token punctuation">"</span></span> <span class="token attr-name">@click</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>changeCurrentPage(currentPage-1)<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>上一页<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>button</span><span class="token punctuation">></span></span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre><pre class="line-numbers language-js" data-language="js"><code class="language-js">methods<span class="token operator">:</span> <span class="token punctuation">&#123;</span>  <span class="token function">changeCurrentPage</span><span class="token punctuation">(</span><span class="token parameter">pageNo</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>    <span class="token comment">// 更新当前的页码</span>    <span class="token keyword">this</span><span class="token punctuation">.</span>currentPage <span class="token operator">=</span> pageNo  <span class="token punctuation">&#125;</span><span class="token punctuation">,</span><span class="token punctuation">&#125;</span><span class="token punctuation">,</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>第一页</p><p>省略号</p><p>下一页</p><p>等等</p><pre class="line-numbers language-html" data-language="html"><code class="language-html"><span class="token comment">&lt;!--分页组件 有数据才能使用，没有数据，也不能报错--></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>pagination<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>  <span class="token comment">&lt;!--上一页--></span>  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>button</span> <span class="token attr-name">:disabled</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>currentPage===1<span class="token punctuation">"</span></span> <span class="token attr-name">@click</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>changeCurrentPage(currentPage-1)<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>上一页<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>button</span><span class="token punctuation">></span></span>  <span class="token comment">&lt;!--第一页--></span>  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>button</span> <span class="token attr-name">v-if</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>startEnd.start>1<span class="token punctuation">"</span></span> <span class="token attr-name">@click</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>changeCurrentPage(1)<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>1<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>button</span><span class="token punctuation">></span></span>  <span class="token comment">&lt;!--第一个省略号--></span>  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>button</span> <span class="token attr-name">disabled</span> <span class="token attr-name">v-if</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>startEnd.start>2<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>...<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>button</span><span class="token punctuation">></span></span>  <span class="token comment">&lt;!--连续页码--></span>  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>button</span> <span class="token attr-name">v-if</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>no>=startEnd.start<span class="token punctuation">"</span></span> <span class="token attr-name">v-for</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>no in startEnd.end<span class="token punctuation">"</span></span> <span class="token attr-name">:key</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>no<span class="token punctuation">"</span></span> <span class="token attr-name">@click</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>changeCurrentPage(no)<span class="token punctuation">"</span></span>    <span class="token attr-name">:class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>&#123;active:currentPage===no&#125;<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>&#123;&#123;no&#125;&#125;<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>button</span><span class="token punctuation">></span></span>  <span class="token comment">&lt;!--第二个省略号--></span>  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>button</span> <span class="token attr-name">disabled</span> <span class="token attr-name">v-if</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>startEnd.end&lt;totalPage-1<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>...<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>button</span><span class="token punctuation">></span></span>  <span class="token comment">&lt;!--最后一页--></span>  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>button</span> <span class="token attr-name">v-if</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>startEnd.end&lt;totalPage<span class="token punctuation">"</span></span> <span class="token attr-name">@click</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>changeCurrentPage(totalPage)<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>&#123;&#123;totalPage&#125;&#125;<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>button</span><span class="token punctuation">></span></span>  <span class="token comment">&lt;!--下一页--></span>  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>button</span> <span class="token attr-name">:disabled</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>currentPage===totalPage<span class="token punctuation">"</span></span> <span class="token attr-name">@click</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>changeCurrentPage(currentPage+1)<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>下一页<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>button</span><span class="token punctuation">></span></span>  <span class="token comment">&lt;!--共多少条--></span>  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>button</span> <span class="token attr-name">disabled</span><span class="token style-attr language-css"><span class="token attr-name"> <span class="token attr-name">style</span></span><span class="token punctuation">="</span><span class="token attr-value"><span class="token property">margin-left</span><span class="token punctuation">:</span>30px</span><span class="token punctuation">"</span></span><span class="token punctuation">></span></span>共&#123;&#123;pageConfig.total&#125;&#125;条<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>button</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">></span></span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>更新methods</p><pre class="line-numbers language-js" data-language="js"><code class="language-js">methods<span class="token operator">:</span> <span class="token punctuation">&#123;</span>  <span class="token function">changeCurrentPage</span><span class="token punctuation">(</span><span class="token parameter">pageNo</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>    <span class="token comment">// 更新当前的页面</span>    <span class="token keyword">this</span><span class="token punctuation">.</span>currentPage <span class="token operator">=</span> pageNo    <span class="token comment">// 通知父级组件，页码改变了，父级组件需重新获取数据</span>    <span class="token keyword">this</span><span class="token punctuation">.</span><span class="token function">$emit</span><span class="token punctuation">(</span><span class="token string">'changeCurrentPage'</span><span class="token punctuation">,</span> pageNo<span class="token punctuation">)</span>  <span class="token punctuation">&#125;</span><span class="token punctuation">,</span><span class="token punctuation">&#125;</span><span class="token punctuation">,</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>Search 组件中 method</p><p>更新这个方法</p><pre class="line-numbers language-js" data-language="js"><code class="language-js">methods<span class="token operator">:</span> <span class="token punctuation">&#123;</span>  <span class="token comment">// 获取商品信息数据对象</span>  <span class="token function">getProductList</span><span class="token punctuation">(</span><span class="token parameter">pageNo <span class="token operator">=</span> <span class="token number">1</span></span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>    <span class="token keyword">this</span><span class="token punctuation">.</span>options<span class="token punctuation">.</span>pageNo <span class="token operator">=</span> pageNo    <span class="token keyword">this</span><span class="token punctuation">.</span>$store<span class="token punctuation">.</span><span class="token function">dispatch</span><span class="token punctuation">(</span><span class="token string">'getProductList'</span><span class="token punctuation">,</span> <span class="token keyword">this</span><span class="token punctuation">.</span>options<span class="token punctuation">)</span>  <span class="token punctuation">&#125;</span><span class="token punctuation">,</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>删除这个方法</p><pre class="line-numbers language-js" data-language="js"><code class="language-js"><span class="token comment">// 自定义事件</span><span class="token function">changeCurrentPage</span><span class="token punctuation">(</span><span class="token parameter">pageNo</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>  <span class="token keyword">this</span><span class="token punctuation">.</span>options<span class="token punctuation">.</span>pageNo <span class="token operator">=</span> pageNo  <span class="token keyword">this</span><span class="token punctuation">.</span><span class="token function">getProductList</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">&#125;</span><span class="token punctuation">,</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>更新这里</p><pre class="line-numbers language-html" data-language="html"><code class="language-html"><span class="token comment">&lt;!-- 分页 --></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>fr page<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>Pagination</span>    <span class="token attr-name">:pageConfig</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>&#123;total:productList.total, pageNo:options.pageNo, pageSize:options.pageSize, showPageNo:5&#125;<span class="token punctuation">"</span></span>    <span class="token attr-name">@changeCurrentPage</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>getProductList<span class="token punctuation">"</span></span> <span class="token punctuation">/></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">></span></span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>Pagination 中新增一个 watch</p><pre class="line-numbers language-js" data-language="js"><code class="language-js">watch<span class="token operator">:</span><span class="token punctuation">&#123;</span>  <span class="token comment">// 监视的是传入的页码值，如果变化了，立即更新当前的页码</span>  <span class="token string">'pageConfig.pageNo'</span><span class="token punctuation">(</span>val<span class="token punctuation">)</span><span class="token punctuation">&#123;</span>    <span class="token comment">// 立即更新当前的页码</span>    <span class="token keyword">this</span><span class="token punctuation">.</span>currentPage <span class="token operator">=</span> val  <span class="token punctuation">&#125;</span><span class="token punctuation">&#125;</span><span class="token punctuation">,</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h2><span id="p50-mei-you-shu-ju-de-shi-hou-fen-ye-zu-jian-de-xiang-guan-chu-li">50 没有数据的时候，分页组件的相关处理</span><a href="#p50-mei-you-shu-ju-de-shi-hou-fen-ye-zu-jian-de-xiang-guan-chu-li" class="header-anchor">#</a></h2><p>加个 v-if</p><pre class="line-numbers language-html" data-language="html"><code class="language-html"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>template</span><span class="token punctuation">></span></span>  <span class="token comment">&lt;!--分页组件,有数据才能使用,没有数据,也不能报错--></span>  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>pagination<span class="token punctuation">"</span></span> <span class="token attr-name">v-if</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>pageConfig.total>0<span class="token punctuation">"</span></span><span class="token punctuation">></span></span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span></span></code></pre><h2><span id="p51-shang-pin-xiang-qing-ye">51 商品详情页</span><a href="#p51-shang-pin-xiang-qing-ye" class="header-anchor">#</a></h2><p>制作路由组件 Detail （直接搬运到pages）</p><p>routes.js 中注册</p><pre class="line-numbers language-js" data-language="js"><code class="language-js"><span class="token keyword">import</span> Detail <span class="token keyword">from</span> <span class="token string">'@/pages/Detail'</span><span class="token comment">// 33行</span>  <span class="token comment">// Detail组件 -- 详情页 -- params</span>  <span class="token punctuation">&#123;</span>    path<span class="token operator">:</span> <span class="token string">'/detail/:skuId'</span><span class="token punctuation">,</span>    component<span class="token operator">:</span> Detail<span class="token punctuation">,</span>    name<span class="token operator">:</span> <span class="token string">'detail'</span>  <span class="token punctuation">&#125;</span><span class="token punctuation">,</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>Search 组件中设置 图片和名称 的路由链接跳转</p><pre class="line-numbers language-html" data-language="html"><code class="language-html">// 63行          <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>goods-list<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>ul</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>yui3-g<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>              <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>li</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>yui3-u-1-5<span class="token punctuation">"</span></span> <span class="token attr-name">v-for</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>goods in goodsList<span class="token punctuation">"</span></span> <span class="token attr-name">:key</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>goods.id<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>                <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>list-wrap<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>                  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>p-img<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>                    <span class="token comment">&lt;!-- 产品的图片 --></span>                    <span class="token comment">&lt;!-- &lt;a href="item.html" target="_blank">                      &lt;img :src="goods.defaultImg" />                    &lt;/a> --></span>                    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>router-link</span> <span class="token attr-name">:to</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>`/detail/$&#123;goods.id&#125;`<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>                      <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>img</span> <span class="token attr-name">:src</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>goods.defaultImg<span class="token punctuation">"</span></span> <span class="token punctuation">/></span></span>                    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>router-link</span><span class="token punctuation">></span></span>                  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">></span></span>                  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>price<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>                    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>strong</span><span class="token punctuation">></span></span>                      <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>em</span><span class="token punctuation">></span></span>¥<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>em</span><span class="token punctuation">></span></span>                      <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>i</span><span class="token punctuation">></span></span>&#123;&#123;goods.price&#125;&#125;<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>i</span><span class="token punctuation">></span></span>                    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>strong</span><span class="token punctuation">></span></span>                  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">></span></span>                  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>attr<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>                    <span class="token comment">&lt;!-- 产品的名字 --></span>                    <span class="token comment">&lt;!-- &lt;a target="_blank" href="item.html" :title="goods.title" v-html="goods.title">&lt;/a> --></span>                    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>router-link</span> <span class="token attr-name">:to</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>`/detail/$&#123;goods.id&#125;`<span class="token punctuation">"</span></span> <span class="token attr-name">:title</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>goods.title<span class="token punctuation">"</span></span> <span class="token attr-name">v-html</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>goods.title<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>                    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>router-link</span><span class="token punctuation">></span></span>                  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">></span></span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>点击跳转后，并不能在最上面，此时 scrollBehavior 来控制</p><p>更新 router/index 中这个部分</p><pre class="line-numbers language-js" data-language="js"><code class="language-js"><span class="token comment">// 实例化路由器对象,并暴露出去</span><span class="token keyword">export</span> <span class="token keyword">default</span> <span class="token keyword">new</span> <span class="token class-name">VueRouter</span><span class="token punctuation">(</span><span class="token punctuation">&#123;</span>  mode<span class="token operator">:</span> <span class="token string">'history'</span><span class="token punctuation">,</span> <span class="token comment">// 地址栏中不带#</span>  routes<span class="token punctuation">,</span>  <span class="token comment">// 解决路由器跳转到滚动的位置的问题</span>  <span class="token function">scrollBehavior</span><span class="token punctuation">(</span><span class="token parameter">to<span class="token punctuation">,</span> <span class="token keyword">from</span><span class="token punctuation">,</span> savedPosition</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>    <span class="token keyword">return</span> <span class="token punctuation">&#123;</span>      x<span class="token operator">:</span> <span class="token number">0</span><span class="token punctuation">,</span>      y<span class="token operator">:</span> <span class="token number">0</span>    <span class="token punctuation">&#125;</span>  <span class="token punctuation">&#125;</span><span class="token punctuation">&#125;</span><span class="token punctuation">)</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h2><span id="p52-shang-pin-xiang-qing-ye-jie-kou">52 商品详情页-接口</span><a href="#p52-shang-pin-xiang-qing-ye-jie-kou" class="header-anchor">#</a></h2><p>测试接口，在api/index.js 新增</p><pre class="line-numbers language-js" data-language="js"><code class="language-js"><span class="token comment">// 商品详情页接口</span><span class="token keyword">export</span> <span class="token keyword">const</span> <span class="token function-variable function">reqDetailInfo</span> <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token parameter">skuId</span><span class="token punctuation">)</span> <span class="token operator">=></span> ajax<span class="token punctuation">.</span><span class="token function">get</span><span class="token punctuation">(</span><span class="token template-string"><span class="token template-punctuation string">`</span><span class="token string">/item/</span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">$&#123;</span>skuId<span class="token interpolation-punctuation punctuation">&#125;</span></span><span class="token template-punctuation string">`</span></span><span class="token punctuation">)</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre><h2><span id="p53-feng-zhuang-vuex">53 封装 Vuex</span><a href="#p53-feng-zhuang-vuex" class="header-anchor">#</a></h2><p>store/modules/detail.js</p><pre class="line-numbers language-js" data-language="js"><code class="language-js"><span class="token comment">// 引入api</span><span class="token keyword">import</span> <span class="token punctuation">&#123;</span>  reqDetailInfo<span class="token punctuation">&#125;</span> <span class="token keyword">from</span> <span class="token string">'@/api'</span><span class="token keyword">export</span> <span class="token keyword">default</span> <span class="token punctuation">&#123;</span>  state<span class="token operator">:</span> <span class="token punctuation">&#123;</span>    <span class="token comment">// 商品的详情信息对象</span>    detailInfo<span class="token operator">:</span> <span class="token punctuation">&#123;</span><span class="token punctuation">&#125;</span>  <span class="token punctuation">&#125;</span><span class="token punctuation">,</span>  mutations<span class="token operator">:</span> <span class="token punctuation">&#123;</span>    <span class="token comment">// 直接修改商品详情信息对象数据</span>    <span class="token constant">RECEIVE_DETAIL_INFO</span><span class="token punctuation">(</span><span class="token parameter">state<span class="token punctuation">,</span> detailInfo</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>      state<span class="token punctuation">.</span>detailInfo <span class="token operator">=</span> detailInfo    <span class="token punctuation">&#125;</span>  <span class="token punctuation">&#125;</span><span class="token punctuation">,</span>  actions<span class="token operator">:</span> <span class="token punctuation">&#123;</span>    <span class="token comment">// 异步请求获取</span>    <span class="token keyword">async</span> <span class="token function">getDetailInfo</span><span class="token punctuation">(</span><span class="token parameter"><span class="token punctuation">&#123;</span>      commit    <span class="token punctuation">&#125;</span><span class="token punctuation">,</span> skuId</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>      <span class="token keyword">const</span> result <span class="token operator">=</span> <span class="token keyword">await</span> <span class="token function">reqDetailInfo</span><span class="token punctuation">(</span>skuId<span class="token punctuation">)</span>      <span class="token keyword">if</span> <span class="token punctuation">(</span>result<span class="token punctuation">.</span>code <span class="token operator">===</span> <span class="token number">200</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>        <span class="token function">commit</span><span class="token punctuation">(</span><span class="token string">'RECEIVE_DETAIL_INFO'</span><span class="token punctuation">,</span> result<span class="token punctuation">.</span>data<span class="token punctuation">)</span>      <span class="token punctuation">&#125;</span>    <span class="token punctuation">&#125;</span>  <span class="token punctuation">&#125;</span><span class="token punctuation">,</span>  getters<span class="token operator">:</span> <span class="token punctuation">&#123;</span>    <span class="token comment">// 分类信息对象</span>    <span class="token function">categoryView</span><span class="token punctuation">(</span><span class="token parameter">state</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>      <span class="token keyword">return</span> state<span class="token punctuation">.</span>detailInfo<span class="token punctuation">.</span>categoryView <span class="token operator">||</span> <span class="token punctuation">[</span><span class="token punctuation">]</span>    <span class="token punctuation">&#125;</span><span class="token punctuation">,</span>    <span class="token comment">// 销售属性数组</span>    <span class="token function">spuSaleAttrList</span><span class="token punctuation">(</span><span class="token parameter">state</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>      <span class="token keyword">return</span> state<span class="token punctuation">.</span>detailInfo<span class="token punctuation">.</span>spuSaleAttrList <span class="token operator">||</span> <span class="token punctuation">[</span><span class="token punctuation">]</span>    <span class="token punctuation">&#125;</span><span class="token punctuation">,</span>    <span class="token comment">// 单个产品的信息对象</span>    <span class="token function">skuInfo</span><span class="token punctuation">(</span><span class="token parameter">state</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>      <span class="token keyword">return</span> state<span class="token punctuation">.</span>detailInfo<span class="token punctuation">.</span>skuInfo <span class="token operator">||</span> <span class="token punctuation">[</span><span class="token punctuation">]</span>    <span class="token punctuation">&#125;</span><span class="token punctuation">,</span>    <span class="token comment">// 图片轮播图数组</span>    <span class="token function">skuImageList</span><span class="token punctuation">(</span><span class="token parameter">state</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>      <span class="token keyword">const</span> skuInfo <span class="token operator">=</span> state<span class="token punctuation">.</span>detailInfo<span class="token punctuation">.</span>skuInfo      <span class="token keyword">return</span> skuInfo <span class="token operator">?</span> skuInfo<span class="token punctuation">.</span>skuImageList <span class="token operator">:</span> <span class="token punctuation">[</span><span class="token punctuation">]</span>    <span class="token punctuation">&#125;</span><span class="token punctuation">,</span>  <span class="token punctuation">&#125;</span><span class="token punctuation">&#125;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>index.js 引入</p><pre class="line-numbers language-js" data-language="js"><code class="language-js"><span class="token keyword">import</span> home <span class="token keyword">from</span> <span class="token string">'./home'</span><span class="token keyword">import</span> search <span class="token keyword">from</span> <span class="token string">'./search'</span><span class="token keyword">import</span> detail <span class="token keyword">from</span> <span class="token string">'./detail'</span><span class="token keyword">export</span> <span class="token keyword">default</span> <span class="token punctuation">&#123;</span>  home<span class="token punctuation">,</span>  search<span class="token punctuation">,</span>  detail<span class="token punctuation">&#125;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h2><span id="p54-xian-shi-ji-ben-xin-xi">54 显示基本信息</span><a href="#p54-xian-shi-ji-ben-xin-xi" class="header-anchor">#</a></h2><p>Detail 当详情页加载完毕根据id要获取当前商品信息数据对象</p><pre class="line-numbers language-js" data-language="js"><code class="language-js"><span class="token operator">&lt;</span>script<span class="token operator">></span>  <span class="token comment">// 引入图片轮播图组件</span>  <span class="token keyword">import</span> ImageList <span class="token keyword">from</span> <span class="token string">'./ImageList/ImageList'</span>  <span class="token comment">// 引入放大镜组件</span>  <span class="token keyword">import</span> Zoom <span class="token keyword">from</span> <span class="token string">'./Zoom/Zoom'</span>  <span class="token comment">// 引入 Vuex 辅助函数</span>  <span class="token keyword">import</span> <span class="token punctuation">&#123;</span>    mapGetters  <span class="token punctuation">&#125;</span> <span class="token keyword">from</span> <span class="token string">'vuex'</span>  <span class="token keyword">export</span> <span class="token keyword">default</span> <span class="token punctuation">&#123;</span>    name<span class="token operator">:</span> <span class="token string">'Detail'</span><span class="token punctuation">,</span>    components<span class="token operator">:</span> <span class="token punctuation">&#123;</span>      ImageList<span class="token punctuation">,</span>      Zoom    <span class="token punctuation">&#125;</span><span class="token punctuation">,</span>    <span class="token comment">// 组件界面渲染完毕后的生命周期回调</span>    <span class="token keyword">async</span> <span class="token function">mounted</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>      <span class="token keyword">const</span> <span class="token punctuation">&#123;</span>        skuId      <span class="token punctuation">&#125;</span> <span class="token operator">=</span> <span class="token keyword">this</span><span class="token punctuation">.</span>$route<span class="token punctuation">.</span>params      <span class="token comment">// 调用接口 -- 分发actions</span>      <span class="token keyword">this</span><span class="token punctuation">.</span>$store<span class="token punctuation">.</span><span class="token function">dispatch</span><span class="token punctuation">(</span><span class="token string">'getDetailInfo'</span><span class="token punctuation">,</span> skuId<span class="token punctuation">)</span>    <span class="token punctuation">&#125;</span><span class="token punctuation">,</span>    computed<span class="token operator">:</span> <span class="token punctuation">&#123;</span>      <span class="token operator">...</span><span class="token function">mapGetters</span><span class="token punctuation">(</span><span class="token punctuation">[</span><span class="token string">'categoryView'</span><span class="token punctuation">,</span> <span class="token string">'spuSaleAttrList'</span><span class="token punctuation">,</span> <span class="token string">'skuInfo'</span><span class="token punctuation">]</span><span class="token punctuation">)</span>    <span class="token punctuation">&#125;</span><span class="token punctuation">,</span>  <span class="token punctuation">&#125;</span><span class="token operator">&lt;</span><span class="token operator">/</span>script<span class="token operator">></span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><pre class="line-numbers language-vue" data-language="vue"><code class="language-vue">&#x2F;&#x2F; 8      &lt;!-- 导航路径区域 --&gt;      &lt;div class&#x3D;&quot;conPoin&quot;&gt;        &lt;span&gt;&#123;&#123;categoryView.category1Name&#125;&#125;&lt;&#x2F;span&gt;        &lt;span&gt;&#123;&#123;categoryView.category2Name&#125;&#125;&lt;&#x2F;span&gt;        &lt;span&gt;&#123;&#123;categoryView.category3Name&#125;&#125;&lt;&#x2F;span&gt;      &lt;&#x2F;div&gt;&#x2F;&#x2F; 23        &lt;!-- 右侧选择区域布局 --&gt;        &lt;div class&#x3D;&quot;InfoWrap&quot;&gt;          &lt;div class&#x3D;&quot;goodsDetail&quot;&gt;            &lt;h3 class&#x3D;&quot;InfoName&quot;&gt;&#123;&#123;skuInfo.skuName&#125;&#125;&lt;&#x2F;h3&gt;            &lt;p class&#x3D;&quot;news&quot;&gt;&#123;&#123;skuInfo.skuDesc&#125;&#125;&lt;&#x2F;p&gt;            &lt;div class&#x3D;&quot;priceArea&quot;&gt;              &lt;div class&#x3D;&quot;priceArea1&quot;&gt;                &lt;div class&#x3D;&quot;title&quot;&gt;价&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;格&lt;&#x2F;div&gt;                &lt;div class&#x3D;&quot;price&quot;&gt;                  &lt;i&gt;¥&lt;&#x2F;i&gt;                  &lt;em&gt;&#123;&#123;skuInfo.price&#125;&#125;&lt;&#x2F;em&gt;<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h2><span id="p55-bian-li-xiao-shou-shu-xing">55 遍历销售属性</span><a href="#p55-bian-li-xiao-shou-shu-xing" class="header-anchor">#</a></h2><p>Detail 63</p><pre class="line-numbers language-html" data-language="html"><code class="language-html"><span class="token comment">&lt;!-- 销售属性 --></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>choose<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>chooseArea<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>choosed<span class="token punctuation">"</span></span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>dl</span> <span class="token attr-name">v-for</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>(attr,index) in spuSaleAttrList<span class="token punctuation">"</span></span> <span class="token attr-name">:key</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>attr.id<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>      <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>dt</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>title<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>&#123;&#123;attr.saleAttrName&#125;&#125;<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>dt</span><span class="token punctuation">></span></span>      <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>dd</span> <span class="token attr-name">changepirce</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>0<span class="token punctuation">"</span></span> <span class="token attr-name">:class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>&#123;active:spuVal.isChecked===`1`&#125;<span class="token punctuation">"</span></span>        <span class="token attr-name">v-for</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>(spuVal, index) in attr.spuSaleAttrValueList<span class="token punctuation">"</span></span> <span class="token attr-name">:key</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>spuVal.id<span class="token punctuation">"</span></span>        <span class="token attr-name">@click</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>setChecked(spuVal, attr.spuSaleAttrValueList)<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>&#123;&#123;spuVal.saleAttrValueName&#125;&#125;<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>dd</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>dl</span><span class="token punctuation">></span></span>  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">></span></span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>添加 methods 及方法</p><pre class="line-numbers language-js" data-language="js"><code class="language-js">methods<span class="token operator">:</span> <span class="token punctuation">&#123;</span>  <span class="token function">setChecked</span><span class="token punctuation">(</span><span class="token parameter">spuVal<span class="token punctuation">,</span> valueList</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>    <span class="token comment">// 排他效果，先把数组中每个销售属性值对象置0</span>    valueList<span class="token punctuation">.</span><span class="token function">forEach</span><span class="token punctuation">(</span><span class="token parameter">v</span> <span class="token operator">=></span> v<span class="token punctuation">.</span>isChecked <span class="token operator">=</span> <span class="token string">'0'</span><span class="token punctuation">)</span>    <span class="token comment">// 只有当前点击的这个属性值为1</span>    spuVal<span class="token punctuation">.</span>isChecked <span class="token operator">=</span> <span class="token string">"1"</span>  <span class="token punctuation">&#125;</span><span class="token punctuation">&#125;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h1><span id="9-yue-24-ri-day-6">9月24日（day 6）</span><a href="#9-yue-24-ri-day-6" class="header-anchor">#</a></h1><h2><span id="p56-shu-liang-de-zeng-jia-he-jian-shao-cao-zuo">56 数量的增加和减少操作</span><a href="#p56-shu-liang-de-zeng-jia-he-jian-shao-cao-zuo" class="header-anchor">#</a></h2><p>默认值设为1，不能设置为0（减少用户的操作，更好的体验）</p><p>在 Detail  的 data 中创建 skuNum</p><pre class="line-numbers language-js" data-language="js"><code class="language-js"><span class="token function">data</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>  <span class="token keyword">return</span> <span class="token punctuation">&#123;</span>    skuNum<span class="token operator">:</span> <span class="token number">1</span>  <span class="token punctuation">&#125;</span><span class="token punctuation">&#125;</span><span class="token punctuation">,</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>第75行</p><pre class="line-numbers language-html" data-language="html"><code class="language-html">// 75              <span class="token comment">&lt;!-- 数量的增加和减少操作 --></span>              <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>controls<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>                                                       <span class="token comment">&lt;!-- 这里 --></span>                <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>input</span> <span class="token attr-name">autocomplete</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>off<span class="token punctuation">"</span></span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>itxt<span class="token punctuation">"</span></span> <span class="token attr-name">v-model</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>skuNum<span class="token punctuation">"</span></span> <span class="token punctuation">/></span></span>                                                   <span class="token comment">&lt;!-- 这里 --></span>                <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>a</span> <span class="token attr-name">href</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>javascript:<span class="token punctuation">"</span></span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>plus<span class="token punctuation">"</span></span> <span class="token attr-name">@click</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>skuNum++<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>+<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>a</span><span class="token punctuation">></span></span>                <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>a</span> <span class="token attr-name">href</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>javascript:<span class="token punctuation">"</span></span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>mins<span class="token punctuation">"</span></span> <span class="token attr-name">@click</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>skuNum>1?skuNum--:                  <span class="token punctuation">'</span><span class="token punctuation">'</span><span class="token punctuation">"</span></span><span class="token punctuation">></span></span>-<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>a</span><span class="token punctuation">></span></span>              <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">></span></span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h2><span id="p57-xian-shi-xiang-qing-tu-pian-lun-bo">57 显示详情图片（轮播）</span><a href="#p57-xian-shi-xiang-qing-tu-pian-lun-bo" class="header-anchor">#</a></h2><p>ImageList 中更新</p><pre class="line-numbers language-html" data-language="html"><code class="language-html"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>template</span><span class="token punctuation">></span></span>  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>swiper-container<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>swiper-wrapper<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>                              <span class="token comment">&lt;!-- 这里 --></span>      <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>swiper-slide<span class="token punctuation">"</span></span> <span class="token attr-name">v-for</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>(skuImg, index) in skuImageList<span class="token punctuation">"</span></span> <span class="token attr-name">:key</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>skuImg.id<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>              <span class="token comment">&lt;!-- 这里 --></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>img</span> <span class="token attr-name">:src</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>skuImg.imgUrl<span class="token punctuation">"</span></span> <span class="token attr-name">:class:</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>&#123;active:currentIndex===index&#125;<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>        <span class="token comment">&lt;!-- 剩下的img都删除 --></span>      <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">></span></span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><pre class="line-numbers language-js" data-language="js"><code class="language-js"><span class="token operator">&lt;</span>script<span class="token operator">></span>    <span class="token keyword">import</span> <span class="token punctuation">&#123;</span> mapGetters <span class="token punctuation">&#125;</span> <span class="token keyword">from</span> <span class="token string">'vuex'</span>    <span class="token keyword">import</span> Swiper <span class="token keyword">from</span> <span class="token string">'swiper'</span>    <span class="token keyword">export</span> <span class="token keyword">default</span> <span class="token punctuation">&#123;</span>        name<span class="token operator">:</span> <span class="token string">"ImageList"</span><span class="token punctuation">,</span>        <span class="token function">data</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>            <span class="token keyword">return</span> <span class="token punctuation">&#123;</span>                currentIndex<span class="token operator">:</span> <span class="token number">0</span><span class="token punctuation">,</span> <span class="token comment">// 储存某个图片索引</span>            <span class="token punctuation">&#125;</span>        <span class="token punctuation">&#125;</span><span class="token punctuation">,</span>        computed<span class="token operator">:</span><span class="token punctuation">&#123;</span>          <span class="token operator">...</span><span class="token function">mapGetters</span><span class="token punctuation">(</span><span class="token punctuation">[</span><span class="token string">'skuImageList'</span><span class="token punctuation">]</span><span class="token punctuation">)</span>        <span class="token punctuation">&#125;</span>    <span class="token punctuation">&#125;</span><span class="token operator">&lt;</span><span class="token operator">/</span>script<span class="token operator">></span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h2><span id="p58-yin-ru-lun-bo-tu-zu-jian">58 引入轮播图组件</span><a href="#p58-yin-ru-lun-bo-tu-zu-jian" class="header-anchor">#</a></h2><p>ImageList 更新（直接CV）</p><pre class="line-numbers language-html" data-language="html"><code class="language-html"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>template</span><span class="token punctuation">></span></span>  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>swiper-container<span class="token punctuation">"</span></span> <span class="token attr-name">id</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>swL<span class="token punctuation">"</span></span> <span class="token attr-name">ref</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>sw4<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>    <span class="token comment">&lt;!-- 轮播图 --></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>swiper-wrapper<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>      <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>swiper-slide<span class="token punctuation">"</span></span> <span class="token attr-name">v-for</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>(carousel,index) in skuImageList<span class="token punctuation">"</span></span> <span class="token attr-name">:key</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>carousel.id<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>img</span> <span class="token attr-name">:src</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>carousel.imgUrl<span class="token punctuation">"</span></span> <span class="token attr-name">:class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>&#123;active:currentIndex===index&#125;<span class="token punctuation">"</span></span> <span class="token attr-name">@click</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>currentIndex=index<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>      <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>swiper-button-next<span class="token punctuation">"</span></span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>swiper-button-prev<span class="token punctuation">"</span></span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">></span></span>  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>template</span><span class="token punctuation">></span></span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><pre class="line-numbers language-js" data-language="js"><code class="language-js"><span class="token keyword">import</span> Swiper <span class="token keyword">from</span> <span class="token string">'swiper'</span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>增加 watch</p><pre class="line-numbers language-js" data-language="js"><code class="language-js">watch<span class="token operator">:</span> <span class="token punctuation">&#123;</span>  skuImageList<span class="token operator">:</span> <span class="token punctuation">&#123;</span>    <span class="token comment">// 该回调会在监听开始被立即调用</span>    <span class="token function-variable function">handler</span><span class="token operator">:</span> <span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>      <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">.</span>skuImageList<span class="token punctuation">.</span>length <span class="token operator">===</span> <span class="token number">0</span><span class="token punctuation">)</span> <span class="token keyword">return</span>      <span class="token keyword">this</span><span class="token punctuation">.</span><span class="token function">$nextTick</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=></span> <span class="token punctuation">&#123;</span>        <span class="token keyword">var</span> mySwiper <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Swiper</span><span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">.</span>$refs<span class="token punctuation">.</span>sw4<span class="token punctuation">,</span> <span class="token punctuation">&#123;</span>          <span class="token comment">// 每一屏中显示图片的数量</span>          slidesPerView<span class="token operator">:</span> <span class="token number">5</span><span class="token punctuation">,</span>          <span class="token comment">// 每次移动图片的数量</span>          slidesPerGroup<span class="token operator">:</span> <span class="token number">2</span><span class="token punctuation">,</span>          <span class="token comment">// 如果需要分页器</span>          pagination<span class="token operator">:</span> <span class="token punctuation">&#123;</span>            el<span class="token operator">:</span> <span class="token string">'.swiper-pagination'</span><span class="token punctuation">,</span>          <span class="token punctuation">&#125;</span><span class="token punctuation">,</span>          <span class="token comment">// 如果需要前进后退按钮</span>          navigation<span class="token operator">:</span> <span class="token punctuation">&#123;</span>            nextEl<span class="token operator">:</span> <span class="token string">'.swiper-button-next'</span><span class="token punctuation">,</span>            prevEl<span class="token operator">:</span> <span class="token string">'.swiper-button-prev'</span><span class="token punctuation">,</span>          <span class="token punctuation">&#125;</span><span class="token punctuation">,</span>        <span class="token punctuation">&#125;</span><span class="token punctuation">)</span>      <span class="token punctuation">&#125;</span><span class="token punctuation">)</span>    <span class="token punctuation">&#125;</span><span class="token punctuation">,</span>    <span class="token comment">// immediate</span>    immediate<span class="token operator">:</span> <span class="token boolean">true</span>  <span class="token punctuation">&#125;</span><span class="token punctuation">,</span><span class="token punctuation">&#125;</span><span class="token punctuation">,</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h2><span id="p59-fang-da-jing-1">59 放大镜1</span><a href="#p59-fang-da-jing-1" class="header-anchor">#</a></h2><p>ImageList</p><p>更新点击事件</p><pre class="line-numbers language-html" data-language="html"><code class="language-html"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>template</span><span class="token punctuation">></span></span>  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>swiper-container<span class="token punctuation">"</span></span> <span class="token attr-name">id</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>swL<span class="token punctuation">"</span></span> <span class="token attr-name">ref</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>sw4<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>    <span class="token comment">&lt;!-- 轮播图 --></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>swiper-wrapper<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>      <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>swiper-slide<span class="token punctuation">"</span></span> <span class="token attr-name">v-for</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>(carousel,index) in skuImageList<span class="token punctuation">"</span></span> <span class="token attr-name">:key</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>carousel.id<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>        <span class="token comment">&lt;!-- 更新点击事件 --></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>img</span> <span class="token attr-name">:src</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>carousel.imgUrl<span class="token punctuation">"</span></span> <span class="token attr-name">:class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>&#123;active:currentIndex===index&#125;<span class="token punctuation">"</span></span> <span class="token attr-name">@click</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>changeCurrentIndex(index)<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>      <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>swiper-button-next<span class="token punctuation">"</span></span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>swiper-button-prev<span class="token punctuation">"</span></span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">></span></span>  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>template</span><span class="token punctuation">></span></span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>methods 更新</p><pre class="line-numbers language-js" data-language="js"><code class="language-js">methods<span class="token operator">:</span><span class="token punctuation">&#123;</span>  <span class="token function">changeCurrentIndex</span><span class="token punctuation">(</span><span class="token parameter">index</span><span class="token punctuation">)</span><span class="token punctuation">&#123;</span>    <span class="token comment">// 修改当前图片的选中的索引</span>    <span class="token keyword">this</span><span class="token punctuation">.</span>currentIndex <span class="token operator">=</span> index    <span class="token comment">// 分发父级组件的事件</span>    <span class="token keyword">this</span><span class="token punctuation">.</span><span class="token function">$emit</span><span class="token punctuation">(</span><span class="token string">'changeCurrentIndex'</span><span class="token punctuation">,</span> index<span class="token punctuation">)</span>  <span class="token punctuation">&#125;</span><span class="token punctuation">,</span><span class="token punctuation">&#125;</span><span class="token punctuation">,</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>Detail 15行</p><pre class="line-numbers language-html" data-language="html"><code class="language-html"><span class="token comment">&lt;!-- 左侧放大镜区域 --></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>previewWrap<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>  <span class="token comment">&lt;!--放大镜效果--></span>  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>Zoom</span> <span class="token attr-name">v-if</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>skuImageList.length>0<span class="token punctuation">"</span></span> <span class="token attr-name">:imgUrl</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>skuImageList[currentImageIndex].imgUrl<span class="token punctuation">"</span></span>    <span class="token attr-name">:bigImgUrl</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>skuImageList[currentImageIndex].imgUrl<span class="token punctuation">"</span></span> <span class="token punctuation">/></span></span>  <span class="token comment">&lt;!-- 小图列表 --></span>  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>ImageList</span> <span class="token attr-name">@changeCurrentIndex</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>changeCurrentIndex<span class="token punctuation">"</span></span> <span class="token punctuation">/></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">></span></span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>更新data</p><pre class="line-numbers language-js" data-language="js"><code class="language-js"><span class="token function">data</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>  <span class="token keyword">return</span> <span class="token punctuation">&#123;</span>    skuNum<span class="token operator">:</span> <span class="token number">1</span><span class="token punctuation">,</span> <span class="token comment">// 该产品默认的数量</span>    currentImageIndex<span class="token operator">:</span> <span class="token number">0</span> <span class="token comment">// 储存轮播图选择索引</span>  <span class="token punctuation">&#125;</span><span class="token punctuation">&#125;</span><span class="token punctuation">,</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>更新computed</p><pre class="line-numbers language-js" data-language="js"><code class="language-js">computed<span class="token operator">:</span> <span class="token punctuation">&#123;</span>  <span class="token operator">...</span><span class="token function">mapGetters</span><span class="token punctuation">(</span><span class="token punctuation">[</span><span class="token string">'categoryView'</span><span class="token punctuation">,</span> <span class="token string">'spuSaleAttrList'</span><span class="token punctuation">,</span> <span class="token string">'skuInfo'</span><span class="token punctuation">,</span> <span class="token string">'skuImageList'</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">&#125;</span><span class="token punctuation">,</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span></span></code></pre><p>methods 新增</p><pre class="line-numbers language-js" data-language="js"><code class="language-js"><span class="token comment">// 子级组件 imageList中点击某个小图 该图的索引 传递过来</span><span class="token function">changeCurrentIndex</span><span class="token punctuation">(</span><span class="token parameter">index</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>  <span class="token keyword">this</span><span class="token punctuation">.</span>currentImageIndex <span class="token operator">=</span> index<span class="token punctuation">&#125;</span><span class="token punctuation">,</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span></span></code></pre><p>Zoom 中更新</p><pre class="line-numbers language-vue" data-language="vue"><code class="language-vue">&lt;template&gt;  &lt;div class&#x3D;&quot;spec-preview&quot;&gt;    &lt;img :src&#x3D;&quot;imgUrl&quot; &#x2F;&gt;    &lt;div class&#x3D;&quot;mask&quot;&gt;&lt;&#x2F;div&gt;    &lt;div class&#x3D;&quot;big&quot;&gt;      &lt;img src&#x3D;&quot;bigImgUrl&quot; &#x2F;&gt;    &lt;&#x2F;div&gt;    &lt;div class&#x3D;&quot;small&quot;&gt;&lt;&#x2F;div&gt;  &lt;&#x2F;div&gt;&lt;&#x2F;template&gt;&lt;script&gt;  export default &#123;    name: &quot;Zoom&quot;,    props: &#123;      imgUrl: String,      bigImgUrl: String    &#125;  &#125;&lt;&#x2F;script&gt;<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h2><span id="p60-fang-da-jing-2">60 放大镜2</span><a href="#p60-fang-da-jing-2" class="header-anchor">#</a></h2><p>Zoom 替换</p><ul><li>mask --&gt; event</li><li>small --&gt; mask</li></ul><p>加 ref 和点击事件</p><pre class="line-numbers language-html" data-language="html"><code class="language-html"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>template</span><span class="token punctuation">></span></span>  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>spec-preview<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>img</span> <span class="token attr-name">:src</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>imgUrl<span class="token punctuation">"</span></span> <span class="token punctuation">/></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>event<span class="token punctuation">"</span></span> <span class="token attr-name">ref</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>event<span class="token punctuation">"</span></span> <span class="token attr-name">@mousemove</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>handleMove<span class="token punctuation">"</span></span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>big<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>      <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>img</span> <span class="token attr-name">:src</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>bigImgUrl<span class="token punctuation">"</span></span> <span class="token attr-name">ref</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>bigImg<span class="token punctuation">"</span></span> <span class="token punctuation">/></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>mask<span class="token punctuation">"</span></span> <span class="token attr-name">ref</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>mask<span class="token punctuation">"</span></span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">></span></span>  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>template</span><span class="token punctuation">></span></span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>mounted 和 methods 更新</p><pre class="line-numbers language-js" data-language="js"><code class="language-js">  <span class="token punctuation">&#125;</span><span class="token punctuation">,</span>  <span class="token function">mounted</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>    <span class="token comment">// 获取当前遮挡层的宽度</span>    <span class="token keyword">this</span><span class="token punctuation">.</span>maskWidth <span class="token operator">=</span> <span class="token keyword">this</span><span class="token punctuation">.</span>$refs<span class="token punctuation">.</span>event<span class="token punctuation">.</span>clientWidth <span class="token operator">/</span> <span class="token number">2</span>  <span class="token punctuation">&#125;</span><span class="token punctuation">,</span>  methods<span class="token operator">:</span> <span class="token punctuation">&#123;</span>    <span class="token comment">// 鼠标移动事件</span>    <span class="token function">handleMove</span><span class="token punctuation">(</span><span class="token parameter">e</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>      <span class="token comment">// 获取鼠标移动的横纵坐标</span>      <span class="token keyword">const</span> <span class="token punctuation">&#123;</span>        offsetX<span class="token punctuation">,</span>        offsetY      <span class="token punctuation">&#125;</span> <span class="token operator">=</span> e      <span class="token comment">// 获取当前遮挡层的宽度</span>      <span class="token keyword">const</span> maskWidth <span class="token operator">=</span> <span class="token keyword">this</span><span class="token punctuation">.</span>maskWidth      <span class="token comment">// 获取遮挡层对象</span>      <span class="token keyword">const</span> maskDiv <span class="token operator">=</span> <span class="token keyword">this</span><span class="token punctuation">.</span>$refs<span class="token punctuation">.</span>mask      <span class="token comment">// 获取大图</span>      <span class="token keyword">const</span> bigImg <span class="token operator">=</span> <span class="token keyword">this</span><span class="token punctuation">.</span>$refs<span class="token punctuation">.</span>bigImg      <span class="token comment">// 横纵坐标</span>      <span class="token keyword">let</span> left <span class="token operator">=</span> <span class="token number">0</span>      <span class="token keyword">let</span> top <span class="token operator">=</span> <span class="token number">0</span>      <span class="token comment">// 计算鼠标的遮挡层中间的位置</span>      left <span class="token operator">=</span> offsetX <span class="token operator">-</span> maskWidth <span class="token operator">/</span> <span class="token number">2</span>      top <span class="token operator">=</span> offsetY <span class="token operator">-</span> maskWidth <span class="token operator">/</span> <span class="token number">2</span>      <span class="token comment">// 限制</span>      left<span class="token operator">:</span> left <span class="token operator">&lt;</span> <span class="token number">0</span> <span class="token operator">?</span> <span class="token number">0</span> <span class="token operator">:</span> left <span class="token operator">></span> maskWidth <span class="token operator">?</span> maskWidth <span class="token operator">:</span> left      top<span class="token operator">:</span> top <span class="token operator">&lt;</span> <span class="token number">0</span> <span class="token operator">?</span> <span class="token number">0</span> <span class="token operator">:</span> top <span class="token operator">></span> maskWidth <span class="token operator">?</span> maskWidth <span class="token operator">:</span> top      <span class="token comment">// 设置遮挡层的移动的位置</span>      maskDiv<span class="token punctuation">.</span>style<span class="token punctuation">.</span>left <span class="token operator">=</span> left <span class="token operator">+</span> <span class="token string">'px'</span>      maskDiv<span class="token punctuation">.</span>style<span class="token punctuation">.</span>top <span class="token operator">=</span> top <span class="token operator">+</span> <span class="token string">'px'</span>      <span class="token comment">// 设置大图的移动</span>      bigImg<span class="token punctuation">.</span>style<span class="token punctuation">.</span>left <span class="token operator">=</span> <span class="token operator">-</span>left <span class="token operator">*</span> <span class="token number">2</span> <span class="token operator">+</span> <span class="token string">'px'</span>      bigImg<span class="token punctuation">.</span>style<span class="token punctuation">.</span>top <span class="token operator">=</span> <span class="token operator">-</span>top <span class="token operator">*</span> <span class="token number">2</span> <span class="token operator">+</span> <span class="token string">'px'</span>    <span class="token punctuation">&#125;</span>  <span class="token punctuation">&#125;</span><span class="token punctuation">,</span><span class="token punctuation">&#125;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>less 中 .big 加</p><pre class="line-numbers language-less" data-language="less"><code class="language-less">background: #fff;<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><h2><span id="p61-tian-jia-gou-wu-che-cheng-gong">61 添加购物车成功</span><a href="#p61-tian-jia-gou-wu-che-cheng-gong" class="header-anchor">#</a></h2><p>AddCartSuccess 拷贝到 pages</p><p>routes.js 注册路由组件</p><pre class="line-numbers language-js" data-language="js"><code class="language-js"><span class="token keyword">import</span> AddCartSuccess <span class="token keyword">from</span> <span class="token string">'@/pages/AddCartSuccess'</span><span class="token comment">// 40</span>  <span class="token comment">// AddCartSuccess -- query</span>  <span class="token punctuation">&#123;</span>    path<span class="token operator">:</span> <span class="token string">'/addcartsuccess'</span><span class="token punctuation">,</span>    component<span class="token operator">:</span> AddCartSuccess  <span class="token punctuation">&#125;</span><span class="token punctuation">,</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>在 Detail 详情页中 找到 加入购物车 84</p><pre class="line-numbers language-html" data-language="html"><code class="language-html"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>a</span> <span class="token attr-name">href</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>javascript:;<span class="token punctuation">"</span></span> <span class="token attr-name">@click</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>addToCart<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>加入购物车<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>a</span><span class="token punctuation">></span></span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>methods 新增</p><pre class="line-numbers language-js" data-language="js"><code class="language-js"><span class="token comment">// 点击加入购物车，跳转到添加购物车成功界面</span><span class="token function">addToCart</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>  <span class="token keyword">this</span><span class="token punctuation">.</span>$router<span class="token punctuation">.</span><span class="token function">push</span><span class="token punctuation">(</span><span class="token punctuation">&#123;</span>    path<span class="token operator">:</span> <span class="token string">'/addcartsuccess'</span><span class="token punctuation">,</span>    query<span class="token operator">:</span> <span class="token punctuation">&#123;</span>      skuId<span class="token operator">:</span> <span class="token keyword">this</span><span class="token punctuation">.</span>skuInfo<span class="token punctuation">.</span>id<span class="token punctuation">,</span>      skuNum<span class="token operator">:</span> <span class="token keyword">this</span><span class="token punctuation">.</span>skuNum    <span class="token punctuation">&#125;</span>  <span class="token punctuation">&#125;</span><span class="token punctuation">)</span><span class="token punctuation">&#125;</span><span class="token punctuation">,</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>AddCartSuccess 8 对应的图片</p><pre class="line-numbers language-html" data-language="html"><code class="language-html"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>img</span> <span class="token attr-name">src</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>./images/s3.png<span class="token punctuation">"</span></span><span class="token punctuation">></span></span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><h2><span id="p62-feng-zhuang-api-jie-kou-han-shu">62 封装api接口函数</span><a href="#p62-feng-zhuang-api-jie-kou-han-shu" class="header-anchor">#</a></h2><p>添加 api 接口函数</p><pre class="line-numbers language-js" data-language="js"><code class="language-js"><span class="token comment">// 添加购物车接口函数</span><span class="token keyword">export</span> <span class="token keyword">const</span> <span class="token function-variable function">reqAddToCart</span> <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token parameter">skuId<span class="token punctuation">,</span> skuNum</span><span class="token punctuation">)</span> <span class="token operator">=></span> ajax<span class="token punctuation">.</span><span class="token function">post</span><span class="token punctuation">(</span><span class="token template-string"><span class="token template-punctuation string">`</span><span class="token string">/cart/addToCart/</span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">$&#123;</span>skuId<span class="token interpolation-punctuation punctuation">&#125;</span></span><span class="token string">/</span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">$&#123;</span>skuNum<span class="token interpolation-punctuation punctuation">&#125;</span></span><span class="token template-punctuation string">`</span></span><span class="token punctuation">)</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre><p>store/modules/ 新建 shopcart.js 在 index.js 注册</p><pre class="line-numbers language-js" data-language="js"><code class="language-js"><span class="token keyword">import</span> home <span class="token keyword">from</span> <span class="token string">'./home'</span><span class="token keyword">import</span> search <span class="token keyword">from</span> <span class="token string">'./search'</span><span class="token keyword">import</span> detail <span class="token keyword">from</span> <span class="token string">'./detail'</span><span class="token keyword">import</span> shopcart <span class="token keyword">from</span> <span class="token string">'./shopcart'</span><span class="token keyword">export</span> <span class="token keyword">default</span> <span class="token punctuation">&#123;</span>  home<span class="token punctuation">,</span>  search<span class="token punctuation">,</span>  detail<span class="token punctuation">,</span>  shopcart<span class="token punctuation">&#125;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><pre class="line-numbers language-js" data-language="js"><code class="language-js"><span class="token comment">// 引入api</span><span class="token keyword">import</span> <span class="token punctuation">&#123;</span>  reqAddToCart<span class="token punctuation">&#125;</span> <span class="token keyword">from</span> <span class="token string">'@/api'</span><span class="token keyword">export</span> <span class="token keyword">default</span> <span class="token punctuation">&#123;</span>  state<span class="token operator">:</span> <span class="token punctuation">&#123;</span>    shopList<span class="token operator">:</span> <span class="token punctuation">[</span><span class="token punctuation">]</span> <span class="token comment">// 购物车中的商品信息按钮</span>  <span class="token punctuation">&#125;</span><span class="token punctuation">,</span>  mutations<span class="token operator">:</span> <span class="token punctuation">&#123;</span><span class="token punctuation">&#125;</span><span class="token punctuation">,</span>  actions<span class="token operator">:</span> <span class="token punctuation">&#123;</span>    <span class="token comment">// 添加购物车操作</span>    <span class="token keyword">async</span> <span class="token function">addToCart1</span><span class="token punctuation">(</span><span class="token parameter"><span class="token punctuation">&#123;</span>      commit    <span class="token punctuation">&#125;</span><span class="token punctuation">,</span> <span class="token punctuation">&#123;</span>      skuId<span class="token punctuation">,</span>      skuNum    <span class="token punctuation">&#125;</span></span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>      <span class="token keyword">const</span> result <span class="token operator">=</span> <span class="token keyword">await</span> <span class="token function">reqAddToCart</span><span class="token punctuation">(</span>skuId<span class="token punctuation">,</span> skuNum<span class="token punctuation">)</span>      <span class="token keyword">if</span> <span class="token punctuation">(</span>result<span class="token punctuation">.</span>code <span class="token operator">===</span> <span class="token number">200</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>        console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">"添加成功"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>      <span class="token punctuation">&#125;</span> <span class="token keyword">else</span> <span class="token punctuation">&#123;</span>        console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">"添加失败"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>      <span class="token punctuation">&#125;</span>    <span class="token punctuation">&#125;</span>  <span class="token punctuation">&#125;</span><span class="token punctuation">,</span>  getters<span class="token operator">:</span> <span class="token punctuation">&#123;</span>  <span class="token punctuation">&#125;</span><span class="token punctuation">&#125;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>Detail</p><pre class="line-numbers language-js" data-language="js"><code class="language-js">  <span class="token comment">// 点击加入购物车，跳转到添加购物车成功界面</span>  <span class="token function">addToCart</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>    <span class="token keyword">const</span> query <span class="token operator">=</span> <span class="token punctuation">&#123;</span>      skuId<span class="token operator">:</span> <span class="token keyword">this</span><span class="token punctuation">.</span>skuInfo<span class="token punctuation">.</span>id<span class="token punctuation">,</span>      skuNum<span class="token operator">:</span> <span class="token keyword">this</span><span class="token punctuation">.</span>skuNum    <span class="token punctuation">&#125;</span>    <span class="token keyword">this</span><span class="token punctuation">.</span>$store<span class="token punctuation">.</span><span class="token function">dispatch</span><span class="token punctuation">(</span><span class="token string">'addToCart1'</span><span class="token punctuation">,</span> query<span class="token punctuation">)</span>    <span class="token keyword">this</span><span class="token punctuation">.</span>$router<span class="token punctuation">.</span><span class="token function">push</span><span class="token punctuation">(</span><span class="token punctuation">&#123;</span>        path<span class="token operator">:</span> <span class="token string">'/addcartsuccess'</span><span class="token punctuation">,</span>        query      <span class="token punctuation">&#125;</span>    <span class="token punctuation">)</span><span class="token punctuation">&#125;</span><span class="token punctuation">,</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h2><span id="p63-hui-diao-han-shu">63 回调函数</span><a href="#p63-hui-diao-han-shu" class="header-anchor">#</a></h2><p>shopcart.js 更新</p><pre class="line-numbers language-js" data-language="js"><code class="language-js">actions<span class="token operator">:</span> <span class="token punctuation">&#123;</span>  <span class="token comment">// 添加购物车操作</span>  <span class="token keyword">async</span> <span class="token function">addToCart1</span><span class="token punctuation">(</span><span class="token parameter"><span class="token punctuation">&#123;</span>    commit  <span class="token punctuation">&#125;</span><span class="token punctuation">,</span> <span class="token punctuation">&#123;</span>    skuId<span class="token punctuation">,</span>    skuNum<span class="token punctuation">,</span>    callback  <span class="token punctuation">&#125;</span></span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>    <span class="token keyword">const</span> result <span class="token operator">=</span> <span class="token keyword">await</span> <span class="token function">reqAddToCart</span><span class="token punctuation">(</span>skuId<span class="token punctuation">,</span> skuNum<span class="token punctuation">,</span> callback<span class="token punctuation">)</span>    <span class="token keyword">if</span> <span class="token punctuation">(</span>result<span class="token punctuation">.</span>code <span class="token operator">===</span> <span class="token number">200</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>      <span class="token function">callback</span><span class="token punctuation">(</span><span class="token string">''</span><span class="token punctuation">)</span>    <span class="token punctuation">&#125;</span> <span class="token keyword">else</span> <span class="token punctuation">&#123;</span>      <span class="token function">callback</span><span class="token punctuation">(</span>result<span class="token punctuation">.</span>message <span class="token operator">||</span> <span class="token string">'添加失败'</span><span class="token punctuation">)</span>    <span class="token punctuation">&#125;</span>  <span class="token punctuation">&#125;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>Detail 更新</p><pre class="line-numbers language-js" data-language="js"><code class="language-js"><span class="token comment">// 点击加入购物车，跳转到添加购物车成功界面</span><span class="token function">addToCart</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>  <span class="token keyword">const</span> query <span class="token operator">=</span> <span class="token punctuation">&#123;</span>    skuId<span class="token operator">:</span> <span class="token keyword">this</span><span class="token punctuation">.</span>skuInfo<span class="token punctuation">.</span>id<span class="token punctuation">,</span>    skuNum<span class="token operator">:</span> <span class="token keyword">this</span><span class="token punctuation">.</span>skuNum  <span class="token punctuation">&#125;</span>  <span class="token comment">// 分发 有可能不成功</span>  <span class="token keyword">this</span><span class="token punctuation">.</span>$store<span class="token punctuation">.</span><span class="token function">dispatch</span><span class="token punctuation">(</span><span class="token string">'addToCart1'</span><span class="token punctuation">,</span> <span class="token punctuation">&#123;</span>    <span class="token operator">...</span>query<span class="token punctuation">,</span>    callback<span class="token operator">:</span> <span class="token keyword">this</span><span class="token punctuation">.</span>callback  <span class="token punctuation">&#125;</span><span class="token punctuation">)</span><span class="token punctuation">&#125;</span><span class="token punctuation">,</span><span class="token comment">// 回调函数</span><span class="token function">callback</span><span class="token punctuation">(</span><span class="token parameter">error</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>  <span class="token comment">// 成功</span>  <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token operator">!</span>error<span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>    <span class="token keyword">const</span> query <span class="token operator">=</span> <span class="token punctuation">&#123;</span>      skuId<span class="token operator">:</span> <span class="token keyword">this</span><span class="token punctuation">.</span>skuInfo<span class="token punctuation">.</span>id<span class="token punctuation">,</span>      skuNum<span class="token operator">:</span> <span class="token keyword">this</span><span class="token punctuation">.</span>skuNum    <span class="token punctuation">&#125;</span>    <span class="token keyword">this</span><span class="token punctuation">.</span>$router<span class="token punctuation">.</span><span class="token function">push</span><span class="token punctuation">(</span><span class="token punctuation">&#123;</span>      path<span class="token operator">:</span> <span class="token string">'/addcartsuccess'</span><span class="token punctuation">,</span>      query    <span class="token punctuation">&#125;</span><span class="token punctuation">)</span>  <span class="token punctuation">&#125;</span> <span class="token keyword">else</span> <span class="token punctuation">&#123;</span>    <span class="token comment">// 失败</span>    <span class="token function">alert</span><span class="token punctuation">(</span>error<span class="token punctuation">)</span>  <span class="token punctuation">&#125;</span><span class="token punctuation">&#125;</span><span class="token punctuation">,</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h2><span id="p64-dispatch-fan-hui-promise">64 dispatch 返回 Promise</span><a href="#p64-dispatch-fan-hui-promise" class="header-anchor">#</a></h2><p>shopcart.js 更新 actions</p><pre class="line-numbers language-js" data-language="js"><code class="language-js"><span class="token keyword">async</span> <span class="token function">addToCart2</span><span class="token punctuation">(</span><span class="token parameter"><span class="token punctuation">&#123;</span>    commit  <span class="token punctuation">&#125;</span><span class="token punctuation">,</span> <span class="token punctuation">&#123;</span>    skuId<span class="token punctuation">,</span>    skuNum  <span class="token punctuation">&#125;</span></span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>    <span class="token keyword">const</span> result <span class="token operator">=</span> <span class="token keyword">await</span> <span class="token function">reqAddToCart</span><span class="token punctuation">(</span>skuId<span class="token punctuation">,</span> skuNum<span class="token punctuation">)</span>    <span class="token keyword">return</span> result<span class="token punctuation">.</span>code <span class="token operator">===</span> <span class="token number">200</span> <span class="token operator">?</span> <span class="token string">''</span> <span class="token operator">:</span> result<span class="token punctuation">.</span>message <span class="token operator">||</span> <span class="token string">'添加失败'</span>  <span class="token punctuation">&#125;</span><span class="token punctuation">,</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>Detail 更新 addToCart 删除callback</p><pre class="line-numbers language-js" data-language="js"><code class="language-js">  <span class="token comment">// 点击加入购物车，跳转到添加购物车成功界面</span>  <span class="token comment">// + async</span>  <span class="token keyword">async</span> <span class="token function">addToCart</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>    <span class="token keyword">const</span> query <span class="token operator">=</span> <span class="token punctuation">&#123;</span>      skuId<span class="token operator">:</span> <span class="token keyword">this</span><span class="token punctuation">.</span>$route<span class="token punctuation">.</span>params<span class="token punctuation">.</span>skuId<span class="token punctuation">,</span>      skuNum<span class="token operator">:</span> <span class="token keyword">this</span><span class="token punctuation">.</span>skuNum    <span class="token punctuation">&#125;</span>    <span class="token comment">// 分发 有可能不成功</span>    <span class="token keyword">const</span> errorMsg <span class="token operator">=</span> <span class="token keyword">await</span> <span class="token keyword">this</span><span class="token punctuation">.</span>$store<span class="token punctuation">.</span><span class="token function">dispatch</span><span class="token punctuation">(</span><span class="token string">'addToCart2'</span><span class="token punctuation">,</span> <span class="token punctuation">&#123;</span>      <span class="token operator">...</span>query    <span class="token punctuation">&#125;</span><span class="token punctuation">)</span>    <span class="token comment">// 成功</span>    <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token operator">!</span>errorMsg<span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>      <span class="token keyword">this</span><span class="token punctuation">.</span>$router<span class="token punctuation">.</span><span class="token function">push</span><span class="token punctuation">(</span><span class="token punctuation">&#123;</span>        path<span class="token operator">:</span> <span class="token string">'/addcartsuccess'</span><span class="token punctuation">,</span>        query      <span class="token punctuation">&#125;</span><span class="token punctuation">)</span>    <span class="token punctuation">&#125;</span> <span class="token keyword">else</span> <span class="token punctuation">&#123;</span>      <span class="token comment">// 失败</span>      <span class="token function">alert</span><span class="token punctuation">(</span>errorMsg<span class="token punctuation">)</span>    <span class="token punctuation">&#125;</span>  <span class="token punctuation">&#125;</span><span class="token punctuation">,</span><span class="token punctuation">&#125;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>AddCartSuccess 更新 16行</p><pre class="line-numbers language-html" data-language="html"><code class="language-html"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>router-link</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>sui-btn btn-xlarge<span class="token punctuation">"</span></span> <span class="token attr-name">:to</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>&#123;name:<span class="token punctuation">'</span>detail<span class="token punctuation">'</span>, params:&#123;skuId:this.$route.query.skuId&#125;&#125;<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>  查看商品详情<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>router-link</span><span class="token punctuation">></span></span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span></span></code></pre><h2><span id="p65-addcartsuccess-geng-xin">65 AddCartSuccess 更新</span><a href="#p65-addcartsuccess-geng-xin" class="header-anchor">#</a></h2><p>Detail 更新 addToCart</p><pre class="line-numbers language-js" data-language="js"><code class="language-js"><span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token operator">!</span>errorMsg<span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>  <span class="token comment">// 通过浏览器缓存当前商品信息数据对象</span>  window<span class="token punctuation">.</span>localStorage<span class="token punctuation">.</span><span class="token function">setItem</span><span class="token punctuation">(</span><span class="token string">'SKU_INFO'</span><span class="token punctuation">,</span> <span class="token constant">JSON</span><span class="token punctuation">.</span><span class="token function">stringify</span><span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">.</span>skuInfo<span class="token punctuation">)</span><span class="token punctuation">)</span>  <span class="token comment">// 路由跳转</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span></span></code></pre><p>AddCartSuccess 更新 8行</p><pre class="line-numbers language-html" data-language="html"><code class="language-html">  <span class="token comment">&lt;!-- 1 --></span>  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>img</span> <span class="token attr-name">:src</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>skuInfo.skuDefaultImg<span class="token punctuation">"</span></span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>right-info<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>p</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>title<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>&#123;&#123;skuInfo.skuName&#125;&#125;<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>p</span><span class="token punctuation">></span></span>  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>p</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>attr<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>颜色：24K金 数量：&#123;&#123;this.$route.query.skuNum&#125;&#125;<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>p</span><span class="token punctuation">></span></span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><pre class="line-numbers language-js" data-language="js"><code class="language-js"><span class="token function">data</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>  <span class="token keyword">return</span> <span class="token punctuation">&#123;</span>    skuInfo<span class="token operator">:</span> <span class="token punctuation">&#123;</span><span class="token punctuation">&#125;</span> <span class="token comment">// 响应式数据对象</span>  <span class="token punctuation">&#125;</span><span class="token punctuation">&#125;</span><span class="token punctuation">,</span><span class="token function">mounted</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>  <span class="token comment">// 浏览器的缓存读取</span>  <span class="token keyword">this</span><span class="token punctuation">.</span>skuInfo <span class="token operator">=</span> <span class="token constant">JSON</span><span class="token punctuation">.</span><span class="token function">parse</span><span class="token punctuation">(</span>window<span class="token punctuation">.</span>localStorage<span class="token punctuation">.</span><span class="token function">getItem</span><span class="token punctuation">(</span><span class="token string">'SKU_INFO'</span><span class="token punctuation">)</span> <span class="token operator">||</span> <span class="token punctuation">&#123;</span><span class="token punctuation">&#125;</span><span class="token punctuation">)</span><span class="token punctuation">&#125;</span><span class="token punctuation">,</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h2><span id="p66-gou-wu-che">66 购物车</span><a href="#p66-gou-wu-che" class="header-anchor">#</a></h2><p>新建购物车组件 ShopCart 在 pages里面（直接拷贝）</p><p>routes.js 注册为路由组件</p><pre class="line-numbers language-js" data-language="js"><code class="language-js"><span class="token keyword">import</span> ShopCart <span class="token keyword">from</span> <span class="token string">'@/pages/ShopCart'</span><span class="token comment">// 46</span>  <span class="token comment">// ShopCart</span>  <span class="token punctuation">&#123;</span>    path<span class="token operator">:</span> <span class="token string">'/shopcart'</span><span class="token punctuation">,</span>    component<span class="token operator">:</span> ShopCart  <span class="token punctuation">&#125;</span><span class="token punctuation">,</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>AddCartSuccess 21行</p><pre class="line-numbers language-js" data-language="js"><code class="language-js"><span class="token operator">&lt;</span><span class="token operator">!</span><span class="token operator">--</span> <span class="token operator">&lt;</span>a href<span class="token operator">=</span><span class="token string">"javascript:"</span><span class="token operator">></span>去购物车结算 <span class="token operator">></span> <span class="token operator">&lt;</span><span class="token operator">/</span>a<span class="token operator">></span> <span class="token operator">--</span><span class="token operator">></span><span class="token operator">&lt;</span>router<span class="token operator">-</span>link to<span class="token operator">=</span><span class="token string">"/shopcart"</span><span class="token operator">></span>去购物车结算<span class="token operator">&lt;</span><span class="token operator">/</span>router<span class="token operator">-</span>link<span class="token operator">></span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre><h2><span id="p67-sheng-cheng-lin-shi-yong-hu-id">67 生成临时用户id</span><a href="#p67-sheng-cheng-lin-shi-yong-hu-id" class="header-anchor">#</a></h2><p>生成临时用户id</p><p>uuidjs <code>npm i uuidjs</code></p><p>utils 中新建 storageUtils.js</p><pre class="line-numbers language-js" data-language="js"><code class="language-js"><span class="token comment">// 暴露出去一个函数，用户生成用户的临时id凭证</span><span class="token comment">// 引入 uuid</span><span class="token keyword">import</span> <span class="token constant">UUID</span> <span class="token keyword">from</span> <span class="token string">'uuidjs'</span><span class="token keyword">export</span> <span class="token keyword">function</span> <span class="token function">getUUID</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>  <span class="token comment">// 先从浏览器的缓存中读取用户的临时凭证</span>  <span class="token keyword">let</span> uuid <span class="token operator">=</span> localStorage<span class="token punctuation">.</span><span class="token function">getItem</span><span class="token punctuation">(</span><span class="token string">'UUID_KEY'</span><span class="token punctuation">)</span>  <span class="token comment">// 判断是否存在</span>  <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token operator">!</span>uuid<span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>    <span class="token comment">// 产生临时用户id</span>    uuid <span class="token operator">=</span> <span class="token constant">UUID</span><span class="token punctuation">.</span><span class="token function">generate</span><span class="token punctuation">(</span><span class="token punctuation">)</span>    <span class="token comment">// 保存到浏览器</span>    localStorage<span class="token punctuation">.</span><span class="token function">setItem</span><span class="token punctuation">(</span><span class="token string">'UUID_KEY'</span><span class="token punctuation">,</span> uuid<span class="token punctuation">)</span>  <span class="token punctuation">&#125;</span>  <span class="token comment">// 返回</span>  <span class="token keyword">return</span> uuid<span class="token punctuation">&#125;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>store/modules 中新建一个 user.js</p><pre class="line-numbers language-js" data-language="js"><code class="language-js"><span class="token comment">// 用户模块</span><span class="token comment">// 引入 生成uuid 工具</span><span class="token keyword">import</span> <span class="token punctuation">&#123;</span>  getUUID<span class="token punctuation">&#125;</span> <span class="token keyword">from</span> <span class="token string">'@/utils/storageUtils'</span><span class="token keyword">export</span> <span class="token keyword">default</span> <span class="token punctuation">&#123;</span>  state<span class="token operator">:</span> <span class="token punctuation">&#123;</span>    userInfo<span class="token operator">:</span> <span class="token punctuation">&#123;</span><span class="token punctuation">&#125;</span><span class="token punctuation">,</span> <span class="token comment">// 用户信息对象</span>    userTempId<span class="token operator">:</span> <span class="token function">getUUID</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token comment">// 用户的临时id</span>  <span class="token punctuation">&#125;</span><span class="token punctuation">,</span>  mutations<span class="token operator">:</span> <span class="token punctuation">&#123;</span><span class="token punctuation">&#125;</span><span class="token punctuation">,</span>  actions<span class="token operator">:</span> <span class="token punctuation">&#123;</span><span class="token punctuation">&#125;</span><span class="token punctuation">,</span>  getters<span class="token operator">:</span> <span class="token punctuation">&#123;</span><span class="token punctuation">&#125;</span><span class="token punctuation">&#125;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>在index.js中注册</p><pre class="line-numbers language-js" data-language="js"><code class="language-js"><span class="token keyword">import</span> home <span class="token keyword">from</span> <span class="token string">'./home'</span><span class="token keyword">import</span> search <span class="token keyword">from</span> <span class="token string">'./search'</span><span class="token keyword">import</span> detail <span class="token keyword">from</span> <span class="token string">'./detail'</span><span class="token keyword">import</span> shopcart <span class="token keyword">from</span> <span class="token string">'./shopcart'</span><span class="token keyword">import</span> user <span class="token keyword">from</span> <span class="token string">'./user'</span><span class="token keyword">export</span> <span class="token keyword">default</span> <span class="token punctuation">&#123;</span>  home<span class="token punctuation">,</span>  search<span class="token punctuation">,</span>  detail<span class="token punctuation">,</span>  shopcart<span class="token punctuation">,</span>  user<span class="token punctuation">&#125;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>api/ajax.js</p><pre class="line-numbers language-js" data-language="js"><code class="language-js"><span class="token keyword">import</span> store <span class="token keyword">from</span> <span class="token string">'@/store'</span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>更新请求拦截器</p><pre class="line-numbers language-js" data-language="js"><code class="language-js"><span class="token comment">// 请求拦截器</span>ajax<span class="token punctuation">.</span>interceptors<span class="token punctuation">.</span>request<span class="token punctuation">.</span><span class="token function">use</span><span class="token punctuation">(</span><span class="token parameter">config</span> <span class="token operator">=></span> <span class="token punctuation">&#123;</span>  Nprogress<span class="token punctuation">.</span><span class="token function">start</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token comment">// 显示进度条</span>  <span class="token comment">// 在请求头中携带用户的临时凭证id</span>  config<span class="token punctuation">.</span>headers<span class="token punctuation">[</span><span class="token string">'userTempId'</span><span class="token punctuation">]</span> <span class="token operator">=</span> store<span class="token punctuation">.</span>state<span class="token punctuation">.</span>user<span class="token punctuation">.</span>userTempId  <span class="token keyword">return</span> config<span class="token punctuation">&#125;</span><span class="token punctuation">)</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>调用接口发请求的时候，在请求头携带用户临时id</p><h1><span id="9-yue-25-ri-day-7">9月25日（day 7）</span><a href="#9-yue-25-ri-day-7" class="header-anchor">#</a></h1><h2><span id="p68-huo-qu-gou-wu-che-shu-ju-feng-zhuang-api-vuex">68 获取购物车数据（封装api + vuex）</span><a href="#p68-huo-qu-gou-wu-che-shu-ju-feng-zhuang-api-vuex" class="header-anchor">#</a></h2><p>api +</p><pre class="line-numbers language-js" data-language="js"><code class="language-js"><span class="token comment">// 获取购物车中的商品信息列表</span><span class="token keyword">export</span> <span class="token keyword">const</span> <span class="token function-variable function">reqShopCartList</span> <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=></span> ajax<span class="token punctuation">.</span><span class="token function">get</span><span class="token punctuation">(</span><span class="token string">'/cart/cartList'</span><span class="token punctuation">)</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre><p>store/modules/shopcart.js +</p><pre class="line-numbers language-js" data-language="js"><code class="language-js"><span class="token comment">// 引入api</span><span class="token keyword">import</span> <span class="token punctuation">&#123;</span> reqAddToCart<span class="token punctuation">,</span> reqShopCartList <span class="token punctuation">&#125;</span> <span class="token keyword">from</span> <span class="token string">'@/api'</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre><pre class="line-numbers language-js" data-language="js"><code class="language-js">mutations<span class="token operator">:</span> <span class="token punctuation">&#123;</span>  <span class="token comment">// 直接修改 shopList 数据</span>  <span class="token constant">RECEIVE_SHOP_LIST</span><span class="token punctuation">(</span><span class="token parameter">state<span class="token punctuation">,</span> shopList</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>    state<span class="token punctuation">.</span>shopList <span class="token operator">=</span> shopList  <span class="token punctuation">&#125;</span><span class="token punctuation">&#125;</span><span class="token punctuation">,</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>actions 中 +</p><pre class="line-numbers language-js" data-language="js"><code class="language-js"><span class="token comment">// 获取购物车中的商品信息对象</span><span class="token keyword">async</span> <span class="token function">getShopList</span><span class="token punctuation">(</span><span class="token parameter"><span class="token punctuation">&#123;</span> commit <span class="token punctuation">&#125;</span></span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>  <span class="token comment">// 调用 api 接口，发送异步请求</span>  <span class="token keyword">const</span> result <span class="token operator">=</span> <span class="token keyword">await</span> <span class="token function">reqShopCartList</span><span class="token punctuation">(</span><span class="token punctuation">)</span>  <span class="token keyword">if</span> <span class="token punctuation">(</span>result<span class="token punctuation">.</span>code <span class="token operator">===</span> <span class="token number">200</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>    <span class="token comment">// 更新数据</span>    <span class="token function">commit</span><span class="token punctuation">(</span><span class="token string">'RECEIVE_SHOP_LIST'</span><span class="token punctuation">,</span> result<span class="token punctuation">.</span>data<span class="token punctuation">)</span>  <span class="token punctuation">&#125;</span><span class="token punctuation">&#125;</span><span class="token punctuation">,</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>ShopCart 更新</p><pre class="line-numbers language-js" data-language="js"><code class="language-js"><span class="token keyword">export</span> <span class="token keyword">default</span> <span class="token punctuation">&#123;</span>  name<span class="token operator">:</span> <span class="token string">'ShopCart'</span><span class="token punctuation">,</span>  <span class="token function">mounted</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>    <span class="token comment">// 获取购物车中的商品数据</span>    <span class="token keyword">this</span><span class="token punctuation">.</span><span class="token function">getShopCartList</span><span class="token punctuation">(</span><span class="token punctuation">)</span>  <span class="token punctuation">&#125;</span><span class="token punctuation">,</span>  methods<span class="token operator">:</span> <span class="token punctuation">&#123;</span>    <span class="token function">getShopCartList</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>      <span class="token keyword">this</span><span class="token punctuation">.</span>$store<span class="token punctuation">.</span><span class="token function">dispatch</span><span class="token punctuation">(</span><span class="token string">'getShopList'</span><span class="token punctuation">)</span>    <span class="token punctuation">&#125;</span>  <span class="token punctuation">&#125;</span><span class="token punctuation">&#125;</span><span class="token operator">&lt;</span><span class="token operator">/</span>script<span class="token operator">></span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h2><span id="p69-xuan-ran-gou-wu-che-nei-rong">69 渲染购物车内容</span><a href="#p69-xuan-ran-gou-wu-che-nei-rong" class="header-anchor">#</a></h2><pre class="line-numbers language-js" data-language="js"><code class="language-js"><span class="token keyword">import</span> <span class="token punctuation">&#123;</span> mapState <span class="token punctuation">&#125;</span> <span class="token keyword">from</span> <span class="token string">'vuex'</span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><pre class="line-numbers language-js" data-language="js"><code class="language-js">computed<span class="token operator">:</span> <span class="token punctuation">&#123;</span>  <span class="token operator">...</span><span class="token function">mapState</span><span class="token punctuation">(</span><span class="token punctuation">&#123;</span> <span class="token function-variable function">shopList</span><span class="token operator">:</span> <span class="token parameter">state</span> <span class="token operator">=></span> state<span class="token punctuation">.</span>shopcart<span class="token punctuation">.</span>shopList <span class="token punctuation">&#125;</span><span class="token punctuation">)</span><span class="token punctuation">&#125;</span><span class="token punctuation">,</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span></span></code></pre><p>14行 <code>&lt;ul class=&quot;cart-list&quot;&gt;</code> 删掉留一个</p><pre class="line-numbers language-html" data-language="html"><code class="language-html"><span class="token comment">&lt;!-- 选中 --></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>li</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>cart-list-con1<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>input</span> <span class="token attr-name">type</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>checkbox<span class="token punctuation">"</span></span> <span class="token attr-name">name</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>chk_list<span class="token punctuation">"</span></span><span class="token punctuation">/></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>li</span><span class="token punctuation">></span></span><span class="token comment">&lt;!-- 图片和名字 --></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>li</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>cart-list-con2<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>img</span> <span class="token attr-name">:src</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>item.imgUrl<span class="token punctuation">"</span></span> <span class="token punctuation">/></span></span>  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>item-msg<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>&#123;&#123; item.skuName &#125;&#125;<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>li</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>li</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>cart-list-con3<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>item-txt<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>绝版<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>li</span><span class="token punctuation">></span></span><span class="token comment">&lt;!-- 价格 --></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>li</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>cart-list-con4<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>span</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>price<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>&#123;&#123; item.skuPrice &#125;&#125;<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>span</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>li</span><span class="token punctuation">></span></span><span class="token comment">&lt;!-- 加减 --></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>li</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>cart-list-con5<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>a</span> <span class="token attr-name">href</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>javascript:void(0)<span class="token punctuation">"</span></span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>mins<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>-<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>a</span><span class="token punctuation">></span></span>  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>input</span>    <span class="token attr-name">autocomplete</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>off<span class="token punctuation">"</span></span>    <span class="token attr-name">type</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>text<span class="token punctuation">"</span></span>    <span class="token attr-name">minnum</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>1<span class="token punctuation">"</span></span>    <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>itxt<span class="token punctuation">"</span></span>  <span class="token punctuation">/></span></span>  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>a</span> <span class="token attr-name">href</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>javascript:void(0)<span class="token punctuation">"</span></span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>plus<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>+<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>a</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>li</span><span class="token punctuation">></span></span><span class="token comment">&lt;!-- 总价 --></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>li</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>cart-list-con6<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>span</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>sum<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>&#123;&#123; item.skuPrice * item.skuNum &#125;&#125;<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>span</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>li</span><span class="token punctuation">></span></span><span class="token comment">&lt;!-- 删除 --></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>li</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>cart-list-con7<span class="token punctuation">"</span></span><span class="token punctuation">></span></span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h2><span id="p69-xuan-ran-gou-wu-che-jie-mian-2">69 渲染购物车界面2</span><a href="#p69-xuan-ran-gou-wu-che-jie-mian-2" class="header-anchor">#</a></h2><p>store 更新 shopcart 中的 getters</p><pre class="line-numbers language-js" data-language="js"><code class="language-js"><span class="token comment">// 总数量</span><span class="token function">totalCount</span><span class="token punctuation">(</span><span class="token parameter">state</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>  <span class="token keyword">return</span> state<span class="token punctuation">.</span>shopList<span class="token punctuation">.</span><span class="token function">reduce</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token parameter">pre<span class="token punctuation">,</span> item</span><span class="token punctuation">)</span> <span class="token operator">=></span> <span class="token punctuation">&#123;</span>    <span class="token keyword">return</span> item<span class="token punctuation">.</span>isChecked <span class="token operator">===</span> <span class="token number">1</span> <span class="token operator">?</span> pre <span class="token operator">+</span> item<span class="token punctuation">.</span>skuNum <span class="token operator">:</span> pre  <span class="token punctuation">&#125;</span><span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">)</span><span class="token punctuation">&#125;</span><span class="token punctuation">,</span><span class="token comment">// 总价格</span><span class="token function">totalPrice</span><span class="token punctuation">(</span><span class="token parameter">state</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>  <span class="token keyword">return</span> state<span class="token punctuation">.</span>shopList<span class="token punctuation">.</span><span class="token function">reduce</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token parameter">pre<span class="token punctuation">,</span> item</span><span class="token punctuation">)</span> <span class="token operator">=></span> <span class="token punctuation">&#123;</span>    <span class="token keyword">return</span> item<span class="token punctuation">.</span>isChecked <span class="token operator">===</span> <span class="token number">1</span> <span class="token operator">?</span> pre <span class="token operator">+</span> item<span class="token punctuation">.</span>skuNum <span class="token operator">*</span> item<span class="token punctuation">.</span>skuPrice <span class="token operator">:</span> pre  <span class="token punctuation">&#125;</span><span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">)</span><span class="token punctuation">&#125;</span><span class="token punctuation">,</span><span class="token comment">// 是否全部选中</span><span class="token function">isCheckAll</span><span class="token punctuation">(</span><span class="token parameter">state</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>  <span class="token comment">// 数组中要有数据,并且每个数据都是选中的,才有意义</span>  <span class="token keyword">return</span> <span class="token punctuation">(</span>    state<span class="token punctuation">.</span>shopList<span class="token punctuation">.</span>length <span class="token operator">></span> <span class="token number">0</span> <span class="token operator">&amp;&amp;</span>    state<span class="token punctuation">.</span>shopList<span class="token punctuation">.</span><span class="token function">every</span><span class="token punctuation">(</span><span class="token parameter">item</span> <span class="token operator">=></span> item<span class="token punctuation">.</span>isChecked <span class="token operator">===</span> <span class="token number">1</span><span class="token punctuation">)</span>  <span class="token punctuation">)</span><span class="token punctuation">&#125;</span><span class="token punctuation">,</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>ShopCart</p><pre class="line-numbers language-js" data-language="js"><code class="language-js"><span class="token keyword">import</span> <span class="token punctuation">&#123;</span> mapState<span class="token punctuation">,</span> mapGetters <span class="token punctuation">&#125;</span> <span class="token keyword">from</span> <span class="token string">'vuex'</span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><pre class="line-numbers language-js" data-language="js"><code class="language-js">computed<span class="token operator">:</span> <span class="token punctuation">&#123;</span>  <span class="token operator">...</span><span class="token function">mapState</span><span class="token punctuation">(</span><span class="token punctuation">&#123;</span> <span class="token function-variable function">shopList</span><span class="token operator">:</span> <span class="token parameter">state</span> <span class="token operator">=></span> state<span class="token punctuation">.</span>shopcart<span class="token punctuation">.</span>shopList <span class="token punctuation">&#125;</span><span class="token punctuation">)</span><span class="token punctuation">,</span>  <span class="token operator">...</span><span class="token function">mapGetters</span><span class="token punctuation">(</span><span class="token punctuation">[</span><span class="token string">'totalCount'</span><span class="token punctuation">,</span> <span class="token string">'totalPrice'</span><span class="token punctuation">,</span> <span class="token string">'isChecked'</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">&#125;</span><span class="token punctuation">,</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span></span></code></pre><p>61行</p><pre class="line-numbers language-html" data-language="html"><code class="language-html"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>money-box<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>chosed<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>    已选择 <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>span</span><span class="token punctuation">></span></span>&#123;&#123; totalCount &#125;&#125;<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>span</span>    <span class="token punctuation">></span></span>件商品  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">></span></span>  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>sumprice<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>em</span><span class="token punctuation">></span></span>总价（不含运费） ：<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>em</span><span class="token punctuation">></span></span>    &lt;i class="summoney"&#123;&#123; totalPrice &#125;&#125;<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>i</span><span class="token punctuation">></span></span>  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">></span></span>  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>sumbtn<span class="token punctuation">"</span></span><span class="token punctuation">></span></span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h2><span id="p70-gou-wu-che-shan-chu">70 购物车删除</span><a href="#p70-gou-wu-che-shan-chu" class="header-anchor">#</a></h2><p>api +</p><pre class="line-numbers language-js" data-language="js"><code class="language-js"><span class="token comment">// 购物车删除操作</span><span class="token keyword">export</span> <span class="token keyword">const</span> <span class="token function-variable function">reqDeleteCartItem</span> <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token parameter">skuId</span><span class="token punctuation">)</span> <span class="token operator">=></span> ajax<span class="token punctuation">.</span><span class="token function">delete</span><span class="token punctuation">(</span><span class="token template-string"><span class="token template-punctuation string">`</span><span class="token string">/cart/deleteCart/</span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">$&#123;</span>skuId<span class="token interpolation-punctuation punctuation">&#125;</span></span><span class="token template-punctuation string">`</span></span><span class="token punctuation">)</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre><p>shopcart.js</p><pre class="line-numbers language-js" data-language="js"><code class="language-js"><span class="token keyword">import</span> <span class="token punctuation">&#123;</span> reqAddToCart<span class="token punctuation">,</span> reqShopCartList<span class="token punctuation">,</span>reqDeleteCartItem <span class="token punctuation">&#125;</span> <span class="token keyword">from</span> <span class="token string">'@/api'</span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>actions+</p><pre class="line-numbers language-js" data-language="js"><code class="language-js"><span class="token comment">// 删除购物车的商品信息对象</span><span class="token keyword">async</span> <span class="token function">deleteCartItem1</span><span class="token punctuation">(</span><span class="token parameter"><span class="token punctuation">&#123;</span> commit <span class="token punctuation">&#125;</span><span class="token punctuation">,</span> skuId</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>  <span class="token keyword">const</span> result <span class="token operator">=</span> <span class="token keyword">await</span> <span class="token function">reqDeleteCartItem</span><span class="token punctuation">(</span>skuId<span class="token punctuation">)</span>  <span class="token keyword">return</span> result<span class="token punctuation">.</span>code <span class="token operator">===</span> <span class="token number">200</span> <span class="token operator">?</span> <span class="token string">''</span> <span class="token operator">:</span> result<span class="token punctuation">.</span>message <span class="token operator">||</span> <span class="token string">'删除失败'</span><span class="token punctuation">&#125;</span><span class="token punctuation">,</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>ShopCart  methods+</p><pre class="line-numbers language-js" data-language="js"><code class="language-js"><span class="token comment">// 删除</span><span class="token keyword">async</span> <span class="token function">deleteCartItem</span><span class="token punctuation">(</span><span class="token parameter">skuId</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>  <span class="token keyword">if</span> <span class="token punctuation">(</span>window<span class="token punctuation">.</span><span class="token function">confirm</span><span class="token punctuation">(</span><span class="token string">'你确定要删除吗？'</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>    <span class="token keyword">const</span> error <span class="token operator">=</span> <span class="token keyword">await</span> <span class="token keyword">this</span><span class="token punctuation">.</span>$store<span class="token punctuation">.</span><span class="token function">dispatch</span><span class="token punctuation">(</span><span class="token string">'deleteCartItem1'</span><span class="token punctuation">,</span> skuId<span class="token punctuation">)</span>    <span class="token comment">// 删除成功</span>    <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token operator">!</span>error<span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>      <span class="token keyword">this</span><span class="token punctuation">.</span><span class="token function">getShopCartList</span><span class="token punctuation">(</span><span class="token punctuation">)</span>      <span class="token comment">// 删除失败</span>    <span class="token punctuation">&#125;</span> <span class="token keyword">else</span> <span class="token punctuation">&#123;</span>      <span class="token function">alert</span><span class="token punctuation">(</span>error<span class="token punctuation">)</span>    <span class="token punctuation">&#125;</span>  <span class="token punctuation">&#125;</span><span class="token punctuation">&#125;</span><span class="token punctuation">,</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>ShopCart</p><pre class="line-numbers language-html" data-language="html"><code class="language-html"><span class="token comment">&lt;!-- 删除 --></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>li</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>cart-list-con7<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>a</span> <span class="token attr-name">href</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>#<span class="token punctuation">"</span></span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>sindelet<span class="token punctuation">"</span></span> <span class="token attr-name">@click</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>deleteCartItem(item.skuId)<span class="token punctuation">"</span></span>    <span class="token punctuation">></span></span>删除<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>a</span>  <span class="token punctuation">></span></span>  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>br</span> <span class="token punctuation">/></span></span>  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>a</span> <span class="token attr-name">href</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>#<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>移到收藏<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>a</span><span class="token punctuation">></span></span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h2><span id="p71-qing-kong-gou-wu-che">71 清空购物车</span><a href="#p71-qing-kong-gou-wu-che" class="header-anchor">#</a></h2><p>shopcart.js 中 getters +</p><pre class="line-numbers language-js" data-language="js"><code class="language-js"><span class="token comment">// 获取所有选中的购物项</span><span class="token function">selectedCartItems</span><span class="token punctuation">(</span><span class="token parameter">state</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>  <span class="token keyword">return</span> state<span class="token punctuation">.</span>shopList<span class="token punctuation">.</span><span class="token function">filter</span><span class="token punctuation">(</span><span class="token parameter">item</span> <span class="token operator">=></span> item<span class="token punctuation">.</span>isChecked <span class="token operator">===</span> <span class="token number">1</span><span class="token punctuation">)</span>  <span class="token comment">// return state.shopList.reduce((pre, item) => &#123;</span>  <span class="token comment">//   判断是否选中</span>  <span class="token comment">//   if (item.isChecked === 1) &#123;</span>  <span class="token comment">//     pre.push(item)</span>  <span class="token comment">//   &#125;</span>  <span class="token comment">//   return pre</span>  <span class="token comment">// &#125;, [])</span><span class="token punctuation">&#125;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>actions +</p><pre class="line-numbers language-js" data-language="js"><code class="language-js"><span class="token keyword">async</span> <span class="token function">deleteCartItem2</span><span class="token punctuation">(</span><span class="token parameter"><span class="token punctuation">&#123;</span> commit <span class="token punctuation">&#125;</span><span class="token punctuation">,</span> skuId</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>  <span class="token keyword">const</span> result <span class="token operator">=</span> <span class="token keyword">await</span> <span class="token function">reqDeleteCartItem</span><span class="token punctuation">(</span>skuId<span class="token punctuation">)</span>  <span class="token keyword">if</span> <span class="token punctuation">(</span>result<span class="token punctuation">.</span>code <span class="token operator">!==</span> <span class="token number">200</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>    <span class="token comment">// 抛出一个异常</span>    <span class="token keyword">throw</span> <span class="token keyword">new</span> <span class="token class-name">Error</span><span class="token punctuation">(</span>result<span class="token punctuation">.</span>message<span class="token punctuation">)</span>  <span class="token punctuation">&#125;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>ShopCart 64行</p><pre class="line-numbers language-html" data-language="html"><code class="language-html"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>option<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>a</span> <span class="token attr-name">href</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>javascript:;<span class="token punctuation">"</span></span> <span class="token attr-name">@click</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>deleteCartItems<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>删除选中的商品<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>a</span><span class="token punctuation">></span></span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre><p>computed 更新</p><pre class="line-numbers language-js" data-language="js"><code class="language-js">computed<span class="token operator">:</span> <span class="token punctuation">&#123;</span>  <span class="token operator">...</span><span class="token function">mapState</span><span class="token punctuation">(</span><span class="token punctuation">&#123;</span> <span class="token function-variable function">shopList</span><span class="token operator">:</span> <span class="token parameter">state</span> <span class="token operator">=></span> state<span class="token punctuation">.</span>shopcart<span class="token punctuation">.</span>shopList <span class="token punctuation">&#125;</span><span class="token punctuation">)</span><span class="token punctuation">,</span>  <span class="token operator">...</span><span class="token function">mapGetters</span><span class="token punctuation">(</span><span class="token punctuation">[</span>    <span class="token string">'totalCount'</span><span class="token punctuation">,</span>    <span class="token string">'totalPrice'</span><span class="token punctuation">,</span>    <span class="token string">'isCheckAll'</span><span class="token punctuation">,</span>    <span class="token string">'selectedCartItems'</span>  <span class="token comment">// 新增</span>  <span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">&#125;</span><span class="token punctuation">,</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>methods +</p><pre class="line-numbers language-js" data-language="js"><code class="language-js"><span class="token comment">// 删除所有选中的购物项</span><span class="token keyword">async</span> <span class="token function">deleteCartItems</span><span class="token punctuation">(</span><span class="token parameter">skuId</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>  <span class="token keyword">const</span> <span class="token punctuation">&#123;</span> selectedCartItems <span class="token punctuation">&#125;</span> <span class="token operator">=</span> <span class="token keyword">this</span>  <span class="token comment">// 如果该数组中的数据是没有的，那么也没有必要删除</span>  <span class="token keyword">if</span> <span class="token punctuation">(</span>selectedCartItems<span class="token punctuation">.</span>length <span class="token operator">===</span> <span class="token number">0</span><span class="token punctuation">)</span> <span class="token keyword">return</span>  <span class="token keyword">if</span> <span class="token punctuation">(</span>window<span class="token punctuation">.</span><span class="token function">confirm</span><span class="token punctuation">(</span><span class="token string">'你确定要删除所有选中的购物项吗'</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>    <span class="token comment">// 定义一个储存Promise的数组</span>    <span class="token keyword">const</span> promises <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token punctuation">]</span>    <span class="token comment">// 遍历数组，一个一个删除</span>    selectedCartItems<span class="token punctuation">.</span><span class="token function">forEach</span><span class="token punctuation">(</span><span class="token parameter">item</span> <span class="token operator">=></span> <span class="token punctuation">&#123;</span>      <span class="token comment">// 分发action</span>      <span class="token keyword">const</span> promise <span class="token operator">=</span> <span class="token keyword">this</span><span class="token punctuation">.</span>$store<span class="token punctuation">.</span><span class="token function">dispatch</span><span class="token punctuation">(</span><span class="token string">'deleteCartItem2'</span><span class="token punctuation">,</span> item<span class="token punctuation">.</span>skuId<span class="token punctuation">)</span>      promises<span class="token punctuation">.</span><span class="token function">push</span><span class="token punctuation">(</span>promise<span class="token punctuation">)</span>    <span class="token punctuation">&#125;</span><span class="token punctuation">)</span>    <span class="token comment">// 统一的处理 Promise</span>    Promise<span class="token punctuation">.</span><span class="token function">all</span><span class="token punctuation">(</span>promises<span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">then</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=></span> <span class="token punctuation">&#123;</span>      <span class="token comment">// 成功了</span>      <span class="token keyword">this</span><span class="token punctuation">.</span><span class="token function">getShopCartList</span><span class="token punctuation">(</span><span class="token punctuation">)</span>    <span class="token punctuation">&#125;</span><span class="token punctuation">)</span><span class="token punctuation">,</span>      <span class="token parameter">error</span> <span class="token operator">=></span> <span class="token punctuation">&#123;</span>        <span class="token comment">// 失败了</span>        <span class="token function">alert</span><span class="token punctuation">(</span>error<span class="token punctuation">.</span>message<span class="token punctuation">)</span>      <span class="token punctuation">&#125;</span>  <span class="token punctuation">&#125;</span><span class="token punctuation">&#125;</span><span class="token punctuation">,</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h2><span id="p72-qie-huan-xuan-zhong-zhuang-tai">72 切换选中状态</span><a href="#p72-qie-huan-xuan-zhong-zhuang-tai" class="header-anchor">#</a></h2><p>api +</p><pre class="line-numbers language-js" data-language="js"><code class="language-js"><span class="token comment">// 切换商品选中状态</span><span class="token keyword">export</span> <span class="token keyword">const</span> <span class="token function-variable function">reqCheckCartItem</span> <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token parameter">skuId<span class="token punctuation">,</span> isChecked</span><span class="token punctuation">)</span> <span class="token operator">=></span>  ajax<span class="token punctuation">.</span><span class="token function">get</span><span class="token punctuation">(</span><span class="token template-string"><span class="token template-punctuation string">`</span><span class="token string">/cart/checkCart/</span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">$&#123;</span>skuId<span class="token interpolation-punctuation punctuation">&#125;</span></span><span class="token string">/</span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">$&#123;</span>isChecked<span class="token interpolation-punctuation punctuation">&#125;</span></span><span class="token template-punctuation string">`</span></span><span class="token punctuation">)</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span></span></code></pre><p>store shopcart.js</p><pre class="line-numbers language-js" data-language="js"><code class="language-js"><span class="token comment">// 引入api</span><span class="token keyword">import</span> <span class="token punctuation">&#123;</span> reqAddToCart<span class="token punctuation">,</span> reqShopCartList<span class="token punctuation">,</span> reqDeleteCartItem<span class="token punctuation">,</span>reqCheckCartItem <span class="token punctuation">&#125;</span> <span class="token keyword">from</span> <span class="token string">'@/api'</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre><pre class="line-numbers language-js" data-language="js"><code class="language-js"><span class="token comment">// 切换购物选中状态</span><span class="token keyword">async</span> <span class="token function">checkCartItem1</span><span class="token punctuation">(</span><span class="token parameter"><span class="token punctuation">&#123;</span> commit <span class="token punctuation">&#125;</span><span class="token punctuation">,</span> <span class="token punctuation">&#123;</span> skuId<span class="token punctuation">,</span> isChecked <span class="token punctuation">&#125;</span></span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>  <span class="token keyword">const</span> result <span class="token operator">=</span> <span class="token keyword">await</span> <span class="token function">reqCheckCartItem</span><span class="token punctuation">(</span>skuId<span class="token punctuation">,</span> isChecked<span class="token punctuation">)</span>  <span class="token comment">// 失败的问题</span>  <span class="token keyword">if</span> <span class="token punctuation">(</span>result<span class="token punctuation">.</span>code <span class="token operator">!==</span> <span class="token number">200</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>    <span class="token keyword">throw</span> <span class="token keyword">new</span> <span class="token class-name">Error</span><span class="token punctuation">(</span>result<span class="token punctuation">.</span>message <span class="token operator">||</span> <span class="token string">'切换勾选状态失败'</span><span class="token punctuation">)</span>  <span class="token punctuation">&#125;</span><span class="token punctuation">&#125;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>ShopCart methods +</p><pre class="line-numbers language-js" data-language="js"><code class="language-js"><span class="token comment">// 设置购物项商品的选中状态</span><span class="token keyword">async</span> <span class="token function">checkCartItem</span><span class="token punctuation">(</span><span class="token parameter">item</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>  <span class="token keyword">const</span> isChecked <span class="token operator">=</span> item<span class="token punctuation">.</span>isChecked <span class="token operator">===</span> <span class="token number">1</span> <span class="token operator">?</span> <span class="token number">0</span> <span class="token operator">:</span> <span class="token number">1</span>  <span class="token comment">// 分发</span>  <span class="token keyword">this</span><span class="token punctuation">.</span>$store    <span class="token punctuation">.</span><span class="token function">dispatch</span><span class="token punctuation">(</span><span class="token string">'checkCartItem1'</span><span class="token punctuation">,</span> <span class="token punctuation">&#123;</span> skuId<span class="token operator">:</span> item<span class="token punctuation">.</span>skuId<span class="token punctuation">,</span> isChecked <span class="token punctuation">&#125;</span><span class="token punctuation">)</span>    <span class="token punctuation">.</span><span class="token function">then</span><span class="token punctuation">(</span><span class="token parameter">value</span> <span class="token operator">=></span> <span class="token punctuation">&#123;</span>      <span class="token comment">// 成功了，重新获取购物车的数据</span>      <span class="token keyword">this</span><span class="token punctuation">.</span><span class="token function">getShopCartList</span><span class="token punctuation">(</span><span class="token punctuation">)</span>    <span class="token punctuation">&#125;</span><span class="token punctuation">)</span><span class="token punctuation">,</span>    <span class="token parameter">error</span> <span class="token operator">=></span> <span class="token punctuation">&#123;</span>      <span class="token comment">// 失败了</span>      <span class="token function">alert</span><span class="token punctuation">(</span>error<span class="token punctuation">.</span>message<span class="token punctuation">)</span>    <span class="token punctuation">&#125;</span><span class="token punctuation">&#125;</span><span class="token punctuation">,</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>更新html 15行</p><pre class="line-numbers language-html" data-language="html"><code class="language-html"><span class="token comment">&lt;!-- 是否选中 --></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>li</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>cart-list-con1<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>input</span>    <span class="token attr-name">type</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>checkbox<span class="token punctuation">"</span></span>    <span class="token attr-name">name</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>chk_list<span class="token punctuation">"</span></span>    <span class="token attr-name">:checked</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>item.isChecked<span class="token punctuation">"</span></span>    <span class="token attr-name">@change</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>checkCartItem(item)<span class="token punctuation">"</span></span>  <span class="token punctuation">/></span></span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h2><span id="p73-quan-xuan-quan-bu-xuan">73 全选/全不选</span><a href="#p73-quan-xuan-quan-bu-xuan" class="header-anchor">#</a></h2><p>shopcart.js actions+</p><pre class="line-numbers language-js" data-language="js"><code class="language-js"><span class="token comment">// 切换购物选中状态</span> <span class="token keyword">async</span> <span class="token function">checkCartItem1</span><span class="token punctuation">(</span><span class="token parameter"><span class="token punctuation">&#123;</span> commit <span class="token punctuation">&#125;</span><span class="token punctuation">,</span> <span class="token punctuation">&#123;</span> skuId<span class="token punctuation">,</span> isChecked <span class="token punctuation">&#125;</span></span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>   <span class="token keyword">const</span> result <span class="token operator">=</span> <span class="token keyword">await</span> <span class="token function">reqCheckCartItem</span><span class="token punctuation">(</span>skuId<span class="token punctuation">,</span> isChecked<span class="token punctuation">)</span>   <span class="token comment">// 失败的问题</span>   <span class="token keyword">if</span> <span class="token punctuation">(</span>result<span class="token punctuation">.</span>code <span class="token operator">!==</span> <span class="token number">200</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>     <span class="token keyword">throw</span> <span class="token keyword">new</span> <span class="token class-name">Error</span><span class="token punctuation">(</span>result<span class="token punctuation">.</span>message <span class="token operator">||</span> <span class="token string">'切换勾选状态失败'</span><span class="token punctuation">)</span>   <span class="token punctuation">&#125;</span> <span class="token punctuation">&#125;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>ShopCart methods+</p><pre class="line-numbers language-js" data-language="js"><code class="language-js"><span class="token comment">// 切换全选/全不选择操作</span><span class="token keyword">async</span> <span class="token function">checkCartItems</span><span class="token punctuation">(</span><span class="token parameter">e</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>  <span class="token comment">// 获取当前复选框的选中状态</span>  <span class="token keyword">const</span> isChecked <span class="token operator">=</span> e<span class="token punctuation">.</span>target<span class="token punctuation">.</span>checked <span class="token operator">*</span> <span class="token number">1</span>  <span class="token comment">// const promises = []</span>  <span class="token comment">// 遍历购物车中所有的购物项,统一修改选中状态</span>  <span class="token comment">// this.shopList.forEach((item) => &#123;</span>  <span class="token comment">//   // 分发action</span>  <span class="token comment">//   const promise = this.$store.dispatch('checkCartItem1', &#123;</span>  <span class="token comment">//     skuId: item.skuId,</span>  <span class="token comment">//     isChecked,</span>  <span class="token comment">//   &#125;)</span>  <span class="token comment">//   // 放在promises数组中</span>  <span class="token comment">//   promises.push(promise)</span>  <span class="token comment">// &#125;)</span>  <span class="token comment">// 使用reduce</span>  <span class="token comment">// const promises = this.shopList.reduce((pre, item) => &#123;</span>  <span class="token comment">//   const promise = this.$store.dispatch('checkCartItem1', &#123;</span>  <span class="token comment">//     skuId: item.skuId,</span>  <span class="token comment">//     isChecked,</span>  <span class="token comment">//   &#125;)</span>  <span class="token comment">//   pre.push(promise)</span>  <span class="token comment">//   return pre</span>  <span class="token comment">// &#125;, [])</span>  <span class="token comment">// 使用map</span>  <span class="token keyword">const</span> promises <span class="token operator">=</span> <span class="token keyword">this</span><span class="token punctuation">.</span>shopList<span class="token punctuation">.</span><span class="token function">map</span><span class="token punctuation">(</span><span class="token parameter">item</span> <span class="token operator">=></span> <span class="token punctuation">&#123;</span>    <span class="token keyword">return</span> <span class="token keyword">this</span><span class="token punctuation">.</span>$store<span class="token punctuation">.</span><span class="token function">dispatch</span><span class="token punctuation">(</span><span class="token string">'checkCartItem1'</span><span class="token punctuation">,</span> <span class="token punctuation">&#123;</span>      skuId<span class="token operator">:</span> item<span class="token punctuation">.</span>skuId<span class="token punctuation">,</span>      isChecked    <span class="token punctuation">&#125;</span><span class="token punctuation">)</span>  <span class="token punctuation">&#125;</span><span class="token punctuation">)</span>  <span class="token comment">// 统一处理</span>  <span class="token keyword">try</span> <span class="token punctuation">&#123;</span>    <span class="token keyword">await</span> Promise<span class="token punctuation">.</span><span class="token function">all</span><span class="token punctuation">(</span>promises<span class="token punctuation">)</span>    <span class="token comment">// 成功了,重新获取数据</span>    <span class="token keyword">this</span><span class="token punctuation">.</span><span class="token function">getShopCartList</span><span class="token punctuation">(</span><span class="token punctuation">)</span>  <span class="token punctuation">&#125;</span> <span class="token keyword">catch</span> <span class="token punctuation">(</span>error<span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>    <span class="token function">alert</span><span class="token punctuation">(</span>error<span class="token punctuation">.</span>message<span class="token punctuation">)</span>  <span class="token punctuation">&#125;</span><span class="token punctuation">&#125;</span><span class="token punctuation">,</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>79行</p><pre class="line-numbers language-html" data-language="html"><code class="language-html"><span class="token comment">&lt;!-- 全选 --></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>select-all<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>input</span>    <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>chooseAll<span class="token punctuation">"</span></span>    <span class="token attr-name">type</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>checkbox<span class="token punctuation">"</span></span>    <span class="token attr-name">:checked</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>isCheckAll<span class="token punctuation">"</span></span>    <span class="token attr-name">@change</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>checkCartItems<span class="token punctuation">"</span></span>  <span class="token punctuation">/></span></span>  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>span</span><span class="token punctuation">></span></span>全选<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>span</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">></span></span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h2><span id="p74-shu-liang-cao-zuo">74 数量操作</span><a href="#p74-shu-liang-cao-zuo" class="header-anchor">#</a></h2><p>shopcart.js actions+</p><pre class="line-numbers language-js" data-language="js"><code class="language-js"><span class="token keyword">async</span> <span class="token function">addToCart3</span><span class="token punctuation">(</span><span class="token parameter"><span class="token punctuation">&#123;</span> commit<span class="token punctuation">,</span> dispatch <span class="token punctuation">&#125;</span><span class="token punctuation">,</span> <span class="token punctuation">&#123;</span> skuId<span class="token punctuation">,</span> skuNum <span class="token punctuation">&#125;</span></span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>  <span class="token keyword">const</span> result <span class="token operator">=</span> <span class="token keyword">await</span> <span class="token function">reqAddToCart</span><span class="token punctuation">(</span>skuId<span class="token punctuation">,</span> skuNum<span class="token punctuation">)</span>  <span class="token keyword">if</span> <span class="token punctuation">(</span>result<span class="token punctuation">.</span>code <span class="token operator">===</span> <span class="token number">200</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>    <span class="token comment">// 成功了</span>    <span class="token function">dispatch</span><span class="token punctuation">(</span><span class="token string">'getShopList'</span><span class="token punctuation">)</span>  <span class="token punctuation">&#125;</span> <span class="token keyword">else</span> <span class="token punctuation">&#123;</span>    <span class="token comment">// 失败了</span>    <span class="token function">alert</span><span class="token punctuation">(</span>result<span class="token punctuation">.</span>message<span class="token punctuation">)</span>  <span class="token punctuation">&#125;</span><span class="token punctuation">&#125;</span><span class="token punctuation">,</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>ShopCart methods+</p><pre class="line-numbers language-js" data-language="js"><code class="language-js"><span class="token comment">// 修改商品购物项的数量</span><span class="token keyword">async</span> <span class="token function">changeCount</span><span class="token punctuation">(</span><span class="token parameter">item<span class="token punctuation">,</span> changeNum</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>  <span class="token comment">// 获取skuId</span>  <span class="token keyword">const</span> <span class="token punctuation">&#123;</span> skuId <span class="token punctuation">&#125;</span> <span class="token operator">=</span> item  <span class="token comment">// 判断当前商品的数量和传入进来的修改的数量相加,要大于0</span>  <span class="token keyword">if</span> <span class="token punctuation">(</span>item<span class="token punctuation">.</span>skuNum <span class="token operator">+</span> changeNum <span class="token operator">></span> <span class="token number">0</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>    <span class="token comment">// 分发action</span>    <span class="token keyword">const</span> errorMsg <span class="token operator">=</span> <span class="token keyword">await</span> <span class="token keyword">this</span><span class="token punctuation">.</span>$store<span class="token punctuation">.</span><span class="token function">dispatch</span><span class="token punctuation">(</span><span class="token string">'addToCart2'</span><span class="token punctuation">,</span> <span class="token punctuation">&#123;</span>      skuId<span class="token punctuation">,</span>      skuNum<span class="token operator">:</span> changeNum    <span class="token punctuation">&#125;</span><span class="token punctuation">)</span>    <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token operator">!</span>errorMsg<span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>      <span class="token comment">// 成功了</span>      <span class="token keyword">this</span><span class="token punctuation">.</span><span class="token function">getShopCartList</span><span class="token punctuation">(</span><span class="token punctuation">)</span>    <span class="token punctuation">&#125;</span> <span class="token keyword">else</span> <span class="token punctuation">&#123;</span>      <span class="token comment">// 失败了</span>      <span class="token function">alert</span><span class="token punctuation">(</span>errorMsg<span class="token punctuation">)</span>    <span class="token punctuation">&#125;</span>  <span class="token punctuation">&#125;</span><span class="token punctuation">&#125;</span><span class="token punctuation">,</span><span class="token function">changeCount2</span><span class="token punctuation">(</span><span class="token parameter">item<span class="token punctuation">,</span> changeNum</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>  <span class="token comment">// 获取skuId</span>  <span class="token keyword">const</span> <span class="token punctuation">&#123;</span> skuId <span class="token punctuation">&#125;</span> <span class="token operator">=</span> item  <span class="token comment">// 判断当前商品的数量和传入进来的修改的数量相加,要大于0</span>  <span class="token keyword">if</span> <span class="token punctuation">(</span>item<span class="token punctuation">.</span>skuNum <span class="token operator">+</span> changeNum <span class="token operator">></span> <span class="token number">0</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>    <span class="token comment">// 分发action</span>    <span class="token keyword">this</span><span class="token punctuation">.</span>$store<span class="token punctuation">.</span><span class="token function">dispatch</span><span class="token punctuation">(</span><span class="token string">'addToCart3'</span><span class="token punctuation">,</span> <span class="token punctuation">&#123;</span>      skuId<span class="token punctuation">,</span>      skuNum<span class="token operator">:</span> changeNum    <span class="token punctuation">&#125;</span><span class="token punctuation">)</span>  <span class="token punctuation">&#125;</span><span class="token punctuation">&#125;</span><span class="token operator">/</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>37行</p><pre class="line-numbers language-html" data-language="html"><code class="language-html"><span class="token comment">&lt;!-- 数量操作 --></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>li</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>cart-list-con5<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>  <span class="token comment">&lt;!-- 减 --></span>  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>a</span>    <span class="token attr-name">href</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>javascript:void(0)<span class="token punctuation">"</span></span>    <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>mins<span class="token punctuation">"</span></span>    <span class="token attr-name">@click</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>changeCount2(item, -1)<span class="token punctuation">"</span></span>    <span class="token punctuation">></span></span>-<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>a</span>  <span class="token punctuation">></span></span>  <span class="token comment">&lt;!-- 直接输入 --></span>  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>input</span>    <span class="token attr-name">autocomplete</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>off<span class="token punctuation">"</span></span>    <span class="token attr-name">type</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>text<span class="token punctuation">"</span></span>    <span class="token attr-name">minnum</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>1<span class="token punctuation">"</span></span>    <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>itxt<span class="token punctuation">"</span></span>    <span class="token attr-name">:value</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>item.skuNum<span class="token punctuation">"</span></span>    <span class="token attr-name">@change</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>changeCount2(item, $event.target.value * 1 - item.skuNum)<span class="token punctuation">"</span></span>  <span class="token punctuation">/></span></span>  <span class="token comment">&lt;!-- 加 --></span>  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>a</span>    <span class="token attr-name">href</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>javascript:void(0)<span class="token punctuation">"</span></span>    <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>plus<span class="token punctuation">"</span></span>    <span class="token attr-name">@click</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>changeCount2(item, 1)<span class="token punctuation">"</span></span>    <span class="token punctuation">></span></span>+<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>a</span>  <span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>li</span><span class="token punctuation">></span></span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>至此</p><p>ShopCart</p><pre class="line-numbers language-vue" data-language="vue"><code class="language-vue">&lt;template&gt;  &lt;div class&#x3D;&quot;cart&quot;&gt;    &lt;h4&gt;全部商品&lt;&#x2F;h4&gt;    &lt;div class&#x3D;&quot;cart-main&quot;&gt;      &lt;div class&#x3D;&quot;cart-th&quot;&gt;        &lt;div class&#x3D;&quot;cart-th1&quot;&gt;全部&lt;&#x2F;div&gt;        &lt;div class&#x3D;&quot;cart-th2&quot;&gt;商品&lt;&#x2F;div&gt;        &lt;div class&#x3D;&quot;cart-th3&quot;&gt;单价（元）&lt;&#x2F;div&gt;        &lt;div class&#x3D;&quot;cart-th4&quot;&gt;数量&lt;&#x2F;div&gt;        &lt;div class&#x3D;&quot;cart-th5&quot;&gt;小计（元）&lt;&#x2F;div&gt;        &lt;div class&#x3D;&quot;cart-th6&quot;&gt;操作&lt;&#x2F;div&gt;      &lt;&#x2F;div&gt;      &lt;div class&#x3D;&quot;cart-body&quot;&gt;        &lt;ul class&#x3D;&quot;cart-list&quot; v-for&#x3D;&quot;item in shopList&quot; :key&#x3D;&quot;item.id&quot;&gt;          &lt;!-- 是否选中 --&gt;          &lt;li class&#x3D;&quot;cart-list-con1&quot;&gt;            &lt;input              type&#x3D;&quot;checkbox&quot;              name&#x3D;&quot;chk_list&quot;              :checked&#x3D;&quot;item.isChecked&quot;              @change&#x3D;&quot;checkCartItem(item)&quot;            &#x2F;&gt;          &lt;&#x2F;li&gt;          &lt;!-- 图片和名字 --&gt;          &lt;li class&#x3D;&quot;cart-list-con2&quot;&gt;            &lt;img :src&#x3D;&quot;item.imgUrl&quot; &#x2F;&gt;            &lt;div class&#x3D;&quot;item-msg&quot;&gt;&#123;&#123; item.skuName &#125;&#125;&lt;&#x2F;div&gt;          &lt;&#x2F;li&gt;          &lt;!-- 无用 --&gt;          &lt;li class&#x3D;&quot;cart-list-con3&quot;&gt;            &lt;div class&#x3D;&quot;item-txt&quot;&gt;绝版&lt;&#x2F;div&gt;          &lt;&#x2F;li&gt;          &lt;!-- 单价 --&gt;          &lt;li class&#x3D;&quot;cart-list-con4&quot;&gt;            &lt;span class&#x3D;&quot;price&quot;&gt;&#123;&#123; item.skuPrice &#125;&#125;&lt;&#x2F;span&gt;          &lt;&#x2F;li&gt;          &lt;!-- 数量操作 --&gt;          &lt;li class&#x3D;&quot;cart-list-con5&quot;&gt;            &lt;!-- 减 --&gt;            &lt;a              href&#x3D;&quot;javascript:void(0)&quot;              class&#x3D;&quot;mins&quot;              @click&#x3D;&quot;changeCount2(item, -1)&quot;              &gt;-&lt;&#x2F;a            &gt;            &lt;!-- 直接输入 --&gt;            &lt;input              autocomplete&#x3D;&quot;off&quot;              type&#x3D;&quot;text&quot;              minnum&#x3D;&quot;1&quot;              class&#x3D;&quot;itxt&quot;              :value&#x3D;&quot;item.skuNum&quot;              @change&#x3D;&quot;changeCount2(item, $event.target.value * 1 - item.skuNum)&quot;            &#x2F;&gt;            &lt;!-- 加 --&gt;            &lt;a              href&#x3D;&quot;javascript:void(0)&quot;              class&#x3D;&quot;plus&quot;              @click&#x3D;&quot;changeCount2(item, 1)&quot;              &gt;+&lt;&#x2F;a            &gt;          &lt;&#x2F;li&gt;          &lt;!-- 总价 --&gt;          &lt;li class&#x3D;&quot;cart-list-con6&quot;&gt;            &lt;span class&#x3D;&quot;sum&quot;&gt;&#123;&#123; item.skuPrice * item.skuNum &#125;&#125;&lt;&#x2F;span&gt;          &lt;&#x2F;li&gt;          &lt;!-- 删除 --&gt;          &lt;li class&#x3D;&quot;cart-list-con7&quot;&gt;            &lt;a href&#x3D;&quot;#&quot; class&#x3D;&quot;sindelet&quot; @click&#x3D;&quot;deleteCartItem(item.skuId)&quot;              &gt;删除&lt;&#x2F;a            &gt;            &lt;br &#x2F;&gt;            &lt;a href&#x3D;&quot;#&quot;&gt;移到收藏&lt;&#x2F;a&gt;          &lt;&#x2F;li&gt;        &lt;&#x2F;ul&gt;      &lt;&#x2F;div&gt;    &lt;&#x2F;div&gt;    &lt;div class&#x3D;&quot;cart-tool&quot;&gt;      &lt;!-- 全选 --&gt;      &lt;div class&#x3D;&quot;select-all&quot;&gt;        &lt;input          class&#x3D;&quot;chooseAll&quot;          type&#x3D;&quot;checkbox&quot;          :checked&#x3D;&quot;isCheckAll&quot;          @change&#x3D;&quot;checkCartItems&quot;        &#x2F;&gt;        &lt;span&gt;全选&lt;&#x2F;span&gt;      &lt;&#x2F;div&gt;      &lt;!-- 删除选择的商品 --&gt;      &lt;div class&#x3D;&quot;option&quot;&gt;        &lt;a href&#x3D;&quot;javascript:;&quot; @click&#x3D;&quot;deleteCartItems&quot;&gt;删除选中的商品&lt;&#x2F;a&gt;        &lt;a href&#x3D;&quot;javascript:;&quot;&gt;移到我的关注&lt;&#x2F;a&gt;        &lt;a href&#x3D;&quot;javascript:;&quot;&gt;清除下柜商品&lt;&#x2F;a&gt;      &lt;&#x2F;div&gt;      &lt;div class&#x3D;&quot;money-box&quot;&gt;        &lt;div class&#x3D;&quot;chosed&quot;&gt;          已选择 &lt;span&gt;&#123;&#123; totalCount &#125;&#125;&lt;&#x2F;span          &gt;件商品        &lt;&#x2F;div&gt;        &lt;div class&#x3D;&quot;sumprice&quot;&gt;          &lt;em&gt;总价（不含运费） ：&lt;&#x2F;em&gt;          &lt;i class&#x3D;&quot;summoney&quot;&gt;&#123;&#123; totalPrice &#125;&#125;&lt;&#x2F;i&gt;        &lt;&#x2F;div&gt;        &lt;div class&#x3D;&quot;sumbtn&quot;&gt;          &lt;a class&#x3D;&quot;sum-btn&quot; href&#x3D;&quot;###&quot; target&#x3D;&quot;_blank&quot;&gt;结算&lt;&#x2F;a&gt;        &lt;&#x2F;div&gt;      &lt;&#x2F;div&gt;    &lt;&#x2F;div&gt;  &lt;&#x2F;div&gt;&lt;&#x2F;template&gt;&lt;script&gt;import &#123; mapState, mapGetters &#125; from &#39;vuex&#39;export default &#123;  name: &#39;ShopCart&#39;,  mounted() &#123;    &#x2F;&#x2F; 获取购物车中的商品数据    this.getShopCartList()  &#125;,  computed: &#123;    ...mapState(&#123; shopList: state &#x3D;&gt; state.shopcart.shopList &#125;),    ...mapGetters([      &#39;totalCount&#39;,      &#39;totalPrice&#39;,      &#39;isCheckAll&#39;,      &#39;selectedCartItems&#39;    ])  &#125;,  methods: &#123;    &#x2F;&#x2F; 获取购物车    getShopCartList() &#123;      this.$store.dispatch(&#39;getShopList&#39;)    &#125;,    &#x2F;&#x2F; 删除    async deleteCartItem(skuId) &#123;      if (window.confirm(&#39;你确定要删除吗？&#39;)) &#123;        const error &#x3D; await this.$store.dispatch(&#39;deleteCartItem1&#39;, skuId)        &#x2F;&#x2F; 删除成功        if (!error) &#123;          this.getShopCartList()          &#x2F;&#x2F; 删除失败        &#125; else &#123;          alert(error)        &#125;      &#125;    &#125;,    &#x2F;&#x2F; 删除所有选中的购物项    async deleteCartItems(skuId) &#123;      const &#123; selectedCartItems &#125; &#x3D; this      &#x2F;&#x2F; 如果该数组中的数据是没有的，那么也没有必要删除      if (selectedCartItems.length &#x3D;&#x3D;&#x3D; 0) return      if (window.confirm(&#39;你确定要删除所有选中的购物项吗&#39;)) &#123;        &#x2F;&#x2F; 定义一个储存Promise的数组        const promises &#x3D; []        &#x2F;&#x2F; 遍历数组，一个一个删除        selectedCartItems.forEach(item &#x3D;&gt; &#123;          &#x2F;&#x2F; 分发action          const promise &#x3D; this.$store.dispatch(&#39;deleteCartItem2&#39;, item.skuId)          promises.push(promise)        &#125;)        &#x2F;&#x2F; 统一的处理 Promise        Promise.all(promises).then(() &#x3D;&gt; &#123;          &#x2F;&#x2F; 成功了          this.getShopCartList()        &#125;),          error &#x3D;&gt; &#123;            &#x2F;&#x2F; 失败了            alert(error.message)          &#125;      &#125;    &#125;,    &#x2F;&#x2F; 设置购物项商品的选中状态    async checkCartItem(item) &#123;      const isChecked &#x3D; item.isChecked &#x3D;&#x3D;&#x3D; 1 ? 0 : 1      &#x2F;&#x2F; 分发      this.$store        .dispatch(&#39;checkCartItem1&#39;, &#123; skuId: item.skuId, isChecked &#125;)        .then(value &#x3D;&gt; &#123;          &#x2F;&#x2F; 成功了，重新获取购物车的数据          this.getShopCartList()        &#125;),        error &#x3D;&gt; &#123;          &#x2F;&#x2F; 失败了          alert(error.message)        &#125;    &#125;,    &#x2F;&#x2F; 切换全选&#x2F;全不选择操作    async checkCartItems(e) &#123;      &#x2F;&#x2F; 获取当前复选框的选中状态      const isChecked &#x3D; e.target.checked * 1      &#x2F;&#x2F; const promises &#x3D; []      &#x2F;&#x2F; 遍历购物车中所有的购物项,统一修改选中状态      &#x2F;&#x2F; this.shopList.forEach((item) &#x3D;&gt; &#123;      &#x2F;&#x2F;   &#x2F;&#x2F; 分发action      &#x2F;&#x2F;   const promise &#x3D; this.$store.dispatch(&#39;checkCartItem1&#39;, &#123;      &#x2F;&#x2F;     skuId: item.skuId,      &#x2F;&#x2F;     isChecked,      &#x2F;&#x2F;   &#125;)      &#x2F;&#x2F;   &#x2F;&#x2F; 放在promises数组中      &#x2F;&#x2F;   promises.push(promise)      &#x2F;&#x2F; &#125;)      &#x2F;&#x2F; 使用reduce      &#x2F;&#x2F; const promises &#x3D; this.shopList.reduce((pre, item) &#x3D;&gt; &#123;      &#x2F;&#x2F;   const promise &#x3D; this.$store.dispatch(&#39;checkCartItem1&#39;, &#123;      &#x2F;&#x2F;     skuId: item.skuId,      &#x2F;&#x2F;     isChecked,      &#x2F;&#x2F;   &#125;)      &#x2F;&#x2F;   pre.push(promise)      &#x2F;&#x2F;   return pre      &#x2F;&#x2F; &#125;, [])      &#x2F;&#x2F; 使用map      const promises &#x3D; this.shopList.map(item &#x3D;&gt; &#123;        return this.$store.dispatch(&#39;checkCartItem1&#39;, &#123;          skuId: item.skuId,          isChecked        &#125;)      &#125;)      &#x2F;&#x2F; 统一处理      try &#123;        await Promise.all(promises)        &#x2F;&#x2F; 成功了,重新获取数据        this.getShopCartList()      &#125; catch (error) &#123;        alert(error.message)      &#125;    &#125;,    &#x2F;&#x2F; 修改商品购物项的数量    async changeCount(item, changeNum) &#123;      &#x2F;&#x2F; 获取skuId      const &#123; skuId &#125; &#x3D; item      &#x2F;&#x2F; 判断当前商品的数量和传入进来的修改的数量相加,要大于0      if (item.skuNum + changeNum &gt; 0) &#123;        &#x2F;&#x2F; 分发action        const errorMsg &#x3D; await this.$store.dispatch(&#39;addToCart2&#39;, &#123;          skuId,          skuNum: changeNum        &#125;)        if (!errorMsg) &#123;          &#x2F;&#x2F; 成功了          this.getShopCartList()        &#125; else &#123;          &#x2F;&#x2F; 失败了          alert(errorMsg)        &#125;      &#125;    &#125;,    changeCount2(item, changeNum) &#123;      &#x2F;&#x2F; 获取skuId      const &#123; skuId &#125; &#x3D; item      &#x2F;&#x2F; 判断当前商品的数量和传入进来的修改的数量相加,要大于0      if (item.skuNum + changeNum &gt; 0) &#123;        &#x2F;&#x2F; 分发action        this.$store.dispatch(&#39;addToCart3&#39;, &#123;          skuId,          skuNum: changeNum        &#125;)      &#125;    &#125;    &#x2F;&#x2F; end  &#125;&#125;&lt;&#x2F;script&gt;<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>shopcart.js</p><pre class="line-numbers language-js" data-language="js"><code class="language-js"><span class="token comment">// 引入api</span><span class="token keyword">import</span> <span class="token punctuation">&#123;</span>  reqAddToCart<span class="token punctuation">,</span>  reqShopCartList<span class="token punctuation">,</span>  reqDeleteCartItem<span class="token punctuation">,</span>  reqCheckCartItem<span class="token punctuation">&#125;</span> <span class="token keyword">from</span> <span class="token string">'@/api'</span><span class="token keyword">export</span> <span class="token keyword">default</span> <span class="token punctuation">&#123;</span>  state<span class="token operator">:</span> <span class="token punctuation">&#123;</span>    shopList<span class="token operator">:</span> <span class="token punctuation">[</span><span class="token punctuation">]</span> <span class="token comment">// 购物车中的商品信息按钮</span>  <span class="token punctuation">&#125;</span><span class="token punctuation">,</span>  mutations<span class="token operator">:</span> <span class="token punctuation">&#123;</span>    <span class="token comment">// 直接修改 shopList 数据</span>    <span class="token constant">RECEIVE_SHOP_LIST</span><span class="token punctuation">(</span><span class="token parameter">state<span class="token punctuation">,</span> shopList</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>      state<span class="token punctuation">.</span>shopList <span class="token operator">=</span> shopList    <span class="token punctuation">&#125;</span>  <span class="token punctuation">&#125;</span><span class="token punctuation">,</span>  actions<span class="token operator">:</span> <span class="token punctuation">&#123;</span>    <span class="token comment">// 添加购物车操作</span>    <span class="token keyword">async</span> <span class="token function">addToCart1</span><span class="token punctuation">(</span><span class="token parameter"><span class="token punctuation">&#123;</span> commit <span class="token punctuation">&#125;</span><span class="token punctuation">,</span> <span class="token punctuation">&#123;</span> skuId<span class="token punctuation">,</span> skuNum<span class="token punctuation">,</span> callback <span class="token punctuation">&#125;</span></span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>      <span class="token keyword">const</span> result <span class="token operator">=</span> <span class="token keyword">await</span> <span class="token function">reqAddToCart</span><span class="token punctuation">(</span>skuId<span class="token punctuation">,</span> skuNum<span class="token punctuation">,</span> callback<span class="token punctuation">)</span>      <span class="token keyword">if</span> <span class="token punctuation">(</span>result<span class="token punctuation">.</span>code <span class="token operator">===</span> <span class="token number">200</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>        <span class="token function">callback</span><span class="token punctuation">(</span><span class="token string">''</span><span class="token punctuation">)</span>      <span class="token punctuation">&#125;</span> <span class="token keyword">else</span> <span class="token punctuation">&#123;</span>        <span class="token function">callback</span><span class="token punctuation">(</span>result<span class="token punctuation">.</span>message <span class="token operator">||</span> <span class="token string">'添加失败'</span><span class="token punctuation">)</span>      <span class="token punctuation">&#125;</span>    <span class="token punctuation">&#125;</span><span class="token punctuation">,</span>    <span class="token keyword">async</span> <span class="token function">addToCart2</span><span class="token punctuation">(</span><span class="token parameter"><span class="token punctuation">&#123;</span> commit <span class="token punctuation">&#125;</span><span class="token punctuation">,</span> <span class="token punctuation">&#123;</span> skuId<span class="token punctuation">,</span> skuNum <span class="token punctuation">&#125;</span></span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>      <span class="token keyword">const</span> result <span class="token operator">=</span> <span class="token keyword">await</span> <span class="token function">reqAddToCart</span><span class="token punctuation">(</span>skuId<span class="token punctuation">,</span> skuNum<span class="token punctuation">)</span>      <span class="token keyword">return</span> result<span class="token punctuation">.</span>code <span class="token operator">===</span> <span class="token number">200</span> <span class="token operator">?</span> <span class="token string">''</span> <span class="token operator">:</span> result<span class="token punctuation">.</span>message <span class="token operator">||</span> <span class="token string">'添加失败'</span>    <span class="token punctuation">&#125;</span><span class="token punctuation">,</span>    <span class="token keyword">async</span> <span class="token function">addToCart3</span><span class="token punctuation">(</span><span class="token parameter"><span class="token punctuation">&#123;</span> commit<span class="token punctuation">,</span> dispatch <span class="token punctuation">&#125;</span><span class="token punctuation">,</span> <span class="token punctuation">&#123;</span> skuId<span class="token punctuation">,</span> skuNum <span class="token punctuation">&#125;</span></span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>      <span class="token keyword">const</span> result <span class="token operator">=</span> <span class="token keyword">await</span> <span class="token function">reqAddToCart</span><span class="token punctuation">(</span>skuId<span class="token punctuation">,</span> skuNum<span class="token punctuation">)</span>      <span class="token keyword">if</span> <span class="token punctuation">(</span>result<span class="token punctuation">.</span>code <span class="token operator">===</span> <span class="token number">200</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>        <span class="token comment">// 成功了</span>        <span class="token function">dispatch</span><span class="token punctuation">(</span><span class="token string">'getShopList'</span><span class="token punctuation">)</span>      <span class="token punctuation">&#125;</span> <span class="token keyword">else</span> <span class="token punctuation">&#123;</span>        <span class="token comment">// 失败了</span>        <span class="token function">alert</span><span class="token punctuation">(</span>result<span class="token punctuation">.</span>message<span class="token punctuation">)</span>      <span class="token punctuation">&#125;</span>    <span class="token punctuation">&#125;</span><span class="token punctuation">,</span>    <span class="token comment">// 获取购物车中的商品信息对象</span>    <span class="token keyword">async</span> <span class="token function">getShopList</span><span class="token punctuation">(</span><span class="token parameter"><span class="token punctuation">&#123;</span> commit <span class="token punctuation">&#125;</span></span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>      <span class="token comment">// 调用 api 接口，发送异步请求</span>      <span class="token keyword">const</span> result <span class="token operator">=</span> <span class="token keyword">await</span> <span class="token function">reqShopCartList</span><span class="token punctuation">(</span><span class="token punctuation">)</span>      <span class="token keyword">if</span> <span class="token punctuation">(</span>result<span class="token punctuation">.</span>code <span class="token operator">===</span> <span class="token number">200</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>        <span class="token comment">// 更新数据</span>        <span class="token function">commit</span><span class="token punctuation">(</span><span class="token string">'RECEIVE_SHOP_LIST'</span><span class="token punctuation">,</span> result<span class="token punctuation">.</span>data<span class="token punctuation">)</span>      <span class="token punctuation">&#125;</span>    <span class="token punctuation">&#125;</span><span class="token punctuation">,</span>    <span class="token comment">// 删除购物车的商品信息对象</span>    <span class="token keyword">async</span> <span class="token function">deleteCartItem1</span><span class="token punctuation">(</span><span class="token parameter"><span class="token punctuation">&#123;</span> commit <span class="token punctuation">&#125;</span><span class="token punctuation">,</span> skuId</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>      <span class="token keyword">const</span> result <span class="token operator">=</span> <span class="token keyword">await</span> <span class="token function">reqDeleteCartItem</span><span class="token punctuation">(</span>skuId<span class="token punctuation">)</span>      <span class="token keyword">return</span> result<span class="token punctuation">.</span>code <span class="token operator">===</span> <span class="token number">200</span> <span class="token operator">?</span> <span class="token string">''</span> <span class="token operator">:</span> result<span class="token punctuation">.</span>message <span class="token operator">||</span> <span class="token string">'删除失败'</span>    <span class="token punctuation">&#125;</span><span class="token punctuation">,</span>    <span class="token keyword">async</span> <span class="token function">deleteCartItem2</span><span class="token punctuation">(</span><span class="token parameter"><span class="token punctuation">&#123;</span> commit <span class="token punctuation">&#125;</span><span class="token punctuation">,</span> skuId</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>      <span class="token keyword">const</span> result <span class="token operator">=</span> <span class="token keyword">await</span> <span class="token function">reqDeleteCartItem</span><span class="token punctuation">(</span>skuId<span class="token punctuation">)</span>      <span class="token keyword">if</span> <span class="token punctuation">(</span>result<span class="token punctuation">.</span>code <span class="token operator">!==</span> <span class="token number">200</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>        <span class="token comment">// 抛出一个异常</span>        <span class="token keyword">throw</span> <span class="token keyword">new</span> <span class="token class-name">Error</span><span class="token punctuation">(</span>result<span class="token punctuation">.</span>message<span class="token punctuation">)</span>      <span class="token punctuation">&#125;</span>    <span class="token punctuation">&#125;</span><span class="token punctuation">,</span>    <span class="token comment">// 切换购物选中状态</span>    <span class="token keyword">async</span> <span class="token function">checkCartItem1</span><span class="token punctuation">(</span><span class="token parameter"><span class="token punctuation">&#123;</span> commit <span class="token punctuation">&#125;</span><span class="token punctuation">,</span> <span class="token punctuation">&#123;</span> skuId<span class="token punctuation">,</span> isChecked <span class="token punctuation">&#125;</span></span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>      <span class="token keyword">const</span> result <span class="token operator">=</span> <span class="token keyword">await</span> <span class="token function">reqCheckCartItem</span><span class="token punctuation">(</span>skuId<span class="token punctuation">,</span> isChecked<span class="token punctuation">)</span>      <span class="token comment">// 失败的问题</span>      <span class="token keyword">if</span> <span class="token punctuation">(</span>result<span class="token punctuation">.</span>code <span class="token operator">!==</span> <span class="token number">200</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>        <span class="token keyword">throw</span> <span class="token keyword">new</span> <span class="token class-name">Error</span><span class="token punctuation">(</span>result<span class="token punctuation">.</span>message <span class="token operator">||</span> <span class="token string">'切换勾选状态失败'</span><span class="token punctuation">)</span>      <span class="token punctuation">&#125;</span>    <span class="token punctuation">&#125;</span>    <span class="token comment">// end</span>  <span class="token punctuation">&#125;</span><span class="token punctuation">,</span>  getters<span class="token operator">:</span> <span class="token punctuation">&#123;</span>    <span class="token comment">// 总数量</span>    <span class="token function">totalCount</span><span class="token punctuation">(</span><span class="token parameter">state</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>      <span class="token keyword">return</span> state<span class="token punctuation">.</span>shopList<span class="token punctuation">.</span><span class="token function">reduce</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token parameter">pre<span class="token punctuation">,</span> item</span><span class="token punctuation">)</span> <span class="token operator">=></span> <span class="token punctuation">&#123;</span>        <span class="token keyword">return</span> item<span class="token punctuation">.</span>isChecked <span class="token operator">===</span> <span class="token number">1</span> <span class="token operator">?</span> pre <span class="token operator">+</span> item<span class="token punctuation">.</span>skuNum <span class="token operator">:</span> pre      <span class="token punctuation">&#125;</span><span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">)</span>    <span class="token punctuation">&#125;</span><span class="token punctuation">,</span>    <span class="token comment">// 总价格</span>    <span class="token function">totalPrice</span><span class="token punctuation">(</span><span class="token parameter">state</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>      <span class="token keyword">return</span> state<span class="token punctuation">.</span>shopList<span class="token punctuation">.</span><span class="token function">reduce</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token parameter">pre<span class="token punctuation">,</span> item</span><span class="token punctuation">)</span> <span class="token operator">=></span> <span class="token punctuation">&#123;</span>        <span class="token keyword">return</span> item<span class="token punctuation">.</span>isChecked <span class="token operator">===</span> <span class="token number">1</span> <span class="token operator">?</span> pre <span class="token operator">+</span> item<span class="token punctuation">.</span>skuNum <span class="token operator">*</span> item<span class="token punctuation">.</span>skuPrice <span class="token operator">:</span> pre      <span class="token punctuation">&#125;</span><span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">)</span>    <span class="token punctuation">&#125;</span><span class="token punctuation">,</span>    <span class="token comment">// 是否全部选中</span>    <span class="token function">isCheckAll</span><span class="token punctuation">(</span><span class="token parameter">state</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>      <span class="token comment">// 数组中要有数据,并且每个数据都是选中的,才有意义</span>      <span class="token keyword">return</span> <span class="token punctuation">(</span>        state<span class="token punctuation">.</span>shopList<span class="token punctuation">.</span>length <span class="token operator">></span> <span class="token number">0</span> <span class="token operator">&amp;&amp;</span>        state<span class="token punctuation">.</span>shopList<span class="token punctuation">.</span><span class="token function">every</span><span class="token punctuation">(</span><span class="token parameter">item</span> <span class="token operator">=></span> item<span class="token punctuation">.</span>isChecked <span class="token operator">===</span> <span class="token number">1</span><span class="token punctuation">)</span>      <span class="token punctuation">)</span>    <span class="token punctuation">&#125;</span><span class="token punctuation">,</span>    <span class="token comment">// 获取所有选中的购物项</span>    <span class="token function">selectedCartItems</span><span class="token punctuation">(</span><span class="token parameter">state</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>      <span class="token keyword">return</span> state<span class="token punctuation">.</span>shopList<span class="token punctuation">.</span><span class="token function">filter</span><span class="token punctuation">(</span><span class="token parameter">item</span> <span class="token operator">=></span> item<span class="token punctuation">.</span>isChecked <span class="token operator">===</span> <span class="token number">1</span><span class="token punctuation">)</span>      <span class="token comment">// return state.shopList.reduce((pre, item) => &#123;</span>      <span class="token comment">//   判断是否选中</span>      <span class="token comment">//   if (item.isChecked === 1) &#123;</span>      <span class="token comment">//     pre.push(item)</span>      <span class="token comment">//   &#125;</span>      <span class="token comment">//   return pre</span>      <span class="token comment">// &#125;, [])</span>    <span class="token punctuation">&#125;</span>  <span class="token punctuation">&#125;</span><span class="token punctuation">&#125;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h2><span id="p75-deng-lu-zhu-ce-tui-chu-api-jie-kou">75 登陆/注册/退出 api接口</span><a href="#p75-deng-lu-zhu-ce-tui-chu-api-jie-kou" class="header-anchor">#</a></h2><p>api +</p><pre class="line-numbers language-js" data-language="js"><code class="language-js"><span class="token comment">// 登录接口</span><span class="token keyword">export</span> <span class="token keyword">const</span> <span class="token function-variable function">reqLogin</span> <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token parameter">mobile<span class="token punctuation">,</span> password</span><span class="token punctuation">)</span> <span class="token operator">=></span>  ajax<span class="token punctuation">.</span><span class="token function">post</span><span class="token punctuation">(</span><span class="token template-string"><span class="token template-punctuation string">`</span><span class="token string">/user/passport/login</span><span class="token template-punctuation string">`</span></span><span class="token punctuation">,</span> <span class="token punctuation">&#123;</span> mobile<span class="token punctuation">,</span> password <span class="token punctuation">&#125;</span><span class="token punctuation">)</span><span class="token comment">// 注册接口</span><span class="token keyword">export</span> <span class="token keyword">const</span> <span class="token function-variable function">reqRegister</span> <span class="token operator">=</span> <span class="token parameter">userInfo</span> <span class="token operator">=></span>  ajax<span class="token punctuation">.</span><span class="token function">post</span><span class="token punctuation">(</span><span class="token template-string"><span class="token template-punctuation string">`</span><span class="token string">/user/passport/register</span><span class="token template-punctuation string">`</span></span><span class="token punctuation">,</span> userInfo<span class="token punctuation">)</span><span class="token comment">// 退出接口</span><span class="token keyword">export</span> <span class="token keyword">const</span> <span class="token function-variable function">reqLogout</span> <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=></span> ajax<span class="token punctuation">.</span><span class="token function">get</span><span class="token punctuation">(</span><span class="token template-string"><span class="token template-punctuation string">`</span><span class="token string">/user/passport/logout</span><span class="token template-punctuation string">`</span></span><span class="token punctuation">)</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>13700000000</p><p>111111</p><h1><span id="9-yue-27-ri-day-8">9月27日（day 8）</span><a href="#9-yue-27-ri-day-8" class="header-anchor">#</a></h1><h2><span id="p76-vuex-feng-zhuang">76 vuex封装</span><a href="#p76-vuex-feng-zhuang" class="header-anchor">#</a></h2><p>user.js</p><pre class="line-numbers language-js" data-language="js"><code class="language-js"><span class="token comment">// 用户模块</span><span class="token comment">// 引入 生成uuid 工具</span><span class="token keyword">import</span> <span class="token punctuation">&#123;</span> getUUID <span class="token punctuation">&#125;</span> <span class="token keyword">from</span> <span class="token string">'@/utils/storageUtils'</span><span class="token keyword">import</span> <span class="token punctuation">&#123;</span> reqLogin<span class="token punctuation">,</span> reqRegister<span class="token punctuation">,</span> reqLogout <span class="token punctuation">&#125;</span> <span class="token keyword">from</span> <span class="token string">'@/api'</span><span class="token keyword">export</span> <span class="token keyword">default</span> <span class="token punctuation">&#123;</span>  state<span class="token operator">:</span> <span class="token punctuation">&#123;</span>    userInfo<span class="token operator">:</span> <span class="token punctuation">&#123;</span><span class="token punctuation">&#125;</span><span class="token punctuation">,</span> <span class="token comment">// 用户信息对象</span>    userTempId<span class="token operator">:</span> <span class="token function">getUUID</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token comment">// 用户的临时id</span>  <span class="token punctuation">&#125;</span><span class="token punctuation">,</span>  mutations<span class="token operator">:</span> <span class="token punctuation">&#123;</span>    <span class="token comment">// 直接更新用户信息数据（登陆成功）</span>    <span class="token constant">RECEIVE_USER_INFO</span><span class="token punctuation">(</span><span class="token parameter">state<span class="token punctuation">,</span> userInfo</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>      state<span class="token punctuation">.</span>userInfo <span class="token operator">=</span> userInfo    <span class="token punctuation">&#125;</span><span class="token punctuation">,</span>    <span class="token comment">// 清空用户信息数据（退出）</span>    <span class="token constant">RESET_USER_INFO</span><span class="token punctuation">(</span><span class="token parameter">state</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>      state<span class="token punctuation">.</span>userInfo <span class="token operator">=</span> <span class="token punctuation">&#123;</span><span class="token punctuation">&#125;</span>    <span class="token punctuation">&#125;</span>  <span class="token punctuation">&#125;</span><span class="token punctuation">,</span>  actions<span class="token operator">:</span> <span class="token punctuation">&#123;</span>    <span class="token comment">// 登陆</span>    <span class="token keyword">async</span> <span class="token function">login</span><span class="token punctuation">(</span><span class="token parameter"><span class="token punctuation">&#123;</span> commit <span class="token punctuation">&#125;</span><span class="token punctuation">,</span> <span class="token punctuation">&#123;</span> mobile<span class="token punctuation">,</span> password <span class="token punctuation">&#125;</span></span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>      <span class="token keyword">const</span> result <span class="token operator">=</span> <span class="token keyword">await</span> <span class="token function">reqLogin</span><span class="token punctuation">(</span>mobile<span class="token punctuation">,</span> password<span class="token punctuation">)</span>      <span class="token keyword">if</span> <span class="token punctuation">(</span>result<span class="token punctuation">.</span>code <span class="token operator">===</span> <span class="token number">200</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>        <span class="token keyword">const</span> userInfo <span class="token operator">=</span> result<span class="token punctuation">.</span>data        <span class="token function">commit</span><span class="token punctuation">(</span><span class="token string">'RECEIVE_USER_INFO'</span><span class="token punctuation">,</span> userInfo<span class="token punctuation">)</span>      <span class="token punctuation">&#125;</span> <span class="token keyword">else</span> <span class="token punctuation">&#123;</span>        <span class="token keyword">throw</span> <span class="token keyword">new</span> <span class="token class-name">Error</span><span class="token punctuation">(</span><span class="token string">'登陆失败了'</span><span class="token punctuation">)</span>      <span class="token punctuation">&#125;</span>    <span class="token punctuation">&#125;</span><span class="token punctuation">,</span>    <span class="token comment">// 注册</span>    <span class="token keyword">async</span> <span class="token function">register</span><span class="token punctuation">(</span><span class="token parameter"><span class="token punctuation">&#123;</span> commit <span class="token punctuation">&#125;</span><span class="token punctuation">,</span> userInfo</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>      <span class="token keyword">const</span> result <span class="token operator">=</span> <span class="token keyword">await</span> <span class="token function">reqRegister</span><span class="token punctuation">(</span>userInfo<span class="token punctuation">)</span>      <span class="token keyword">if</span> <span class="token punctuation">(</span>result<span class="token punctuation">.</span>code <span class="token operator">!==</span> <span class="token number">200</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>        <span class="token keyword">throw</span> <span class="token keyword">new</span> <span class="token class-name">Error</span><span class="token punctuation">(</span><span class="token string">'注册失败了'</span><span class="token punctuation">)</span>      <span class="token punctuation">&#125;</span>    <span class="token punctuation">&#125;</span><span class="token punctuation">,</span>    <span class="token comment">// 退出</span>    <span class="token keyword">async</span> <span class="token function">logout</span><span class="token punctuation">(</span><span class="token parameter"><span class="token punctuation">&#123;</span> commit <span class="token punctuation">&#125;</span></span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>      <span class="token keyword">const</span> result <span class="token operator">=</span> <span class="token keyword">await</span> <span class="token function">reqLogout</span><span class="token punctuation">(</span><span class="token punctuation">)</span>      <span class="token keyword">if</span> <span class="token punctuation">(</span>result<span class="token punctuation">.</span>code <span class="token operator">===</span> <span class="token number">200</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>        <span class="token comment">// 清空用户信息数组（坑）</span>        <span class="token function">commit</span><span class="token punctuation">(</span><span class="token string">'RESET_USER_INFO'</span><span class="token punctuation">)</span>      <span class="token punctuation">&#125;</span> <span class="token keyword">else</span> <span class="token punctuation">&#123;</span>        <span class="token keyword">throw</span> <span class="token keyword">new</span> <span class="token class-name">Error</span><span class="token punctuation">(</span><span class="token string">'退出失败了'</span><span class="token punctuation">)</span>      <span class="token punctuation">&#125;</span>    <span class="token punctuation">&#125;</span>  <span class="token punctuation">&#125;</span><span class="token punctuation">,</span>  getters<span class="token operator">:</span> <span class="token punctuation">&#123;</span><span class="token punctuation">&#125;</span><span class="token punctuation">&#125;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h2><span id="p77-zhu-ce-1">77 注册1</span><a href="#p77-zhu-ce-1" class="header-anchor">#</a></h2><p>Register 12行</p><pre class="line-numbers language-html" data-language="html"><code class="language-html"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>content<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>label</span><span class="token punctuation">></span></span>手机号:<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>label</span><span class="token punctuation">></span></span>  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>input</span> <span class="token attr-name">type</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>text<span class="token punctuation">"</span></span> <span class="token attr-name">placeholder</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>请输入你的手机号<span class="token punctuation">"</span></span> <span class="token attr-name">v-model</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>mobile<span class="token punctuation">"</span></span> <span class="token punctuation">/></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>content<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>label</span><span class="token punctuation">></span></span>验证码:<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>label</span><span class="token punctuation">></span></span>  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>input</span> <span class="token attr-name">type</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>text<span class="token punctuation">"</span></span> <span class="token attr-name">placeholder</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>请输入验证码<span class="token punctuation">"</span></span> <span class="token attr-name">v-model</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>code<span class="token punctuation">"</span></span> <span class="token punctuation">/></span></span>  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>img</span>    <span class="token attr-name">ref</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>code<span class="token punctuation">"</span></span>    <span class="token attr-name">src</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>/api/user/passport/code<span class="token punctuation">"</span></span>    <span class="token attr-name">alt</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>code<span class="token punctuation">"</span></span>  <span class="token punctuation">/></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>content<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>label</span><span class="token punctuation">></span></span>登录密码:<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>label</span><span class="token punctuation">></span></span>  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>input</span> <span class="token attr-name">type</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>text<span class="token punctuation">"</span></span> <span class="token attr-name">placeholder</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>请输入你的登录密码<span class="token punctuation">"</span></span> <span class="token attr-name">v-model</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>password<span class="token punctuation">"</span></span> <span class="token punctuation">/></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>content<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>label</span><span class="token punctuation">></span></span>确认密码:<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>label</span><span class="token punctuation">></span></span>  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>input</span> <span class="token attr-name">type</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>text<span class="token punctuation">"</span></span> <span class="token attr-name">placeholder</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>请输入确认密码<span class="token punctuation">"</span></span> <span class="token attr-name">v-model</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>password2<span class="token punctuation">"</span></span> <span class="token punctuation">/></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>controls<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>input</span> <span class="token attr-name">name</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>m1<span class="token punctuation">"</span></span> <span class="token attr-name">type</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>checkbox<span class="token punctuation">"</span></span> <span class="token attr-name">v-model</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>isAgree<span class="token punctuation">"</span></span> <span class="token punctuation">/></span></span>  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>span</span><span class="token punctuation">></span></span>同意协议并注册《尚品汇用户协议》<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>span</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">></span></span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>第16行</p><pre class="line-numbers language-html" data-language="html"><code class="language-html"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>content<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>label</span><span class="token punctuation">></span></span>验证码:<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>label</span><span class="token punctuation">></span></span>  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>input</span> <span class="token attr-name">type</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>text<span class="token punctuation">"</span></span> <span class="token attr-name">placeholder</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>请输入验证码<span class="token punctuation">"</span></span> <span class="token attr-name">v-model</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>code<span class="token punctuation">"</span></span> <span class="token punctuation">/></span></span>  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>img</span>    <span class="token attr-name">ref</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>code<span class="token punctuation">"</span></span>    <span class="token attr-name">src</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>http://182.92.128.115/api/user/passport/code<span class="token punctuation">"</span></span>    <span class="token attr-name">alt</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>code<span class="token punctuation">"</span></span>    <span class="token attr-name">@click</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>updateCode<span class="token punctuation">"</span></span>  <span class="token punctuation">/></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">></span></span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>第38行</p><pre class="line-numbers language-js" data-language="js"><code class="language-js"><span class="token operator">&lt;</span>div <span class="token keyword">class</span><span class="token operator">=</span><span class="token string">"btn"</span><span class="token operator">></span>  <span class="token operator">&lt;</span>a href<span class="token operator">=</span><span class="token string">"javascript:"</span> @click<span class="token operator">=</span><span class="token string">"register"</span><span class="token operator">></span>完成注册<span class="token operator">&lt;</span><span class="token operator">/</span>a<span class="token operator">></span><span class="token operator">&lt;</span><span class="token operator">/</span>div<span class="token operator">></span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span></span></code></pre><p>点图形验证码可以切换</p><pre class="line-numbers language-js" data-language="js"><code class="language-js"><span class="token keyword">export</span> <span class="token keyword">default</span> <span class="token punctuation">&#123;</span>  name<span class="token operator">:</span> <span class="token string">'Register'</span><span class="token punctuation">,</span>  <span class="token function">data</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>    <span class="token keyword">return</span> <span class="token punctuation">&#123;</span>      mobile<span class="token operator">:</span> <span class="token string">''</span><span class="token punctuation">,</span> <span class="token comment">// 手机号</span>      password<span class="token operator">:</span> <span class="token string">''</span><span class="token punctuation">,</span> <span class="token comment">// 收集密码</span>      password2<span class="token operator">:</span> <span class="token string">''</span><span class="token punctuation">,</span> <span class="token comment">// 确认密码</span>      code<span class="token operator">:</span> <span class="token string">''</span><span class="token punctuation">,</span> <span class="token comment">// 保存验证码信息</span>      isAgree<span class="token operator">:</span> <span class="token boolean">true</span> <span class="token comment">// 控制是否同意</span>    <span class="token punctuation">&#125;</span>  <span class="token punctuation">&#125;</span><span class="token punctuation">,</span>  methods<span class="token operator">:</span><span class="token punctuation">&#123;</span>    <span class="token comment">// 更新图形验证码</span>    <span class="token function">updateCode</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">&#123;</span>      <span class="token keyword">this</span><span class="token punctuation">.</span>$refs<span class="token punctuation">.</span>code<span class="token punctuation">.</span>src <span class="token operator">=</span> <span class="token string">'/api/user/passport/code?time='</span><span class="token operator">+</span>Date<span class="token punctuation">.</span><span class="token function">now</span><span class="token punctuation">(</span><span class="token punctuation">)</span>    <span class="token punctuation">&#125;</span><span class="token punctuation">,</span>    <span class="token comment">// 注册</span>    <span class="token function">register</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">&#123;</span>      <span class="token comment">// 获取所需要的验证码</span>      <span class="token keyword">const</span> <span class="token punctuation">&#123;</span>mobile<span class="token punctuation">,</span> password<span class="token punctuation">,</span> password2<span class="token punctuation">,</span> code<span class="token punctuation">,</span> isAgree<span class="token punctuation">&#125;</span> <span class="token operator">=</span> <span class="token keyword">this</span>      <span class="token comment">// 验证</span>      <span class="token keyword">if</span><span class="token punctuation">(</span><span class="token operator">!</span>isAgree<span class="token punctuation">)</span><span class="token punctuation">&#123;</span>        <span class="token function">alert</span><span class="token punctuation">(</span><span class="token string">'请勾选是否同意'</span><span class="token punctuation">)</span>        <span class="token keyword">return</span>      <span class="token punctuation">&#125;</span>      <span class="token keyword">if</span><span class="token punctuation">(</span>password<span class="token operator">!==</span>password2<span class="token punctuation">)</span><span class="token punctuation">&#123;</span>        <span class="token function">alert</span><span class="token punctuation">(</span><span class="token string">"密码不一致"</span><span class="token punctuation">)</span>        <span class="token keyword">return</span>      <span class="token punctuation">&#125;</span>      console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">"OK"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">&#125;</span>  <span class="token punctuation">&#125;</span><span class="token punctuation">&#125;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h2><span id="p78-biao-dan-yan-zheng">78 表单验证</span><a href="#p78-biao-dan-yan-zheng" class="header-anchor">#</a></h2><p>npm install vee-validate@2.2.13</p><p>utils 新建 validate.js</p><pre class="line-numbers language-js" data-language="js"><code class="language-js"><span class="token keyword">import</span> Vue <span class="token keyword">from</span> <span class="token string">'vue'</span><span class="token keyword">import</span> VeeValidate <span class="token keyword">from</span> <span class="token string">'vee-validate'</span><span class="token keyword">import</span> zh_CN <span class="token keyword">from</span> <span class="token string">'vee-validate/dist/locale/zh_CN'</span>Vue<span class="token punctuation">.</span><span class="token function">use</span><span class="token punctuation">(</span>VeeValidate<span class="token punctuation">)</span>VeeValidate<span class="token punctuation">.</span>Validator<span class="token punctuation">.</span><span class="token function">localize</span><span class="token punctuation">(</span><span class="token string">'zh_CN'</span><span class="token punctuation">,</span> <span class="token punctuation">&#123;</span>  messages<span class="token operator">:</span> zh_CN<span class="token punctuation">.</span>messages<span class="token punctuation">,</span>  attributes<span class="token operator">:</span> <span class="token punctuation">&#123;</span>    mobile<span class="token operator">:</span> <span class="token string">'手机号码'</span><span class="token punctuation">,</span>    code<span class="token operator">:</span> <span class="token string">'图形验证码'</span><span class="token punctuation">,</span>    password<span class="token operator">:</span> <span class="token string">'密码'</span><span class="token punctuation">,</span>    password2<span class="token operator">:</span> <span class="token string">'确认密码'</span>  <span class="token punctuation">&#125;</span><span class="token punctuation">&#125;</span><span class="token punctuation">)</span>VeeValidate<span class="token punctuation">.</span>Validator<span class="token punctuation">.</span><span class="token function">extend</span><span class="token punctuation">(</span><span class="token string">'phone'</span><span class="token punctuation">,</span> <span class="token punctuation">&#123;</span>  <span class="token function-variable function">getMessage</span><span class="token operator">:</span> <span class="token parameter">field</span> <span class="token operator">=></span> <span class="token string">'清输入正确的'</span> <span class="token operator">+</span> field<span class="token punctuation">,</span>  <span class="token function-variable function">validate</span><span class="token operator">:</span> <span class="token parameter">value</span> <span class="token operator">=></span> <span class="token punctuation">&#123;</span>    <span class="token keyword">return</span> <span class="token regex">/^[1]\d&#123;10&#125;$/</span><span class="token punctuation">.</span><span class="token function">test</span><span class="token punctuation">(</span>value<span class="token punctuation">)</span>  <span class="token punctuation">&#125;</span><span class="token punctuation">&#125;</span><span class="token punctuation">)</span>VeeValidate<span class="token punctuation">.</span>Validator<span class="token punctuation">.</span><span class="token function">extend</span><span class="token punctuation">(</span><span class="token string">'code1'</span><span class="token punctuation">,</span> <span class="token punctuation">&#123;</span>  <span class="token function-variable function">getMessage</span><span class="token operator">:</span> <span class="token parameter">field</span> <span class="token operator">=></span> <span class="token string">'请输入正确的'</span> <span class="token operator">+</span> field<span class="token punctuation">,</span>  <span class="token comment">// 文本框输入的内容</span>  <span class="token function-variable function">validate</span><span class="token operator">:</span> <span class="token parameter">value</span> <span class="token operator">=></span> <span class="token punctuation">&#123;</span>    <span class="token keyword">return</span> <span class="token regex">/^\d&#123;4&#125;$/</span><span class="token punctuation">.</span><span class="token function">test</span><span class="token punctuation">(</span>value<span class="token punctuation">)</span>  <span class="token punctuation">&#125;</span><span class="token punctuation">&#125;</span><span class="token punctuation">)</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>Register</p><p>引入</p><pre class="line-numbers language-js" data-language="js"><code class="language-js"><span class="token keyword">import</span> <span class="token string">'@/utils/validate'</span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>更新</p><pre class="line-numbers language-html" data-language="html"><code class="language-html"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>template</span><span class="token punctuation">></span></span>  <span class="token comment">&lt;!-- 注册 --></span>  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>register<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>h3</span><span class="token punctuation">></span></span>      注册新用户      <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>span</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>go<span class="token punctuation">"</span></span>        <span class="token punctuation">></span></span>我有账号，去        <span class="token comment">&lt;!-- &lt;a href="login.html" target="_blank">登陆&lt;/a> --></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>router-link</span> <span class="token attr-name">to</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>/login<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>登陆<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>router-link</span><span class="token punctuation">></span></span>      <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>span</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>h3</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>content<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>      <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>label</span><span class="token punctuation">></span></span>手机号:<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>label</span><span class="token punctuation">></span></span>      <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>input</span>        <span class="token attr-name">type</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>text<span class="token punctuation">"</span></span>        <span class="token attr-name">placeholder</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>请输入你的手机号<span class="token punctuation">"</span></span>        <span class="token attr-name">v-model</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>mobile<span class="token punctuation">"</span></span>        <span class="token attr-name">v-validate</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span><span class="token punctuation">'</span>required|phone<span class="token punctuation">'</span><span class="token punctuation">"</span></span>        <span class="token attr-name">name</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>mobile<span class="token punctuation">"</span></span>      <span class="token punctuation">/></span></span>      <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>span</span><span class="token style-attr language-css"><span class="token attr-name"> <span class="token attr-name">style</span></span><span class="token punctuation">="</span><span class="token attr-value"><span class="token property">color</span><span class="token punctuation">:</span> red</span><span class="token punctuation">"</span></span><span class="token punctuation">></span></span>&#123;&#123; errors.first('mobile') &#125;&#125;<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>span</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>content<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>      <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>label</span><span class="token punctuation">></span></span>验证码:<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>label</span><span class="token punctuation">></span></span>      <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>input</span>        <span class="token attr-name">type</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>text<span class="token punctuation">"</span></span>        <span class="token attr-name">placeholder</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>请输入验证码<span class="token punctuation">"</span></span>        <span class="token attr-name">v-model</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>code<span class="token punctuation">"</span></span>        <span class="token attr-name">v-validate</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span><span class="token punctuation">'</span>required|code1<span class="token punctuation">'</span><span class="token punctuation">"</span></span>        <span class="token attr-name">name</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>code<span class="token punctuation">"</span></span>      <span class="token punctuation">/></span></span>      <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>img</span>        <span class="token attr-name">ref</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>code<span class="token punctuation">"</span></span>        <span class="token attr-name">src</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>/api/user/passport/code<span class="token punctuation">"</span></span>        <span class="token attr-name">alt</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>code<span class="token punctuation">"</span></span>        <span class="token attr-name">@click</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>updateCode<span class="token punctuation">"</span></span>      <span class="token punctuation">/></span></span>      <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>span</span><span class="token style-attr language-css"><span class="token attr-name"> <span class="token attr-name">style</span></span><span class="token punctuation">="</span><span class="token attr-value"><span class="token property">color</span><span class="token punctuation">:</span> red</span><span class="token punctuation">"</span></span><span class="token punctuation">></span></span>&#123;&#123; errors.first('code') &#125;&#125;<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>span</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>content<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>      <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>label</span><span class="token punctuation">></span></span>登录密码:<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>label</span><span class="token punctuation">></span></span>      <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>input</span>        <span class="token attr-name">type</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>text<span class="token punctuation">"</span></span>        <span class="token attr-name">placeholder</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>请输入你的登录密码<span class="token punctuation">"</span></span>        <span class="token attr-name">v-model</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>password<span class="token punctuation">"</span></span>        <span class="token attr-name">v-validate</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span><span class="token punctuation">'</span>required<span class="token punctuation">'</span><span class="token punctuation">"</span></span>        <span class="token attr-name">name</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>password<span class="token punctuation">"</span></span>      <span class="token punctuation">/></span></span>      <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>span</span><span class="token style-attr language-css"><span class="token attr-name"> <span class="token attr-name">style</span></span><span class="token punctuation">="</span><span class="token attr-value"><span class="token property">color</span><span class="token punctuation">:</span> red</span><span class="token punctuation">"</span></span><span class="token punctuation">></span></span>&#123;&#123; errors.first('password') &#125;&#125;<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>span</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>content<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>      <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>label</span><span class="token punctuation">></span></span>确认密码:<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>label</span><span class="token punctuation">></span></span>      <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>input</span>        <span class="token attr-name">type</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>text<span class="token punctuation">"</span></span>        <span class="token attr-name">placeholder</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>请输入确认密码<span class="token punctuation">"</span></span>        <span class="token attr-name">v-model</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>password2<span class="token punctuation">"</span></span>        <span class="token attr-name">v-validate</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span><span class="token punctuation">'</span>required<span class="token punctuation">'</span><span class="token punctuation">"</span></span>        <span class="token attr-name">name</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>password2<span class="token punctuation">"</span></span>      <span class="token punctuation">/></span></span>      <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>span</span><span class="token style-attr language-css"><span class="token attr-name"> <span class="token attr-name">style</span></span><span class="token punctuation">="</span><span class="token attr-value"><span class="token property">color</span><span class="token punctuation">:</span> red</span><span class="token punctuation">"</span></span><span class="token punctuation">></span></span>&#123;&#123; errors.first('password2') &#125;&#125;<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>span</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>controls<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>      <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>input</span> <span class="token attr-name">name</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>m1<span class="token punctuation">"</span></span> <span class="token attr-name">type</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>checkbox<span class="token punctuation">"</span></span> <span class="token attr-name">v-model</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>isAgree<span class="token punctuation">"</span></span> <span class="token punctuation">/></span></span>      <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>span</span><span class="token punctuation">></span></span>同意协议并注册《尚品汇用户协议》<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>span</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>btn<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>      <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>a</span> <span class="token attr-name">href</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>javascript:<span class="token punctuation">"</span></span> <span class="token attr-name">@click</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>register<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>完成注册<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>a</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">></span></span>  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">></span></span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h2><span id="p79-biao-dan-yan-zheng-2">79 表单验证2</span><a href="#p79-biao-dan-yan-zheng-2" class="header-anchor">#</a></h2><p>register 更新</p><pre class="line-numbers language-js" data-language="js"><code class="language-js"><span class="token comment">// 注册</span>    <span class="token keyword">async</span> <span class="token function">register</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>      <span class="token comment">// 获取所需要的验证码</span>      <span class="token keyword">const</span> <span class="token punctuation">&#123;</span> mobile<span class="token punctuation">,</span> password<span class="token punctuation">,</span> password2<span class="token punctuation">,</span> code<span class="token punctuation">,</span> isAgree <span class="token punctuation">&#125;</span> <span class="token operator">=</span> <span class="token keyword">this</span>      <span class="token comment">// 验证</span>      <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token operator">!</span>isAgree<span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>        <span class="token function">alert</span><span class="token punctuation">(</span><span class="token string">'请勾选是否同意'</span><span class="token punctuation">)</span>        <span class="token keyword">return</span>      <span class="token punctuation">&#125;</span>      <span class="token keyword">if</span> <span class="token punctuation">(</span>password <span class="token operator">!==</span> password2<span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>        <span class="token function">alert</span><span class="token punctuation">(</span><span class="token string">'密码不一致'</span><span class="token punctuation">)</span>        <span class="token keyword">return</span>      <span class="token punctuation">&#125;</span>      <span class="token comment">// 表单的验证</span>      <span class="token comment">// -- 准备字段数组</span>      <span class="token keyword">const</span> names <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token string">'mobile'</span><span class="token punctuation">,</span> <span class="token string">'password'</span><span class="token punctuation">,</span> <span class="token string">'code'</span><span class="token punctuation">]</span>      <span class="token comment">// -- 仅当所有表单验证通过才是 true</span>      <span class="token keyword">const</span> success <span class="token operator">=</span> <span class="token keyword">await</span> <span class="token keyword">this</span><span class="token punctuation">.</span>$validator<span class="token punctuation">.</span><span class="token function">validateAll</span><span class="token punctuation">(</span>names<span class="token punctuation">)</span>      <span class="token keyword">if</span> <span class="token punctuation">(</span>success<span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>        <span class="token keyword">try</span> <span class="token punctuation">&#123;</span>          <span class="token comment">// 实现 注册</span>          <span class="token keyword">await</span> <span class="token keyword">this</span><span class="token punctuation">.</span>$store<span class="token punctuation">.</span><span class="token function">dispatch</span><span class="token punctuation">(</span><span class="token string">'register'</span><span class="token punctuation">,</span> <span class="token punctuation">&#123;</span> mobile<span class="token punctuation">,</span> password<span class="token punctuation">,</span> code <span class="token punctuation">&#125;</span><span class="token punctuation">)</span>          <span class="token comment">// 路由跳转 -- 登录界面</span>          <span class="token keyword">this</span><span class="token punctuation">.</span>$router<span class="token punctuation">.</span><span class="token function">replace</span><span class="token punctuation">(</span><span class="token string">'/login'</span><span class="token punctuation">)</span>        <span class="token punctuation">&#125;</span> <span class="token keyword">catch</span> <span class="token punctuation">(</span>error<span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>          <span class="token function">alert</span><span class="token punctuation">(</span>error<span class="token punctuation">.</span>message<span class="token punctuation">)</span>        <span class="token punctuation">&#125;</span>      <span class="token punctuation">&#125;</span>    <span class="token punctuation">&#125;</span>  <span class="token punctuation">&#125;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h2><span id="p80-deng-lu">80 登录</span><a href="#p80-deng-lu" class="header-anchor">#</a></h2><p>Login</p><pre class="line-numbers language-php+HTML" data-language="php+HTML"><code class="language-php+HTML">  &lt;div class&#x3D;&quot;input-text clearFix&quot;&gt;    &lt;span class&#x3D;&quot;pwd&quot;&gt;&lt;&#x2F;span&gt;    &lt;input type&#x3D;&quot;text&quot; placeholder&#x3D;&quot;请输入密码&quot; v-model&#x3D;&quot;password&quot; &#x2F;&gt;  &lt;&#x2F;div&gt;  &lt;div class&#x3D;&quot;setting clearFix&quot;&gt;    &lt;label class&#x3D;&quot;checkbox inline&quot;&gt;      &lt;input name&#x3D;&quot;m1&quot; type&#x3D;&quot;checkbox&quot; value&#x3D;&quot;2&quot; checked&#x3D;&quot;&quot; &#x2F;&gt;      自动登录    &lt;&#x2F;label&gt;    &lt;span class&#x3D;&quot;forget&quot;&gt;忘记密码？&lt;&#x2F;span&gt;  &lt;&#x2F;div&gt;  &lt;button class&#x3D;&quot;btn&quot; @click.prevent&#x3D;&quot;login&quot;&gt;登&amp;nbsp;&amp;nbsp;录&lt;&#x2F;button&gt;&lt;&#x2F;form&gt;<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>script</p><pre class="line-numbers language-js" data-language="js"><code class="language-js"><span class="token keyword">export</span> <span class="token keyword">default</span> <span class="token punctuation">&#123;</span>  name<span class="token operator">:</span> <span class="token string">'Login'</span><span class="token punctuation">,</span>  <span class="token function">data</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>    <span class="token keyword">return</span> <span class="token punctuation">&#123;</span>      mobile<span class="token operator">:</span> <span class="token string">'13700000000'</span><span class="token punctuation">,</span>      password<span class="token operator">:</span> <span class="token string">'123456'</span>    <span class="token punctuation">&#125;</span>  <span class="token punctuation">&#125;</span><span class="token punctuation">,</span>  methods<span class="token operator">:</span> <span class="token punctuation">&#123;</span>    <span class="token comment">// 登录</span>    <span class="token keyword">async</span> <span class="token function">login</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>      <span class="token keyword">const</span> <span class="token punctuation">&#123;</span> mobile<span class="token punctuation">,</span> password <span class="token punctuation">&#125;</span> <span class="token operator">=</span> <span class="token keyword">this</span>      <span class="token comment">// 简单的验证</span>      <span class="token keyword">if</span> <span class="token punctuation">(</span>mobile <span class="token operator">===</span> <span class="token string">''</span> <span class="token operator">||</span> password <span class="token operator">===</span> <span class="token string">''</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>        <span class="token function">alert</span><span class="token punctuation">(</span><span class="token string">'请输入手机号码或者密码'</span><span class="token punctuation">)</span>        <span class="token keyword">return</span>      <span class="token punctuation">&#125;</span>      <span class="token comment">// 手机号码和密码都已经收到</span>      <span class="token comment">// 分发action</span>      <span class="token keyword">try</span> <span class="token punctuation">&#123;</span>        <span class="token keyword">await</span> <span class="token keyword">this</span><span class="token punctuation">.</span>$store<span class="token punctuation">.</span><span class="token function">dispatch</span><span class="token punctuation">(</span><span class="token string">'login'</span><span class="token punctuation">,</span> <span class="token punctuation">&#123;</span> mobile<span class="token punctuation">,</span> password <span class="token punctuation">&#125;</span><span class="token punctuation">)</span>        <span class="token keyword">this</span><span class="token punctuation">.</span>$router<span class="token punctuation">.</span><span class="token function">replace</span><span class="token punctuation">(</span><span class="token string">'/'</span><span class="token punctuation">)</span>      <span class="token punctuation">&#125;</span> <span class="token keyword">catch</span> <span class="token punctuation">(</span>error<span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>        <span class="token function">alert</span><span class="token punctuation">(</span>error<span class="token punctuation">)</span>      <span class="token punctuation">&#125;</span>    <span class="token punctuation">&#125;</span>  <span class="token punctuation">&#125;</span><span class="token punctuation">&#125;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h2><span id="p81-deng-lu-zhi-hou-xian-shi-yong-hu-ming">81 登录之后显示用户名</span><a href="#p81-deng-lu-zhi-hou-xian-shi-yong-hu-ming" class="header-anchor">#</a></h2><p>Header 7</p><pre class="line-numbers language-html" data-language="html"><code class="language-html"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>p</span><span class="token punctuation">></span></span>商城欢迎您！<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>p</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>p</span> <span class="token attr-name">v-if</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>userInfo.name<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>span</span><span class="token punctuation">></span></span>&#123;&#123; userInfo.name &#125;&#125;<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>span</span>  <span class="token punctuation">></span></span><span class="token entity named-entity" title="&nbsp;">&amp;nbsp;</span>  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>a</span> <span class="token attr-name">href</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>javascript:;<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>退出<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>a</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>p</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>p</span> <span class="token attr-name">v-else</span><span class="token punctuation">></span></span>  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>span</span><span class="token punctuation">></span></span>请<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>span</span><span class="token punctuation">></span></span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><pre class="line-numbers language-js" data-language="js"><code class="language-js"><span class="token keyword">import</span> <span class="token punctuation">&#123;</span> mapState <span class="token punctuation">&#125;</span> <span class="token keyword">from</span> <span class="token string">'vuex'</span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><pre class="line-numbers language-js" data-language="js"><code class="language-js">computed<span class="token operator">:</span> <span class="token punctuation">&#123;</span>  <span class="token operator">...</span><span class="token function">mapState</span><span class="token punctuation">(</span><span class="token punctuation">&#123;</span>    <span class="token function-variable function">userInfo</span><span class="token operator">:</span> <span class="token parameter">state</span> <span class="token operator">=></span> state<span class="token punctuation">.</span>user<span class="token punctuation">.</span>userInfo  <span class="token punctuation">&#125;</span><span class="token punctuation">)</span><span class="token punctuation">&#125;</span><span class="token punctuation">,</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>保存登录信息 user.js 刷新不会掉线</p><pre class="line-numbers language-js" data-language="js"><code class="language-js">state<span class="token operator">:</span> <span class="token punctuation">&#123;</span>  <span class="token comment">// 1 将token放在缓存中</span>  userInfo<span class="token operator">:</span> <span class="token constant">JSON</span><span class="token punctuation">.</span><span class="token function">parse</span><span class="token punctuation">(</span>localStorage<span class="token punctuation">.</span><span class="token function">getItem</span><span class="token punctuation">(</span><span class="token string">'user_info_key'</span><span class="token punctuation">)</span> <span class="token operator">||</span> <span class="token string">'&#123;&#125;'</span><span class="token punctuation">)</span><span class="token punctuation">,</span>    actions<span class="token operator">:</span> <span class="token punctuation">&#123;</span>  <span class="token comment">// 登陆</span>  <span class="token keyword">async</span> <span class="token function">login</span><span class="token punctuation">(</span><span class="token parameter"><span class="token punctuation">&#123;</span> commit <span class="token punctuation">&#125;</span><span class="token punctuation">,</span> <span class="token punctuation">&#123;</span> mobile<span class="token punctuation">,</span> password <span class="token punctuation">&#125;</span></span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>    <span class="token keyword">const</span> result <span class="token operator">=</span> <span class="token keyword">await</span> <span class="token function">reqLogin</span><span class="token punctuation">(</span>mobile<span class="token punctuation">,</span> password<span class="token punctuation">)</span>    <span class="token keyword">if</span> <span class="token punctuation">(</span>result<span class="token punctuation">.</span>code <span class="token operator">===</span> <span class="token number">200</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>      <span class="token keyword">const</span> userInfo <span class="token operator">=</span> result<span class="token punctuation">.</span>data      <span class="token function">commit</span><span class="token punctuation">(</span><span class="token string">'RECEIVE_USER_INFO'</span><span class="token punctuation">,</span> userInfo<span class="token punctuation">)</span>      <span class="token comment">// 2 缓存</span>      localStorage<span class="token punctuation">.</span><span class="token function">setItem</span><span class="token punctuation">(</span><span class="token string">'user_info_key'</span><span class="token punctuation">,</span> <span class="token constant">JSON</span><span class="token punctuation">.</span><span class="token function">stringify</span><span class="token punctuation">(</span>userInfo<span class="token punctuation">)</span><span class="token punctuation">)</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h2><span id="p82-token">82 token</span><a href="#p82-token" class="header-anchor">#</a></h2><p>user.js +</p><pre class="line-numbers language-js" data-language="js"><code class="language-js"><span class="token comment">// state</span>userInfo<span class="token operator">:</span> <span class="token constant">JSON</span><span class="token punctuation">.</span><span class="token function">parse</span><span class="token punctuation">(</span>localStorage<span class="token punctuation">.</span><span class="token function">getItem</span><span class="token punctuation">(</span><span class="token string">'user_info_key'</span><span class="token punctuation">)</span> <span class="token operator">||</span> <span class="token string">'&#123;&#125;'</span><span class="token punctuation">)</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre><p>ajax 请求拦截器</p><pre class="line-numbers language-js" data-language="js"><code class="language-js"><span class="token comment">// 获取 token</span><span class="token keyword">const</span> token <span class="token operator">=</span> store<span class="token punctuation">.</span>state<span class="token punctuation">.</span>user<span class="token punctuation">.</span>userInfo<span class="token punctuation">.</span>token<span class="token comment">// 判断 token 是否存在</span><span class="token keyword">if</span> <span class="token punctuation">(</span>token<span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>  config<span class="token punctuation">.</span>headers<span class="token punctuation">[</span><span class="token string">'token'</span><span class="token punctuation">]</span> <span class="token operator">=</span> token<span class="token punctuation">&#125;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h2><span id="p83-deng-chu">83 登出</span><a href="#p83-deng-chu" class="header-anchor">#</a></h2><p>Header 13</p><pre class="line-numbers language-html" data-language="html"><code class="language-html"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>a</span> <span class="token attr-name">href</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>javascript:;<span class="token punctuation">"</span></span> <span class="token attr-name">@click</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>logout<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>退出<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>a</span><span class="token punctuation">></span></span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>methods</p><pre class="line-numbers language-none"><code class="language-none">logout()&#123;  this.$store.dispatch(&#39;logout&#39;)&#125;<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span></span></code></pre><p>store/modules/user.js</p><pre class="line-numbers language-js" data-language="js"><code class="language-js"><span class="token comment">// 清空用户信息数据（退出）</span><span class="token constant">RESET_USER_INFO</span><span class="token punctuation">(</span><span class="token parameter">state</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>  state<span class="token punctuation">.</span>userInfo <span class="token operator">=</span> <span class="token punctuation">&#123;</span><span class="token punctuation">&#125;</span>  <span class="token comment">// 清空浏览器中缓存信息中的用户信息</span>  localStorage<span class="token punctuation">.</span><span class="token function">removeItem</span><span class="token punctuation">(</span><span class="token string">'user_info_key'</span><span class="token punctuation">)</span><span class="token punctuation">&#125;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h1><span id="9-yue-28-ri-day-9">9月28日（day 9）</span><a href="#9-yue-28-ri-day-9" class="header-anchor">#</a></h1><h2><span id="p84-da-jian-lu-you-he-tiao-zhuan">84 搭建路由和跳转</span><a href="#p84-da-jian-lu-you-he-tiao-zhuan" class="header-anchor">#</a></h2><p>拷贝四个路由组件到 pages</p><p><code>@\router\routes.js</code> 引入四路由组件</p><pre class="line-numbers language-js" data-language="js"><code class="language-js"><span class="token keyword">import</span> Trade <span class="token keyword">from</span> <span class="token string">'@/pages/Trade'</span><span class="token keyword">import</span> Pay <span class="token keyword">from</span> <span class="token string">'@/pages/Pay'</span><span class="token keyword">import</span> PaySuccess <span class="token keyword">from</span> <span class="token string">'@/pages/PaySuccess'</span><span class="token keyword">import</span> Center <span class="token keyword">from</span> <span class="token string">'@/pages/Center'</span>  <span class="token comment">// Trade</span>  <span class="token punctuation">&#123;</span>    path<span class="token operator">:</span> <span class="token string">'/trade'</span><span class="token punctuation">,</span>    component<span class="token operator">:</span> Trade  <span class="token punctuation">&#125;</span><span class="token punctuation">,</span>  <span class="token comment">// Pay</span>  <span class="token punctuation">&#123;</span>    path<span class="token operator">:</span> <span class="token string">'/pay'</span><span class="token punctuation">,</span>    component<span class="token operator">:</span> Pay  <span class="token punctuation">&#125;</span><span class="token punctuation">,</span>  <span class="token comment">// PaySuccess</span>  <span class="token punctuation">&#123;</span>    path<span class="token operator">:</span> <span class="token string">'/paysuccess'</span><span class="token punctuation">,</span>    component<span class="token operator">:</span> PaySuccess  <span class="token punctuation">&#125;</span><span class="token punctuation">,</span>  <span class="token comment">// Center</span>  <span class="token punctuation">&#123;</span>    path<span class="token operator">:</span> <span class="token string">'/center'</span><span class="token punctuation">,</span>    component<span class="token operator">:</span> Center  <span class="token punctuation">&#125;</span><span class="token punctuation">,</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>Header 修改跳转链接（路由链接）  我的订单 21行</p><pre class="line-numbers language-html" data-language="html"><code class="language-html"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>typeList<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>router-link</span> <span class="token attr-name">to</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>/center<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>我的订单<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>router-link</span><span class="token punctuation">></span></span>  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>router-link</span> <span class="token attr-name">to</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>/shopcart<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>我的购物车<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>router-link</span><span class="token punctuation">></span></span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span></span></code></pre><h2><span id="p85-wo-de-ding-dan-xie-jie-kou">85 我的订单写接口</span><a href="#p85-wo-de-ding-dan-xie-jie-kou" class="header-anchor">#</a></h2><p>写接口 <code>api/index.js</code></p><pre class="line-numbers language-js" data-language="js"><code class="language-js"><span class="token comment">// 获取订单的详情信息数据</span><span class="token keyword">export</span> <span class="token keyword">const</span> <span class="token function-variable function">reqTradeInfo</span> <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=></span> ajax<span class="token punctuation">.</span><span class="token function">get</span><span class="token punctuation">(</span><span class="token string">'/order/auth/trade'</span><span class="token punctuation">)</span><span class="token comment">// 获取订单的列表信息数据</span><span class="token keyword">export</span> <span class="token keyword">const</span> <span class="token function-variable function">reqOrderList</span> <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token parameter">page<span class="token punctuation">,</span> limit</span><span class="token punctuation">)</span> <span class="token operator">=></span>  ajax<span class="token punctuation">.</span><span class="token function">get</span><span class="token punctuation">(</span><span class="token template-string"><span class="token template-punctuation string">`</span><span class="token string">/order/auth/</span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">$&#123;</span>page<span class="token interpolation-punctuation punctuation">&#125;</span></span><span class="token string">/</span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">$&#123;</span>limit<span class="token interpolation-punctuation punctuation">&#125;</span></span><span class="token template-punctuation string">`</span></span><span class="token punctuation">)</span><span class="token comment">// 提交订单</span><span class="token keyword">export</span> <span class="token keyword">const</span> <span class="token function-variable function">reqSubmitOrder</span> <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token parameter">tradeNo<span class="token punctuation">,</span> orderInfo</span><span class="token punctuation">)</span> <span class="token operator">=></span>  <span class="token function">ajax</span><span class="token punctuation">(</span><span class="token punctuation">&#123;</span>    method<span class="token operator">:</span> <span class="token string">'POST'</span><span class="token punctuation">,</span> <span class="token comment">// 请求方式</span>    url<span class="token operator">:</span> <span class="token string">'/order/auth/submitOrder'</span><span class="token punctuation">,</span> <span class="token comment">// 请求地址</span>    params<span class="token operator">:</span> <span class="token punctuation">&#123;</span> tradeNo <span class="token punctuation">&#125;</span><span class="token punctuation">,</span> <span class="token comment">// 参数</span>    data<span class="token operator">:</span> orderInfo <span class="token comment">// 数据参数</span>  <span class="token punctuation">&#125;</span><span class="token punctuation">)</span><span class="token comment">// 获取订单支付信息</span><span class="token keyword">export</span> <span class="token keyword">const</span> <span class="token function-variable function">reqPayInfo</span> <span class="token operator">=</span> <span class="token parameter">orderId</span> <span class="token operator">=></span>  ajax<span class="token punctuation">.</span><span class="token function">get</span><span class="token punctuation">(</span><span class="token template-string"><span class="token template-punctuation string">`</span><span class="token string">/payment/weixin/createNative/</span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">$&#123;</span>orderId<span class="token interpolation-punctuation punctuation">&#125;</span></span><span class="token template-punctuation string">`</span></span><span class="token punctuation">)</span><span class="token comment">// 查询支付状态</span><span class="token keyword">export</span> <span class="token keyword">const</span> <span class="token function-variable function">reqPayStatus</span> <span class="token operator">=</span> <span class="token parameter">orderId</span> <span class="token operator">=></span>  ajax<span class="token punctuation">.</span><span class="token function">get</span><span class="token punctuation">(</span><span class="token template-string"><span class="token template-punctuation string">`</span><span class="token string">/payment/weixin/queryPayStatus/</span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">$&#123;</span>orderId<span class="token interpolation-punctuation punctuation">&#125;</span></span><span class="token template-punctuation string">`</span></span><span class="token punctuation">)</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h2><span id="p86-er-ji-lu-you">86 二级路由</span><a href="#p86-er-ji-lu-you" class="header-anchor">#</a></h2><p>结构和样式一起带走，图片</p><p>pages/Center 新建 MyOrder 和 GroupBuy 新建 index.vue</p><p>MyOrder</p><pre class="line-numbers language-vue" data-language="vue"><code class="language-vue">&lt;template&gt;  &lt;div class&#x3D;&quot;order-content&quot;&gt;...  &lt;&#x2F;div&gt;&lt;&#x2F;template&gt;&lt;script&gt;export default &#123;  name: &#39;MyOrder&#39;&#125;&lt;&#x2F;script&gt;&lt;style lang&#x3D;&quot;less&quot; scoped&gt;&#x2F;&#x2F;订单部分.order-content &#123;...&#125;&lt;&#x2F;style&gt;<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>GroupBuy</p><pre class="line-numbers language-vue" data-language="vue"><code class="language-vue">&lt;template&gt;  &lt;div&gt;    &lt;h2&gt;111111&lt;&#x2F;h2&gt;    &lt;h2&gt;111111&lt;&#x2F;h2&gt;    &lt;h2&gt;111111&lt;&#x2F;h2&gt;    &lt;h2&gt;111111&lt;&#x2F;h2&gt;  &lt;&#x2F;div&gt;&lt;&#x2F;template&gt;&lt;script&gt;export default &#123;  name: &#39;GroupBuy&#39;&#125;&lt;&#x2F;script&gt;&lt;style lang&#x3D;&quot;less&quot; scoped&gt;&lt;&#x2F;style&gt;<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>Center 58行 剪切（加路由视图） ，以及下面样式 以及图片 到 MyOrder</p><p>第9行加路由链接</p><pre class="line-numbers language-vue" data-language="vue"><code class="language-vue">&lt;dd&gt;  &lt;router-link to&#x3D;&quot;&#x2F;center&#x2F;myorder&quot;&gt;我的订单&lt;&#x2F;router-link&gt;&lt;&#x2F;dd&gt;&lt;dd&gt;  &lt;router-link to&#x3D;&quot;&#x2F;center&#x2F;groupbuy&quot;&gt;团购订单&lt;&#x2F;router-link&gt;<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>路由中引入并创建二级路由</p><pre class="line-numbers language-js" data-language="js"><code class="language-js"><span class="token keyword">import</span> Center <span class="token keyword">from</span> <span class="token string">'@/pages/Center'</span><span class="token keyword">import</span> MyOrder <span class="token keyword">from</span> <span class="token string">'@/pages/Center/MyOrder'</span><span class="token keyword">import</span> GroupBuy <span class="token keyword">from</span> <span class="token string">'@/pages/Center/GroupBuy'</span>  <span class="token comment">// Center</span>  <span class="token punctuation">&#123;</span>    path<span class="token operator">:</span> <span class="token string">'/center'</span><span class="token punctuation">,</span>    component<span class="token operator">:</span> Center<span class="token punctuation">,</span>    children<span class="token operator">:</span> <span class="token punctuation">[</span>      <span class="token punctuation">&#123;</span>        path<span class="token operator">:</span> <span class="token string">'/center/myorder'</span><span class="token punctuation">,</span>        component<span class="token operator">:</span> MyOrder      <span class="token punctuation">&#125;</span><span class="token punctuation">,</span><span class="token punctuation">&#123;</span>        path<span class="token operator">:</span> <span class="token string">'/center/groupbuy'</span><span class="token punctuation">,</span>        component<span class="token operator">:</span> GroupBuy      <span class="token punctuation">&#125;</span><span class="token punctuation">,</span><span class="token punctuation">&#123;</span>        path<span class="token operator">:</span> <span class="token string">'/center'</span><span class="token punctuation">,</span>        redirect<span class="token operator">:</span> <span class="token string">'/center/myorder'</span>      <span class="token punctuation">&#125;</span>    <span class="token punctuation">]</span>  <span class="token punctuation">&#125;</span><span class="token punctuation">,</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h2><span id="p87-xian-shi-ding-dan">87 显示订单</span><a href="#p87-xian-shi-ding-dan" class="header-anchor">#</a></h2><p>main.js</p><pre class="line-numbers language-js" data-language="js"><code class="language-js"><span class="token comment">// 引入api接口并绑定在Vue原型对象上</span><span class="token keyword">import</span> <span class="token operator">*</span> <span class="token keyword">as</span> <span class="token constant">API</span> <span class="token keyword">from</span> <span class="token string">'@/api'</span><span class="token class-name">Vue</span><span class="token punctuation">.</span>prototype<span class="token punctuation">.</span>$<span class="token constant">API</span> <span class="token operator">=</span> <span class="token constant">API</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span></span></code></pre><p>MyOrder</p><pre class="line-numbers language-js" data-language="js"><code class="language-js"><span class="token keyword">export</span> <span class="token keyword">default</span> <span class="token punctuation">&#123;</span>  name<span class="token operator">:</span> <span class="token string">'MyOrder'</span><span class="token punctuation">,</span>  <span class="token function">data</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>    <span class="token keyword">return</span> <span class="token punctuation">&#123;</span>      pageNo<span class="token operator">:</span> <span class="token number">1</span><span class="token punctuation">,</span> <span class="token comment">// 默认第一页</span>      limit<span class="token operator">:</span> <span class="token number">10</span><span class="token punctuation">,</span> <span class="token comment">// 每页的条数</span>      total<span class="token operator">:</span> <span class="token number">0</span><span class="token punctuation">,</span> <span class="token comment">// 总条数数据</span>      orders<span class="token operator">:</span> <span class="token punctuation">[</span><span class="token punctuation">]</span> <span class="token comment">// 存储当前每页的订单信息数据</span>    <span class="token punctuation">&#125;</span>  <span class="token punctuation">&#125;</span><span class="token punctuation">,</span>  <span class="token function">mounted</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>    <span class="token keyword">this</span><span class="token punctuation">.</span><span class="token function">getMyOrderList</span><span class="token punctuation">(</span><span class="token punctuation">)</span>  <span class="token punctuation">&#125;</span><span class="token punctuation">,</span>  methods<span class="token operator">:</span> <span class="token punctuation">&#123;</span>    <span class="token comment">// 获取订单信息数据列表</span>    <span class="token keyword">async</span> <span class="token function">getMyOrderList</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>      <span class="token keyword">const</span> result <span class="token operator">=</span> <span class="token keyword">await</span> <span class="token keyword">this</span><span class="token punctuation">.</span>$<span class="token constant">API</span><span class="token punctuation">.</span><span class="token function">reqOrderList</span><span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">.</span>pageNo<span class="token punctuation">,</span> <span class="token keyword">this</span><span class="token punctuation">.</span>limit<span class="token punctuation">)</span>      <span class="token keyword">if</span> <span class="token punctuation">(</span>result<span class="token punctuation">.</span>code <span class="token operator">===</span> <span class="token number">200</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>        <span class="token keyword">const</span> <span class="token punctuation">&#123;</span> records<span class="token punctuation">,</span> total <span class="token punctuation">&#125;</span> <span class="token operator">=</span> result<span class="token punctuation">.</span>data        <span class="token comment">// 更新数据</span>        <span class="token keyword">this</span><span class="token punctuation">.</span>total <span class="token operator">=</span> total        <span class="token keyword">this</span><span class="token punctuation">.</span>orders <span class="token operator">=</span> records      <span class="token punctuation">&#125;</span>    <span class="token punctuation">&#125;</span>  <span class="token punctuation">&#125;</span><span class="token punctuation">&#125;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>20行</p><pre class="line-numbers language-vue" data-language="vue"><code class="language-vue">&lt;div class&#x3D;&quot;orders&quot;&gt;  &lt;!-- 这是订单 --&gt;  &lt;table class&#x3D;&quot;order-item&quot; v-for&#x3D;&quot;(item, index) in orders&quot; :key&#x3D;&quot;item.id&quot;&gt;    &lt;thead&gt;      &lt;tr&gt;        &lt;th colspan&#x3D;&quot;5&quot;&gt;          &lt;span class&#x3D;&quot;ordertitle&quot;            &gt;&#123;&#123; item.createTime &#125;&#125; 订单编号：&#123;&#123; item.outTradeNo &#125;&#125;            &lt;span class&#x3D;&quot;pull-right delete&quot;              &gt;&lt;img src&#x3D;&quot;.&#x2F;images&#x2F;delete.png&quot;&#x2F;&gt;&lt;&#x2F;span          &gt;&lt;&#x2F;span&gt;        &lt;&#x2F;th&gt;      &lt;&#x2F;tr&gt;    &lt;&#x2F;thead&gt;    &lt;tbody&gt;      &lt;tr v-for&#x3D;&quot;(goods, index) in item.orderDetailList&quot; :key&#x3D;&quot;goods.id&quot;&gt;        &lt;td width&#x3D;&quot;60%&quot;&gt;          &lt;div class&#x3D;&quot;typographic&quot;&gt;            &lt;img :src&#x3D;&quot;goods.imgUrl&quot; &#x2F;&gt;            &lt;a href&#x3D;&quot;#&quot; class&#x3D;&quot;block-text&quot;&gt;&#123;&#123; goods.skuName &#125;&#125;&lt;&#x2F;a&gt;            &lt;span&gt;x&#123;&#123; goods.skuNum &#125;&#125;&lt;&#x2F;span&gt;            &lt;a href&#x3D;&quot;#&quot; class&#x3D;&quot;service&quot;&gt;售后申请&lt;&#x2F;a&gt;          &lt;&#x2F;div&gt;        &lt;&#x2F;td&gt;        &lt;template v-if&#x3D;&quot;index &#x3D;&#x3D;&#x3D; 0&quot;&gt;          &lt;td            :rowspan&#x3D;&quot;item.orderDetailList.length&quot;            width&#x3D;&quot;8%&quot;            class&#x3D;&quot;center&quot;          &gt;            &#123;&#123; item.consignee &#125;&#125;          &lt;&#x2F;td&gt;          &lt;td            :rowspan&#x3D;&quot;item.orderDetailList.length&quot;            width&#x3D;&quot;13%&quot;            class&#x3D;&quot;center&quot;          &gt;            &lt;ul class&#x3D;&quot;unstyled&quot;&gt;              &lt;li&gt;总金额¥&#123;&#123; item.totalAmount &#125;&#125;&lt;&#x2F;li&gt;              &lt;li&gt;                &#123;&#123; item.paymentWay &#x3D;&#x3D;&#x3D; &#39;ONLINE&#39; ? &#39;在线支付&#39; : &#39;货到付款&#39; &#125;&#125;              &lt;&#x2F;li&gt;            &lt;&#x2F;ul&gt;          &lt;&#x2F;td&gt;          &lt;td            :rowspan&#x3D;&quot;item.orderDetailList.length&quot;            width&#x3D;&quot;8%&quot;            class&#x3D;&quot;center&quot;          &gt;            &lt;a href&#x3D;&quot;#&quot; class&#x3D;&quot;btn&quot;              &gt;&#123;&#123; item.orderStatus &#x3D;&#x3D;&#x3D; &#39;UNPAID&#39; ? &#39;未支付&#39; : &#39;已完成&#39; &#125;&#125;            &lt;&#x2F;a&gt;          &lt;&#x2F;td&gt;          &lt;td            :rowspan&#x3D;&quot;item.orderDetailList.length&quot;            width&#x3D;&quot;13%&quot;            class&#x3D;&quot;center&quot;          &gt;            &lt;ul class&#x3D;&quot;unstyled&quot;&gt;              &lt;li&gt;                &lt;a href&#x3D;&quot;mycomment.html&quot; target&#x3D;&quot;_blank&quot;&gt;评价|晒单&lt;&#x2F;a&gt;              &lt;&#x2F;li&gt;            &lt;&#x2F;ul&gt;          &lt;&#x2F;td&gt;        &lt;&#x2F;template&gt;      &lt;&#x2F;tr&gt;    &lt;&#x2F;tbody&gt;  &lt;&#x2F;table&gt;<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>样式修改</p><pre class="line-numbers language-csss" data-language="csss"><code class="language-csss">.typographic &#123;  img &#123;    float: left;    margin-right: 10px;    width: 100px;    height: 100px;  &#125;<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h2><span id="p88-fen-ye">88 分页</span><a href="#p88-fen-ye" class="header-anchor">#</a></h2><p>MyOrder 89行</p><pre class="line-numbers language-html" data-language="html"><code class="language-html"><span class="token comment">&lt;!-- 分页 --></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>Pagination</span>  <span class="token attr-name">:pageConfig</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>&#123;    total,    pageNo,    pageSize: limit,    showPageNo: 5  &#125;<span class="token punctuation">"</span></span>  <span class="token attr-name">@changeCurrentPage</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>getMyOrderList<span class="token punctuation">"</span></span><span class="token punctuation">/></span></span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>修改 117行</p><pre class="line-numbers language-js" data-language="js"><code class="language-js"><span class="token comment">// 获取订单信息数据列表</span><span class="token keyword">async</span> <span class="token function">getMyOrderList</span><span class="token punctuation">(</span><span class="token parameter">pageNo <span class="token operator">=</span> <span class="token number">1</span></span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>  <span class="token keyword">this</span><span class="token punctuation">.</span>pageNo <span class="token operator">=</span> pageNo<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span></span></code></pre><p>去掉后面的样式 <code>.choose-order</code></p><h2><span id="p89-jie-suan-zhi-qian">89 结算之前</span><a href="#p89-jie-suan-zhi-qian" class="header-anchor">#</a></h2><p>ShopCart 105行</p><pre class="line-numbers language-html" data-language="html"><code class="language-html"><span class="token comment">&lt;!-- 结算 --></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>router-link</span> <span class="token attr-name">to</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>/trade<span class="token punctuation">"</span></span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>sum-btn<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>结算<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>router-link</span><span class="token punctuation">></span></span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre><p>store新建order.js</p><pre class="line-numbers language-js" data-language="js"><code class="language-js"><span class="token keyword">import</span> <span class="token punctuation">&#123;</span> reqPayInfo<span class="token punctuation">,</span> reqTradeInfo <span class="token punctuation">&#125;</span> <span class="token keyword">from</span> <span class="token string">'@/api'</span><span class="token keyword">export</span> <span class="token keyword">default</span> <span class="token punctuation">&#123;</span>  state<span class="token operator">:</span> <span class="token punctuation">&#123;</span>    tradeInfo<span class="token operator">:</span> <span class="token punctuation">&#123;</span><span class="token punctuation">&#125;</span><span class="token punctuation">,</span> <span class="token comment">// 订单信息数据对象</span>    payInfo<span class="token operator">:</span> <span class="token punctuation">&#123;</span><span class="token punctuation">&#125;</span> <span class="token comment">// 支付信息数据对象</span>  <span class="token punctuation">&#125;</span><span class="token punctuation">,</span>  mutations<span class="token operator">:</span> <span class="token punctuation">&#123;</span>    <span class="token comment">// 直接更新订单数据</span>    <span class="token constant">RECEIVE_TRADE_INFO</span><span class="token punctuation">(</span><span class="token parameter">state<span class="token punctuation">,</span> <span class="token punctuation">&#123;</span> tradeInfo <span class="token punctuation">&#125;</span></span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>      state<span class="token punctuation">.</span>tradeInfo <span class="token operator">=</span> tradeInfo    <span class="token punctuation">&#125;</span><span class="token punctuation">,</span>    <span class="token comment">// 直接更新支付数据</span>    <span class="token constant">RECEIVE_PAY_INFO</span><span class="token punctuation">(</span><span class="token parameter">state<span class="token punctuation">,</span> <span class="token punctuation">&#123;</span> payInfo <span class="token punctuation">&#125;</span></span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>      state<span class="token punctuation">.</span>payInfo <span class="token operator">=</span> payInfo    <span class="token punctuation">&#125;</span>  <span class="token punctuation">&#125;</span><span class="token punctuation">,</span>  actions<span class="token operator">:</span> <span class="token punctuation">&#123;</span>    <span class="token comment">// 获取订单的数据</span>    <span class="token keyword">async</span> <span class="token function">getTradeInfo</span><span class="token punctuation">(</span><span class="token parameter"><span class="token punctuation">&#123;</span> commit <span class="token punctuation">&#125;</span></span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>      <span class="token comment">// 调用接口获取数据</span>      <span class="token keyword">const</span> result <span class="token operator">=</span> <span class="token keyword">await</span> <span class="token function">reqTradeInfo</span><span class="token punctuation">(</span><span class="token punctuation">)</span>      <span class="token keyword">if</span> <span class="token punctuation">(</span>result<span class="token punctuation">.</span>code <span class="token operator">===</span> <span class="token number">200</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>        <span class="token keyword">const</span> tradeInfo <span class="token operator">=</span> result<span class="token punctuation">.</span>data        <span class="token function">commit</span><span class="token punctuation">(</span><span class="token string">'RECEIVE_TRADE_INFO'</span><span class="token punctuation">,</span> <span class="token punctuation">&#123;</span> tradeInfo <span class="token punctuation">&#125;</span><span class="token punctuation">)</span>      <span class="token punctuation">&#125;</span> <span class="token keyword">else</span> <span class="token punctuation">&#123;</span>        <span class="token comment">// 抛错处理</span>        <span class="token keyword">throw</span> <span class="token keyword">new</span> <span class="token class-name">Error</span><span class="token punctuation">(</span>result<span class="token punctuation">.</span>message <span class="token operator">||</span> <span class="token string">'获取订单失败了'</span><span class="token punctuation">)</span>      <span class="token punctuation">&#125;</span>    <span class="token punctuation">&#125;</span><span class="token punctuation">,</span>    <span class="token comment">// 获取支付的数据</span>    <span class="token keyword">async</span> <span class="token function">getPayInfo</span><span class="token punctuation">(</span><span class="token parameter"><span class="token punctuation">&#123;</span> commit <span class="token punctuation">&#125;</span><span class="token punctuation">,</span> orderId</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>      <span class="token comment">// 调用接口获取数据</span>      <span class="token keyword">const</span> result <span class="token operator">=</span> <span class="token keyword">await</span> <span class="token function">reqPayInfo</span><span class="token punctuation">(</span>orderId<span class="token punctuation">)</span>      <span class="token keyword">if</span> <span class="token punctuation">(</span>result<span class="token punctuation">.</span>code <span class="token operator">===</span> <span class="token number">200</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>        <span class="token keyword">const</span> payInfo <span class="token operator">=</span> result<span class="token punctuation">.</span>data        <span class="token function">commit</span><span class="token punctuation">(</span><span class="token string">'RECEIVE_PAY_INFO'</span><span class="token punctuation">,</span> <span class="token punctuation">&#123;</span> payInfo <span class="token punctuation">&#125;</span><span class="token punctuation">)</span>      <span class="token punctuation">&#125;</span> <span class="token keyword">else</span> <span class="token punctuation">&#123;</span>        <span class="token comment">// 抛错处理</span>        <span class="token keyword">throw</span> <span class="token keyword">new</span> <span class="token class-name">Error</span><span class="token punctuation">(</span>result<span class="token punctuation">.</span>message <span class="token operator">||</span> <span class="token string">'获取支付信息失败了'</span><span class="token punctuation">)</span>      <span class="token punctuation">&#125;</span>    <span class="token punctuation">&#125;</span>  <span class="token punctuation">&#125;</span><span class="token punctuation">,</span>  getters<span class="token operator">:</span> <span class="token punctuation">&#123;</span><span class="token punctuation">&#125;</span><span class="token punctuation">&#125;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>在index中引入</p><pre class="line-numbers language-js" data-language="js"><code class="language-js"><span class="token keyword">import</span> home <span class="token keyword">from</span> <span class="token string">'./home'</span><span class="token keyword">import</span> search <span class="token keyword">from</span> <span class="token string">'./search'</span><span class="token keyword">import</span> detail <span class="token keyword">from</span> <span class="token string">'./detail'</span><span class="token keyword">import</span> shopcart <span class="token keyword">from</span> <span class="token string">'./shopcart'</span><span class="token keyword">import</span> user <span class="token keyword">from</span> <span class="token string">'./user'</span><span class="token keyword">import</span> order <span class="token keyword">from</span> <span class="token string">'./order'</span><span class="token keyword">export</span> <span class="token keyword">default</span> <span class="token punctuation">&#123;</span>  home<span class="token punctuation">,</span>  search<span class="token punctuation">,</span>  detail<span class="token punctuation">,</span>  shopcart<span class="token punctuation">,</span>  user<span class="token punctuation">,</span>  order<span class="token punctuation">&#125;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h2><span id="p90-bian-li-shou-jian-ren-xiang-guan-xin-xi">90 遍历收件人相关信息</span><a href="#p90-bian-li-shou-jian-ren-xiang-guan-xin-xi" class="header-anchor">#</a></h2><p>Trade 6</p><pre class="line-numbers language-html" data-language="html"><code class="language-html"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span>  <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>address clearFix<span class="token punctuation">"</span></span>  <span class="token attr-name">v-for</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>(addr, index) in tradeInfo.userAddressList<span class="token punctuation">"</span></span>  <span class="token attr-name">:key</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>addr.id<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>span</span>    <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>username<span class="token punctuation">"</span></span>    <span class="token attr-name">:class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>&#123; selected: selectedAddress === addr &#125;<span class="token punctuation">"</span></span>    <span class="token punctuation">></span></span>&#123;&#123; addr.consignee &#125;&#125;<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>span</span>  <span class="token punctuation">></span></span> <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>p</span> <span class="token attr-name">@click</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>selectedAddress = addr<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>span</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>s1<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>&#123;&#123; addr.userAddress &#125;&#125;<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>span</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>span</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>s2<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>&#123;&#123; addr.phoneNum &#125;&#125;<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>span</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>span</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>s3<span class="token punctuation">"</span></span> <span class="token attr-name">v-if</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>addr.isDefault === <span class="token punctuation">'</span>1<span class="token punctuation">'</span><span class="token punctuation">"</span></span><span class="token punctuation">></span></span>默认地址<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>span</span><span class="token punctuation">></span></span>  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>p</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">></span></span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><pre class="line-numbers language-js" data-language="js"><code class="language-js"><span class="token keyword">import</span> <span class="token punctuation">&#123;</span> mapState <span class="token punctuation">&#125;</span> <span class="token keyword">from</span> <span class="token string">'vuex'</span><span class="token keyword">export</span> <span class="token keyword">default</span> <span class="token punctuation">&#123;</span>  name<span class="token operator">:</span> <span class="token string">'Trade'</span><span class="token punctuation">,</span>  <span class="token function">data</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>    <span class="token keyword">return</span> <span class="token punctuation">&#123;</span>      selectedAddress<span class="token operator">:</span> <span class="token punctuation">&#123;</span><span class="token punctuation">&#125;</span> <span class="token comment">// 用来储存选中是收件人的用户信息地址对象</span>    <span class="token punctuation">&#125;</span>  <span class="token punctuation">&#125;</span><span class="token punctuation">,</span>  <span class="token function">mounted</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>    <span class="token comment">// 获取当前订单信息</span>    <span class="token keyword">this</span><span class="token punctuation">.</span>$store<span class="token punctuation">.</span><span class="token function">dispatch</span><span class="token punctuation">(</span><span class="token string">'getTradeInfo'</span><span class="token punctuation">)</span>  <span class="token punctuation">&#125;</span><span class="token punctuation">,</span>  computed<span class="token operator">:</span> <span class="token punctuation">&#123;</span>    <span class="token operator">...</span><span class="token function">mapState</span><span class="token punctuation">(</span><span class="token punctuation">&#123;</span>      <span class="token function-variable function">tradeInfo</span><span class="token operator">:</span> <span class="token parameter">state</span> <span class="token operator">=></span> state<span class="token punctuation">.</span>order<span class="token punctuation">.</span>tradeInfo    <span class="token punctuation">&#125;</span><span class="token punctuation">)</span>  <span class="token punctuation">&#125;</span><span class="token punctuation">,</span>  watch<span class="token operator">:</span> <span class="token punctuation">&#123;</span>    <span class="token comment">// 监视的是收件人信息数组</span>    <span class="token string">'tradeInfo.userAddressList'</span><span class="token operator">:</span> <span class="token keyword">function</span><span class="token punctuation">(</span><span class="token parameter">value</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>      <span class="token comment">// 从数组中查找isDefault属性为1的对象</span>      <span class="token keyword">const</span> defaultAddr <span class="token operator">=</span> value<span class="token punctuation">.</span><span class="token function">find</span><span class="token punctuation">(</span><span class="token parameter">addr</span> <span class="token operator">=></span> addr<span class="token punctuation">.</span>isDefault <span class="token operator">===</span> <span class="token string">'1'</span><span class="token punctuation">)</span>      <span class="token comment">// 判断这个对象是否存在</span>      <span class="token keyword">if</span> <span class="token punctuation">(</span>defaultAddr<span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>        <span class="token comment">// 保存起来</span>        <span class="token keyword">this</span><span class="token punctuation">.</span>selectedAddress <span class="token operator">=</span> defaultAddr      <span class="token punctuation">&#125;</span>    <span class="token punctuation">&#125;</span>  <span class="token punctuation">&#125;</span><span class="token punctuation">&#125;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h2><span id="p91-bian-li-shang-pin-lie-biao">91 遍历商品列表</span><a href="#p91-bian-li-shang-pin-lie-biao" class="header-anchor">#</a></h2><p>Trade 37</p><pre class="line-numbers language-html" data-language="html"><code class="language-html">      <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>detail<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>h5</span><span class="token punctuation">></span></span>商品清单<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>h5</span><span class="token punctuation">></span></span>        <span class="token comment">&lt;!--  --></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>ul</span>          <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>list clearFix<span class="token punctuation">"</span></span>          <span class="token attr-name">v-for</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>(goods, index) in tradeInfo.detailArrayList<span class="token punctuation">"</span></span>          <span class="token attr-name">:key</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>goods.skuId<span class="token punctuation">"</span></span>        <span class="token punctuation">></span></span>          <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>li</span><span class="token punctuation">></span></span>            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>img</span> <span class="token attr-name">:src</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>goods.imgUrl<span class="token punctuation">"</span></span> <span class="token attr-name">alt</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span><span class="token punctuation">"</span></span> <span class="token punctuation">/></span></span>          <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>li</span><span class="token punctuation">></span></span>          <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>li</span><span class="token punctuation">></span></span>            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>p</span><span class="token punctuation">></span></span>              &#123;&#123; goods.skuName &#125;&#125;            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>p</span><span class="token punctuation">></span></span>            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>h4</span><span class="token punctuation">></span></span>7天无理由退货<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>h4</span><span class="token punctuation">></span></span>          <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>li</span><span class="token punctuation">></span></span>          <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>li</span><span class="token punctuation">></span></span>            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>h3</span><span class="token punctuation">></span></span>￥&#123;&#123; goods.orderPrice &#125;&#125;<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>h3</span><span class="token punctuation">></span></span>          <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>li</span><span class="token punctuation">></span></span>          <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>li</span><span class="token punctuation">></span></span>X&#123;&#123; goods.skuNum &#125;&#125;<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>li</span><span class="token punctuation">></span></span>          <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>li</span><span class="token punctuation">></span></span>有货<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>li</span><span class="token punctuation">></span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>ul</span><span class="token punctuation">></span></span>      <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">></span></span>      <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>bbs<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>h5</span><span class="token punctuation">></span></span>买家留言：<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>h5</span><span class="token punctuation">></span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>textarea</span>          <span class="token attr-name">placeholder</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>建议留言前先与商家沟通确认<span class="token punctuation">"</span></span>          <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>remarks-cont<span class="token punctuation">"</span></span>        <span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>textarea</span><span class="token punctuation">></span></span>      <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">></span></span>      <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>line<span class="token punctuation">"</span></span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">></span></span>      <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>bill<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>h5</span><span class="token punctuation">></span></span>发票信息：<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>h5</span><span class="token punctuation">></span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span><span class="token punctuation">></span></span>普通发票（电子） 个人 明细<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">></span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>h5</span><span class="token punctuation">></span></span>使用优惠/抵用<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>h5</span><span class="token punctuation">></span></span>      <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>money clearFix<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>      <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>ul</span><span class="token punctuation">></span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>li</span><span class="token punctuation">></span></span>          <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>b</span>            <span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>i</span><span class="token punctuation">></span></span>&#123;&#123; tradeInfo.totalNum &#125;&#125;<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>i</span>            <span class="token punctuation">></span></span>件商品，总商品金额<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>b</span>          <span class="token punctuation">></span></span>          <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>span</span><span class="token punctuation">></span></span>¥&#123;&#123; tradeInfo.totalAmount &#125;&#125;<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>span</span><span class="token punctuation">></span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>li</span><span class="token punctuation">></span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>li</span><span class="token punctuation">></span></span>          <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>b</span><span class="token punctuation">></span></span>返现：<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>b</span><span class="token punctuation">></span></span>          <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>span</span><span class="token punctuation">></span></span>0.00<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>span</span><span class="token punctuation">></span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>li</span><span class="token punctuation">></span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>li</span><span class="token punctuation">></span></span>          <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>b</span><span class="token punctuation">></span></span>运费：<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>b</span><span class="token punctuation">></span></span>          <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>span</span><span class="token punctuation">></span></span>0.00<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>span</span><span class="token punctuation">></span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>li</span><span class="token punctuation">></span></span>      <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>ul</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>trade<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>      <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>price<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>        应付金额: <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>span</span><span class="token punctuation">></span></span>&#123;&#123; tradeInfo.totalAmount &#125;&#125;<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>span</span><span class="token punctuation">></span></span>      <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">></span></span>      <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>receiveInfo<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>        寄送至:        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>span</span><span class="token punctuation">></span></span>&#123;&#123; selectedAddress.userAddress &#125;&#125;<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>span</span><span class="token punctuation">></span></span>        收货人：<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>span</span><span class="token punctuation">></span></span>&#123;&#123; selectedAddress.consignee &#125;&#125;<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>span</span><span class="token punctuation">></span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>span</span><span class="token punctuation">></span></span>&#123;&#123; selectedAddress.phoneNum &#125;&#125;<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>span</span><span class="token punctuation">></span></span>      <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>sub clearFix<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>      <span class="token comment">&lt;!-- &lt;router-link class="subBtn" to="/pay">提交订单&lt;/router-link> --></span>      <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>a</span> <span class="token attr-name">href</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>javascript:;<span class="token punctuation">"</span></span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>subBtn<span class="token punctuation">"</span></span> <span class="token attr-name">@click</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>pay<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>提交订单<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>a</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">></span></span>  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>template</span><span class="token punctuation">></span></span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>Trade 263</p><pre class="line-numbers language-js" data-language="js"><code class="language-js"><span class="token punctuation">.</span>list <span class="token punctuation">&#123;</span>  display<span class="token operator">:</span> flex<span class="token punctuation">;</span>  justify<span class="token operator">-</span>content<span class="token operator">:</span> space<span class="token operator">-</span>between<span class="token punctuation">;</span>  background<span class="token operator">-</span>color<span class="token operator">:</span> #feedef<span class="token punctuation">;</span>  margin<span class="token operator">:</span> <span class="token number">5</span>px <span class="token number">0</span><span class="token punctuation">;</span>  li <span class="token punctuation">&#123;</span>    line<span class="token operator">-</span>height<span class="token operator">:</span> <span class="token number">30</span>px<span class="token punctuation">;</span>    img<span class="token punctuation">&#123;</span>      width<span class="token operator">:</span> <span class="token number">100</span>px<span class="token punctuation">;</span>      height<span class="token operator">:</span> <span class="token number">100</span>px<span class="token punctuation">;</span>    <span class="token punctuation">&#125;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h2><span id="p92-lu-you-props-chuan-can">92 路由props传参</span><a href="#p92-lu-you-props-chuan-can" class="header-anchor">#</a></h2><p>Trade</p><p>更新 pay</p><pre class="line-numbers language-js" data-language="js"><code class="language-js">methods<span class="token operator">:</span> <span class="token punctuation">&#123;</span>  <span class="token comment">// 支付</span>  <span class="token function">pay</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>    <span class="token comment">// 获取订单编号，商品列表数据</span>    <span class="token keyword">const</span> <span class="token punctuation">&#123;</span> tradeNo<span class="token punctuation">,</span> detailArrayList <span class="token punctuation">&#125;</span> <span class="token operator">=</span> <span class="token keyword">this</span><span class="token punctuation">.</span>tradeInfo    <span class="token comment">// 收件人名字，电话，地址</span>    <span class="token keyword">const</span> <span class="token punctuation">&#123;</span> consignee<span class="token punctuation">,</span> phoneNum<span class="token punctuation">,</span> userAddress <span class="token punctuation">&#125;</span> <span class="token operator">=</span> <span class="token keyword">this</span><span class="token punctuation">.</span>selectedAddress    <span class="token keyword">const</span> orderInfo <span class="token operator">=</span> <span class="token punctuation">&#123;</span>      consignee<span class="token punctuation">,</span> <span class="token comment">// 收件人</span>      consigneeTel<span class="token operator">:</span> phoneNum<span class="token punctuation">,</span> <span class="token comment">// 收件人的电话</span>      deliveryAddress<span class="token operator">:</span> userAddress<span class="token punctuation">,</span> <span class="token comment">// 收件人的地址</span>      paymentWay<span class="token operator">:</span> <span class="token string">'ONLINE'</span><span class="token punctuation">,</span> <span class="token comment">// 支付方式</span>      orderComment<span class="token operator">:</span> <span class="token keyword">this</span><span class="token punctuation">.</span>orderComment<span class="token punctuation">,</span> <span class="token comment">// 订单的备注</span>      orderDetailList<span class="token operator">:</span> detailArrayList <span class="token comment">// 商品列表数据</span>    <span class="token punctuation">&#125;</span>    <span class="token keyword">this</span><span class="token punctuation">.</span>$<span class="token constant">API</span>      <span class="token punctuation">.</span><span class="token function">reqSubmitOrder</span><span class="token punctuation">(</span>tradeNo<span class="token punctuation">,</span> orderInfo<span class="token punctuation">)</span>      <span class="token punctuation">.</span><span class="token function">then</span><span class="token punctuation">(</span><span class="token parameter">result</span> <span class="token operator">=></span> <span class="token punctuation">&#123;</span>        <span class="token comment">// 接口调用成功，路由跳转，并传参，query的方式传参</span>        <span class="token comment">// 订单提交成功后，返回的是订单的id</span>        <span class="token keyword">const</span> orderId <span class="token operator">=</span> result<span class="token punctuation">.</span>data        <span class="token keyword">this</span><span class="token punctuation">.</span>$router<span class="token punctuation">.</span><span class="token function">push</span><span class="token punctuation">(</span><span class="token punctuation">&#123;</span> path<span class="token operator">:</span> <span class="token string">'/pay'</span><span class="token punctuation">,</span> query<span class="token operator">:</span> <span class="token punctuation">&#123;</span> orderId <span class="token punctuation">&#125;</span> <span class="token punctuation">&#125;</span><span class="token punctuation">)</span>      <span class="token punctuation">&#125;</span><span class="token punctuation">)</span>      <span class="token punctuation">.</span><span class="token function">catch</span><span class="token punctuation">(</span><span class="token parameter">error</span> <span class="token operator">=></span> <span class="token punctuation">&#123;</span>        <span class="token function">alert</span><span class="token punctuation">(</span>error<span class="token punctuation">.</span>mess<span class="token punctuation">)</span>      <span class="token punctuation">&#125;</span><span class="token punctuation">)</span>  <span class="token punctuation">&#125;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>新增 <code>orderComment</code> 数据</p><pre class="line-numbers language-js" data-language="js"><code class="language-js"><span class="token function">data</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>  <span class="token keyword">return</span> <span class="token punctuation">&#123;</span>    selectedAddress<span class="token operator">:</span> <span class="token punctuation">&#123;</span><span class="token punctuation">&#125;</span><span class="token punctuation">,</span> <span class="token comment">// 用来储存选中是收件人的用户信息地址对象</span>    orderComment<span class="token operator">:</span> <span class="token string">'这是文本'</span>  <span class="token punctuation">&#125;</span><span class="token punctuation">&#125;</span><span class="token punctuation">,</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>66行 新增 v-model</p><pre class="line-numbers language-js" data-language="js"><code class="language-js"><span class="token operator">&lt;</span>div <span class="token keyword">class</span><span class="token operator">=</span><span class="token string">"bbs"</span><span class="token operator">></span>  <span class="token operator">&lt;</span>h5<span class="token operator">></span>买家留言：<span class="token operator">&lt;</span><span class="token operator">/</span>h5<span class="token operator">></span>  <span class="token operator">&lt;</span>textarea    placeholder<span class="token operator">=</span><span class="token string">"建议留言前先与商家沟通确认"</span>    <span class="token keyword">class</span><span class="token operator">=</span><span class="token string">"remarks-cont"</span>    v<span class="token operator">-</span>model<span class="token operator">=</span><span class="token string">"orderComment"</span>  <span class="token operator">></span><span class="token operator">&lt;</span><span class="token operator">/</span>textarea<span class="token operator">></span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>Pay 更新</p><p>11行</p><pre class="line-numbers language-html" data-language="html"><code class="language-html"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>paymark<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>span</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>fl<span class="token punctuation">"</span></span>    <span class="token punctuation">></span></span>请您在提交订单<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>em</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>orange time<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>4小时<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>em</span>    <span class="token punctuation">></span></span>之内完成支付，超时订单会自动取消。订单号：<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>em</span><span class="token punctuation">></span></span>&#123;&#123;payInfo.orderId&#125;&#125;&lt;<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>em</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>span</span>  <span class="token punctuation">></span></span>  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>span</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>fr<span class="token punctuation">"</span></span>    <span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>em</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>lead<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>应付金额：&#123;&#123;payInfo.totalFee&#125;&#125;&lt;/em<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><pre class="line-numbers language-js" data-language="js"><code class="language-js"><span class="token operator">&lt;</span>script<span class="token operator">></span><span class="token keyword">import</span> <span class="token punctuation">&#123;</span> mapState <span class="token punctuation">&#125;</span> <span class="token keyword">from</span> <span class="token string">'vuex'</span><span class="token keyword">export</span> <span class="token keyword">default</span> <span class="token punctuation">&#123;</span>  name<span class="token operator">:</span> <span class="token string">'Pay'</span><span class="token punctuation">,</span>  props<span class="token operator">:</span> <span class="token punctuation">[</span><span class="token string">'orderId'</span><span class="token punctuation">]</span><span class="token punctuation">,</span>  computed<span class="token operator">:</span> <span class="token punctuation">&#123;</span>    <span class="token operator">...</span><span class="token function">mapState</span><span class="token punctuation">(</span><span class="token punctuation">&#123;</span>      <span class="token function-variable function">payInfo</span><span class="token operator">:</span> <span class="token parameter">state</span> <span class="token operator">=></span> state<span class="token punctuation">.</span>order<span class="token punctuation">.</span>payInfo    <span class="token punctuation">&#125;</span><span class="token punctuation">)</span>  <span class="token punctuation">&#125;</span><span class="token punctuation">,</span>  <span class="token function">mounted</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>    <span class="token comment">// 分发action</span>    <span class="token keyword">this</span><span class="token punctuation">.</span>$store<span class="token punctuation">.</span><span class="token function">dispatch</span><span class="token punctuation">(</span><span class="token string">'getPayInfo'</span><span class="token punctuation">,</span> <span class="token keyword">this</span><span class="token punctuation">.</span>orderId<span class="token punctuation">)</span>  <span class="token punctuation">&#125;</span><span class="token punctuation">&#125;</span><span class="token operator">&lt;</span><span class="token operator">/</span>script<span class="token operator">></span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>routes.js</p><pre class="line-numbers language-js" data-language="js"><code class="language-js"><span class="token comment">// Pay</span><span class="token punctuation">&#123;</span>  path<span class="token operator">:</span> <span class="token string">'/pay'</span><span class="token punctuation">,</span>  component<span class="token operator">:</span> Pay<span class="token punctuation">,</span>  <span class="token comment">// 通过props的方式来进行参数的传递,让组件和$route之间的关闭不那么的密切(解耦)</span>  <span class="token function-variable function">props</span><span class="token operator">:</span><span class="token punctuation">(</span><span class="token parameter">route</span><span class="token punctuation">)</span><span class="token operator">=></span><span class="token punctuation">(</span><span class="token punctuation">&#123;</span>orderId<span class="token operator">:</span>route<span class="token punctuation">.</span>query<span class="token punctuation">.</span>orderId<span class="token punctuation">&#125;</span><span class="token punctuation">)</span><span class="token punctuation">&#125;</span><span class="token punctuation">,</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h1><span id="9-yue-29-ri-day-10">9月29日（day 10）</span><a href="#9-yue-29-ri-day-10" class="header-anchor">#</a></h1><p>需求</p><ul><li><p>只有在登录的情况下才能访问 /trade /pay /center及其子目录</p></li><li><p>只有在没登录的情况下才能进入登录界面，如果登录了自动进入首页</p></li><li><p>只有 skuId /skuNum / skuInfo 数据都存在的情况下才能进入 /addsuccess</p></li><li><p>只有从 /shopcart 才能进入 /trade</p></li><li><p>只有从 /trade 才能进入 /pay</p></li><li><p>只有从 /pay 才能进入 /paysucces</p></li><li><p>如果访问的是 /center 但是没有登录，先跳转到登录界面 登录成功自动进入 /center</p></li><li><p>如果退出，直接进入首页</p></li></ul><p>路由守卫（导航守卫）</p><ul><li><p>全局导航守卫（在实例化路由器对象的时候进行设置）</p><p>全局前置导航守卫 beforeEach △</p><p>全局解析导航守卫 beforeResolve</p><p>全局后置导航守卫 afterEach</p></li><li><p>路由独享守卫（在注册路由组件对象中进行设置）</p><p>boforeEnter △</p></li><li><p>组件内的守卫（在组件对象中进行设置）</p><p>beforeRouterEnter △</p><p>beforeRouteUpdate</p><p>beforeRouteLeave</p></li></ul><p>参数</p><ul><li>to — 目标路由对象</li><li>from — 离开前的对象</li><li>next — 函数</li></ul><h2><span id="p93-zhi-you-zai-deng-lu-de-qing-kuang-xia-cai-neng-jin-ru">93 只有在登录的情况下才能进入…</span><a href="#p93-zhi-you-zai-deng-lu-de-qing-kuang-xia-cai-neng-jin-ru" class="header-anchor">#</a></h2><p>router/index.js</p><pre class="line-numbers language-js" data-language="js"><code class="language-js"><span class="token comment">// 声明使用路由器插件</span>Vue<span class="token punctuation">.</span><span class="token function">use</span><span class="token punctuation">(</span>VueRouter<span class="token punctuation">)</span><span class="token comment">// 实例化路由对象</span><span class="token keyword">const</span> router <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">VueRouter</span><span class="token punctuation">(</span><span class="token punctuation">&#123;</span>  mode<span class="token operator">:</span> <span class="token string">'history'</span><span class="token punctuation">,</span> <span class="token comment">// 地址栏中不带#</span>  routes<span class="token punctuation">,</span>  <span class="token comment">// 解决路由器跳转到滚动的位置的问题</span>  <span class="token function">scrollBehavior</span><span class="token punctuation">(</span><span class="token parameter">to<span class="token punctuation">,</span> <span class="token keyword">from</span><span class="token punctuation">,</span> savedPosition</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>    <span class="token keyword">return</span> <span class="token punctuation">&#123;</span>      x<span class="token operator">:</span> <span class="token number">0</span><span class="token punctuation">,</span>      y<span class="token operator">:</span> <span class="token number">0</span>    <span class="token punctuation">&#125;</span>  <span class="token punctuation">&#125;</span><span class="token punctuation">&#125;</span><span class="token punctuation">)</span><span class="token comment">// 全局前置路由守卫</span><span class="token comment">// router.beforeEach((to, from, next) => &#123;</span><span class="token comment">//   访问的地址不是登录页面，让其跳转到登录页面</span><span class="token comment">//   if (to.path !== '/login') &#123;</span><span class="token comment">//     next('/login')</span><span class="token comment">//   &#125; else &#123;</span><span class="token comment">//     next()</span><span class="token comment">//   &#125;</span><span class="token comment">// &#125;)</span><span class="token keyword">import</span> store <span class="token keyword">from</span> <span class="token string">'@/store'</span><span class="token comment">// 全局前置路由守卫</span>router<span class="token punctuation">.</span><span class="token function">beforeEach</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token parameter">to<span class="token punctuation">,</span> <span class="token keyword">from</span><span class="token punctuation">,</span> next</span><span class="token punctuation">)</span> <span class="token operator">=></span> <span class="token punctuation">&#123;</span>  <span class="token comment">// 只有在登录的情况下才能访问 /trade /pay / center //</span>  <span class="token comment">// 获取目标路由中的访问地址</span>  <span class="token keyword">const</span> targetPath <span class="token operator">=</span> to<span class="token punctuation">.</span>path  <span class="token comment">// 准备一个需要检测的路由的数组</span>  <span class="token keyword">const</span> checkPath <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token string">'/trade'</span><span class="token punctuation">,</span> <span class="token string">'/pay'</span><span class="token punctuation">,</span> <span class="token string">'/center'</span><span class="token punctuation">]</span>  <span class="token comment">// if (checkPath.indexOf(targetPath) !== -1) &#123;</span>  <span class="token keyword">if</span> <span class="token punctuation">(</span>checkPath<span class="token punctuation">.</span><span class="token function">find</span><span class="token punctuation">(</span><span class="token parameter">path</span> <span class="token operator">=></span> targetPath<span class="token punctuation">.</span><span class="token function">indexOf</span><span class="token punctuation">(</span>path<span class="token punctuation">)</span> <span class="token operator">!==</span> <span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>    <span class="token comment">// 判断是否已经登录</span>    <span class="token keyword">if</span> <span class="token punctuation">(</span>store<span class="token punctuation">.</span>state<span class="token punctuation">.</span>user<span class="token punctuation">.</span>userInfo<span class="token punctuation">.</span>token<span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>      <span class="token comment">// 放行</span>      <span class="token function">next</span><span class="token punctuation">(</span><span class="token punctuation">)</span>    <span class="token punctuation">&#125;</span> <span class="token keyword">else</span> <span class="token punctuation">&#123;</span>      <span class="token comment">// 跳转到登录界面</span>      <span class="token function">next</span><span class="token punctuation">(</span><span class="token string">'/login'</span><span class="token punctuation">)</span>    <span class="token punctuation">&#125;</span>  <span class="token punctuation">&#125;</span> <span class="token keyword">else</span> <span class="token punctuation">&#123;</span>    <span class="token comment">// 正常的放行</span>    <span class="token function">next</span><span class="token punctuation">(</span><span class="token punctuation">)</span>  <span class="token punctuation">&#125;</span><span class="token punctuation">&#125;</span><span class="token punctuation">)</span><span class="token comment">// 实例化路由器对象,并暴露出去</span><span class="token keyword">export</span> <span class="token keyword">default</span> router<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h2><span id="p94-zhi-you-zai-mei-deng-lu-de-qing-kuang-xia-cai-neng-jin-ru-deng-lu-jie-mian-ru-guo-deng-lu-liao-zi-dong-jin-ru-shou-ye">94 只有在没登录的情况下才能进入登录界面，如果登录了自动进入首页</span><a href="#p94-zhi-you-zai-mei-deng-lu-de-qing-kuang-xia-cai-neng-jin-ru-deng-lu-jie-mian-ru-guo-deng-lu-liao-zi-dong-jin-ru-shou-ye" class="header-anchor">#</a></h2><p>router/routes.js</p><pre class="line-numbers language-js" data-language="js"><code class="language-js"><span class="token comment">// 引入vuex</span><span class="token keyword">import</span> store <span class="token keyword">from</span> <span class="token string">'@/store'</span>  <span class="token punctuation">&#123;</span>    path<span class="token operator">:</span> <span class="token string">'/login'</span><span class="token punctuation">,</span>    component<span class="token operator">:</span> Login<span class="token punctuation">,</span>    <span class="token comment">// 参数数据</span>    meta<span class="token operator">:</span> <span class="token punctuation">&#123;</span>      isHideFooter<span class="token operator">:</span> <span class="token boolean">true</span>    <span class="token punctuation">&#125;</span><span class="token punctuation">,</span>    <span class="token comment">// ? 只有在没有登录的情况下才能进入登录页面，已经登录，就进入首页</span>    <span class="token comment">// 路由独享守卫</span>    <span class="token function-variable function">beforeEnter</span><span class="token operator">:</span> <span class="token punctuation">(</span><span class="token parameter">to<span class="token punctuation">,</span> <span class="token keyword">from</span><span class="token punctuation">,</span> next</span><span class="token punctuation">)</span> <span class="token operator">=></span> <span class="token punctuation">&#123;</span>      <span class="token comment">// 判断有没有登录</span>      <span class="token keyword">if</span> <span class="token punctuation">(</span>store<span class="token punctuation">.</span>state<span class="token punctuation">.</span>user<span class="token punctuation">.</span>userInfo<span class="token punctuation">.</span>name<span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>        <span class="token function">next</span><span class="token punctuation">(</span><span class="token string">'/'</span><span class="token punctuation">)</span>      <span class="token punctuation">&#125;</span> <span class="token keyword">else</span> <span class="token punctuation">&#123;</span>        <span class="token function">next</span><span class="token punctuation">(</span><span class="token punctuation">)</span>      <span class="token punctuation">&#125;</span>    <span class="token punctuation">&#125;</span>  <span class="token punctuation">&#125;</span><span class="token punctuation">,</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>或者在 Login 中</p><pre class="line-numbers language-js" data-language="js"><code class="language-js">  <span class="token comment">// 组件内的路由前置守卫</span>  <span class="token function">beforeRouteEnter</span><span class="token punctuation">(</span><span class="token parameter">to<span class="token punctuation">,</span> <span class="token keyword">from</span><span class="token punctuation">,</span> next</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>    <span class="token comment">// ...</span>    <span class="token function">next</span><span class="token punctuation">(</span><span class="token parameter">vm</span> <span class="token operator">=></span> <span class="token punctuation">&#123;</span>      <span class="token comment">// 先判断是否登录</span>      <span class="token comment">// ! 不能用 this</span>      <span class="token keyword">if</span> <span class="token punctuation">(</span>vm<span class="token punctuation">.</span>$store<span class="token punctuation">.</span>state<span class="token punctuation">.</span>user<span class="token punctuation">.</span>userInfo<span class="token punctuation">.</span>name<span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>        <span class="token function">next</span><span class="token punctuation">(</span><span class="token string">'/'</span><span class="token punctuation">)</span>      <span class="token punctuation">&#125;</span> <span class="token keyword">else</span> <span class="token punctuation">&#123;</span>        <span class="token function">next</span><span class="token punctuation">(</span><span class="token punctuation">)</span>      <span class="token punctuation">&#125;</span>    <span class="token punctuation">&#125;</span><span class="token punctuation">)</span>  <span class="token punctuation">&#125;</span><span class="token punctuation">&#125;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h2><span id="p95-zhi-you-shu-ju-du-cun-zai-de-qing-kuang-xia-cai-neng-jin-ru-addsuccess">95 只有数据都存在的情况下才能进入 /addsuccess</span><a href="#p95-zhi-you-shu-ju-du-cun-zai-de-qing-kuang-xia-cai-neng-jin-ru-addsuccess" class="header-anchor">#</a></h2><p>只有 skuId /skuNum / skuInfo 数据都存在的情况下才能进入 /addsuccess</p><pre class="line-numbers language-js" data-language="js"><code class="language-js"><span class="token comment">// AddCartSuccess -- query</span><span class="token punctuation">&#123;</span>  path<span class="token operator">:</span> <span class="token string">'/addcartsuccess'</span><span class="token punctuation">,</span>  component<span class="token operator">:</span> AddCartSuccess<span class="token punctuation">,</span>  <span class="token comment">// ? 只有参数存在的情况下才能进入这个页面</span>  <span class="token function-variable function">beforeEnter</span><span class="token operator">:</span> <span class="token punctuation">(</span><span class="token parameter">to<span class="token punctuation">,</span> <span class="token keyword">from</span><span class="token punctuation">,</span> next</span><span class="token punctuation">)</span> <span class="token operator">=></span> <span class="token punctuation">&#123;</span>    <span class="token comment">// 先获取参数数据</span>    <span class="token keyword">const</span> <span class="token punctuation">&#123;</span> skuId<span class="token punctuation">,</span> skuNum <span class="token punctuation">&#125;</span> <span class="token operator">=</span> to<span class="token punctuation">.</span>query    <span class="token keyword">const</span> skuInfo <span class="token operator">=</span> localStorage<span class="token punctuation">.</span><span class="token function">getItem</span><span class="token punctuation">(</span><span class="token string">'SKU_INFO'</span><span class="token punctuation">)</span>    <span class="token comment">// 判断这三个数据是否存在</span>    <span class="token keyword">if</span> <span class="token punctuation">(</span>skuId <span class="token operator">&amp;&amp;</span> skuNum <span class="token operator">&amp;&amp;</span> skuInfo<span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>      <span class="token function">next</span><span class="token punctuation">(</span><span class="token punctuation">)</span>    <span class="token punctuation">&#125;</span> <span class="token keyword">else</span> <span class="token punctuation">&#123;</span>      <span class="token comment">// 从哪里来，哪里去</span>      <span class="token function">next</span><span class="token punctuation">(</span><span class="token keyword">from</span><span class="token punctuation">.</span>path<span class="token punctuation">)</span>    <span class="token punctuation">&#125;</span>  <span class="token punctuation">&#125;</span><span class="token punctuation">&#125;</span><span class="token punctuation">,</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h2><span id="p96-zhi-you-cong-cai-neng-jin-ru">96 只有从…才能进入…</span><a href="#p96-zhi-you-cong-cai-neng-jin-ru" class="header-anchor">#</a></h2><ul><li>只有从 /shopcart 才能进入 /trade</li><li>只有从 /trade 才能进入 /pay</li><li>只有从 /pay 才能进入 /paysucces</li></ul><pre class="line-numbers language-js" data-language="js"><code class="language-js"><span class="token comment">// Pay</span><span class="token punctuation">&#123;</span>  path<span class="token operator">:</span> <span class="token string">'/pay'</span><span class="token punctuation">,</span>  component<span class="token operator">:</span> Pay<span class="token punctuation">,</span>  <span class="token comment">// 通过props的方式来进行参数的传递,让组件和$route之间的关闭不那么的密切(解耦)</span>  <span class="token function-variable function">props</span><span class="token operator">:</span> <span class="token parameter">route</span> <span class="token operator">=></span> <span class="token punctuation">(</span><span class="token punctuation">&#123;</span> orderId<span class="token operator">:</span> route<span class="token punctuation">.</span>query<span class="token punctuation">.</span>orderId <span class="token punctuation">&#125;</span><span class="token punctuation">)</span><span class="token punctuation">,</span>  <span class="token comment">// ? 只有从/trade才能进入/pay</span>  <span class="token function-variable function">beforeEnter</span><span class="token operator">:</span> <span class="token punctuation">(</span><span class="token parameter">to<span class="token punctuation">,</span> <span class="token keyword">from</span><span class="token punctuation">,</span> next</span><span class="token punctuation">)</span> <span class="token operator">=></span> <span class="token punctuation">&#123;</span>    <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token keyword">from</span><span class="token punctuation">.</span>path <span class="token operator">===</span> <span class="token string">'/trade'</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>      <span class="token function">next</span><span class="token punctuation">(</span><span class="token punctuation">)</span>    <span class="token punctuation">&#125;</span> <span class="token keyword">else</span> <span class="token punctuation">&#123;</span>      <span class="token function">next</span><span class="token punctuation">(</span><span class="token string">'/trade'</span><span class="token punctuation">)</span>    <span class="token punctuation">&#125;</span>  <span class="token punctuation">&#125;</span><span class="token punctuation">&#125;</span><span class="token punctuation">,</span><span class="token comment">// PaySuccess</span><span class="token punctuation">&#123;</span>  path<span class="token operator">:</span> <span class="token string">'/paysuccess'</span><span class="token punctuation">,</span>  component<span class="token operator">:</span> PaySuccess<span class="token punctuation">,</span>  <span class="token comment">// ? 只有从 /pay 才能进入 / PaySuccess</span>  <span class="token function-variable function">beforeEnter</span><span class="token operator">:</span> <span class="token punctuation">(</span><span class="token parameter">to<span class="token punctuation">,</span> <span class="token keyword">from</span><span class="token punctuation">,</span> next</span><span class="token punctuation">)</span> <span class="token operator">=></span> <span class="token punctuation">&#123;</span>    <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token keyword">from</span><span class="token punctuation">.</span>path <span class="token operator">===</span> <span class="token string">'/pay'</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>      <span class="token function">next</span><span class="token punctuation">(</span><span class="token punctuation">)</span>    <span class="token punctuation">&#125;</span> <span class="token keyword">else</span> <span class="token punctuation">&#123;</span>      <span class="token function">next</span><span class="token punctuation">(</span><span class="token string">'/pay'</span><span class="token punctuation">)</span>    <span class="token punctuation">&#125;</span>  <span class="token punctuation">&#125;</span><span class="token punctuation">&#125;</span><span class="token punctuation">,</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h2><span id="p97-ru-guo-fang-wen-de-shi-center-dan-shi-mei-you-deng-lu">97 如果访问的是 /center 但是没有登录…</span><a href="#p97-ru-guo-fang-wen-de-shi-center-dan-shi-mei-you-deng-lu" class="header-anchor">#</a></h2><p>如果访问的是 /center 但是没有登录，先跳转到登录界面 登录成功自动进入 /center</p><p>router / index.js 60</p><pre class="line-numbers language-js" data-language="js"><code class="language-js"><span class="token keyword">if</span> <span class="token punctuation">(</span>store<span class="token punctuation">.</span>state<span class="token punctuation">.</span>user<span class="token punctuation">.</span>userInfo<span class="token punctuation">.</span>token<span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>  <span class="token comment">// 放行</span>  <span class="token function">next</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">&#125;</span> <span class="token keyword">else</span> <span class="token punctuation">&#123;</span>  <span class="token comment">// 跳转到登录界面</span>  <span class="token comment">// ? 如果我访问的是 /center ，但是没有登录，先跳转到登录界面</span>  <span class="token comment">// ? 登录成功之后自动进入到 /center 中</span>  <span class="token function">next</span><span class="token punctuation">(</span><span class="token string">'/login?redirect='</span> <span class="token operator">+</span> targetPath<span class="token punctuation">)</span><span class="token punctuation">&#125;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>Login 72</p><pre class="line-numbers language-js" data-language="js"><code class="language-js"><span class="token comment">// 手机号码和密码都已经收到</span><span class="token keyword">try</span> <span class="token punctuation">&#123;</span>  <span class="token comment">// 分发action</span>  <span class="token keyword">await</span> <span class="token keyword">this</span><span class="token punctuation">.</span>$store<span class="token punctuation">.</span><span class="token function">dispatch</span><span class="token punctuation">(</span><span class="token string">'login'</span><span class="token punctuation">,</span> <span class="token punctuation">&#123;</span> mobile<span class="token punctuation">,</span> password <span class="token punctuation">&#125;</span><span class="token punctuation">)</span>  <span class="token comment">// 从query中获取储存的参数</span>  <span class="token keyword">const</span> <span class="token punctuation">&#123;</span> redirect <span class="token punctuation">&#125;</span> <span class="token operator">=</span> <span class="token keyword">this</span><span class="token punctuation">.</span>$route<span class="token punctuation">.</span>query  <span class="token comment">// 如果query中的redirect中有数据（有目标路径），那么就像这个路径中跳转</span>  <span class="token comment">// 如果没有，则直接进入到首页</span>  <span class="token keyword">this</span><span class="token punctuation">.</span>$router<span class="token punctuation">.</span><span class="token function">replace</span><span class="token punctuation">(</span>redirect <span class="token operator">||</span> <span class="token string">'/'</span><span class="token punctuation">)</span><span class="token punctuation">&#125;</span> <span class="token keyword">catch</span> <span class="token punctuation">(</span>error<span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>  <span class="token function">alert</span><span class="token punctuation">(</span>error<span class="token punctuation">.</span>message<span class="token punctuation">)</span><span class="token punctuation">&#125;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>Header</p><pre class="line-numbers language-js" data-language="js"><code class="language-js"><span class="token function">logout</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>  <span class="token keyword">this</span><span class="token punctuation">.</span>$store<span class="token punctuation">.</span><span class="token function">dispatch</span><span class="token punctuation">(</span><span class="token string">'logout'</span><span class="token punctuation">)</span>  <span class="token comment">// 如果退出，则直接进入首页</span>  <span class="token keyword">this</span><span class="token punctuation">.</span>$router<span class="token punctuation">.</span><span class="token function">replace</span><span class="token punctuation">(</span><span class="token string">'/'</span><span class="token punctuation">)</span><span class="token punctuation">&#125;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span></span></code></pre><h2><span id="p98-an-zhuang-element-ui-bing-yin-ru">98 安装element-ui并引入</span><a href="#p98-an-zhuang-element-ui-bing-yin-ru" class="header-anchor">#</a></h2><p>支付需使用组件库</p><p>安装 按需引入</p><p>npm i element-ui</p><p>npm i babel-plugin-component -D</p><p><code>babel.config.js</code></p><pre class="line-numbers language-js" data-language="js"><code class="language-js">module<span class="token punctuation">.</span>exports <span class="token operator">=</span> <span class="token punctuation">&#123;</span>  presets<span class="token operator">:</span> <span class="token punctuation">[</span>    <span class="token string">'@vue/cli-plugin-babel/preset'</span>  <span class="token punctuation">]</span><span class="token punctuation">,</span>  <span class="token string">"plugins"</span><span class="token operator">:</span> <span class="token punctuation">[</span>    <span class="token punctuation">[</span>      <span class="token string">"component"</span><span class="token punctuation">,</span>      <span class="token punctuation">&#123;</span>        <span class="token string">"libraryName"</span><span class="token operator">:</span> <span class="token string">"element-ui"</span><span class="token punctuation">,</span>        <span class="token string">"styleLibraryName"</span><span class="token operator">:</span> <span class="token string">"theme-chalk"</span>      <span class="token punctuation">&#125;</span>    <span class="token punctuation">]</span>  <span class="token punctuation">]</span><span class="token punctuation">&#125;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>utils / elementui.js</p><pre class="line-numbers language-js" data-language="js"><code class="language-js"><span class="token comment">// 引入Vue</span><span class="token keyword">import</span> Vue <span class="token keyword">from</span> <span class="token string">'vue'</span><span class="token comment">// 引入element-ui中的部分组件</span><span class="token keyword">import</span> <span class="token punctuation">&#123;</span>  MessageBox<span class="token punctuation">,</span> Message <span class="token punctuation">&#125;</span> <span class="token keyword">from</span> <span class="token string">'element-ui'</span><span class="token comment">// 把相关的组件绑定到Vue的原想上, 组件的实例对象可以直接使用</span><span class="token class-name">Vue</span><span class="token punctuation">.</span>prototype<span class="token punctuation">.</span>$msgbox <span class="token operator">=</span> MessageBox <span class="token comment">// 弹框</span><span class="token class-name">Vue</span><span class="token punctuation">.</span>prototype<span class="token punctuation">.</span>$alert <span class="token operator">=</span> MessageBox<span class="token punctuation">.</span>alert<span class="token class-name">Vue</span><span class="token punctuation">.</span>prototype<span class="token punctuation">.</span>$message <span class="token operator">=</span> Message<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>main.js</p><pre class="line-numbers language-js" data-language="js"><code class="language-js"><span class="token keyword">import</span> <span class="token string">'@/utils/elementui'</span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><h2><span id="p99-zhi-fu-yu-er-wei-ma-gong-ju">99 支付与二维码工具</span><a href="#p99-zhi-fu-yu-er-wei-ma-gong-ju" class="header-anchor">#</a></h2><p>安装二维码工具（产生二维码）</p><p>npm i qrcode</p><p>Pay</p><pre class="line-numbers language-js" data-language="js"><code class="language-js"><span class="token comment">// 引入QRCode</span><span class="token keyword">import</span> QRCode <span class="token keyword">from</span> <span class="token string">'qrcode'</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre><p>76</p><pre class="line-numbers language-html" data-language="html"><code class="language-html"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>submit<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>  <span class="token comment">&lt;!-- &lt;router-link class="btn" to="/paysuccess">立即支付&lt;/router-link> --></span>  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>a</span> <span class="token attr-name">href</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>javascript:;<span class="token punctuation">"</span></span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>btn<span class="token punctuation">"</span></span> <span class="token attr-name">@click</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>pay<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>立即支付<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>a</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">></span></span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span></span></code></pre><pre class="line-numbers language-js" data-language="js"><code class="language-js"><span class="token function">pay</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>  QRCode<span class="token punctuation">.</span><span class="token function">toDataURL</span><span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">.</span>payInfo<span class="token punctuation">.</span>codeUrl<span class="token punctuation">)</span>    <span class="token punctuation">.</span><span class="token function">then</span><span class="token punctuation">(</span><span class="token parameter">imgURL</span> <span class="token operator">=></span> <span class="token punctuation">&#123;</span>      <span class="token comment">// 这个对话框返回 Promise 对象</span>      <span class="token keyword">this</span><span class="token punctuation">.</span><span class="token function">$alert</span><span class="token punctuation">(</span><span class="token template-string"><span class="token template-punctuation string">`</span><span class="token string">&lt;img src="</span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">$&#123;</span>imgURL<span class="token interpolation-punctuation punctuation">&#125;</span></span><span class="token string">"></span><span class="token template-punctuation string">`</span></span><span class="token punctuation">,</span> <span class="token string">'请使用微信扫码字符'</span><span class="token punctuation">,</span> <span class="token punctuation">&#123;</span>        dangerouslyUseHTMLString<span class="token operator">:</span> <span class="token boolean">true</span><span class="token punctuation">,</span> <span class="token comment">// 是否第一个参数用html解析</span>        showClose<span class="token operator">:</span> <span class="token boolean">false</span><span class="token punctuation">,</span> <span class="token comment">// 是否显示关闭小图标（右上角）</span>        showCancelButton<span class="token operator">:</span> <span class="token boolean">true</span><span class="token punctuation">,</span> <span class="token comment">// 是否显示取消按钮</span>        showConfirmButton<span class="token operator">:</span> <span class="token boolean">true</span><span class="token punctuation">,</span> <span class="token comment">// 是否显示确定按钮</span>        cancelButtonText<span class="token operator">:</span> <span class="token string">'支付中遇到问题'</span><span class="token punctuation">,</span> <span class="token comment">// 取消按钮的文本</span>        confirmButtonText<span class="token operator">:</span> <span class="token string">'我已成功支付'</span><span class="token punctuation">,</span> <span class="token comment">// 确定按钮的文本</span>        center<span class="token operator">:</span> <span class="token boolean">true</span> <span class="token comment">// 是否居中显示</span>      <span class="token punctuation">&#125;</span><span class="token punctuation">)</span>        <span class="token punctuation">.</span><span class="token function">then</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=></span> <span class="token punctuation">&#123;</span>          <span class="token comment">// 清理定时器</span>          <span class="token function">clearInterval</span><span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">.</span>timeId<span class="token punctuation">)</span>          <span class="token comment">// 关闭当前对话框</span>          <span class="token keyword">this</span><span class="token punctuation">.</span>$msgbox<span class="token punctuation">.</span><span class="token function">close</span><span class="token punctuation">(</span><span class="token punctuation">)</span>          <span class="token comment">// 提示信息</span>          <span class="token keyword">this</span><span class="token punctuation">.</span>$message<span class="token punctuation">.</span><span class="token function">success</span><span class="token punctuation">(</span><span class="token string">'恭喜支付成功'</span><span class="token punctuation">)</span>          <span class="token comment">// 路由跳转</span>          <span class="token keyword">this</span><span class="token punctuation">.</span>$router<span class="token punctuation">.</span><span class="token function">push</span><span class="token punctuation">(</span><span class="token string">'/paysuccess'</span><span class="token punctuation">)</span>        <span class="token punctuation">&#125;</span><span class="token punctuation">)</span>        <span class="token punctuation">.</span><span class="token function">catch</span><span class="token punctuation">(</span><span class="token parameter">error</span> <span class="token operator">=></span> <span class="token punctuation">&#123;</span>          <span class="token keyword">this</span><span class="token punctuation">.</span>$message<span class="token punctuation">.</span><span class="token function">warning</span><span class="token punctuation">(</span><span class="token string">'请迅速联系破晓小姐姐退钱！'</span><span class="token punctuation">)</span>        <span class="token punctuation">&#125;</span><span class="token punctuation">)</span>      <span class="token keyword">this</span><span class="token punctuation">.</span>timeId <span class="token operator">=</span> <span class="token function">setInterval</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=></span> <span class="token punctuation">&#123;</span>        <span class="token keyword">this</span><span class="token punctuation">.</span>$<span class="token constant">API</span>          <span class="token punctuation">.</span><span class="token function">reqPayStatus</span><span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">.</span>orderId<span class="token punctuation">)</span>          <span class="token punctuation">.</span><span class="token function">then</span><span class="token punctuation">(</span><span class="token parameter">result</span> <span class="token operator">=></span> <span class="token punctuation">&#123;</span>            <span class="token comment">// 是否支付成功</span>            <span class="token keyword">if</span> <span class="token punctuation">(</span>result<span class="token punctuation">.</span>code <span class="token operator">===</span> <span class="token number">200</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>              <span class="token comment">// 清理定时器</span>              <span class="token function">clearInterval</span><span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">.</span>timeId<span class="token punctuation">)</span>              <span class="token comment">// 关闭当前对话框</span>              <span class="token keyword">this</span><span class="token punctuation">.</span>$msgbox<span class="token punctuation">.</span><span class="token function">close</span><span class="token punctuation">(</span><span class="token punctuation">)</span>              <span class="token comment">// 提示信息</span>              <span class="token keyword">this</span><span class="token punctuation">.</span>$message<span class="token punctuation">.</span><span class="token function">success</span><span class="token punctuation">(</span><span class="token string">'恭喜支付成功'</span><span class="token punctuation">)</span>              <span class="token comment">// 路由跳转</span>              <span class="token keyword">this</span><span class="token punctuation">.</span>$router<span class="token punctuation">.</span><span class="token function">push</span><span class="token punctuation">(</span><span class="token string">'/paysuccess'</span><span class="token punctuation">)</span>            <span class="token punctuation">&#125;</span>          <span class="token punctuation">&#125;</span><span class="token punctuation">)</span>          <span class="token punctuation">.</span><span class="token function">catch</span><span class="token punctuation">(</span><span class="token parameter">error</span> <span class="token operator">=></span> <span class="token punctuation">&#123;</span>            <span class="token comment">// 清理定时器</span>            <span class="token function">clearInterval</span><span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">.</span>timeId<span class="token punctuation">)</span>            <span class="token keyword">this</span><span class="token punctuation">.</span>$message<span class="token punctuation">.</span><span class="token function">error</span><span class="token punctuation">(</span>error<span class="token punctuation">.</span>message <span class="token operator">||</span> <span class="token string">'支付失败'</span><span class="token punctuation">)</span>          <span class="token punctuation">&#125;</span><span class="token punctuation">)</span>      <span class="token punctuation">&#125;</span><span class="token punctuation">,</span> <span class="token number">2000</span><span class="token punctuation">)</span>    <span class="token punctuation">&#125;</span><span class="token punctuation">)</span>    <span class="token punctuation">.</span><span class="token function">catch</span><span class="token punctuation">(</span><span class="token parameter">error</span> <span class="token operator">=></span> <span class="token punctuation">&#123;</span>      <span class="token keyword">this</span><span class="token punctuation">.</span>$message<span class="token punctuation">.</span><span class="token function">error</span><span class="token punctuation">(</span><span class="token string">'支付二维码生成失败'</span><span class="token punctuation">)</span>    <span class="token punctuation">&#125;</span><span class="token punctuation">)</span><span class="token punctuation">&#125;</span><span class="token punctuation">,</span> <span class="token comment">// end</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h2><span id="p100-lie-biao-guo-du-xiao-guo">100 列表过渡效果</span><a href="#p100-lie-biao-guo-du-xiao-guo" class="header-anchor">#</a></h2><p>TypeNav 7</p><pre class="line-numbers language-html" data-language="html"><code class="language-html"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>transition</span> <span class="token attr-name">name</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>move<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>  <span class="token comment">&lt;!-- 这里加了一个点击事件（事件委托） --></span>  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>sort<span class="token punctuation">"</span></span> <span class="token attr-name">@click</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>toSearch<span class="token punctuation">"</span></span> <span class="token attr-name">v-if</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>isShowFirst<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>transition</span><span class="token punctuation">></span></span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>less</p><pre class="line-numbers language-less" data-language="less"><code class="language-less">.sort &#123;  position: absolute;  left: 0;  top: 45px;  width: 210px;  height: 461px;  position: absolute;  background: #fafafa;  z-index: 999;  &amp;.move-enter-active,  &amp;.move-leave-active &#123;    transition: all 0.5s;  &#125;  &amp;.move-enter,  &amp;.move-leave-to &#123;    opacity: 0;    height: 0;  &#125;<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h2><span id="p101-tu-pian-lan-jia-zai">101 图片懒加载</span><a href="#p101-tu-pian-lan-jia-zai" class="header-anchor">#</a></h2><p>安装 懒加载 插件</p><p><code>npm install vue-lazyload --save-dev</code></p><p><a href="https://www.cnblogs.com/rachelch/p/9802227.html">https://www.cnblogs.com/rachelch/p/9802227.html</a></p><p>找个 图片放 assets/ljz.gif 目录</p><p>main.js</p><pre class="line-numbers language-js" data-language="js"><code class="language-js"><span class="token comment">// 引入懒加载的插件</span><span class="token keyword">import</span> VueLazyload <span class="token keyword">from</span> <span class="token string">'vue-lazyload'</span><span class="token keyword">import</span> loading <span class="token keyword">from</span> <span class="token string">'./assets/ljz.gif'</span>Vue<span class="token punctuation">.</span><span class="token function">use</span><span class="token punctuation">(</span>VueLazyload<span class="token punctuation">,</span> <span class="token punctuation">&#123;</span>  loading<span class="token punctuation">&#125;</span><span class="token punctuation">)</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>Search 78</p><pre class="line-numbers language-html" data-language="html"><code class="language-html"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>router-link</span> <span class="token attr-name">:to</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>`/detail/$&#123;goods.id&#125;`<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>img</span> <span class="token attr-name">v-lazy</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>goods.defaultImg<span class="token punctuation">"</span></span> <span class="token punctuation">/></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>router-link</span><span class="token punctuation">></span></span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span></span></code></pre><h2><span id="p102-lu-you-lan-jia-zai">102  路由懒加载</span><a href="#p102-lu-you-lan-jia-zai" class="header-anchor">#</a></h2><p>router / routes.js</p><pre class="line-numbers language-language-js"><code class="language-language-js">// 路由的懒加载// import GroupBuy from '@/pages/Center/GroupBuy'const GroupBuy =() => import('@/pages/Center/GroupBuy')`<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span></span></code></pre>]]></content>
      
      
      <categories>
          
          <category> 2520：Vue商城项目 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Vue </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Kindle 使用教程</title>
      <link href="/182001/"/>
      <url>/182001/</url>
      
        <content type="html"><![CDATA[<blockquote><p>基于 <code>Kindle Paperwhite</code></p></blockquote><h2><span id="pyi-ji-ben-shi-yong">一、基本使用</span><a href="#pyi-ji-ben-shi-yong" class="header-anchor">#</a></h2><h2><span id="per-xia-zai-dian-zi-shu">二、下载电子书</span><a href="#per-xia-zai-dian-zi-shu" class="header-anchor">#</a></h2><h3><span id="p1-zhi-chi-de-ge-shi">1、支持的格式</span><a href="#p1-zhi-chi-de-ge-shi" class="header-anchor">#</a></h3><ol><li>亚马逊格式：<code>mobi</code> <code>azw</code></li><li>电子书标准格式 <code>epub</code></li><li>PDF <code>pdf</code> （尺寸过大的PDF显示效果不佳）</li><li>Word 格式：<code>doc</code> <code>docx</code></li><li>图片 <code>jpg</code> <code>jpeg</code> <code>png</code> <code>bmp</code></li><li>纯文本 <code>txt</code></li><li>网页 <code>htm</code> <code>html</code></li><li>RTF</li></ol><p>推荐导入格式：<code>mobi</code> <code>azw</code> <code>epub</code>。</p><h3><span id="p2-xia-zai-dian-zi-shu-de-wang-zhan">2、下载电子书的网站</span><a href="#p2-xia-zai-dian-zi-shu-de-wang-zhan" class="header-anchor">#</a></h3><ul><li><a href="http://cn.epubee.com/books/%EF%BC%88%E4%BB%98%E8%B4%B9%EF%BC%89">http://cn.epubee.com/books/（付费）</a></li></ul><h2><span id="psan-dao-ru-dian-zi-shu">三、导入电子书</span><a href="#psan-dao-ru-dian-zi-shu" class="header-anchor">#</a></h2><p>下载 Calibre 软件，通过数据线连接电脑之后可以直接导入<br>可以通过配置亚马逊账号，通过邮件导入，你的设备需要连接 Wi-Fi</p><h3><span id="p1-calibre-fang-shi">1、Calibre 方式</span><a href="#p1-calibre-fang-shi" class="header-anchor">#</a></h3><p>第一步：<a href="https://calibre-ebook.com/download">下载</a>，并安装</p><h3><span id="p2-you-xiang-fang-shi">2、邮箱方式</span><a href="#p2-you-xiang-fang-shi" class="header-anchor">#</a></h3>]]></content>
      
      
      <categories>
          
          <category> 1820：各种电子设备 </category>
          
      </categories>
      
      
    </entry>
    
    
    
    <entry>
      <title>CSS Hack</title>
      <link href="/220820/"/>
      <url>/220820/</url>
      
        <content type="html"><![CDATA[<p>CSS hack 是什么<br>由于不同的厂商的浏览器，或者是同一个浏览器不同的版本（IE），对 css 的解析和认识不完全一样,可能会导致不同浏览器显示的效果不相同,那么我们需要针对某个浏览器，去写不同的样式，让代码能够兼容所有的浏览器。</p><p>为什么要用 CSS hack</p><p>第一种理解：让我们 CSS 的代码兼容不同的浏览器</p><p>第二种理解：我们可以为不同的浏览器定制不同的样式</p><p>表现方式：</p><ul><li>CSS 属性前缀法</li><li>选择器前缀法</li><li><strong>IE 条件注释法</strong>: iE10、11 不再使用条件注释。</li></ul>]]></content>
      
      
      <categories>
          
          <category> 2208：CSS </category>
          
      </categories>
      
      
        <tags>
            
            <tag> CSS </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>个人封装函数库</title>
      <link href="/220802/"/>
      <url>/220802/</url>
      
        <content type="html"><![CDATA[<p>基本格式</p><pre class="line-numbers language-js" data-language="js"><code class="language-js"><span class="token operator">+</span><span class="token punctuation">(</span><span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token parameter">w</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>  <span class="token comment">/*   * xxxx方法：xxxx   * @pargm &#123;x:[type],y:[type]&#125; （参数   * @return &#123;object&#125; x:xxx y:xxx （返回值   */</span><span class="token punctuation">&#125;</span><span class="token punctuation">)</span><span class="token punctuation">(</span>windows<span class="token punctuation">)</span><span class="token punctuation">;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><ol><li><code>;</code>是为了防止其他库末尾不加分号，引起错误</li><li><code>+</code>等一元运算符代表把匿名函数括起来</li><li>在匿名函数中定义一个对象，把所有方法</li></ol><pre class="line-numbers language-js" data-language="js"><code class="language-js"><span class="token comment">/* * 作者：xxx * 时间：2020-7-18 * 内容：个人封装函数库 * *   ;是为了防止其他库末尾不加分号 引起错误 *   + - ~ ！ 等一元运算符 代表把匿名函数括起来 *   在匿名函数中定义一个对象，把所有的方法放到这个对象上，方便识别和管理 * */</span><span class="token operator">+</span><span class="token punctuation">(</span><span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token parameter">w</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>  w<span class="token punctuation">.</span>my <span class="token operator">=</span> <span class="token punctuation">&#123;</span><span class="token punctuation">&#125;</span><span class="token punctuation">;</span>  <span class="token comment">/*   *   getDocScroll方法：获取系统滚动条的位置   *   @param &#123;&#125; 无   *   @return &#123;Object&#125; x：横向滚动条  y：竖向滚动条   * */</span>  w<span class="token punctuation">.</span>my<span class="token punctuation">.</span><span class="token function-variable function">getDocScroll</span> <span class="token operator">=</span> <span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>    <span class="token keyword">var</span> h <span class="token operator">=</span> document<span class="token punctuation">.</span>documentElement<span class="token punctuation">;</span>    <span class="token keyword">var</span> b <span class="token operator">=</span> document<span class="token punctuation">.</span>body<span class="token punctuation">;</span>    <span class="token keyword">var</span> y <span class="token operator">=</span> self<span class="token punctuation">.</span>pageYOffset <span class="token operator">||</span> h<span class="token punctuation">.</span>scrollTop <span class="token operator">||</span> b<span class="token punctuation">.</span>scrollTop<span class="token punctuation">;</span>    <span class="token keyword">var</span> x <span class="token operator">=</span> self<span class="token punctuation">.</span>pageXOffset <span class="token operator">||</span> h<span class="token punctuation">.</span>scrollLeft <span class="token operator">||</span> b<span class="token punctuation">.</span>scrollLeft<span class="token punctuation">;</span>    <span class="token keyword">return</span> <span class="token punctuation">&#123;</span>      x<span class="token operator">:</span> x<span class="token punctuation">,</span>      y<span class="token operator">:</span> y<span class="token punctuation">,</span>    <span class="token punctuation">&#125;</span><span class="token punctuation">;</span>  <span class="token punctuation">&#125;</span><span class="token punctuation">;</span>  <span class="token comment">/*   *   getDocScroll方法：获取系统滚动条的位置   *   @param &#123;x:[number],y:[number]&#125;  x：横向滚动条  y：竖向滚动条   *   @return &#123;&#125; 无   * */</span>  w<span class="token punctuation">.</span>my<span class="token punctuation">.</span><span class="token function-variable function">setDocScroll</span> <span class="token operator">=</span> <span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token parameter">x<span class="token punctuation">,</span> y</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>    <span class="token keyword">if</span> <span class="token punctuation">(</span>arguments<span class="token punctuation">.</span>length <span class="token operator">===</span> <span class="token number">1</span> <span class="token operator">&amp;&amp;</span> <span class="token keyword">typeof</span> x <span class="token operator">===</span> <span class="token string">"number"</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>      window<span class="token punctuation">.</span><span class="token function">scrollTo</span><span class="token punctuation">(</span>x<span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">)</span><span class="token punctuation">;</span>      document<span class="token punctuation">.</span>documentElement<span class="token punctuation">.</span>scrollLeft <span class="token operator">=</span> x<span class="token punctuation">;</span>      document<span class="token punctuation">.</span>body<span class="token punctuation">.</span>scrollLeft <span class="token operator">=</span> x<span class="token punctuation">;</span>    <span class="token punctuation">&#125;</span>    <span class="token keyword">if</span> <span class="token punctuation">(</span>      arguments<span class="token punctuation">.</span>length <span class="token operator">===</span> <span class="token number">2</span> <span class="token operator">&amp;&amp;</span>      <span class="token keyword">typeof</span> x <span class="token operator">===</span> <span class="token string">"number"</span> <span class="token operator">&amp;&amp;</span>      <span class="token keyword">typeof</span> y <span class="token operator">===</span> <span class="token string">"number"</span>    <span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>      window<span class="token punctuation">.</span><span class="token function">scrollTo</span><span class="token punctuation">(</span>x<span class="token punctuation">,</span> y<span class="token punctuation">)</span><span class="token punctuation">;</span>      document<span class="token punctuation">.</span>documentElement<span class="token punctuation">.</span>scrollLeft <span class="token operator">=</span> x<span class="token punctuation">;</span>      document<span class="token punctuation">.</span>documentElement<span class="token punctuation">.</span>scrollTop <span class="token operator">=</span> y<span class="token punctuation">;</span>      document<span class="token punctuation">.</span>body<span class="token punctuation">.</span>scrollLeft <span class="token operator">=</span> x<span class="token punctuation">;</span>      document<span class="token punctuation">.</span>body<span class="token punctuation">.</span>scrollTop <span class="token operator">=</span> y<span class="token punctuation">;</span>    <span class="token punctuation">&#125;</span>  <span class="token punctuation">&#125;</span><span class="token punctuation">;</span>  w<span class="token punctuation">.</span>my<span class="token punctuation">.</span><span class="token function-variable function">log</span> <span class="token operator">=</span> <span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token parameter">con</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>    console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>con<span class="token punctuation">)</span><span class="token punctuation">;</span>    console<span class="token punctuation">.</span><span class="token function">dir</span><span class="token punctuation">(</span>con<span class="token punctuation">)</span><span class="token punctuation">;</span>  <span class="token punctuation">&#125;</span><span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span class="token punctuation">)</span><span class="token punctuation">(</span>window<span class="token punctuation">)</span><span class="token punctuation">;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>]]></content>
      
      
      <categories>
          
          <category> 2208：JS库 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> JavaScript </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Hexo 和 Typora 本地图片路径兼容问题</title>
      <link href="/181808/"/>
      <url>/181808/</url>
      
        <content type="html"><![CDATA[<p>目标是使 <code>Typora </code>和 <code>Hexo</code> 能正常的渲染本地图片<br>假设图片目录是 <code>yourBlog/source/images/test.jpg</code><br>在<code>_post/test.md</code> 使用该图片就需要加 <code>typora-root-url: ..</code><br>在<code>_post/文件夹/test.md</code> 使用该图片就需要加 <code>typora-root-url: ..\..</code><br>以此类推<br>图片的路径则为 <code>/images/test.jpg</code></p>]]></content>
      
      
      <categories>
          
          <category> 1818：Hexo </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Hexo </tag>
            
            <tag> Typora </tag>
            
            <tag> 原创 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>JavaScript 函数执行过程</title>
      <link href="/220210/"/>
      <url>/220210/</url>
      
        <content type="html"><![CDATA[<h2><span id="p1-zhan-nei-cun-he-dui-nei-cun">1、栈内存和堆内存</span><a href="#p1-zhan-nei-cun-he-dui-nei-cun" class="header-anchor">#</a></h2><p>内存根据程序运行时候的逻辑分为<strong>栈内存</strong>和<strong>堆内存</strong>。在 JS 中，并没有严格意义区分。大部分的数据都保存在堆内存中，但是在某些场景，仍需要用栈（有时候也叫堆栈）的数据结构的思路进行处理，如<strong>执行上下文</strong>。</p><table><thead><tr><th>栈内存</th><th>堆内存</th></tr></thead><tbody><tr><td>栈结构</td><td>链表结构</td></tr><tr><td>占内存小，速度快</td><td>占内存大，速度慢</td></tr><tr><td>自动分配，自动回收</td><td>自己申请，手动释放</td></tr></tbody></table><h2><span id="p2-zhi-xing-shang-xia-wen">2、执行上下文</span><a href="#p2-zhi-xing-shang-xia-wen" class="header-anchor">#</a></h2><p>JS 引擎并不是逐行解析代码，而是逐段去分析和执行，当开始解析一段代码时，会先进行<strong>预处理</strong>（声明提升和创建作用域链）。生成一个<strong>执行上下文</strong>。</p><p><strong>执行上下文</strong>（执行环境）分为两种<strong>变量对象</strong>（VO）：</p><ul><li><code>Global</code> | <code>Window</code>，默认的<strong>全局执行环境</strong>。</li><li><code>Function</code>，调用函数时会进入的<strong>函数执行环境</strong>。</li></ul><p>代码执行时会开辟一个栈空间来说明程序的执行顺序，这个执行上下文堆栈称为<strong>执行栈</strong>。开始执行时先将全局执行环境压入栈底（压栈），执行到函数时会创建对应的函数执行环境，并将函数执行环境压入栈底。在函数执行完成后将函数执行环境弹出并销毁。直到所有代码执行完成销毁全局执行环境。</p><p>可以把执行栈认为是一个存储函数调用的<strong>栈结构</strong>，遵循先进后出的原则。</p><p><img src="/images/2020/%E6%89%A7%E8%A1%8C%E6%A0%88.gif" alt="执行栈"></p><p>当我们使用递归的时候，因为栈可存放的函数是有<strong>限制</strong>的，一旦存放了过多的函数且没有得到释放的话，就会出现爆栈的问题。</p><h2><span id="p3-bian-liang-dui-xiang">3、变量对象</span><a href="#p3-bian-liang-dui-xiang" class="header-anchor">#</a></h2><p><strong>全局变量对象</strong> windows</p><p><strong>函数变量对象</strong></p><pre class="line-numbers language-js" data-language="js"><code class="language-js"><span class="token keyword">function</span><span class="token punctuation">(</span><span class="token parameter">a</span><span class="token punctuation">)</span><span class="token punctuation">&#123;</span><span class="token keyword">var</span> b <span class="token operator">=</span> <span class="token number">2</span><span class="token punctuation">;</span><span class="token keyword">function</span> <span class="token function">c</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">&#123;</span><span class="token punctuation">&#125;</span><span class="token punctuation">;</span><span class="token keyword">var</span> <span class="token function-variable function">d</span> <span class="token operator">=</span> <span class="token keyword">function</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">&#123;</span><span class="token punctuation">&#125;</span><span class="token punctuation">;</span>b <span class="token operator">=</span> <span class="token number">3</span><span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span class="token function">foo</span><span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">2</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment">// 模拟上面代码的变量对象</span><span class="token keyword">var</span> <span class="token constant">VO</span> <span class="token operator">=</span> <span class="token punctuation">&#123;</span>    argument<span class="token operator">:</span><span class="token punctuation">&#123;</span>        <span class="token number">0</span><span class="token operator">:</span><span class="token number">1</span><span class="token punctuation">,</span>        <span class="token number">1</span><span class="token operator">:</span><span class="token number">2</span><span class="token punctuation">,</span>        length<span class="token operator">:</span><span class="token number">2</span>    <span class="token punctuation">&#125;</span>    a<span class="token operator">:</span><span class="token number">1</span><span class="token punctuation">,</span>    <span class="token function-variable function">c</span><span class="token operator">:</span><span class="token keyword">function</span> <span class="token function">c</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">&#123;</span><span class="token punctuation">&#125;</span><span class="token punctuation">,</span>    b<span class="token operator">:</span><span class="token keyword">undefined</span><span class="token punctuation">,</span>d<span class="token operator">:</span><span class="token keyword">undefined</span><span class="token punctuation">&#125;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h2><span id="p4-zuo-yong-yu">4、作用域</span><a href="#p4-zuo-yong-yu" class="header-anchor">#</a></h2><p><strong>作用域 scope</strong> 是变量在程序中可以访问的有效访问，也被称为变量的可见性。作用域在进入全局执行环境或者函数执行环境时就已经确定好了。在<code>ES5</code>中，作用域分为两种：</p><ul><li>全局作用域</li><li>函数作用域</li></ul><p><strong>同一个函数的多次调用都会生成不同的执行环境，每次调用都会生成。</strong></p><p><strong>全局变量</strong> 是定义在全局作用域中的变量，一般在函外部定义。在程序的所有地方都可以使用和操作。</p><p><strong>局部变量</strong> 是在函数内部定义的，在函数执行域中。只能在自己的作用域中起作用，只能在函数内部使用。外部无法使用和操作局部变量。</p><h2><span id="p5-zuo-yong-yu-lian">5、作用域链</span><a href="#p5-zuo-yong-yu-lian" class="header-anchor">#</a></h2><p><strong>作用域链</strong> 是用来查找变量的这样一系列的过程。一个函数在定义时会生成一个属性<code>[[scope]]</code>，这个属性存储的是函数定义时作用域的层级关系。作用域链是函数执行时创建的，是当前函数作用域链 -&gt; <code>[[scope]]</code>属性作用域组成的。函数当前执行的作用域是作用域链的顶端，全局作用域在作用域链的最后。执行环境销毁时，作用域链也会销毁。</p><pre class="line-numbers language-js" data-language="js"><code class="language-js"><span class="token comment">// 全局作用域</span><span class="token keyword">var</span> a <span class="token operator">=</span> <span class="token number">1</span><span class="token punctuation">;</span><span class="token keyword">function</span> <span class="token function">f</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>  <span class="token comment">// test -> 全局作用域</span>  <span class="token keyword">var</span> a <span class="token operator">=</span> <span class="token number">10</span><span class="token punctuation">;</span>  <span class="token keyword">function</span> <span class="token function">f1</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>    <span class="token comment">// test2 -> test -> 全局作用域</span>    <span class="token keyword">var</span> a <span class="token operator">=</span> <span class="token number">100</span><span class="token punctuation">;</span>    console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>a<span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">//100</span>  <span class="token punctuation">&#125;</span>  <span class="token keyword">function</span> <span class="token function">f2</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>    console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>a<span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">//10</span>  <span class="token punctuation">&#125;</span>  <span class="token function">f1</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>  <span class="token function">f2</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span class="token function">f</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>a<span class="token punctuation">)</span><span class="token punctuation">;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>当执行 f1 时，创建函数 f1 的执行环境，并将该对象置于链表开头，然后将函数 f 的调用对象放在第二位，最后是全局对象，作用域链的链表的结构是 f1-&gt;f-&gt;window 。从链表的开头寻找变量 a，即 f1 函数内部找变量 a，找到了，结果是 20。同样，执行 f2 时，作用域链的链表的结构是 f2-&gt;f-&gt;window 。从链表的开头寻找变量 a，即 f2 函数内部找变量 a，找不到，于是从 f 内部找变量 a，找到了，结果是 10。最后在最外层打印出变量 a，直接从变量 a 的作用域即全局作用域内寻找，结果为 1。</p><h2><span id="p6-nei-cun-zhong-de-bian-liang-cun-chu">6、内存中的变量存储</span><a href="#p6-nei-cun-zhong-de-bian-liang-cun-chu" class="header-anchor">#</a></h2><p>变量如果是基本数据类型，会在直接在栈内存开辟一段存储空间标识符。然后将基本数据类型的值也存储在栈内存中和标识符对应起来。要求变量名不能重名，重名就会覆盖。</p><p>如果是引用数据类型，值储存在堆内存中，存储引用类型的时候标识符是储存在栈内存中的。（JS 不允许直接访问堆内存中的数据，只能通过引用访问，差不多就是在变量对象中存储一个指向对象的句柄，可以理解成是一个地址，要访问这个对象，就要通过这个引用句柄来访问）。</p><pre class="line-numbers language-js" data-language="js"><code class="language-js"><span class="token keyword">var</span> a <span class="token operator">=</span> <span class="token number">100</span><span class="token punctuation">;</span><span class="token keyword">var</span> b <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">2</span><span class="token punctuation">,</span> <span class="token number">3</span><span class="token punctuation">]</span><span class="token punctuation">;</span><span class="token keyword">var</span> c <span class="token operator">=</span> b<span class="token punctuation">;</span>c<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token number">1000</span><span class="token punctuation">;</span>console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>b<span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// [1000,2,3]</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>程序一开始执行，进入全局环境，首先会创建全局环境并且压栈（执行栈），全局代码执行的时候依赖的是全局环境中的东西。全局变量如果是基本类型，那么这个值直接存在栈当中，如果这个变量的值是引用类型，那么引用类型会在堆内存中开辟自己的空间专门存储（数据本身）。然后里面的这块空间的地址存在栈当中对应的变量。</p><p>当函数执行碰到函数调用，函数执行时也要有自己的环境去依赖。函数执行也是创建自己的函数环境进行压栈（函数执行环境一定压在全局执行环境的上面）。局部变量，是在函数环境当中存在的，只有函数执行，局部变量才会出现，函数执行完成之后，函数环境要弹出栈（销毁归还内存），局部变量也就不存在了。</p><p>当函数调用完成之后，会继续执行全局代码，一直到所有的全局代码执行完成，代表程序执行结束，程序执行结束的时候，全局环境最后出栈（销毁）。</p><h2><span id="p7-sheng-ming-ti-sheng">7、声明提升</span><a href="#p7-sheng-ming-ti-sheng" class="header-anchor">#</a></h2><p>也称为预解析。在执行环境的第一步（创建阶段），会将带 var 的变量声明和函数声明，放到作用域中。在执行阶段时，它的相关逻辑还是放在原来的位置进行赋值和其他的逻辑处理。函数表达式和函数构造器不会被提升。函数声明和变量都会提升，但是函数声明会先提升，然后是变量。</p><p><strong>变量声明提升</strong> 通过 <code>var</code> 声明的变量，在定义语句之前就能访问到，值为 <code>undefined</code>。</p><p><strong>函数声明提升</strong> 通过 <code>function</code> 声明的函数，在前面就可以直接调用，值为函数定义（对象）。</p>]]></content>
      
      
      <categories>
          
          <category> 2202：ES高级 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> JavaScript </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>JavaScript 模块化</title>
      <link href="/220209/"/>
      <url>/220209/</url>
      
        <content type="html"><![CDATA[<h2><span id="p1-es6-module">1、ES6 Module</span><a href="#p1-es6-module" class="header-anchor">#</a></h2><blockquote><p>简称 <code>ESM</code></p></blockquote><pre class="line-numbers language-js" data-language="js"><code class="language-js"><span class="token keyword">import</span> <span class="token operator">*</span> <span class="token keyword">as</span> test <span class="token keyword">from</span> <span class="token string">"./test"</span><span class="token punctuation">;</span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><h2><span id="p2-nodejs-mo-kuai-hua">2、NodeJS 模块化</span><a href="#p2-nodejs-mo-kuai-hua" class="header-anchor">#</a></h2><h3><span id="pcommonjs">CommonJS</span><a href="#pcommonjs" class="header-anchor">#</a></h3><p>NodeJS 借鉴了 Common 规范实现了一套模块系统，称为 <strong>CommonJS</strong> 模块化系统。</p><h2><span id="p1-mo-kuai-bao-lu">1、模块暴露</span><a href="#p1-mo-kuai-bao-lu" class="header-anchor">#</a></h2><p>默认情况下模块内部代码对于外部来说都是不可见的，可以通过以下方式向外部暴露变量和函数。</p><p>（1）通过 <code>module.exports</code> 来向外部暴露变量和函数</p><p><code>module.exports</code> 是导出的对象。</p><p>无论添加还是直接覆盖，他永远都是导出的对象。</p><p>如果是导出一个对象，可以写</p><pre class="line-numbers language-js" data-language="js"><code class="language-js">module<span class="token punctuation">.</span>exports<span class="token punctuation">.</span>obj <span class="token operator">=</span> obj<span class="token punctuation">;</span><span class="token comment">//或者</span>module<span class="token punctuation">.</span>exports <span class="token operator">=</span> <span class="token punctuation">&#123;</span> obj<span class="token operator">:</span> obj <span class="token punctuation">&#125;</span><span class="token punctuation">;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span></span></code></pre><p>如果导出一组对象，可以写</p><pre class="line-numbers language-js" data-language="js"><code class="language-js">moudle<span class="token punctuation">.</span>exports<span class="token punctuation">.</span>obj <span class="token operator">=</span> <span class="token punctuation">&#123;</span> obj<span class="token operator">:</span> obj<span class="token punctuation">,</span> obj2<span class="token operator">:</span> obj2 <span class="token punctuation">&#125;</span><span class="token punctuation">;</span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>如果直接导出</p><pre class="line-numbers language-none"><code class="language-none">module.exports &#x3D; fun;&#x2F;&#x2F; 导出的对象是 fun 函数<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre><p>例子</p><pre class="line-numbers language-js" data-language="js"><code class="language-js"><span class="token keyword">function</span> <span class="token function">add</span><span class="token punctuation">(</span><span class="token parameter">x<span class="token punctuation">,</span> y</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>  <span class="token keyword">return</span> x <span class="token operator">+</span> y<span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span class="token comment">// 暴露出去</span>module<span class="token punctuation">.</span>exports <span class="token operator">=</span> add<span class="token punctuation">;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>（2）将变量和函数设置为 <code>exports</code> 的属性来暴露变量和函数为了方便，Node 为每个模块提供一个 exports 变量，指向 module.exports，例如： <code>module.exports.fun = …</code>，相当于<code>exports.fun = ...</code>。</p><p><code>exports</code> 本身不具备导出功能，但是修改它的时候，其实是修改了<code>module.exports</code> 。<code>exports</code> 是指向 <code>moudlue.exports</code> 的对象地址的一个新对象。（<code>exports = xxx</code> 的用法是错误的，这样使其不再绑定。正确的用法是 <code>exports.xxx = xxx</code> ）</p><p>不能将一个值赋值给<code>exports</code>，而是使用<code>exports.XXX</code>来暴露。否则这样它将不再绑定到<code>module.exports</code>。如果 exports 导出的变量类型是引用类型如函数，则会断开与<code>module.exports</code>的地址指向，导致变量导出失败。因为最终还是要靠<code>module.exports</code>来导出变量的。</p><p>例子</p><pre class="line-numbers language-js" data-language="js"><code class="language-js"><span class="token keyword">function</span> <span class="token function">add</span><span class="token punctuation">(</span><span class="token parameter">x<span class="token punctuation">,</span> y</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>  <span class="token keyword">return</span> x <span class="token operator">+</span> y<span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span class="token comment">// 暴露出去</span>exports<span class="token punctuation">.</span>add <span class="token operator">=</span> add<span class="token punctuation">;</span> <span class="token comment">// &#123; add: [Function: add] &#125;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span></span></code></pre><h2><span id="p2-mo-kuai-dao-ru">2、模块导入</span><a href="#p2-mo-kuai-dao-ru" class="header-anchor">#</a></h2><p>通过 <code>require()</code> 来引入外部的模块</p><p>模块分为三种类型。</p><p>（1）系统模块</p><pre class="line-numbers language-js" data-language="js"><code class="language-js"><span class="token keyword">const</span> path <span class="token operator">=</span> <span class="token function">require</span><span class="token punctuation">(</span><span class="token string">"path"</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>（2）第三方模块</p><pre class="line-numbers language-js" data-language="js"><code class="language-js"><span class="token comment">// npm install express -save</span><span class="token keyword">const</span> express <span class="token operator">=</span> <span class="token function">require</span><span class="token punctuation">(</span><span class="token string">"express"</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre><p>（3）自定义模块</p><p>可以不书写后缀名：默认按照 js json node 顺序解析</p><p>一定要加上<code>./</code> 或者 <code>../</code> 之类的路径 否则可能解析错误</p><pre class="line-numbers language-js" data-language="js"><code class="language-js"><span class="token comment">// f1,f2 是 函数 o1,o2 是对象</span><span class="token comment">// (1)</span>module<span class="token punctuation">.</span>exports<span class="token punctuation">.</span>f1 <span class="token operator">=</span> f1<span class="token punctuation">;</span><span class="token operator">==</span><span class="token operator">></span><span class="token keyword">const</span> <span class="token punctuation">&#123;</span>f1<span class="token punctuation">&#125;</span> <span class="token operator">=</span> <span class="token function">require</span><span class="token punctuation">(</span><span class="token string">"./mod/test"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>module<span class="token punctuation">.</span>exports<span class="token punctuation">.</span>o1 <span class="token operator">=</span> o1<span class="token punctuation">;</span><span class="token operator">==</span><span class="token operator">></span><span class="token keyword">const</span> <span class="token punctuation">&#123;</span>o1<span class="token punctuation">&#125;</span> <span class="token operator">=</span> <span class="token function">require</span><span class="token punctuation">(</span><span class="token string">"./mod/test"</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token operator">==</span><span class="token operator">></span><span class="token keyword">const</span> obj <span class="token operator">=</span> <span class="token function">require</span><span class="token punctuation">(</span><span class="token string">"./mod/test"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>obj<span class="token punctuation">)</span> <span class="token comment">// &#123; o1: &#123;...&#125;&#125;</span><span class="token comment">// (2)</span>module<span class="token punctuation">.</span>exports <span class="token operator">=</span> <span class="token punctuation">&#123;</span>f1<span class="token operator">:</span>f1<span class="token punctuation">,</span> f2<span class="token operator">:</span>f2<span class="token punctuation">&#125;</span><span class="token operator">==</span><span class="token operator">></span><span class="token keyword">const</span> obj <span class="token operator">=</span> <span class="token function">require</span><span class="token punctuation">(</span><span class="token string">"./mod/test"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>obj<span class="token punctuation">)</span> <span class="token comment">// &#123; o1: &#123;...&#125;, o2: &#123;...&#125; &#125;</span><span class="token comment">// (3)</span>exports<span class="token punctuation">.</span>f1 <span class="token operator">=</span> f1<span class="token punctuation">;</span>exports<span class="token punctuation">.</span>f2 <span class="token operator">=</span> f2<span class="token punctuation">;</span><span class="token operator">==</span><span class="token operator">></span><span class="token keyword">const</span> <span class="token punctuation">&#123;</span>f1<span class="token punctuation">&#125;</span> <span class="token operator">=</span> <span class="token function">require</span><span class="token punctuation">(</span><span class="token string">"./mod/test"</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token keyword">const</span> <span class="token punctuation">&#123;</span>f1<span class="token punctuation">,</span> f2<span class="token punctuation">&#125;</span> <span class="token operator">=</span> <span class="token function">require</span><span class="token punctuation">(</span><span class="token string">"./mod/test"</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment">// (4)</span>module<span class="token punctuation">.</span>exports <span class="token operator">=</span> <span class="token function-variable function">f</span> <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=></span> <span class="token punctuation">&#123;</span><span class="token punctuation">&#125;</span><span class="token operator">==</span><span class="token operator">></span><span class="token keyword">const</span> fn <span class="token operator">=</span> <span class="token function">require</span><span class="token punctuation">(</span><span class="token string">"./xxx/xxx"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>fn<span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// [Function: f]</span><span class="token function">fn</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>！实际使用例子</p><pre class="line-numbers language-js" data-language="js"><code class="language-js"><span class="token comment">// (1)</span>module<span class="token punctuation">.</span><span class="token function-variable function">exports</span> <span class="token operator">=</span> <span class="token keyword">async</span> <span class="token punctuation">(</span><span class="token parameter">req<span class="token punctuation">,</span> res</span><span class="token punctuation">)</span> <span class="token operator">=></span> <span class="token punctuation">&#123;</span><span class="token operator">...</span><span class="token punctuation">&#125;</span><span class="token operator">==</span><span class="token operator">></span><span class="token keyword">const</span> xxx <span class="token operator">=</span> <span class="token function">require</span><span class="token punctuation">(</span><span class="token string">"./xxx"</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span></span></code></pre><h2><span id="p3-lu-jing-fen-xi-he-wen-jian-ding-wei">3、路径分析和文件定位</span><a href="#p3-lu-jing-fen-xi-he-wen-jian-ding-wei" class="header-anchor">#</a></h2><p>路径形式的文件模块：以<code>./</code> <code>../</code>路径形式的文件模块，将其转化为真实路径，根据真实路径索引去查找。</p><p>第三方模块会从 <code>node_modules</code> 逐层往上找，直到根目录的<code>node_modules</code>。</p><p><code>require()</code>中的文件，如果没有后缀名，会以<code>.js .json .node</code>次序补充扩展名，依次尝试。</p><h2><span id="p3-qi-ta-mo-kuai-hua">3、其他模块化</span><a href="#p3-qi-ta-mo-kuai-hua" class="header-anchor">#</a></h2>]]></content>
      
      
      <categories>
          
          <category> 2202：ES高级 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> JavaScript </tag>
            
            <tag> 前端工程化 </tag>
            
            <tag> 模块化 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>RollupJS</title>
      <link href="/240301/"/>
      <url>/240301/</url>
      
        <content type="html"><![CDATA[<p>Rollup 是一个 JavaScript 模块打包器，可以将小块代码编译成大块复杂的代码。<br>Rollup 对代码模块使用新的标准化格式，这些标准都包含在 JavaScript 的 ES6 版本中，而不是以前的特殊解决方案，如 CommonJS 和 AMD。ES6 模块可以使你自由、无缝地使用你最喜爱的 library 中那些最有用独立函数，而你的项目不必携带其他未使用的代码。ES6 模块最终还是要由浏览器原生实现，但当前 Rollup 可以使你提前体验。</p><p><a href="https://www.rollupjs.com/">文档</a></p>]]></content>
      
      
      <categories>
          
          <category> 2403：RollupJS </category>
          
      </categories>
      
      
        <tags>
            
            <tag> rollup </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Hexo 渲染 mathjax</title>
      <link href="/181807/"/>
      <url>/181807/</url>
      
        <content type="html"><![CDATA[<h1><span id="1-xiu-gai-next-zhu-ti-pei-zhi-wen-jian">1、修改 <code>NexT</code> 主题配置文件</span><a href="#1-xiu-gai-next-zhu-ti-pei-zhi-wen-jian" class="header-anchor">#</a></h1><p>搜索 <code>mathjax</code>，把 <code>enable</code> 修改为 <code>true</code></p><h1><span id="2-zai-xu-yao-shi-yong-de-wen-zhang-tian-jia-shu-xing">2、在需要使用的文章添加属性</span><a href="#2-zai-xu-yao-shi-yong-de-wen-zhang-tian-jia-shu-xing" class="header-anchor">#</a></h1><p>在 <code>Front Matter</code> 里添加 <code>mathjax: true</code></p>]]></content>
      
      
      <categories>
          
          <category> 1818：Hexo </category>
          
      </categories>
      
      
        <tags>
            
            <tag> mathjax </tag>
            
            <tag> Hexo </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Hexo 渲染 mermaid</title>
      <link href="/181806/"/>
      <url>/181806/</url>
      
        <content type="html"><![CDATA[<h1><span id="1-an-zhuang">1、安装</span><a href="#1-an-zhuang" class="header-anchor">#</a></h1><p><code>npm install hexo-filter-mermaid-diagrams --save</code></p><h1><span id="2-zai-next-zhu-ti-zhong-pei-zhi">2、在 <code>NexT</code> 主题中配置</span><a href="#2-zai-next-zhu-ti-zhong-pei-zhi" class="header-anchor">#</a></h1><p>搜索关键字 <code>mermaid</code>，把 <code>enable</code> 改成 <code>true</code></p><h1><span id="3-chong-xin-bu-shu">3、重新部署</span><a href="#3-chong-xin-bu-shu" class="header-anchor">#</a></h1><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash">hexo cleanhexo ghexo d<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span></span></code></pre>]]></content>
      
      
      <categories>
          
          <category> 1818：Hexo </category>
          
      </categories>
      
      
        <tags>
            
            <tag> mermaid </tag>
            
            <tag> Hexo </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Hexo 渲染 emoji 表情</title>
      <link href="/181805/"/>
      <url>/181805/</url>
      
        <content type="html"><![CDATA[<h1><span id="1-an-zhuang-xin-de-xuan-ran-qi">1、安装新的渲染器</span><a href="#1-an-zhuang-xin-de-xuan-ran-qi" class="header-anchor">#</a></h1><p>如果已经安装，请跳过</p><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash">cd yourBlognpm uninstall hexo-render-marked --savenpm i hexo-renderer-markdown-it --save<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span></span></code></pre><h1><span id="2-an-zhuang-cha-jian">2、安装插件</span><a href="#2-an-zhuang-cha-jian" class="header-anchor">#</a></h1><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash">npm install markdown-it-emoji --save<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><h1><span id="3-bian-ji-zhan-dian-pei-zhi-wen-jian">3、编辑站点配置文件</span><a href="#3-bian-ji-zhan-dian-pei-zhi-wen-jian" class="header-anchor">#</a></h1><p>在博客根目录的 <code>_config.yml</code><br>在 <code>markdown --&gt; plugins</code> 中添加一项：<code>markdown-it-emoji</code></p><h1><span id="can-kao">参考</span><a href="#can-kao" class="header-anchor">#</a></h1><ul><li><a href="https://www.cnblogs.com/fsong/p/5929773.html">Hexo中添加emoji表情</a></li></ul>]]></content>
      
      
      <categories>
          
          <category> 1818：Hexo </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Hexo </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Markdown 扩展语法</title>
      <link href="/181004/"/>
      <url>/181004/</url>
      
        <content type="html"><![CDATA[<h1><span id="1-mu-lu">1、目录</span><a href="#1-mu-lu" class="header-anchor">#</a></h1><p>用<code>[TOC]</code>生成目录。</p><h1><span id="2-shu-xue-gong-shi">2、数学公式</span><a href="#2-shu-xue-gong-shi" class="header-anchor">#</a></h1><p>通过一个<code>$</code>插入行内公式，通过两个<code>$$</code>插入整行居中的公式。<br>具体看 <a href="/181007">MathJax</a>。</p><h1><span id="3-jiao-zhu">3、角注</span><a href="#3-jiao-zhu" class="header-anchor">#</a></h1><p>使用<code>^</code>来定义脚注。如：</p><pre class="line-numbers language-md" data-language="md"><code class="language-md">这是一个脚注的例子[^1][^1]: 这里是脚注<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre><h1><span id="4-to-do-list">4、TO-DO LIST</span><a href="#4-to-do-list" class="header-anchor">#</a></h1><p>在 <strong>Markdown</strong> 中可以插入TO-DO 列表，如：</p><pre class="line-numbers language-md" data-language="md"><code class="language-md">- [ ] 未完成- [x] 完成<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre><h1><span id="5-emoji-biao-qing">5、Emoji 表情</span><a href="#5-emoji-biao-qing" class="header-anchor">#</a></h1><p>用冒号包起来，如<code>:link:</code>。</p><h1><span id="6-liu-cheng-tu">6、流程图</span><a href="#6-liu-cheng-tu" class="header-anchor">#</a></h1><p>流程图在代码块的基础上加关键字<code>flow</code>来生成。</p><pre class="line-numbers language-none"><code class="language-none">st&#x3D;&gt;start: Starte&#x3D;&gt;end: Endop1&#x3D;&gt;operation: My Operationsub1&#x3D;&gt;subroutine: My Subroutinecond&#x3D;&gt;condition: Yes or No?io&#x3D;&gt;inputoutput: catch something...st-&gt;op1-&gt;condcond(yes)-&gt;io-&gt;econd(no)-&gt;sub1(right)-&gt;op1<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h1><span id="7-shi-xu-tu">7、时序图</span><a href="#7-shi-xu-tu" class="header-anchor">#</a></h1><p>时序图在代码块的基础上加关键字<code>sequence</code>来生成。</p><pre class="line-numbers language-none"><code class="language-none">Alice-&gt;Bob: Hello Bob, how are you?Note right of Bob: Bob thinksBob--&gt;Alice: I am good thanks!<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span></span></code></pre><h1><span id="can-kao">参考</span><a href="#can-kao" class="header-anchor">#</a></h1><p><a href="http://www.wiz.cn/feature-markdown.html" title="为知笔记 Markdown 新手指南">为知笔记 Markdown 新手指南</a></p>]]></content>
      
      
      <categories>
          
          <category> 1810：Markdown </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Markdown </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Markdown</title>
      <link href="/181001/"/>
      <url>/181001/</url>
      
        <content type="html"><![CDATA[<h1><span id="markdown">Markdown</span><a href="#markdown" class="header-anchor">#</a></h1><p><strong>Markdown</strong> 是一种可以使用普通文本编辑器编写的标记语言，通过简单的标记语法，它可以使普通文本内容具有一定的格式。<br><strong>Markdown</strong> 具有一系列衍生版本，用于扩展 <strong>Markdown</strong> 的功能（如表格、脚注、内嵌HTML等等），这些功能原初的 <strong>Markdown</strong> 尚不具备，它们能让 <strong>Markdown</strong> 转换成更多的格式。这些衍生版本要么基于工具，如Typora；要么基于网站，如GitHub和Wikipedia，在语法上基本兼容，但在一些语法和渲染效果上有改动。</p><h2><span id="p1-zong-zhi-he-mu-biao">1、宗旨和目标</span><a href="#p1-zong-zhi-he-mu-biao" class="header-anchor">#</a></h2><p><strong>Markdown</strong> 提倡于注重内容而不是格式。<br><strong>Markdown</strong> 的目标是实现易读易写。</p><h2><span id="p2-html-jian-rong-xing">2、HTML兼容性</span><a href="#p2-html-jian-rong-xing" class="header-anchor">#</a></h2><p><strong>Markdown</strong> 允许使用<strong>HTML</strong>语法进行文本格式化。</p><h2><span id="p3-bian-ji-gong-ju">3、编辑工具</span><a href="#p3-bian-ji-gong-ju" class="header-anchor">#</a></h2><p>首选 <code>Typora</code> ，另外 <code>VSCode</code> 也有比较好的编辑体验。需安装这些插件<strong>Markdown All in One</strong>，<strong>Markdown Extended</strong>，<strong>Markdown Preview Enhance</strong>，并重新加载。</p>]]></content>
      
      
      <categories>
          
          <category> 1810：Markdown </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Markdown </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Markdown 基础语法</title>
      <link href="/181003/"/>
      <url>/181003/</url>
      
        <content type="html"><![CDATA[<h3><span id="p1-huan-xing">1、换行</span><a href="#p1-huan-xing" class="header-anchor">#</a></h3><p>句末加两个空格或者使用HTML的<code>&lt;br/&gt;</code>换行。</p><h3><span id="p2-fen-ge-xian">2、分隔线</span><a href="#p2-fen-ge-xian" class="header-anchor">#</a></h3><p>你可以在一行中用三个以上的<code>*</code>、<code>+</code>、<code>_</code>来建立一个分隔线，行内不能有其他东西。也可以使用HTML的<code>&lt;hr/&gt;</code>画分隔符。</p><h3><span id="p3-biao-ti">3、标题</span><a href="#p3-biao-ti" class="header-anchor">#</a></h3><p><strong>Markdown</strong> 标题支持两种形式：<br>1）Atx式：格式为<code># + 空格 + 标题内容</code>，级别由<code>#</code>的数量来确定，<code>#</code>是一级标题，<code>######</code>则是六级标题，最高六级标题。<br>2）Setext式：在标题底下加上任意个<code>=</code>代表一级标题，<code>-</code>代表二级标题。只支持一级标题和二级标题。</p><blockquote><p>注：Setext式标题不支持目录渲染。</p></blockquote><h3><span id="p4-qu-kuai-yin-yong">4、区块引用</span><a href="#p4-qu-kuai-yin-yong" class="header-anchor">#</a></h3><p>区块引用（Blockquotes）由<code>&gt;</code>确定。</p><blockquote><p>这是区块引用。<br>区块引用可以嵌套。<br><strong>Markdown</strong> 也允许你偷懒只在整个段落的第一行最前面加上“&gt;”。只要你在后面换个行。<br>引用的区块内可以使用其他大多数的 Markdown 语法。</p></blockquote><h3><span id="p5-lie-biao">5、列表</span><a href="#p5-lie-biao" class="header-anchor">#</a></h3><h4><span id="p5-1-you-xu-lie-biao">5.1 有序列表</span><a href="#p5-1-you-xu-lie-biao" class="header-anchor">#</a></h4><p>有序列表则使用数字接着一个英文句点。如：</p><blockquote><ol><li>苹果</li><li>番茄</li><li>香蕉</li></ol></blockquote><h4><span id="p5-2-wu-xu-lie-biao">5.2 无序列表</span><a href="#p5-2-wu-xu-lie-biao" class="header-anchor">#</a></h4><p>无序列表使用<code>*</code>号、<code>+</code>号或是<code>-</code>号作为列表标记。如：</p><blockquote><ul><li>苹果</li><li>番茄</li><li>香蕉</li></ul></blockquote><h3><span id="p6-dai-ma-kuai">6、代码块</span><a href="#p6-dai-ma-kuai" class="header-anchor">#</a></h3><h4><span id="p6-1-xing-nei-dai-ma">6.1 行内代码</span><a href="#p6-1-xing-nei-dai-ma" class="header-anchor">#</a></h4><p>行内代码区块用一对<code>反引号</code>把它包起来。如：</p><blockquote><p>这是一句<code>话</code>。</p></blockquote><h4><span id="p6-2-pu-tong-dai-ma-kuai">6.2 普通代码块</span><a href="#p6-2-pu-tong-dai-ma-kuai" class="header-anchor">#</a></h4><p><strong>Markdown</strong> 中建立代码块只要简单地缩进4个空格或是1个制表符就可以。也可以用三个反引号包围起来。<br>在前面后加语言名称可以加强代码的显示。如：</p><pre class="line-numbers language-c" data-language="c"><code class="language-c">printf(&quot;Hello World!&quot;)<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><h3><span id="p7-lian-jie">7、链接</span><a href="#p7-lian-jie" class="header-anchor">#</a></h3><h4><span id="p7-1-zi-dong-lian-jie">7.1 自动链接</span><a href="#p7-1-zi-dong-lian-jie" class="header-anchor">#</a></h4><p><strong>Markdown</strong> 支持直接黏贴链接地址，Markdown就会自动把它转成链接。如果不能识别则使用尖括号括起来即可。</p><h4><span id="p7-2-xing-nei-shi-lian-jie">7.2 行内式链接</span><a href="#p7-2-xing-nei-shi-lian-jie" class="header-anchor">#</a></h4><p>要建立一个行内式的链接，只要在方块括号后面紧接着圆括号并插入网址链接即可，如果你还想要加上链接的 title 文字，只要在网址后面，用双引号把 title 文字包起来即可。如：</p><pre class="line-numbers language-markdown" data-language="markdown"><code class="language-markdown">这是一个 [链接](http:&#x2F;&#x2F;example.com&#x2F; &quot;这是链接&quot;) 。<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>渲染为：<br>这是一个 <a href="http://example.com/" title="这是链接">链接</a> 。</p><h4><span id="p7-3-can-kao-shi-lian-jie">7.3 参考式链接</span><a href="#p7-3-can-kao-shi-lian-jie" class="header-anchor">#</a></h4><p>参考式的链接是在链接文字的括号后面再接上另一个方括号，而在第二个方括号里面要填入用以辨识链接的标记。如：</p><pre class="line-numbers language-markdown" data-language="markdown"><code class="language-markdown">这是一个 [链接][id]。[id]: http:&#x2F;&#x2F;example.com&#x2F;  &quot;这是链接&quot;<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span></span></code></pre><p>渲染为：<br>这是一个 <a href="http://example.com/" title="这是链接">链接</a>。</p><h3><span id="p8-qiang-diao">8、强调</span><a href="#p8-qiang-diao" class="header-anchor">#</a></h3><h4><span id="p8-1-jia-cu">8.1 加粗</span><a href="#p8-1-jia-cu" class="header-anchor">#</a></h4><p>用两个 <code>*</code> 或 <code>_</code> 包起来的话，就是加粗。</p><h4><span id="p8-2-xie-ti">8.2 斜体</span><a href="#p8-2-xie-ti" class="header-anchor">#</a></h4><p>使用一个星号<code>*</code>和底线<code>_</code>包起来，就是斜体。</p><h4><span id="p8-3-xia-hua-xian">8.3 下划线</span><a href="#p8-3-xia-hua-xian" class="header-anchor">#</a></h4><p><strong>Markdown</strong> 并无直接出现下划线的语法，可以使用HTML的<code>&lt;u&gt;</code>和<code>&lt;/u&gt;</code>实现。</p><h4><span id="p8-4-shan-chu-wen-ben">8.4 删除文本</span><a href="#p8-4-shan-chu-wen-ben" class="header-anchor">#</a></h4><p>删除文本使用两个<code>~</code>包围起来实现。</p><h3><span id="p9-tu-pian">9、图片</span><a href="#p9-tu-pian" class="header-anchor">#</a></h3><p>插入图片和链接很像，区别在于前面一个<code>!</code>。</p><h4><span id="p9-1-xing-nei-shi-tu-pian">9.1 行内式图片</span><a href="#p9-1-xing-nei-shi-tu-pian" class="header-anchor">#</a></h4><p>一个惊叹号 <code>!</code>。接着一个方括号，里面放上图片的替代文字。接着一个普通括号，里面放上图片的网址，最后还可以用引号包住并加上选择性的 ‘title’ 文字。如：</p><pre class="line-numbers language-markdown" data-language="markdown"><code class="language-markdown">![](img&#x2F;test.jpg)<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>渲染为：<br><img src="/181003/test.jpg" alt></p><h4><span id="p9-2-can-kao-shi-tu-pian">9.2 参考式图片</span><a href="#p9-2-can-kao-shi-tu-pian" class="header-anchor">#</a></h4><pre class="line-numbers language-markdown" data-language="markdown"><code class="language-markdown">![][pic][pic]:img&#x2F;test.jpg<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span></span></code></pre><p>渲染为：<br><img src="/181003/test.jpg" alt></p><p>在 <strong>VSCode</strong> 里可以插入 GIF 格式图片。</p><h3><span id="p10-cha-ru-biao-ge">10、插入表格</span><a href="#p10-cha-ru-biao-ge" class="header-anchor">#</a></h3><p><strong>Markdown</strong> 中可以创建表格，如：</p><pre class="line-numbers language-none"><code class="language-none">|标题|标题|标题||:---|:---:|---:||居左|居中123|居右||居左123|居中|居右123|<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span></span></code></pre><p>渲染为：</p><table><thead><tr><th style="text-align:left">标题</th><th style="text-align:center">标题</th><th style="text-align:right">标题</th></tr></thead><tbody><tr><td style="text-align:left">居左</td><td style="text-align:center">居中123</td><td style="text-align:right">居右</td></tr><tr><td style="text-align:left">居左123</td><td style="text-align:center">居中</td><td style="text-align:right">居右123</td></tr></tbody></table><p>在 VSCode 里安装插件后可以黏贴EXCEL格式的表格。</p><h3><span id="p11-fan-xie-gan">11、反斜杆</span><a href="#p11-fan-xie-gan" class="header-anchor">#</a></h3><p><strong>Markdown</strong> 可以利用反斜杠来插入一些在语法中有其它意义的符号。</p>]]></content>
      
      
      <categories>
          
          <category> 1810：Markdown </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Markdown </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>加密</title>
      <link href="/160201/"/>
      <url>/160201/</url>
      
        <content type="html"><![CDATA[<h1><span id="jia-mi">加密</span><a href="#jia-mi" class="header-anchor">#</a></h1><ul><li>采用非对称加密算法管理对称算法的密钥，然后用对称加密算法加密数据。</li></ul>]]></content>
      
      
      <categories>
          
          <category> 1602：加密 </category>
          
      </categories>
      
      
    </entry>
    
    
    
    <entry>
      <title>移动应用</title>
      <link href="/180501/"/>
      <url>/180501/</url>
      
        <content type="html"><![CDATA[<h1><span id="yi-dong-ying-yong">移动应用</span><a href="#yi-dong-ying-yong" class="header-anchor">#</a></h1><ul><li>什么情况下微信会显示对方正在输入中？<br>微信仅收到消息后10秒内在对话框中进行输入操作，即会显示「对方正在输入中」。因为此显示提示，可能会激起用户的兴奋度。而如果是超过10秒外的会话，可能说明对方不是很重视这段会话。故超过10秒的不显示这个状态，避免不必要的兴奋度。</li></ul>]]></content>
      
      
      <categories>
          
          <category> 1805：移动应用 </category>
          
      </categories>
      
      
    </entry>
    
    
    
    <entry>
      <title>读书笔记《亲密关系》</title>
      <link href="/630203/"/>
      <url>/630203/</url>
      
        <content type="html"><![CDATA[<h1><span id="qin-mi-guan-xi-du-shu-bi-ji">《亲密关系》读书笔记</span><a href="#qin-mi-guan-xi-du-shu-bi-ji" class="header-anchor">#</a></h1><ul><li>感觉的重要性<br>从人性上来说，我们倾向于保护自我最脆弱的部分，然而这也是造成关系冲突的主要原因。对于伤痛、需求、罪恶、害怕，以及耻辱的保护机制，在个人的过去经历中逐渐建立起来，以至于我们在情绪上，并不如身体以及智识上来的成熟。为了成为一个情感成熟的人，重要的是要突破这个保护机制，并正视我们的感觉，才能发现心灵最惊人的秘密。</li><li>【责任的重要性】<br>责怪、批评与指责是人类防御机制的关键要素。责怪他人、批评他人行为、指责他人不愿改变，其实是一种轻而易举的手段，能够简单地利用道德批判，将自己提升到一个高于他人的位置，也使我们摆脱了自身的不安。然而，责怪、批评与指责的态度最终只会加强自我的受害者意识。受害者常感到无力、无助、无价值且无法自我满足。他们的防卫机制常常是自我否定，并将自己置于一个道德正确的位置。当我们坦然面对内在的受害情绪时，我们将有机会更具有意识地正视这份感觉，并了解这仅是一种感受，而非事实。责怪、批评与指责也终将不再发生。</li><li>【绝对的爱是无条件的】<br>通常我们在亲密关系中所谓的爱，事实上是由于伴侣的行为所带来的满足感，或对于重要感与归属感的需求。真正的爱是无条件的，完全与任何情境和情势无关，无法从他人那儿获取，也非由他人的行为而触发，而是因为你就是你。一段关系的目的不是给予与接受彼此的爱，而是帮助你了解你自己就是一直以来所寻找的爱。</li><li>【伴侣的目的】<br>如同上述所说的，你的伴侣不是你的爱与幸福的来源。满足你的期待与使你开心不是他们的职责，但你的伴侣的确在你的生活中扮演了三个重要的角色，尤其在面对情感上的成熟与唤醒真实自我的时候。这时你的伴侣将会依所需而扮演这三种角色之一：一面镜子，让你看见引发你关注的不舒服感；一名老师，在你探寻真实自我的时候，激励与启发你；一名“玩伴”，开启并陪伴你一段生命的旅程。</li><li>只是他们忘了当初被吸引的原因，而只注意到对方不好的地方。</li><li>孩童的两大主要需求是归属感和确认自己的重要性。<br>珍·尼尔森博士在她的有关孩童正面教育的著作中指出，孩童的两大主要需求是归属感和确认自己的重要性。在我看来，这两项需求来自相同的根源，那就是人类共同的“爱与被爱”的需求。这些需求中最主要的就是归属感。在孩子们努力寻求归属感时，他们很快就了解到，如果想要永远被爱，并成为父母生活中重要的一部分，最好的办法就是证明自己具有特殊的价值。他们必须以显而易见的方式来证明自己，因为父母似乎不能明白，他们的价值是与生俱来的（至少孩子的心里是这么想的）。“想要变得特别”的欲望于是诞生。</li><li>通往地狱之路，是用期望铺成的。 —— 克里斯多福·孟</li><li>此时此刻，我希望从伴侣身上得到的是什么？<br>在你对亲密关系有不满意时，先问问自己：“此时此刻，我希望从伴侣身上得到的是什么？”答案应该很清楚 —— 你所需要的，往往是情绪上的事物，但从表面上看来可能像是实质的需求，例如希望伴侣抚摸你、记得你的生日、约会时不要迟到或是陪你逛街等。我和女友约七点见面，她却八点半才来，我当然会不高兴，但真正的原因不是她迟到，而是她让我觉得自己不够特别。专注在守时这个问题上，只不过是给我一个对她发脾气的借口，而我真正的需求仍然没有得到满足。当我自问：“我真正想要她给我的是什么？”我才发现，我希望她让我觉得自己很重要，重要到她应该愿意为了我而守时，甚至早到！（很巧，当我了解到我不需要她以守时来证明我的重要性的时候，她也开始不再迟到了。）</li><li>一切都取决于你的意向。<br>如果你愿意放手，就有机会发现，你所需要的一切，其实都存在于你的心里，不假外求。如果你不愿意放手，那就请做好心理准备来面对更糟的情形。因为不被满足的期望，迟早会变成愤恨，让你和伴侣渐行渐远。在你能察觉之前，早已置身于通往地狱的路上了。</li><li>最初你被某人吸引，通常是由于情绪上的需求。<br>这些需求大都源自孩提时代未被满足的需要。幼儿的两大主要需求是归属感和确认自己的重要性。幼时的需求便是构筑梦中情人蓝图的骨架。你相信这个梦中情人会满足你所有的需求，尤其是想当特别的人的需求。随着年龄增长，梦中情人的蓝图变得愈来愈复杂，你的期望也愈来愈高。你会以梦中情人所拥有的特质作为寻觅伴侣的准则。在潜意识中，你把准情人和梦中情人相比，选出和梦中情人最相似的作为你追求的目标。接着你便借由明说或暗示的期望与要求，着手将选中的人改造成你的理想情人。你相信只要伴侣能变得和你的梦中情人一样，你就能得到渴望许久的爱。你不断地向情人提出要求，心想如果他/她“真的爱我”，就一定会顺从。你终究会发现，需求并不能完全得到满足，因而感到失望，甚至愤恨。如果你感到愤恨，这就代表月晕现象的第一阶段已经结束了，你进入了亲密关系的第二阶段——幻灭。</li><li>想要安全度过“月晕现象”阶段，你就要学习放手和接受。<br>如果你能不把自己的需求强加在伴侣身上，你就能在自己内心找到你真正需要的事物。摆脱了需求的束缚，你就能感受到纯粹的爱。然后，你能和情人分享的事情就更多了。另外，学着接纳你的伴侣（但并不是滥用忍耐力），也能让你学习到接纳本来的自我，而不再认为你需要些什么来让自己变得完整。学会放手和接纳之后，你一定会明白，你原本就是一个完整的个体，<strong>所需要的一切，都存在于你心中。</strong></li></ul>]]></content>
      
      
      <categories>
          
          <category> 6302：亲密关系 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 读书笔记 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>国家</title>
      <link href="/580201/"/>
      <url>/580201/</url>
      
        <content type="html"><![CDATA[]]></content>
      
      
      <categories>
          
          <category> 2802：国家 </category>
          
      </categories>
      
      
    </entry>
    
    
    
    <entry>
      <title>CSS库</title>
      <link href="/211101/"/>
      <url>/211101/</url>
      
        <content type="html"><![CDATA[<h1><span id="css-ku">CSS库</span><a href="#css-ku" class="header-anchor">#</a></h1><h2><span id="pfont-awesome">Font Awesome</span><a href="#pfont-awesome" class="header-anchor">#</a></h2><p><a href="https://fontawesome.dashgame.com/">Font Awesome</a><br>一套绝佳的图标字体库和CSS框架。</p>]]></content>
      
      
      <categories>
          
          <category> 2111：CSS库 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> CSS </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>模板引擎</title>
      <link href="/280601/"/>
      <url>/280601/</url>
      
        <content type="html"><![CDATA[<h1><span id="mo-ban-yin-qing">模板引擎</span><a href="#mo-ban-yin-qing" class="header-anchor">#</a></h1><ul><li><code>Jade</code></li><li><code>EJS</code></li><li><code>swig</code></li></ul>]]></content>
      
      
      <categories>
          
          <category> 2806：模板引擎 </category>
          
      </categories>
      
      
    </entry>
    
    
    
    <entry>
      <title>Hexo 添加自定义属性</title>
      <link href="/181804/"/>
      <url>/181804/</url>
      
        <content type="html"><![CDATA[<h1><span id="hexo-tian-jia-zi-ding-yi-shu-xing">Hexo 添加自定义属性</span><a href="#hexo-tian-jia-zi-ding-yi-shu-xing" class="header-anchor">#</a></h1><p>通过在 <code>Front Matter</code> 中添加自定义属性。</p>]]></content>
      
      
      <categories>
          
          <category> 1818：Hexo </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Hexo </tag>
            
            <tag> UPDATE </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Hexo 随机跳转文章</title>
      <link href="/181803/"/>
      <url>/181803/</url>
      
        <content type="html"><![CDATA[<h1><span id="hexo-sui-ji-tiao-zhuan-wen-zhang">Hexo 随机跳转文章</span><a href="#hexo-sui-ji-tiao-zhuan-wen-zhang" class="header-anchor">#</a></h1><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash">npm i object-assignnpm i hexo-generator-randomhexo cleanhexo g<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span></span></code></pre><p>如果在 public 目录看到 random.html 文件，说明功能正常<br>之后只要调用 <code>/random</code> 即可实现随机跳转（只能跳你设置好的正式地址，无法跳转到 <code>localhost</code> 相关地址），建议是添加一个新的菜单页</p><h2><span id="pcan-kao">参考</span><a href="#pcan-kao" class="header-anchor">#</a></h2><p><a href="https://cndrew.cn/2019/10/19/plugin/">https://cndrew.cn/2019/10/19/plugin/</a></p>]]></content>
      
      
      <categories>
          
          <category> 1818：Hexo </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Hexo </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>学习管理</title>
      <link href="/640201/"/>
      <url>/640201/</url>
      
        <content type="html"><![CDATA[<h1><span id="xue-xi">学习</span><a href="#xue-xi" class="header-anchor">#</a></h1><h2><span id="pyi-xue-xi-fang-shi">一、学习方式</span><a href="#pyi-xue-xi-fang-shi" class="header-anchor">#</a></h2><h3><span id="p1-qian-ti">1、前提</span><a href="#p1-qian-ti" class="header-anchor">#</a></h3><p>学习首先是自信心，利用20小时就可以学习一门大学教材。</p><h3><span id="p2-xue-xi-de-guo-cheng">2、学习的过程</span><a href="#p2-xue-xi-de-guo-cheng" class="header-anchor">#</a></h3><p>学习分为预学习和正式学习。</p><h4><span id="p2-1-yu-xue-xi">2.1 预学习</span><a href="#p2-1-yu-xue-xi" class="header-anchor">#</a></h4><p>预学习，开始学习的学习仪式感。<br>预备，确定学习主题。<br>预热，物质准备，精神准备，环境准备。<br>静静等待。</p><h4><span id="p2-2-zheng-shi-xue-xi">2.2 正式学习</span><a href="#p2-2-zheng-shi-xue-xi" class="header-anchor">#</a></h4><ul><li>初阅：<br>看目录，大概了解。<br>看课后习题，术语 = 知识点。<br><code>配合最少量的文字看懂案例、图表，就达到了对知识的了解。</code></li><li>再阅：正式学习，补充，偏差修正。</li><li>回顾：刚刚主要学了什么？</li><li>练习：刻意练习的重要性。</li><li>测试与检验。</li></ul><h2><span id="p3-xue-xi-ji-qiao">3、学习技巧</span><a href="#p3-xue-xi-ji-qiao" class="header-anchor">#</a></h2><ul><li>高潮停顿的技巧。</li><li>惯性原理：静止的倾向于静止，运动的倾向于运动。</li></ul><h2><span id="p4-zhu-yi-shi-xiang">4、注意事项</span><a href="#p4-zhu-yi-shi-xiang" class="header-anchor">#</a></h2><ul><li>注意需要很好的放松，不然一段时间后会有瓶颈和临界状态。</li><li>能量分为身体能量和情绪能量。情绪能量低，自控力也低。如何恢复情绪能量：放松。</li><li>注意倦怠感的释放，它会积累。</li></ul><h2><span id="per-xue-xi-de-guan-dian">二、学习的观点</span><a href="#per-xue-xi-de-guan-dian" class="header-anchor">#</a></h2><ul><li>工具不能代替学习。<br>工具应该是用来提供帮助的，用来帮助防止已知错误的，并帮助我们记住重复的任务，而不是取代思考。</li><li>学习的必要经过是犯错误。</li><li>学习或研究一门新的知识时，最好的办法就是去学习这一方面成功人士的方法或系统，然后根据自己的情况进行调整，形成自己的系统，再不断实践并改进。</li><li>与其花费一万小时，不如在重难点上花费一百小时。</li><li>学习与体能的关系：更好的体能等于更好的注意力。</li></ul>]]></content>
      
      
      <categories>
          
          <category> 6402：学习管理 </category>
          
      </categories>
      
      
    </entry>
    
    
    
    <entry>
      <title>MathJax</title>
      <link href="/181007/"/>
      <url>/181007/</url>
      
        <content type="html"><![CDATA[<h1><span id="mathjax">MathJax</span><a href="#mathjax" class="header-anchor">#</a></h1><p>在Markdown中输入数学公式需要LaTeX语法的支持。</p><h2><span id="pyi-ji-ben-yu-fa">一、基本语法</span><a href="#pyi-ji-ben-yu-fa" class="header-anchor">#</a></h2><h3><span id="p1-cheng-xian-wei-zhi">1. 呈现位置</span><a href="#p1-cheng-xian-wei-zhi" class="header-anchor">#</a></h3><p>在行内显示用<code>$</code>包围，单独显示用<code>$$</code>包围。</p><h3><span id="p2-shang-biao-he-xia-biao">2. 上标和下标</span><a href="#p2-shang-biao-he-xia-biao" class="header-anchor">#</a></h3><p>上标使用<code>^</code>，下标使用<code>_</code>。</p><h3><span id="p3-fen-shi-he-gen-shi">3. 分式和根式</span><a href="#p3-fen-shi-he-gen-shi" class="header-anchor">#</a></h3><h4><span id="p3-1-fen-shi">3.1 分式</span><a href="#p3-1-fen-shi" class="header-anchor">#</a></h4><p>分式格式为<code>\frac&#123;a&#125;&#123;b</code>，呈现为</p><blockquote><p>$\frac{a}{b}$</p></blockquote><h4><span id="p3-2-gen-shi">3.2 根式</span><a href="#p3-2-gen-shi" class="header-anchor">#</a></h4><p>根式格式为<code>\sqrt[x]&#123;y&#125;</code>，呈现为：</p><blockquote><p>$\sqrt[x]{y}$</p></blockquote><h3><span id="p4-fen-zu-he-gua-hao">4. 分组和括号</span><a href="#p4-fen-zu-he-gua-hao" class="header-anchor">#</a></h3><h4><span id="p4-1-fen-zu">4.1 分组</span><a href="#p4-1-fen-zu" class="header-anchor">#</a></h4><p>使用<code>&#123;&#125;</code>将具有相同等级的内容扩入其中，成组处理。</p><blockquote><p>举例：<code>10^&#123;10&#125;</code>呈现为$10<sup>{10}$，而`10^10`呈现为$10</sup>10$。</p></blockquote><h4><span id="p4-2-gua-hao">4.2 括号</span><a href="#p4-2-gua-hao" class="header-anchor">#</a></h4><ul><li>小括号：<code>()</code>呈现为$()$</li><li>中括号：<code>[]</code>呈现为$[]$</li><li>尖括号：<code>\langle</code>，<code>\rangle</code>呈现为$\langle \rangle$</li><li>此处为与分组符号<code>&#123;&#125;</code>相区别，使用转义字符<code>\</code></li></ul><h3><span id="p5-qiu-he-ji-xian-yu-ji-fen">5. 求和、极限与积分</span><a href="#p5-qiu-he-ji-xian-yu-ji-fen" class="header-anchor">#</a></h3><h4><span id="p5-1-qiu-he">5.1 求和</span><a href="#p5-1-qiu-he" class="header-anchor">#</a></h4><p>求和用<code>\sum</code>。</p><blockquote><p>例：<code>\sum_&#123;i=1&#125;^n&#123;a_i&#125;</code>呈现为$\sum_{i=1}^n{a_i}$</p></blockquote><h4><span id="p5-2-ji-xian">5.2 极限</span><a href="#p5-2-ji-xian" class="header-anchor">#</a></h4><p>极限用<code>\lim</code>。</p><blockquote><p>例：<code>y=\lim_&#123;x\to 0&#125;^&#123;x&#125;</code>呈现为$y=\lim_{x\to 0}^{x}$</p></blockquote><h4><span id="p5-3-ji-fen">5.3 积分</span><a href="#p5-3-ji-fen" class="header-anchor">#</a></h4><p>积分用<code>\int</code>。</p><blockquote><p>例：<code>\int_0^\infty&#123;xdx&#125;</code>呈现为$\int_0^\infty{xdx}$。</p></blockquote><h3><span id="p6-xian-xing-dai-shu">6. 线性代数</span><a href="#p6-xian-xing-dai-shu" class="header-anchor">#</a></h3><h4><span id="p6-1-xiang-liang">6.1 向量</span><a href="#p6-1-xiang-liang" class="header-anchor">#</a></h4><p>向量用<code>\vec</code>，<code>\overrightarrow</code>呈现。</p><blockquote><p>例：</p><ul><li><code>\vec a</code>呈现为$\vec a$</li><li><code>\overrightarrow&#123;AB&#125;</code>呈现为$\overrightarrow{AB}$</li></ul></blockquote><h4><span id="p6-2-ju-zhen">6.2 矩阵</span><a href="#p6-2-ju-zhen" class="header-anchor">#</a></h4><h5><span id="pa-ji-ben">a. 基本</span><a href="#pa-ji-ben" class="header-anchor">#</a></h5><ul><li>起始标记<code>\begin&#123;matrix&#125;</code>，结束标记<code>\end&#123;matrix&#125;</code></li><li>每一行末尾标记<code>\\</code>，行间元素之间以<code>&amp;</code>分隔</li><li>举例</li></ul><pre class="line-numbers language-none"><code class="language-none">$$\begin&#123;matrix&#125;1&amp;0&amp;0\\0&amp;1&amp;0\\0&amp;0&amp;1\\\end&#123;matrix&#125;$$<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span></span></code></pre><ul><li>呈现为：<br>$$\begin{matrix}<br>1&amp;0&amp;0\<br>0&amp;1&amp;0\<br>0&amp;0&amp;1\<br>\end{matrix}$$</li></ul><h5><span id="pb-bian-kuang">b. 边框</span><a href="#pb-bian-kuang" class="header-anchor">#</a></h5><p>在起始、结束标记处用下列词替换<code>matrix</code>。</p><ul><li><code>pmatrix</code>：小括号边框</li><li><code>bmatrix</code>：中括号边框</li><li><code>Bmatrix</code>：大括号边框</li><li><code>vmatrix</code>：单竖线边框</li><li><code>Vmatrix</code>：双竖线边框</li></ul><h5><span id="pb-sheng-lue-yuan-su">b. 省略元素</span><a href="#pb-sheng-lue-yuan-su" class="header-anchor">#</a></h5><ul><li>横省略号：<code>\cdots</code></li><li>竖省略号：<code>\vdots</code></li><li>斜省略号：<code>\ddots</code></li><li>举例：</li></ul><pre class="line-numbers language-none"><code class="language-none">$$\begin&#123;bmatrix&#125;&#123;a_&#123;11&#125;&#125;&amp;&#123;a_&#123;12&#125;&#125;&amp;&#123;\cdots&#125;&amp;&#123;a_&#123;1n&#125;&#125;\\&#123;a_&#123;21&#125;&#125;&amp;&#123;a_&#123;22&#125;&#125;&amp;&#123;\cdots&#125;&amp;&#123;a_&#123;2n&#125;&#125;\\&#123;\vdots&#125;&amp;&#123;\vdots&#125;&amp;&#123;\ddots&#125;&amp;&#123;\vdots&#125;\\&#123;a_&#123;m1&#125;&#125;&amp;&#123;a_&#123;m2&#125;&#125;&amp;&#123;\cdots&#125;&amp;&#123;a_&#123;mn&#125;&#125;\\\end&#123;bmatrix&#125;$$<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><ul><li>呈现为：<br>$$\begin{bmatrix}<br>{a_{11}}&amp;{a_{12}}&amp;{\cdots}&amp;{a_{1n}}\<br>{a_{21}}&amp;{a_{22}}&amp;{\cdots}&amp;{a_{2n}}\<br>{\vdots}&amp;{\vdots}&amp;{\ddots}&amp;{\vdots}\<br>{a_{m1}}&amp;{a_{m2}}&amp;{\cdots}&amp;{a_{mn}}\<br>\end{bmatrix}$$</li></ul><h4><span id="p6-3-fang-cheng-zu">6.3 方程组</span><a href="#p6-3-fang-cheng-zu" class="header-anchor">#</a></h4><ul><li>需要cases环境：起始、结束处以<code>&#123;cases&#125;</code>声明。</li><li>例：</li></ul><pre class="line-numbers language-none"><code class="language-none">$$\begin&#123;cases&#125;a_1x+b_1y+c_1z&#x3D;d_1\\a_2x+b_2y+c_2z&#x3D;d_2\\a_3x+b_3y+c_3z&#x3D;d_3\\\end&#123;cases&#125;$$<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><ul><li>呈现为：<br>$$\begin{cases}<br>a_1x+b_1y+c_1z=d_1\<br>a_2x+b_2y+c_2z=d_2\<br>a_3x+b_3y+c_3z=d_3\<br>\end{cases}<br>$$</li></ul><h2><span id="per-kuo-zhan">二、扩展</span><a href="#per-kuo-zhan" class="header-anchor">#</a></h2><h3><span id="p1-xi-la-zi-mu-de-shu-ru">1. 希腊字母的输入</span><a href="#p1-xi-la-zi-mu-de-shu-ru" class="header-anchor">#</a></h3><table><thead><tr><th style="text-align:center">显示</th><th style="text-align:center">命令</th><th style="text-align:center">显示</th><th style="text-align:center">命令</th></tr></thead><tbody><tr><td style="text-align:center">α</td><td style="text-align:center">\alpha</td><td style="text-align:center">β</td><td style="text-align:center">\beta</td></tr><tr><td style="text-align:center">γ</td><td style="text-align:center">\gamma</td><td style="text-align:center">δ</td><td style="text-align:center">\delta</td></tr><tr><td style="text-align:center">ε</td><td style="text-align:center">\epsilon</td><td style="text-align:center">ζ</td><td style="text-align:center">\zeta</td></tr><tr><td style="text-align:center">η</td><td style="text-align:center">\eta</td><td style="text-align:center">θ</td><td style="text-align:center">\theta</td></tr><tr><td style="text-align:center">ι</td><td style="text-align:center">\iota</td><td style="text-align:center">κ</td><td style="text-align:center">\kappa</td></tr><tr><td style="text-align:center">λ</td><td style="text-align:center">\lambda</td><td style="text-align:center">μ</td><td style="text-align:center">\mu</td></tr><tr><td style="text-align:center">ν</td><td style="text-align:center">\nu</td><td style="text-align:center">ξ</td><td style="text-align:center">\xi</td></tr><tr><td style="text-align:center">π</td><td style="text-align:center">\pi</td><td style="text-align:center">ρ</td><td style="text-align:center">\rho</td></tr><tr><td style="text-align:center">σ</td><td style="text-align:center">\sigma</td><td style="text-align:center">τ</td><td style="text-align:center">\tau</td></tr><tr><td style="text-align:center">υ</td><td style="text-align:center">\upsilon</td><td style="text-align:center">φ</td><td style="text-align:center">\phi</td></tr><tr><td style="text-align:center">χ</td><td style="text-align:center">\chi</td><td style="text-align:center">ψ</td><td style="text-align:center">\psi</td></tr></tbody></table><ul><li>若需要大写希腊字母，将命令首字母大写即可。</li><li>若需要斜体希腊字母，将命令前加上<code>var</code>前缀即可。</li></ul><h3><span id="p2-te-shu-fu-hao">2. 特殊符号</span><a href="#p2-te-shu-fu-hao" class="header-anchor">#</a></h3><table><thead><tr><th style="text-align:center">显示</th><th style="text-align:center">命令</th></tr></thead><tbody></tbody></table><p>(待补充)</p><h3><span id="p3-han-shu-de-cheng-xian">3. 函数的呈现</span><a href="#p3-han-shu-de-cheng-xian" class="header-anchor">#</a></h3><ul><li><code>\函数名</code></li><li>举例：<code>\sin x</code>，<code>\ln x</code>，<code>\max(A,B,C)</code>呈现为：</li></ul><blockquote><p>$\sin x$<br>$\ln x$<br>$\max(A,B,C)$</p></blockquote><h3><span id="p4-zi-ti">4. 字体</span><a href="#p4-zi-ti" class="header-anchor">#</a></h3><ul><li>Typewriter：<code>\mathtt&#123;A&#125;</code>呈现为$\mathtt{ABCDEFG}$</li><li>Blackboard Bold：<code>\mathbb&#123;A&#125;</code>呈现为$\mathbb{ABCDEFG}$</li><li>Sans Serif：<code>\mathsf&#123;A&#125;</code>呈现为$\mathsf{ABCDEFG}$</li></ul><h2><span id="pcan-kao">参考</span><a href="#pcan-kao" class="header-anchor">#</a></h2><blockquote><p><a href="https://blog.csdn.net/ethmery/article/details/50670297">https://blog.csdn.net/ethmery/article/details/50670297</a>)<br><a href="https://blog.csdn.net/garfielder007/article/details/51646604">https://blog.csdn.net/garfielder007/article/details/51646604</a></p></blockquote>]]></content>
      
      
      <categories>
          
          <category> 1810：Markdown </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Markdown </tag>
            
            <tag> mathjax </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>武神传说脚本开发指南</title>
      <link href="/720102/"/>
      <url>/720102/</url>
      
        <content type="html"><![CDATA[<h1><span id="jiao-ben-kai-fa-zhi-nan">脚本开发指南</span><a href="#jiao-ben-kai-fa-zhi-nan" class="header-anchor">#</a></h1><p>v0.1</p><p>本指南基于 <code>wsmud_pluginss</code> <code>wsmud_Raid</code> <code>wsmud_Trigger</code></p><h2><span id="pyi-kai-shi">一、开始</span><a href="#pyi-kai-shi" class="header-anchor">#</a></h2><p>1、安装 Tampermonkey</p><p>在你的火狐浏览器或者谷歌浏览器上安装 <a href="https://addons.mozilla.org/zh-CN/firefox/search/?q=Tampermonkey">Tampermonkey</a> 扩展组件。</p><p>2、依次安装以下脚本</p><ul><li><p><a href="https://greasyfork.org/zh-CN/scripts/371372-wsmud-pluginss">wsmud_pluginss</a></p></li><li><p><a href="https://greasyfork.org/zh-CN/scripts/375851-wsmud-raid">wsmud_Raid</a></p></li><li><p><a href="https://greasyfork.org/zh-CN/scripts/378984-wsmud-trigger">wsmud_Trigger</a></p></li></ul><h2><span id="per-can-kao">二、参考</span><a href="#per-can-kao" class="header-anchor">#</a></h2><ul><li><p><a href="http://wsmud.bobcn.me/topic/6/wsmud_raid-2-3-x-%E8%87%AA%E5%AE%9A%E4%B9%89%E5%B7%A5%E4%BD%9C%E6%B5%81%E7%A8%8B%E5%BC%80%E5%8F%91%E6%8C%87%E5%8D%97">开发指南</a> | <a href="http://wsmud.bobcn.me/category/8">更新日志</a></p></li><li><p>三三大佬的 <a href="https://github.com/mapleobserver/wsmud-script/">Github</a> | <a href="https://gitee.com/mapleobserver/wsmud-script">Gitee</a></p></li></ul><h2><span id="psan-di-yi-ge-liu-cheng-hong-fa-qi">三、第一个流程 / 触发器</span><a href="#psan-di-yi-ge-liu-cheng-hong-fa-qi" class="header-anchor">#</a></h2><h3><span id="p1-di-yi-ge-liu-cheng">1、第一个流程</span><a href="#p1-di-yi-ge-liu-cheng" class="header-anchor">#</a></h3><p>新建一个流程，输入以下内容，输入流程名称 `first ，保存</p><pre class="line-numbers language-js" data-language="js"><code class="language-js"><span class="token comment">// flow</span>tm Hello World<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre><p>运行后队伍消息出现 <code>Hello World</code> 即运行成功。</p><h3><span id="p2-di-yi-ge-hong-fa-qi">2、第一个触发器</span><a href="#p2-di-yi-ge-hong-fa-qi" class="header-anchor">#</a></h3><p>新建一个触发器，类型选<code>新聊天信息</code> ，输入触发器名称 <code>first</code></p><p>频道选 <code>队伍</code> 发言人留空 关键字为 <code>hello</code></p><pre class="line-numbers language-js" data-language="js"><code class="language-js"><span class="token comment">// trigger</span><span class="token comment">// 类型 新聊天消息触发器</span><span class="token comment">// 频道 队伍</span><span class="token comment">// 发言人</span><span class="token comment">// 关键字 hello</span>tm trigger success<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>保存并启用这个触发器</p><p>在聊天频道输入 <code>hello</code> 并发送</p><p>如果出现提示 <code>触发=&gt;first</code> 队伍消息出现  <code>trigger success</code> 则表示触发器构建成功。</p><h2><span id="psi-ji-ben-yu-ju">四、基本语句</span><a href="#psi-ji-ben-yu-ju" class="header-anchor">#</a></h2><h3><span id="p1-zhu-shi">1、注释</span><a href="#p1-zhu-shi" class="header-anchor">#</a></h3><h2><span id="pwu-zhi-ling">五、指令</span><a href="#pwu-zhi-ling" class="header-anchor">#</a></h2><p>流程和触发器所有的内容都可以拆分成各种指令和占位符参数</p><p>指令分为<strong>系统指令</strong>、<strong>$指令</strong>、<strong>@指令</strong></p><h3><span id="p1-xi-tong-zhi-ling">1、系统指令</span><a href="#p1-xi-tong-zhi-ling" class="header-anchor">#</a></h3><p>这是系统原生提供的指令。</p><p>具体的指令看附录1</p><h3><span id="p2-zhi-ling">2、$指令</span><a href="#p2-zhi-ling" class="header-anchor">#</a></h3><p>是指<code>$</code> 开头的指令，一般是由多条系统指令组合而成。</p><p>具体的指令看附录2</p><h3><span id="p3-bing-fa-zhi-xing-xi-tong-zhi-ling">3、并发执行系统指令</span><a href="#p3-bing-fa-zhi-xing-xi-tong-zhi-ling" class="header-anchor">#</a></h3><p>多条系统指令 (及 $指令) 可用 <code>;</code> 连接成为一条<strong>语句</strong>，一条语句中的系统指令会同时执行。</p><p>同时执行太多系统指令会导致服务器拒绝执行（目测好像是一秒二十条）。</p><h3><span id="p4-jian-xie-xi-tong-zhi-ling">4、简写系统指令</span><a href="#p4-jian-xie-xi-tong-zhi-ling" class="header-anchor">#</a></h3><p>可以在系统指令后跟随 <code>[数字]</code>，表示该语句重复的次数，例如：</p><pre class="line-numbers language-js" data-language="js"><code class="language-js">go west<span class="token punctuation">[</span><span class="token number">3</span><span class="token punctuation">]</span><span class="token punctuation">;</span>go northgo west<span class="token punctuation">;</span>go west<span class="token punctuation">;</span>go west<span class="token punctuation">;</span>go north<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre><p>上述的两条语句是等价的。</p><h2><span id="pliu-zhan-wei-fu-can-shu">六、占位符参数</span><a href="#pliu-zhan-wei-fu-can-shu" class="header-anchor">#</a></h2><h2><span id="pqi-bian-liang">七、变量</span><a href="#pqi-bian-liang" class="header-anchor">#</a></h2><h2><span id="pba-suan-zhu-yun-suan">八、算术运算</span><a href="#pba-suan-zhu-yun-suan" class="header-anchor">#</a></h2><h2><span id="pjiu-tiao-jian-kong-zhi-yu-xun-huan-kong-zhi">九、条件控制与循环控制</span><a href="#pjiu-tiao-jian-kong-zhi-yu-xun-huan-kong-zhi" class="header-anchor">#</a></h2><h2><span id="pshi-qi-ta">十、其他</span><a href="#pshi-qi-ta" class="header-anchor">#</a></h2><h3><span id="p1-shi-yong-js-yu-fa">1、使用js语法</span><a href="#p1-shi-yong-js-yu-fa" class="header-anchor">#</a></h3><h3><span id="p2-zi-liu-cheng">2、子流程</span><a href="#p2-zi-liu-cheng" class="header-anchor">#</a></h3><h3><span id="p3-shou-hu-yu-ju">3、守护语句</span><a href="#p3-shou-hu-yu-ju" class="header-anchor">#</a></h3><h2><span id="pshi-zhan-zhi-wu-feng-hun-mi">实战之无缝昏迷</span><a href="#pshi-zhan-zhi-wu-feng-hun-mi" class="header-anchor">#</a></h2><h2><span id="pshi-zhan-zhi-wu-feng-mang-luan">实战之无缝忙乱</span><a href="#pshi-zhan-zhi-wu-feng-mang-luan" class="header-anchor">#</a></h2><h2><span id="pshi-zhan-zhi-jian-dan-ban-ri-chang-liu-cheng">实战之简单版日常流程</span><a href="#pshi-zhan-zhi-jian-dan-ban-ri-chang-liu-cheng" class="header-anchor">#</a></h2><h2><span id="pshi-zhan-zhi-jian-dan-de-liao-tian-ji-qi-ren">实战之简单的聊天机器人</span><a href="#pshi-zhan-zhi-jian-dan-de-liao-tian-ji-qi-ren" class="header-anchor">#</a></h2><h2><span id="pshi-zhan-zhi-zi-dong-xiang-yang-sao-qiang">实战之自动襄阳扫墙</span><a href="#pshi-zhan-zhi-zi-dong-xiang-yang-sao-qiang" class="header-anchor">#</a></h2><h2><span id="pshi-zhan-zhi-zi-dong-qing-bao-hong-fa-qi">实战之自动清包触发器</span><a href="#pshi-zhan-zhi-zi-dong-qing-bao-hong-fa-qi" class="header-anchor">#</a></h2><h2><span id="pshi-zhan-zhi-zi-dong-bang-zhan-liu-cheng">实战之自动帮战流程</span><a href="#pshi-zhan-zhi-zi-dong-bang-zhan-liu-cheng" class="header-anchor">#</a></h2><h2><span id="pfu-1-xi-tong-zhi-ling-yi-lan">附1 系统指令一览</span><a href="#pfu-1-xi-tong-zhi-ling-yi-lan" class="header-anchor">#</a></h2><h2><span id="pfu-2-zhi-ling-yi-lan">附2 $指令一览</span><a href="#pfu-2-zhi-ling-yi-lan" class="header-anchor">#</a></h2><h2><span id="pfu-3-zhi-ling-yi-lan">附3 @指令一览</span><a href="#pfu-3-zhi-ling-yi-lan" class="header-anchor">#</a></h2>]]></content>
      
      
      <categories>
          
          <category> 7201：游戏攻略 </category>
          
      </categories>
      
      
    </entry>
    
    
    
    <entry>
      <title>游戏攻略</title>
      <link href="/720101/"/>
      <url>/720101/</url>
      
        <content type="html"><![CDATA[]]></content>
      
      
      <categories>
          
          <category> 7201：游戏攻略 </category>
          
      </categories>
      
      
    </entry>
    
    
    
    <entry>
      <title>搜索引擎优化：robot.txt</title>
      <link href="/280402/"/>
      <url>/280402/</url>
      
        <content type="html"><![CDATA[<h1><span id="robot-txt"><code>robot.txt</code></span><a href="#robot-txt" class="header-anchor">#</a></h1><p><code>robots.txt</code> 是网站和搜索引擎的协议的纯文本文件。<br>当一个搜索引擎蜘蛛来访问站点时，它首先爬行来检查该站点根目录下是否存在 <code>robots.txt</code>，如果存在，根据文件内容来确定访问范围，如果没有，蜘蛛就沿着链接抓取。这个文件放在项目的根目录下。</p><h2><span id="p1-yun-xu-suo-you-sou-suo-yin-qing-fang-wen-wang-zhan-de-suo-you-nei-rong">1、允许所有搜索引擎访问网站的所有内容</span><a href="#p1-yun-xu-suo-you-sou-suo-yin-qing-fang-wen-wang-zhan-de-suo-you-nei-rong" class="header-anchor">#</a></h2><pre class="line-numbers language-txt" data-language="txt"><code class="language-txt">User-agent: *Disallow: <span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre><p>或者</p><pre class="line-numbers language-txt" data-language="txt"><code class="language-txt">User-agent: *Allow: &#x2F;<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre><p>注意第一个字母要大写，冒号是英文冒号。</p><h2><span id="p2-jin-zhi-suo-you-sou-suo-yin-qing-fang-wen-wang-zhan-de-suo-you-nei-rong">2、禁止所有搜索引擎访问网站的所有内容</span><a href="#p2-jin-zhi-suo-you-sou-suo-yin-qing-fang-wen-wang-zhan-de-suo-you-nei-rong" class="header-anchor">#</a></h2><pre class="line-numbers language-txt" data-language="txt"><code class="language-txt">User-agent: *Disallow: &#x2F;<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre><h2><span id="p3-jin-zhi-pa-chong-fang-wen-mou-ge-mu-lu">3、禁止爬虫访问某个目录</span><a href="#p3-jin-zhi-pa-chong-fang-wen-mou-ge-mu-lu" class="header-anchor">#</a></h2><pre class="line-numbers language-txt" data-language="txt"><code class="language-txt">User-agent: *Disallow: &#x2F;某个目录1&#x2F;Disallow: &#x2F;某个目录2&#x2F;<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span></span></code></pre><p>注意如果结尾不加<code>/</code>会视为关键字进行匹配。</p><h2><span id="pcan-kao">参考</span><a href="#pcan-kao" class="header-anchor">#</a></h2><ul><li><a href="https://blog.csdn.net/LY_Dengle/article/details/64124801?utm_medium=distribute.pc_relevant.none-task-blog-BlogCommendFromMachineLearnPai2-2.control&amp;depth_1-utm_source=distribute.pc_relevant.none-task-blog-BlogCommendFromMachineLearnPai2-2.control">robots.txt 禁止收录协议的写法</a></li></ul>]]></content>
      
      
      <categories>
          
          <category> 2804：搜索引擎优化 </category>
          
      </categories>
      
      
    </entry>
    
    
    
    <entry>
      <title>搜索引擎优化</title>
      <link href="/280401/"/>
      <url>/280401/</url>
      
        <content type="html"><![CDATA[<h1><span id="sou-suo-yin-qing-you-hua">搜索引擎优化</span><a href="#sou-suo-yin-qing-you-hua" class="header-anchor">#</a></h1><p>SEO，Search Engine Optimization，搜索引擎优化。是一种利用搜索引擎的规则提高网站在有关搜索引擎内的自然排名的技术。</p>]]></content>
      
      
      <categories>
          
          <category> 2804：搜索引擎优化 </category>
          
      </categories>
      
      
    </entry>
    
    
    
    <entry>
      <title>Mac 故障排除</title>
      <link href="/180203/"/>
      <url>/180203/</url>
      
        <content type="html"><![CDATA[<h1><span id="1-npm-an-zhuang-bao-de-shi-hou-bao-cuo-eacces-permission-denied">1、<code>npm</code> 安装包的时候报错 <code>EACCES: permission denied</code></span><a href="#1-npm-an-zhuang-bao-de-shi-hou-bao-cuo-eacces-permission-denied" class="header-anchor">#</a></h1><p>解决：使用 <code>sudo</code> 命令和 <code>--unsafe-perms</code> 参数</p>]]></content>
      
      
      <categories>
          
          <category> 1802：Mac </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Mac </tag>
            
            <tag> debug </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>JavaScript 对象的存取器属性</title>
      <link href="/220208/"/>
      <url>/220208/</url>
      
        <content type="html"><![CDATA[<h1><span id="dui-xiang-de-cun-qu-qi-shu-xing">对象的存取器属性</span><a href="#dui-xiang-de-cun-qu-qi-shu-xing" class="header-anchor">#</a></h1><p>在对象里面直接使用</p><pre class="line-numbers language-js" data-language="js"><code class="language-js"><span class="token keyword">const</span> obj <span class="token operator">=</span> <span class="token punctuation">&#123;</span>  math<span class="token operator">:</span> <span class="token number">80</span><span class="token punctuation">,</span>  chinese<span class="token operator">:</span> <span class="token number">90</span><span class="token punctuation">,</span>  <span class="token keyword">get</span> <span class="token function">total</span> <span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">&#123;</span>    <span class="token keyword">return</span> <span class="token keyword">this</span><span class="token punctuation">.</span>math <span class="token operator">+</span> <span class="token keyword">this</span><span class="token punctuation">.</span>chinese  <span class="token punctuation">&#125;</span><span class="token punctuation">,</span>  <span class="token keyword">set</span> <span class="token function">changeMath</span> <span class="token punctuation">(</span><span class="token parameter"><span class="token punctuation">[</span>v1<span class="token punctuation">,</span> v2<span class="token punctuation">]</span></span><span class="token punctuation">)</span><span class="token punctuation">&#123;</span>    <span class="token keyword">this</span><span class="token punctuation">.</span>math <span class="token operator">=</span> v1    <span class="token keyword">this</span><span class="token punctuation">.</span>chinese <span class="token operator">=</span> v2  <span class="token punctuation">&#125;</span><span class="token punctuation">&#125;</span>console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>obj<span class="token punctuation">.</span>total<span class="token punctuation">)</span> <span class="token comment">// 170</span>obj<span class="token punctuation">.</span>changeMath <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token number">100</span><span class="token punctuation">,</span> <span class="token number">100</span><span class="token punctuation">]</span>console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>obj<span class="token punctuation">.</span>total<span class="token punctuation">)</span> <span class="token comment">// 100</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>注意，在对象嵌套对象使用的时候，<code>this</code>属性是直接获取当前内部对象的属性。</p>]]></content>
      
      
      <categories>
          
          <category> 2202：ES高级 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> JavaScript </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>秦殇任务攻略</title>
      <link href="/720103/"/>
      <url>/720103/</url>
      
        <content type="html"><![CDATA[<h1><span id="xu-mu">序幕</span><a href="#xu-mu" class="header-anchor">#</a></h1><blockquote><p>你从没想过，自己堂堂的大秦太子，有一天会陷入千里亡命的境地。父皇的一纸诏书竟然要你自尽，任你挠破了头，也想不出这究竟原因何在？若非蒙恬老将军拼死掩护你逃出生天，恐怕你早已是地府的冤魂了。而此时的你心中只有一个念头：回到咸阳！<br>从上郡杀出重围，一路上秦兵围追堵截搜捕甚急，而你身上也早已是伤痕累累，血染甲袍。数天的亡命旅途让你的神经近乎于麻木，连伤口的疼痛似乎也已经感觉不到了。在赵村外，你遇到了常往军营送粮的农夫赵五夫妇，他向你指明了南去咸阳的道路，又见你衣甲鲜明太过引人注目，于是以自己的衣物相赠。你脱下血迹斑斑的盔甲，换上农夫装扮继续向南逃亡。然而就在你走后不久，秦兵追了上来，赵五隐瞒了你的行踪，不料却被秦兵发现了你的衣甲，赵五一家终于惨遭杀害。</p></blockquote><h1><span id="di-yi-zhang-chong-fan-jing-cheng">第一章 重返京城</span><a href="#di-yi-zhang-chong-fan-jing-cheng" class="header-anchor">#</a></h1><h2><span id="pyi-zhao-cun">一、赵村</span><a href="#pyi-zhao-cun" class="header-anchor">#</a></h2><h3><span id="pzhu-xian-1-1">主线1-1</span><a href="#pzhu-xian-1-1" class="header-anchor">#</a></h3><blockquote><p>沿着赵五指点的道路一路潜行，你来到了赵村。在这里居住的人大都是昔日赵国的后裔，故名赵村。你感觉到身上的伤势愈发严重，本已凝结的创口经不住一路奔波又开始流血，现在的你急需治疗和休息。从村中老人的口中得知村东住着一位名叫赵茜的姑娘，据说她是赵国武士的后代，似乎懂一些医术。找到赵茜的家，你见到一位猎户打扮的清秀少女正在院中练射术，其射法之精湛，使你不禁出口喝采。经过自我介绍，这少女正是赵茜，而你却不敢以真实姓名相告，遂自称子秦。赵茜问起受伤缘由，你托词是在村外与强盗打斗所致。于是她把你带到村外山洞疗伤。经过一段时间的静养，你的伤势已经大有好转，但积压在你心头的郁结却丝毫没有减轻。这一日，你收拾行装到村中与赵茜道别，继续向着你的目标——咸阳前进。</p></blockquote><h3><span id="pzhi-xian-1-xun-zhao-cai-pu">支线1：寻找菜谱</span><a href="#pzhi-xian-1-xun-zhao-cai-pu" class="header-anchor">#</a></h3><blockquote><p>在赵村的民居内有一位老妪，她正在寻找一本丈夫留给她的菜谱，答应帮她寻找。然后打碎屋外的菜坛找到菜谱，将菜谱交给老妪。老妪向你表示感谢，回答有两个选项：选择索要报酬，老妪会告诉你他家有一把宝剑藏在后院，如果找到就可以拿走；选择<strong>不要报酬</strong>，老妪会告诉你藏宝剑的准确位置。之后在民居后面的井中可以找到宝剑。<br>任务奖励：150经验值、<strong>12级武器</strong>、1点声望。</p></blockquote><h3><span id="pzhi-xian-2-bang-xi-hu-na-jie-yao">支线2：帮猎户拿解药</span><a href="#pzhi-xian-2-bang-xi-hu-na-jie-yao" class="header-anchor">#</a></h3><blockquote><p>在村中遇到猎户，通过仔细打量对方，发现猎户的右臂上有一个很小的伤口，似乎是被什么毒虫咬伤的。猎户发现自己没有带解毒药，而毒性的迅速发作使他无法移动，于是他请求你帮他回家拿解药。猎户的家在村子东南角，院中有一棵大树。在他家中找到解毒药，将解毒药交给他，任务完成。如果选择索要报酬，任务完成后得到虎皮；不要报酬则得到经验值。<br>任务奖励：150点经验值或虎皮。</p></blockquote><h3><span id="pzhi-xian-3-xun-zhao-li-xiang-jia-yuan-you-hou-xu">支线3：寻找理想家园(有后续)</span><a href="#pzhi-xian-3-xun-zhao-li-xiang-jia-yuan-you-hou-xu" class="header-anchor">#</a></h3><blockquote><p>村里的赵成梦想找到一个鸟语花香没有纷争的世外桃源，相信他的梦想，答应帮他寻找世外桃源。等到后面找到挑花源，再回来找他，即可完成任务。<br>奖励：200点经验值。</p></blockquote><h3><span id="pzhi-xian-4-bang-qiao-fu-qu-hui-chai-dao">支线4：帮樵夫取回柴刀</span><a href="#pzhi-xian-4-bang-qiao-fu-qu-hui-chai-dao" class="header-anchor">#</a></h3><blockquote><p>在村子东边有一个熊洞，在熊洞旁边有一位背柴的樵夫。他刚刚遭到熊的袭击，人虽然没事但是柴刀被熊带到洞里。答应帮他找回柴刀，然后进入旁边的熊洞杀死里面的熊，得到柴刀。将柴刀交还给樵夫，任务完成。<br>奖励：300点经验值。</p></blockquote><h2><span id="per-yang-zhou-cheng">二、阳周城</span><a href="#per-yang-zhou-cheng" class="header-anchor">#</a></h2><h3><span id="pzhu-xian-1-2">主线1-2：</span><a href="#pzhu-xian-1-2" class="header-anchor">#</a></h3><blockquote><p>穿过赵村沿着东南方向的道路来到阳周城。刚到城门口，你就被秦兵团团围住，为首的郡尉将你押回府衙。大堂之上，你自忖必死，不料那郡尉屏退左右，口尊太子，上前便拜。你仔细端详方才认出此人正是昔日军中的部属孔刚。当年孔刚因为触犯了军中法令本当处死，但你念他战功卓著，免了他的死罪，把他发到边郡充军，不想今日已经当了郡尉。孔刚感念你的活命之恩，毅然决定弃官跟随你一起去咸阳寻求真相。此后，你的冒险旅途多了一位诚实可靠的伙伴——力士孔刚。<br><strong>力士孔刚</strong>加入。</p></blockquote><h3><span id="pzhi-xian-5-xue-xi-qiang-hua-chong-yao">支线5：学习强化(重要)</span><a href="#pzhi-xian-5-xue-xi-qiang-hua-chong-yao" class="header-anchor">#</a></h3><blockquote><p>在城中找到木匠，他可以强化__、__、__三样物品的方法，不过每样要交学费300文。</p></blockquote><h3><span id="pzhi-xian-6-bang-chu-shi-mai-zao">支线6：帮厨师买枣</span><a href="#pzhi-xian-6-bang-chu-shi-mai-zao" class="header-anchor">#</a></h3><blockquote><p>在城中酒楼找到厨师，他会让你去买红枣。在民居里或菜贩处都可以得到红枣，将红枣交给厨师，任务完成。此后再与厨师对话，可以学到做菜的诀窍。<br>任务奖励：100文钱，2点魅力。</p></blockquote><h3><span id="pzhu-xian-1-3-tan-shi-meng-tian">主线1-3：探视蒙恬</span><a href="#pzhu-xian-1-3-tan-shi-meng-tian" class="header-anchor">#</a></h3><blockquote><p>在城中菜贩处得知老将军蒙恬被囚禁在城中的大牢里。与孔刚一起来到城中大牢，冒充咸阳来的御使混进大牢。这里如果选择错误立刻会遭到秦兵的围攻。在大牢西南角的牢房里你见到了老将军蒙恬，昔日叱咤风云的大将军如今却狼狈不堪，花白胡须上沾满了血污。老将军见你还活着，心中十分高兴，要你早日赶往咸阳弄清诏书的真相。你本想劫牢救蒙恬出去，但老将军却坚决不答应，认为此举太过冒险。无奈之下，你只得挥泪拜别而去。<br>任务奖励：500点经验。</p></blockquote><h2><span id="psan-yan-men-guan">三、雁门关</span><a href="#psan-yan-men-guan" class="header-anchor">#</a></h2><h3><span id="pzhi-xian-7-bang-zhu-mou-dun-tui-di">支线7：帮助冒顿退敌</span><a href="#pzhi-xian-7-bang-zhu-mou-dun-tui-di" class="header-anchor">#</a></h3><blockquote><p>在酒馆中遇到一个异族青年正在喝闷酒，你上前与他共饮。正喝到酣处，一群异族打扮的凶恶大汉闯进酒馆，指明要杀掉这个异族青年。你见他们以多欺少，于是仗义出手击退了这群杀手。之后你和这个异族青年互报姓名，不由大吃一惊。原来这个异族青年就是匈奴头曼单于的儿子冒顿。你在边疆和匈奴作战多年，没想到今日却和昔日的死对头成了朋友。冒顿请求你帮他杀掉头曼，夺取单于之位。原来他的父亲头曼单于一心想把王位传给冒顿的弟弟，所以千方百计要致冒顿于死地。冒顿提出二十年不犯秦境的条件，你觉得这是一个给边境争取和平宁静的机会，于是答应了他的请求。</p></blockquote><h3><span id="pzhi-xian-8-xue-zuo-pi-yi-chong-yao">支线8：学做皮衣（重要）</span><a href="#pzhi-xian-8-xue-zuo-pi-yi-chong-yao" class="header-anchor">#</a></h3><blockquote><p>找到商贾，付他八百文可以买到一件皮衣，付他一千五百文他就会教你制作皮衣的方法。以后你制造的皮衣也可以拿到这里来卖，他会以一件七百文的高价来收购。</p></blockquote><h3><span id="pzhi-xian-9-diao-cha-shui-jing">支线9：调查水井</span><a href="#pzhi-xian-9-diao-cha-shui-jing" class="header-anchor">#</a></h3><blockquote><p>在民居里找到崔小，他家的水井总是不出水。答应帮助他调查水井不出水的原因。从院中的水井下去，发现有几只虎蛟盘踞在这里，堵住了出水口。消灭虎蛟，再去告知崔小水井不出水的原因，完成任务。<br>任务奖励：1000点经验。</p></blockquote><h3><span id="pzhi-xian-10-she-ri-jian-qian-zhi-zhi-xian-24">支线10：射日箭（前置：支线24）</span><a href="#pzhi-xian-10-she-ri-jian-qian-zhi-zhi-xian-24" class="header-anchor">#</a></h3><blockquote><p>获得<strong>发簪</strong>后，找到山洞，杀掉里面的善翼，从宝箱中得到<strong>射日箭</strong>。</p></blockquote><h2><span id="psi-xiong-nu-ying-di">四、匈奴营地</span><a href="#psi-xiong-nu-ying-di" class="header-anchor">#</a></h2><h3><span id="pzhi-xian-11-sha-si-tou-man-dan-yu-qian-zhi-zhi-xian-7">支线11：杀死头曼单于（前置：支线7）</span><a href="#pzhi-xian-11-sha-si-tou-man-dan-yu-qian-zhi-zhi-xian-7" class="header-anchor">#</a></h3><blockquote><p>如果你的等级大于10级，就可以从雁门关东北的城门出去到达匈奴营地。冒顿正在路口等待着你的到来。与他对话后，冒顿加入你的队伍，众人一起去找左贤王。左贤王是冒顿的叔叔，一向对头曼单于不满，冒顿打算先争取他的支持。来到左贤王的大帐，左贤王很痛快地表示支持冒顿，并且透露头曼单于只带了少部分人去北边的猎场围猎。冒顿决定趁这个机会袭杀冒顿。于是众人一行赶至北方猎场，在那里见到了匈奴头领头曼单于。冒顿上前直斥头曼，头曼也干脆撕破了脸，要杀死冒顿，父子们终于兵戎相见。头曼虽然召唤出两头奇兽助阵，但仍然挡不住你和冒顿的合力攻击。当身边的随从被个个击破后，头曼势单力孤，终于倒在你的剑下。</p></blockquote><h3><span id="pzhi-xian-12-sha-si-zuo-xian-wang-qian-zhi-zhi-xian-11">支线12：杀死左贤王（前置：支线11）</span><a href="#pzhi-xian-12-sha-si-zuo-xian-wang-qian-zhi-zhi-xian-11" class="header-anchor">#</a></h3><blockquote><p>消灭了头曼单于，众人回到营地寻找左贤王。然而他却并不在在营帐内，众人感觉出事情有些不对。果然刚出了大帐，众人就被匈奴士兵团团围住，左贤王阴笑着出现在众人面前。原来他一直窥视着单于的宝座，阴谋利用冒顿借刀杀人，然后再杀死冒顿就可以名正言顺地登上单于宝座了。又经过一番苦战，众人集中力量杀死了左贤王，周围的匈奴士兵震慑于冒顿的威势纷纷投降，冒顿接连杀死了自己的父亲和叔叔，终于夺得了单于之位。此后冒顿可以加入队伍。<br>任务奖励：<strong>巨阙剑</strong>，<strong>力士冒顿</strong>可以加入。</p></blockquote><h3><span id="pzhi-xian-13-bang-shi-bing-zhao-hui-tong-jian">支线13：帮士兵找回铜剑</span><a href="#pzhi-xian-13-bang-shi-bing-zhao-hui-tong-jian" class="header-anchor">#</a></h3><blockquote><p>在营地帐蓬内有一个匈奴士兵，他因为喝醉了酒弄丢了铜剑。答应帮他找回铜剑。在另外一个帐篷内找到铜剑交还给他，任务完成。<br>任务奖励：3000点经验、<strong>《战国策》</strong>。</p></blockquote><h2><span id="pwu-bei-di-yi-zhan">五、北地驿站</span><a href="#pwu-bei-di-yi-zhan" class="header-anchor">#</a></h2><h3><span id="pzhu-xian-1-4">主线1-4</span><a href="#pzhu-xian-1-4" class="header-anchor">#</a></h3><blockquote><p>从阳周城西南城门出来，在北地驿站内遇到驿使。冒充是咸阳来接他的使者，可以从驿使手中骗到过关文书；如果选择硬抢，会出现很多秦兵，杀死驿使和周围地秦兵同样可以得到文书。</p></blockquote><h2><span id="pliu-bei-di-jun">六、北地郡</span><a href="#pliu-bei-di-jun" class="header-anchor">#</a></h2><h3><span id="pzhu-xian-1-5">主线1-5</span><a href="#pzhu-xian-1-5" class="header-anchor">#</a></h3><blockquote><p>来到北地郡，用文书假装驿使骗过城门口盘查的守将。刚进城你就听见行人们议论说始皇帝已经驾崩了，而幼子胡亥已经即位称二世皇帝了。这一消息对你来说无异于晴天霹雳，一直以来想要面见父皇把事情问清楚的念头在瞬间破灭了，你似乎已经看不清前进的方向。但是严酷的现实迫使你从悲痛中抬起头来，你决定继续向咸阳前进，到那里去寻找线索。</p></blockquote><h3><span id="pzhi-xian-14-shuo-fu-liao-yi-chong-yao">支线14：说服廖异(重要)</span><a href="#pzhi-xian-14-shuo-fu-liao-yi-chong-yao" class="header-anchor">#</a></h3><blockquote><p>从街上的顽童口中得知居住在城里的廖异精通法术，到廖异家见到廖异。他从前是秦相吕不韦的门客，吕不韦当时权倾朝野，连秦王都要让他三分，后来因罪被处死，。廖异对吕不韦被诛之事愤愤不平，你驳斥了他的观点。然后过一会再来见他，廖异就可以加入你的队伍了。<br>任务奖励：<strong>术士廖异</strong>可以加入。</p></blockquote><h3><span id="pzhi-xian-15-quan-jie-peng-yu">支线15：劝解彭宇</span><a href="#pzhi-xian-15-quan-jie-peng-yu" class="header-anchor">#</a></h3><blockquote><p>在城中找到彭宇家，从彭宇的妻子口中了解到彭宇是个嗜酒如命的酒徒。答应帮她劝说彭宇回家。之后到酒楼中找到醉汉彭宇，劝说他回家，任务完成。<br>任务奖励：500点经验，3点声望。</p></blockquote><h3><span id="pzhi-xian-16-bang-jiu-lou-zhang-ju-yao-hui-fan-qian">支线16：帮酒楼掌柜要回饭钱</span><a href="#pzhi-xian-16-bang-jiu-lou-zhang-ju-yao-hui-fan-qian" class="header-anchor">#</a></h3><blockquote><p>来到城中酒楼，从酒楼老板处得知有一个无赖经常在这里白吃白喝，已经拖欠了酒楼800文钱了，而酒楼里又没有人能打过他。答应帮他要回饭钱。在酒楼里找到无赖，将他海扁一顿，无赖老老实实地交出了800文钱。把钱还给老板，任务完成。<br>任务奖励：500点经验，2点声望。如果不要掌柜的钱会再得到800点经验和1点声望；如果要掌柜的钱则得到400文钱。</p></blockquote><h3><span id="pzhi-xian-17-tan-quan-de-chuan-shuo">支线17：贪泉的传说</span><a href="#pzhi-xian-17-tan-quan-de-chuan-shuo" class="header-anchor">#</a></h3><blockquote><p>在酒楼中向店小二要一杯茶，店小二说起店里的井水人喝了就会变贪婪，所以沏茶的水要到外面去打，你驳斥了店小二的说法，得到奖励。<br>任务奖励：500点经验，1点声望。</p></blockquote><h3><span id="pzhi-xian-18-wei-hu-zuo-chang">支线18：为虎作伥</span><a href="#pzhi-xian-18-wei-hu-zuo-chang" class="header-anchor">#</a></h3><blockquote><p>在北地郡城外东北角有一个山洞，旁边有一位男子，他会邀请你一起去山洞里寻宝。洞内到处是死尸白骨，气氛阴森。在里面找到刚才的男子，谁知这竟然是一个陷阱，周围突然出现了许多老虎向你扑过来。杀死了这些老虎，在洞中又遇到一个中年男子，从他口中得知刚才的男子并非人类，他的名字叫伥，是被洞中老虎吃掉的怨魂幻化而成，专门引诱他人进洞让老虎吃掉。而眼前的中年男子也是鬼魂，不过他一直在劝阻人们进洞。当他听到你已经把老虎消灭，终于升天而去。<br>任务奖励：1000点经验值</p></blockquote><h2><span id="pqi-li-xian">七、栎县</span><a href="#pqi-li-xian" class="header-anchor">#</a></h2><h3><span id="pzhi-xian-19-yi-gen-yu-gan">支线19：一根鱼杆</span><a href="#pzhi-xian-19-yi-gen-yu-gan" class="header-anchor">#</a></h3><blockquote><p>在村中遇到一位老者，他不小心弄折了自己的宝贝鱼杆，正在痛悔不已。制造一个新鱼杆送给他。<br>任务奖励：<strong>流星弩</strong>。</p></blockquote><h3><span id="pzhi-xian-20-xue-xi-zhi-zuo-mu-ou-de-fang-fa">支线20：学习制作木偶的方法</span><a href="#pzhi-xian-20-xue-xi-zhi-zuo-mu-ou-de-fang-fa" class="header-anchor">#</a></h3><blockquote><p>在村中找到中年男子，他会教你如何制作木偶。</p></blockquote><h3><span id="pzhi-xian-21-an-wei-shi-ming-de-mu-qin">支线21：安慰失明的母亲</span><a href="#pzhi-xian-21-an-wei-shi-ming-de-mu-qin" class="header-anchor">#</a></h3><blockquote><p>在路上遇到小女孩团儿，她请求你假扮她远方归来的父亲去安慰双目失明的母亲。原来她的父亲被抓去修长城，已经很多年没有回来了，母亲终日伤心，双眼也已经哭瞎了。答应假扮她的父亲，注意记住小女孩提供的关于她家的情况。在村中的草舍找到失明的妇女，第一句话要选择有“阿萍”的那句话；提到口音不对的问题，要选有“五年”的那句话；提到团儿的弟弟圆儿，要选择“圆儿怎么了”那句话；提到捎口信，不要选写信回家的那句话，因为赵成不识字；提到团圆，选择“人鬼殊途”那句话；提到如何逃回来，回答被起义军救了。顺利通过妇女考验后，再回去找团儿，任务完成。<br>任务奖励：累计得到2600点经验值，3点声望，<strong>和氏璧</strong>。</p></blockquote><h3><span id="pzhi-xian-22-yao-tong-jia-ru-qian-zhi-zhi-xian-33">支线22：瑶彤加入（前置：支线33）</span><a href="#pzhi-xian-22-yao-tong-jia-ru-qian-zhi-zhi-xian-33" class="header-anchor">#</a></h3><blockquote><p>完成救护公子高任务，可以让<strong>瑶彤</strong>加入。</p></blockquote><h3><span id="pzhi-xian-23-duo-hui-qian-nian-ling-zhi">支线23：夺回千年灵芝</span><a href="#pzhi-xian-23-duo-hui-qian-nian-ling-zhi" class="header-anchor">#</a></h3><blockquote><p>在村子西边找到药农，了解到他冒着生命危险从雪山采来的千年灵芝被强盗抢走了。到北边山上消灭山贼，在山贼屋子里找到千年灵芝，回来交还给药农，任务完成。<br>任务奖励：1000点经验值，1点声望。</p></blockquote><h3><span id="pzhi-xian-24-kao-rou-zhi-dao-qian-zhi-zhi-xian-6">支线24：烤肉之道（前置：支线6）</span><a href="#pzhi-xian-24-kao-rou-zhi-dao-qian-zhi-zhi-xian-6" class="header-anchor">#</a></h3><blockquote><p>在村中的民居中找到季全，他正在聚精会神地烤肉。如果前面在阳周城酒楼跟厨师学过做菜的诀窍，季全就会送你一枚<strong>庖丁之戒</strong>。</p></blockquote><h2><span id="pba-xian-yang-bei-jiao">八、咸阳北郊</span><a href="#pba-xian-yang-bei-jiao" class="header-anchor">#</a></h2><h3><span id="pzhu-xian-1-6">主线1-6</span><a href="#pzhu-xian-1-6" class="header-anchor">#</a></h3><blockquote><p>从北地郡来到咸阳北郊，得知二世皇帝胡亥正在这里封山围猎。你决定潜入胡亥行营寻找线索。但是胡亥的皇帝行营戒备十分森严，要想进入可没那么容易。你从附近的樵夫口中打听到东边树林后面有一个山洞可以偷进山中。于是你穿过这个山洞，到了山上。不料刚出洞口就被一个秦兵发现了行踪，你用最快的攻击速度在他召唤同伴之前干掉了他。随后你小心翼翼地沿着右边的山路下来，从行营后门潜进了皇帝寝帐。你藏身在屏风后面，隐约听到胡亥正在和赵高、李斯议事。胡亥仍然是孩子心性，一心享乐无心国事，将政事都推给赵高和李斯。而赵高竟然提议诛杀皇室众公子公主和顽固的老臣来稳固皇位，李斯在旁边提出反对意见，赵高便以什么沙丘之约相胁。你越听越是起疑，似乎他们之间有什么不可告人的秘密。由于行营盘查很严，你不敢久留，只能带着重重疑问悄悄从原路返回。</p></blockquote><h2><span id="pjiu-xian-yang">九、咸阳</span><a href="#pjiu-xian-yang" class="header-anchor">#</a></h2><p>##3 主线1-7</p><blockquote><p>经过长途跋涉，你终于回到了阔别已久的咸阳。这里的景物依然是那么熟悉，可是当你来到自己昔日的居所——太子府门前，却发现门上已经贴上了封条，许多秦兵正在门口守卫。这时你想起了昔日的好友桓峰，在咸阳城找到桓峰府，在府邸内见到了桓峰。桓峰见到你十分惊喜，急忙拉着你到密室详谈。从桓峰口中了解到始皇之死疑点很多，于是你决定进入始皇陵一探究竟。但是当初始皇帝聚集了天下的能工巧匠修建陵寝，为了防备有人盗陵，制造了无数机关陷阱。如果没有一位精通机关的能人指点，要进始皇陵简直就是自寻死路。更何况始皇最后还下诏把修陵的工匠全部封死在陵寝之中，天下的能工巧匠一时殆尽，到哪里才能找到精通机关制作的高人呢。桓峰说起咸阳东面的中原地带人才锦绣，建议你到那里去寻找。于是你辞别桓峰，踏上了寻找能工巧匠的行程。</p></blockquote><h2><span id="pzhi-xian-25-xun-zhao-pi-yi">支线25：寻找皮衣</span><a href="#pzhi-xian-25-xun-zhao-pi-yi" class="header-anchor">#</a></h2><blockquote><p>在城中遇到一位家仆，他要替主人买一件上好的皮衣。答应帮他找一件皮衣。然后制造一件皮衣或者利用驿站回到雁门关向商贾买一件皮衣送给他。任务完成。<br>任务奖励：2000文钱，<strong>？？</strong>。</p></blockquote><h2><span id="pzhi-xian-26-fu-qiu-zhi-qu">支线26：浮丘之曲</span><a href="#pzhi-xian-26-fu-qiu-zhi-qu" class="header-anchor">#</a></h2><blockquote><p>在咸阳监狱附近遇到一个老者，他口中低吟一曲。你听出此曲古意盎然，颇有深意。于是上前与老者攀谈，得知他就是李斯的师兄浮丘伯。临别老人以一卷书籍相赠。<br>任务奖励：《诗经》</p></blockquote><h2><span id="pzhi-xian-27-bang-zhu-shao-nu-quan-shuo-wan-gu-de-fu-qin">支线27：帮助少女劝说顽固的父亲</span><a href="#pzhi-xian-27-bang-zhu-shao-nu-quan-shuo-wan-gu-de-fu-qin" class="header-anchor">#</a></h2><blockquote><p>在咸阳城南你遇到一位少女正在为婚事发愁。原来她与邻家的林哥哥情意相投，可是她父亲因为林家太穷，连彩礼都出不起，始终不肯答应这桩婚事。有两种方式可以完成任务：选择帮他筹钱，然后给她5000文钱作为彩礼，任务完成；如果没钱，就只能动嘴皮子劝说她父亲同意这件婚事，进入少女身边的民居，找到少女的父亲，用委婉的方式劝说他同意了这桩婚事。之后将这个好消息告诉少女，任务完成。<br>任务奖励：选择直接给钱，得到1000点经验值和1点声望；选择劝说，累计得到2600点经验值和2点声望。</p></blockquote><h2><span id="pzhi-xian-28-bang-ping-er-mai-jiu-hu">支线28：帮萍儿买酒壶</span><a href="#pzhi-xian-28-bang-ping-er-mai-jiu-hu" class="header-anchor">#</a></h2><blockquote><p>在民居里找到萍儿，她刚刚把她爹珍爱的酒壶打碎了，正在着急。听她说在城内的杂货铺有一个相同样式的酒壶，但是需要800文钱。到杂货铺买下酒壶送给她，任务完成。拿到发钗钥匙后就可以进入雁门关的神秘山洞，在洞内可以找到射日箭。<br>任务奖励：800点经验值，<strong>发钗钥匙</strong>。</p></blockquote><h2><span id="pzhi-xian-29-bang-ming-er-xiu-fu-shu-xiu">支线29：帮铭儿修复蜀绣</span><a href="#pzhi-xian-29-bang-ming-er-xiu-fu-shu-xiu" class="header-anchor">#</a></h2><blockquote><p>在城西南看到一个老者正在责备他的小孙子，上前一问才知道小孙子铭儿把他娘留下的唯一遗物——绣花巾弄坏了。而这件绣花巾是用蜀绣针法绣成的，现在已经很难找到能修复的人了。答应帮铭儿修复绣巾。到城东找到绣女的家，绣女答应补好这块绣巾，但要收取100文钱。将蜀绣交给绣女，再去找铭儿告诉他这个消息，在城西废弃的木屋里找到铭儿，他正满头大汗地找着什么东西，询问之下，才知道他又丢了宝贝小刀，答应帮他找小刀并且告诉他找到可以修复蜀绣的人了，铭儿高兴极了。打破屋内陶罐得到错金铁短剑。再回去找绣女取回绣巾，将修补好的绣巾交还给铭儿祖孙，任务完成。<br>任务奖励：累计得到1600点经验值，1点声望，<strong>月老红线</strong>。</p></blockquote><h2><span id="pzhi-xian-30-yu-shu-sheng-tao-lun-dian-gu">支线30：与书生讨论典故</span><a href="#pzhi-xian-30-yu-shu-sheng-tao-lun-dian-gu" class="header-anchor">#</a></h2><blockquote><p>在城西南的民居里找到书生，谈论晋国智伯因后继之人不当而族灭的典故。书生提出无才无德胜过有才无德的观点，你驳斥了他这一观点。<br>任务奖励：1000点经验值和1点智慧。</p></blockquote><h2><span id="pzhi-xian-31-qian-ru-tai-zi-fu">支线31：潜入太子府</span><a href="#pzhi-xian-31-qian-ru-tai-zi-fu" class="header-anchor">#</a></h2><blockquote><p>在城西南遇到一位白发苍苍的老者认出你的真实身份。你打量半天才认出他是原来太子府上管理膳食的乐伯。从他口中得知太子府被封，仆人都被发配边疆，你的妻儿也被带入宫中渺无音信。乐伯交给你一把太子府后门的钥匙。于是你从太子府后门悄然潜入，杀尽埋伏在太子府内的秦兵，在书架上找到了妻子雅儿的绝笔遗书和孙膑兵法。<br>任务奖励：遗书，<strong>《孙膑兵法》</strong>。</p></blockquote><h2><span id="pshi-yong-xian">十、雍县</span><a href="#pshi-yong-xian" class="header-anchor">#</a></h2><h2><span id="pzhi-xian-32-bang-shu-sheng-chuan-hua-hou-xu">支线32：帮书生传话（后续）</span><a href="#pzhi-xian-32-bang-shu-sheng-chuan-hua-hou-xu" class="header-anchor">#</a></h2><blockquote><p>在民居中遇到书生，他请求你帮他带话给同村的阿兰。在旁边的民居里找到阿兰，将书生的爱慕之情传达给她，再把阿兰的回复告诉书生，书生得到了回应，高兴已极，说他祖上留下一把宝剑，要赠与你，但是要过几天才能找到。<br>任务奖励：等到完成田纲的任务后，再回来找书生，可以得到<strong>宝剑鱼肠</strong>。</p></blockquote><h2><span id="pzhi-xian-33-jiu-hu-gong-zi-gao-hou-xu-zhi-xian-22">支线33：救护公子高（后续：支线22）</span><a href="#pzhi-xian-33-jiu-hu-gong-zi-gao-hou-xu-zhi-xian-22" class="header-anchor">#</a></h2><blockquote><p>进入村内的当铺，看到一名少女正在和当铺的老板争吵。你上前一问得知这少女急着要当一枚玉佩去买药救人，但是老板给的钱太少，她才与老板发生争执。你向她要过玉佩一看，发现这块玉佩竟然是十二弟的贴身之物，再仔细端详这位少女似乎也有几分面熟。你帮她求情向老板多要了500文钱，那女子接过钱匆匆忙忙地往外便走。这时你猛然想起这女子的相貌有些象十二弟的妻子瑶彤，于是急忙追出门外，跟随着少女的足迹赶了上去。刚赶到村子南边的山坡，就看到十二弟公子高夫妇和那个少女被一群秦兵团团围住，原来这少女就是公子高妻子瑶彤的妹妹瑶云，而十二弟赢高似乎已经受了重伤。这时瑶云为了不拖累公子高夫妇毅然自杀身亡，公子高夫妇也岌岌可危，你急忙上前挡住秦兵，先让公子高夫妇撤退到村中。杀尽周围的秦兵后回到村中，在民居中找到公子高夫妇。赢高由于伤势过重，已经奄奄一息了。他一见到你就放声大哭，痛诉胡亥残杀三十多位兄妹的暴行，你听到这个消息无比震惊，胡亥在你心目中一直是个乖巧的幼弟，如今竟然对自己的兄弟姐妹下如此毒手，莫非当了皇帝就会让人变得残暴吗？你感到一阵阵的迷惘。赢高终于死在了你的怀中，临终前他一直紧握着你的手，要你为兄弟姐妹报仇。你与他的妻子瑶彤一起把赢高安葬在村外的高岗之上。问起瑶彤的打算，她想先回老家栎县静静地待一段时间，叫你有事就去找他。此后去栎县瑶彤的家就可以让瑶彤加入队伍。</p></blockquote><h2><span id="pzhi-xian-34-bang-shao-nian-duo-hui-cai-chan">支线34：帮少年夺回财产</span><a href="#pzhi-xian-34-bang-shao-nian-duo-hui-cai-chan" class="header-anchor">#</a></h2><blockquote><p>在村子北边的山坡上有一位流浪少年，他父亲留给他的财产被强盗夺去了。答应帮他夺回财产，然后进入他身后的山洞，消灭里面的山贼，找到两个宝箱，但是宝箱都上着锁无法打开。你又回去找流浪少年，他只有一把钥匙，只能选择其中一个宝箱打开。打开右边的宝箱得到2000金钱；打开左边的宝箱得到一个书简。将得到的金钱或书简交给流浪少年，任务完成。<br>任务奖励：2000经验，3三点声望。</p></blockquote><h1><span id="di-er-zhang-xun-fang-yi-ren">第二章 寻访异人</span><a href="#di-er-zhang-xun-fang-yi-ren" class="header-anchor">#</a></h1><h2><span id="pshi-yi-san-chuan-jun">十一、三川郡</span><a href="#pshi-yi-san-chuan-jun" class="header-anchor">#</a></h2><h2><span id="pzhi-xian-35-ci-ke-tian-lin">支线35：刺客田琳</span><a href="#pzhi-xian-35-ci-ke-tian-lin" class="header-anchor">#</a></h2><blockquote><p>在酒楼内找到酒客，给他两百文买酒，他就会告诉你富豪晋海供养了很多刺客。到城南的晋宅找到晋海，付给他6000文钱，他会介绍一个叫田琳的女刺客给你。在晋府偏房内找到<strong>田琳</strong>，有两种方法可以让她加入：如果不提酬金，可以直接用言语打动她加入队伍；如果提到酬金，田琳会要求与你单挑，打败她，她就会加入队伍。</p></blockquote><h2><span id="pzhi-xian-36-ji-li-peng-yue">支线36：激励彭越</span><a href="#pzhi-xian-36-ji-li-peng-yue" class="header-anchor">#</a></h2><blockquote><p>在酒楼旁边遇到一个乞丐，你见他神情颓废，便用言语激励他，他猛然醒悟，立志要做一番事业。两人互通姓名，得知他的名字叫彭越。<br>任务奖励：1500点经验值。</p></blockquote><h2><span id="pzhi-xian-37-jie-jiu-xun-huo">支线37：解救旬或</span><a href="#pzhi-xian-37-jie-jiu-xun-huo" class="header-anchor">#</a></h2><blockquote><p>在街上遇到一个叫旬或的人，他和邻居马三吵架，结果被马三打了出来，一直不敢回家。答应帮他解决这起纠纷。找到邻居马三，劝说他或者用武力胁迫他与旬或重新修好。再找到旬或告诉他结果，任务完成。<br>任务奖励：选择劝说可以得到2000点经验值和2点声望；如果用武力解决此事则得不到声望。</p></blockquote><h2><span id="pzhi-xian-38-tao-yao-bao-shi">支线38：讨要宝石</span><a href="#pzhi-xian-38-tao-yao-bao-shi" class="header-anchor">#</a></h2><blockquote><p>在城西遇到一位叫候迅的人，他前几天在严屠户那里买肉的时候把一块宝石掉在那里，但是严屠户死活不承认见过宝石。答应帮他拿回宝石。找到肉铺，向严屠户讨要宝石。谁知这严屠户态度强硬，毫不讲理，你只好用武力教训了他一顿，才拿回了候迅的篮宝石。将蓝宝石交还给候迅，任务完成。<br>任务奖励：皮袍，1点声望。</p></blockquote><h2><span id="pzhi-xian-39-xue-xi-zhi-zao-tie-qiao">支线39：学习制造铁锹</span><a href="#pzhi-xian-39-xue-xi-zhi-zao-tie-qiao" class="header-anchor">#</a></h2><blockquote><p>在城内找到农夫，可以学到制造铁锹的方法。</p></blockquote><h2><span id="pzhi-xian-40-jiao-xun-liu-lang-han">支线40：教训流浪汉</span><a href="#pzhi-xian-40-jiao-xun-liu-lang-han" class="header-anchor">#</a></h2><blockquote><p>城西雨雁塔内有一个流浪汉，他见你穿戴讲究，便向你索要金钱。你见他态度蛮横，与强盗无二，决定教训他一顿。打败他之后，从他口中得知了<strong>金龙盔</strong>的下落（合江村酒肆边上的井里）。</p></blockquote><h2><span id="pshi-er-ying-chuan">十二、颖川</span><a href="#pshi-er-ying-chuan" class="header-anchor">#</a></h2><h3><span id="pzhu-xian-2-1">主线2-1</span><a href="#pzhu-xian-2-1" class="header-anchor">#</a></h3><blockquote><p>从咸阳一路来到颖川，你看到民生凋敝，百姓被繁重的劳役压榨得无法生存，流民和乞丐遍布每一个地方，一种天下将乱的预感萦绕在你心头。在颖川的富商家中，你得知颖川东面鹰喙岭上有一群强盗，要富商限期交出传家之宝——玉舞人。你决定帮他去讨一个公道。从鹰喙岭回来后，将结果告知富商，任务完成。<br>任务奖励：累计得到1000文钱、8000经验值和2点声望。</p></blockquote><h3><span id="pzhi-xian-41-yao-hui-mu-jian">支线41：要回木剑</span><a href="#pzhi-xian-41-yao-hui-mu-jian" class="header-anchor">#</a></h3><blockquote><p>遇到被别人欺负的小孩小龙，他的木剑被伙伴阿柱抢走了。答应帮他要回木剑。找到阿柱，吓唬或说服他取回木剑，将木剑还给小龙，任务完成。<br>任务奖励：1000点经验值，1点魅力。</p></blockquote><h3><span id="pzhi-xian-42-xue-xi-zhi-zao-mu-jian-de-fang-fa">支线42：学习制造木剑的方法</span><a href="#pzhi-xian-42-xue-xi-zhi-zao-mu-jian-de-fang-fa" class="header-anchor">#</a></h3><blockquote><p>在铁匠铺可以向铁匠学习制造木剑的方法。</p></blockquote><h3><span id="pzhi-xian-43-jie-jiu-wang-yan">支线43：解救王岩</span><a href="#pzhi-xian-43-jie-jiu-wang-yan" class="header-anchor">#</a></h3><blockquote><p>在街上遇到盛才，从他口中得知王岩的冤情。决定帮他救出王岩。先来到监狱，贿赂牢头3000文钱进入大牢，在牢房内找到钥匙，打开牢门见到王岩，听他诉说案情。之后有两种选择：如果选择劫牢，可以直接将王岩救出，任务完成；选择选择寻找证据，就要先到王岩家寻找线索，发现地上的玉佩后，再拿玉佩找王岩辨认，王岩认出玉佩是隔壁李多的。于是你又到李多家找李多，他见到你手中的玉佩神色慌张，一副心里有鬼的模样，言行举止十分可疑。之后再去找盛才了解李多的情况，得知他最近发了一笔财，而且经常在县衙出入。再次回到李多家，在衣架上找到一把门钥匙，拿给牢房里的王岩看，他认出是自己家的钥匙。你感觉到李多一定就是陷害王岩的人，到李多家逼问李多，他终于说出了事实真相：原来县令一直对王岩不满，他给了李多一笔钱，让他把几把刀剑埋在王岩家的地下，然后以私藏兵器蓄意谋反的罪名逮捕了王岩。真相大白之后，你直闯县衙大堂，用事实威逼县令释放了王岩。王岩终于重获自由。任务完成。<br>任务奖励：如果劫牢，得到2000点经验值、2点智慧和**《商鞅兵法》**；如果选择找证据，累计得到3500点经验、2点智慧和《商鞅兵法》。</p></blockquote><h2><span id="pshi-san-ying-hui-ling">十三、鹰喙岭</span><a href="#pshi-san-ying-hui-ling" class="header-anchor">#</a></h2><h3><span id="pzhu-xian-2-2">主线2-2</span><a href="#pzhu-xian-2-2" class="header-anchor">#</a></h3><blockquote><p>从颖川来到鹰喙岭，在上山的路上遇到了张良，与张良攀谈，得知张良原来是韩国贵族的后裔，六国被灭后，他立志辅佐韩氏复国，曾经雇力士在博浪沙刺杀始皇。此时他辅佐韩氏后裔韩成起义反秦，占据了鹰喙岭。你将上山的目的告诉他，他却不相信山上的义军会勒索百姓，要和你一起到山上印证此事。你又向张良打听能工巧匠，他说起有一个名叫赵成的巧匠，原来是赵国大将李牧的部下，现在有可能还居住在故乡赵村一带。沿着山道来到山寨门前，如果前面与张良成为朋友，就可以避免战斗直接进入山寨，否则就只有杀进去了。来到聚义厅，见到首领韩成，向他说明来意，韩成也不知情，随后查出这确实是手下人的擅自行动，可是韩成非但不惩罚他的手下，而且依然要富商交出财物。张良在旁边苦言劝阻，韩成始终不听，终于导致两人反目，动起手来。你与张良联手打败了韩成，威逼他收回了成命。张良对韩成大失所望，认为他成不了大事，打算去投沛县的刘邦。你从他那里了解到沛县刘邦的传闻，心生好奇，打算去见一见这个英雄人物。如果此时你的声望够高的话，可以邀请<strong>张良</strong>加入队伍。</p></blockquote><h3><span id="pzhi-xian-44-xun-zhao-gou-suo">支线44：寻找钩索</span><a href="#pzhi-xian-44-xun-zhao-gou-suo" class="header-anchor">#</a></h3><blockquote><p>在上山路上遇到一位药农，他需要一个钩索去采摘悬崖上的紫风草。如果前面已经学会了制造钩索的方法，就可以制造一个钩索给他。药农要把家中的宝物相赠，让你到他家找他。找到他的家，药农将奇碧棍赠送给你。<br>任务奖励：<strong>长棍奇碧</strong>，1点声望。</p></blockquote><h2><span id="pshi-si-bei-hui-mie-de-zhao-cun-he-tao-hua-yuan">十四、被毁灭的赵村和桃花源</span><a href="#pshi-si-bei-hui-mie-de-zhao-cun-he-tao-hua-yuan" class="header-anchor">#</a></h2><h3><span id="pzhi-xian-45-zhao-qian-jia-ru">支线45：赵茜加入</span><a href="#pzhi-xian-45-zhao-qian-jia-ru" class="header-anchor">#</a></h3><blockquote><p>在鹰喙岭听张良提起巧匠赵平，你又想起赵茜正是赵国将领的后代，莫非她就是赵平的女儿？你决定赶回赵村找赵茜询问。可是当你回到赵村，你被眼前的景象惊呆了，那个宁静安详的村落已经被夷为平地，房屋被烧毁，四处都是被残杀的村民尸体，残垣断壁上沾满了鲜血。一阵打杀声将你从惊愕中唤醒，赶上前去正看到赵茜和几个村民被一群秦兵团团围住。一股无法遏制的愤怒占据了你的神经，你近乎疯狂的冲了上去，将这些秦兵杀了个干净。从赵茜口中你了解到秦兵在赵村抓不到你，就说村民窝藏罪犯，将赵村洗劫一空。而她确实就是赵平的女儿。此后<strong>赵茜</strong>可以加入队伍。</p></blockquote><h3><span id="pzhi-xian-46-bang-cun-chang-xun-zhao-tao-hua-yuan">支线46：帮村长寻找桃花源</span><a href="#pzhi-xian-46-bang-cun-chang-xun-zhao-tao-hua-yuan" class="header-anchor">#</a></h3><blockquote><p>找到村长，听他谈到桃花源的传说，据说鬼谷子曾经隐居在那里，但是直到现在也没人找到过。答应帮村长找到桃花源。在村外有四个山洞，其中只有一个是真正通往桃花源的入口。找到真正的山洞入口后，在洞内你遇到了兽王，只有通过它的考验才能继续前进。它不断的召唤怪兽，而且一次比一次强，直到最后你击败了兽王本身，它才会让你继续前进。继续往洞内走，你又遇到了食人兽。这里可以选择跟它猜谜或与它战斗：选择与它战斗，杀死它之后可以通过，不过它的实力可是很强的；如果选择猜谜，第一个谜语的答案是“分不清”；第二个谜语的答案是“甲刚刚说的都是真的”；第三个谜语的答案是“你又不是我”；第四个谜语的答案是四只；最后一个问题的答案是“我猜你要吃我”。全部答对后食人兽就会放你通过。继续前进，在桥头遇到燃灯老人。他会问你舍弃什么东西，选择舍弃地位，就可以得到心灯，通过前方的仙境之桥。穿过桥头的洞穴，你终于找到了桃花源。从桃花源茅屋后面的山洞直接回到赵村，向村长报告，任务完成。<br>任务奖励：累计得到11600点经验值和3点声望。</p></blockquote><h3><span id="pzhi-xian-47-xun-zhao-li-xiang-jia-yuan">支线47：寻找理想家园</span><a href="#pzhi-xian-47-xun-zhao-li-xiang-jia-yuan" class="header-anchor">#</a></h3><blockquote><p>找到桃花源后，再去村中找赵成，告诉他已经找到理想家园。任务完成。任务奖励：10000点经验值。</p></blockquote><h3><span id="pzhi-xian-48-po-jie-qi-ju">支线48：破解棋局</span><a href="#pzhi-xian-48-po-jie-qi-ju" class="header-anchor">#</a></h3><blockquote><p>在桃花源里找到鬼谷子，他正在自己下棋。你上前与他谈论棋局，先选择“示敌以弱，避其锋芒”，然后选择“釜底抽薪，擒贼擒王”，就可以破解他的棋局。如果之前读过《孙膑兵法》，在这里会出现提示。之后谦虚应对，鬼谷子会送给你《鬼谷子》和鬼谷盾。在桃花源的茅屋内还可以找到《吴起兵法》。<br>任务奖励：5500点经验值、<strong>鬼谷盾</strong>、<strong>《鬼谷子》</strong>、<strong>《吴起兵法》</strong>。</p></blockquote><h2><span id="pshi-wu-han-dan">十五、邯郸</span><a href="#pshi-wu-han-dan" class="header-anchor">#</a></h2><h3><span id="pzhi-xian-49-chun-yu-qiu-jia-ru">支线49：淳于秋加入</span><a href="#pzhi-xian-49-chun-yu-qiu-jia-ru" class="header-anchor">#</a></h3><blockquote><p>在民居内遇到淳于秋，她会问你两个问题，第一个问题的答案是《小雅－采薇》。第二个问题的答案是“阴阳、儒、墨、名、法、道、农、纵横、杂、小说、兵、诗歌、歌诗和医”。第三个问题的答案是齐人淳于越。答对了所有问题后，她会带你来到密室，这里摆满了诸子百家的书籍。原来当年焚书之时，淳于越将诸子百家之书都抄录了一份密藏在这里，而淳于秋正是淳于越的女儿。淳于秋将这些典籍交托给你，并送给你一本孙子兵法，随后服毒自尽。你急忙喂她服下延缓毒性的药物，然后在城内找到流浪医生，向他买灵芝、朱果和雪莲这三味药，医生开价8000文钱，如果你的魅力够高可以还价到5000文钱。用这三味药配成解药救活淳于秋，她就会加入你的队伍。</p></blockquote><h3><span id="pzhi-xian-50-xun-zhao-yi-bao">支线50：寻找异宝</span><a href="#pzhi-xian-50-xun-zhao-yi-bao" class="header-anchor">#</a></h3><blockquote><p>在客栈内有一位异宝商人，他正在收集各种奇异珍宝。先花1000文钱买到第一件宝物那父之蹄的信息。在宛城得到那父之蹄后回来交给异宝商人，任务完成。（在游戏的单机板中只有这第一件异宝可以找到，剩下的异宝将在网络版中才会出现。）<br>任务奖励：3000文钱。</p></blockquote><h3><span id="pzhi-xian-51-bang-ding-xun-zhi-bing-qian-zhi-zhi-xian-59">支线51：帮丁迅治病(前置：支线59)</span><a href="#pzhi-xian-51-bang-ding-xun-zhi-bing-qian-zhi-zhi-xian-59" class="header-anchor">#</a></h3><blockquote><p>完成彭城宋季的猴酒任务后，再接到吴心寻找地火石的任务。从宋季处打听到关于藏宝图的消息，来到邯郸丁迅家，丁迅正患病在床。帮丁迅找医生看病，然后从丁迅处可以得到藏宝图。如果不帮他找医生，那么在云雾谷寻宝的难度将会加大。</p></blockquote><h2><span id="pshi-liu-pei-xian">十六、沛县</span><a href="#pshi-liu-pei-xian" class="header-anchor">#</a></h2><h3><span id="pzhu-xian-2-3">主线2-3</span><a href="#pzhu-xian-2-3" class="header-anchor">#</a></h3><blockquote><p>来到沛县，从地痞口中了解到县中有一位巧匠名叫萧起，现在正和刘邦在一起。你大喜过望，急忙找人打听刘邦的下落。在武大嫂酒铺，你遇到了刘邦的至友夏侯婴，于是上前与他喝酒搭话，终于用委婉的方式打动了夏侯婴，得到刘邦藏在砀山的消息。<br>任务奖励：1500点经验值。</p></blockquote><h3><span id="pzhi-xian-52-yu-xu-wu-bi-wu">支线52：与徐五比武</span><a href="#pzhi-xian-52-yu-xu-wu-bi-wu" class="header-anchor">#</a></h3><blockquote><p>在沛县塔楼内遇到徐五，与他比武，单挑赢他三次以后，得到奖励。<br>任务奖励：<strong>聂王剑</strong>、3点声望。</p></blockquote><h3><span id="pzhi-xian-53-qu-gan-e-quan">支线53：驱赶恶犬</span><a href="#pzhi-xian-53-qu-gan-e-quan" class="header-anchor">#</a></h3><blockquote><p>街上的阿才被两条恶犬追赶，帮他杀死恶犬，得到奖励。<br>任务奖励：3点声望。</p></blockquote><h2><span id="pshi-qi-dang-shan">十七、砀山</span><a href="#pshi-qi-dang-shan" class="header-anchor">#</a></h2><h3><span id="pzhu-xian-2-4">主线2-4</span><a href="#pzhu-xian-2-4" class="header-anchor">#</a></h3><blockquote><p>来到砀山义军营寨，在营寨门口遇到义军士兵盘查，如果前面通过夏侯婴的考验，可以避免战斗；如果没通过，就只有硬闯进去。找到聚义大厅，你见到了刘邦，从他的身上你隐隐感到一股帝王之气，你明白他将是大秦帝国的重大威胁，但是你现在只是一个流亡的罪徒，再也不是什么大秦太子了，对于大秦帝国的命运你已经无能为力了。而刘邦对你似乎很有好感，言辞之中颇有出结交之意。你向他问起萧起的情况，他告诉你萧起因为徒弟有事已经赶去彭城了。你急于找到萧起，于是匆忙辞别刘邦，赶往彭城。</p></blockquote><h3><span id="pzhi-xian-53-quan-xiao-sun-zi-hui-jia">支线53：劝小孙子回家</span><a href="#pzhi-xian-53-quan-xiao-sun-zi-hui-jia" class="header-anchor">#</a></h3><blockquote><p>在砀山的草屋中遇到一位老婆婆，她请求你帮她找回在外面玩耍的小孙子。然后在西边的树林里找到小孙子，他却向你要小宝宝。返回草屋一问，原来他是要心爱的木偶。可是木偶被锁在箱子里，钥匙只有老公公才有。于是你又出门找到老者要到钥匙，拿到玩具木偶后交给小孙子。然后劝小孙子回家，任务完成。</p></blockquote><h3><span id="pzhi-xian-54-zhao-hui-qiao-fu-de-yu-pei">支线54：找回樵夫的玉佩</span><a href="#pzhi-xian-54-zhao-hui-qiao-fu-de-yu-pei" class="header-anchor">#</a></h3><blockquote><p>在砀山的道路边遇到樵夫，得知他在前面发现了一个神秘山洞，里面发出了怪声，吓得他把玉佩掉在山洞中了，但是他又没有胆量去捡回来。答应帮他取回玉佩。找到神秘山洞，消灭洞内的狍鸮，在地上找到樵夫的玉佩。继续往洞内走，在你面前出现了奇兽善翼和朱厌，费尽九牛二虎之力终于将它们杀死。在它们身后你发现了一块人为加工的石头，调查得到宝物震山神棒。之后将玉佩交给樵夫，任务完成。<br>任务奖励：1500点经验值、2点声望、<strong>震山神棒</strong>。</p></blockquote><h2><span id="per-shi-peng-cheng">二十、彭城</span><a href="#per-shi-peng-cheng" class="header-anchor">#</a></h2><h3><span id="pzhu-xian-2-5">主线2-5</span><a href="#pzhu-xian-2-5" class="header-anchor">#</a></h3><blockquote><p>刚赶到到彭城郊外，忽然看到一个少女被几只熊围住，看情势十分危急，你急忙上前把熊杀掉救下少女。不料这少女对你非但不感激，而且还口出怨言，原来这些熊是她引诱来辅助练功的。见熊都被你杀死，少女强迫你与他单挑，你无奈之下，只得答应。击败她之后，得到奖励。<br>任务奖励：2500点经验值。</p></blockquote><h3><span id="pzhu-xian-2-6">主线2-6</span><a href="#pzhu-xian-2-6" class="header-anchor">#</a></h3><blockquote><p>在荆无忌的家你终于见到了萧起，向他表明来意。萧起提出了条件，要你帮助他消灭城外的善翼兽他才肯帮忙。萧起说他已经想好了一个陷阱，但是还缺少两样东西，一件是泰山上材质坚硬的<strong>铁松之木</strong>；另一件是蕴藏在陨石中的<strong>天宫之铁</strong>。要扶苏去找这两样东西。如果你的实力足够，当然可以选择杀掉善翼兽直接完成任务，而不必再去找这两样东西，不过城北的善翼兽可是相当强悍的；如果你没有实力杀死善翼，就只能去寻找这两样东西了。萧起会提示你铁松之木在泰山，在东南方似乎有流星陨落。</p></blockquote><h3><span id="pzhi-xian-55-bang-fang-nu-mai-mu-suo">支线55：帮纺女买木梭</span><a href="#pzhi-xian-55-bang-fang-nu-mai-mu-suo" class="header-anchor">#</a></h3><blockquote><p>在纺女的家遇到纺线妇女，她纺线的木梭断了，正要去买个新的。你帮她去木匠处买一个新木梭给她，任务完成。</p></blockquote><h3><span id="pzhi-xian-56-xin-shi-de-ma-an">支线56：信使的马鞍</span><a href="#pzhi-xian-56-xin-shi-de-ma-an" class="header-anchor">#</a></h3><blockquote><p>在驿站遇到一个信使，他的马鞍被偷了。你打造一个马鞍送给他，任务完成。<br>任务奖励：2000文钱。</p></blockquote><h2><span id="per-shi-yi-tai-shan">二十一、泰山</span><a href="#per-shi-yi-tai-shan" class="header-anchor">#</a></h2><h3><span id="pzhu-xian-2-7-zai-tai-shan-dong-nan-de-shu-shang-zhao-dao-tie-song-zhi-mu">主线2-7：在泰山东南的树上找到铁松之木。</span><a href="#pzhu-xian-2-7-zai-tai-shan-dong-nan-de-shu-shang-zhao-dao-tie-song-zhi-mu" class="header-anchor">#</a></h3><h3><span id="pzhi-xian-57-lu-sheng-shi-jian">支线57：卢生事件</span><a href="#pzhi-xian-57-lu-sheng-shi-jian" class="header-anchor">#</a></h3><blockquote><p>在泰山酒楼门口遇到一个老乞丐，上前向他打听消息。他要求你先为他买一壶酒。在酒楼中买一壶酒交给他。接着这老乞丐又点名要喝名酒仙人醉，你又到酒楼里找掌柜买仙人醉。但是掌柜只有两壶仙人醉，开价竟然要3000文钱一壶，而且还要两壶酒一起卖。如果你的钱足够，当然可以买下来。否则掌柜会让你拿<strong>猴儿酒</strong>来换，猴儿酒在云雾谷的树洞中可以找到。得到仙人醉后，再去找门口的老乞丐，把仙人醉给他，然后询问老乞丐本地的事情，他会告诉你著名的剑客吴心就隐居在这里，他手中的宝剑就是湛卢。当你提到秦始皇时，这老乞丐神色慌张，言语支吾，似乎心里有鬼。在你的一再追问下他忽然露出狰狞面目，扑了上来。面对他强大的土系法术，你沉着应战，终于打败了他。经过仔细辨认，你终于认出他就是焚书坑儒的始作俑者卢生，卢生供出另外一个方士徐福当年欺骗始皇要去仙山求长生药，现在改名徐市，隐居在泰山作了富商。另外他还提及当年见到秦始皇时，始皇已有中毒的迹象。得到徐福的下落，你感到十分意外，当年你与徐福是至交好友，后来他说要去海外仙山为始皇帝求长生药，从那以后就再也没有他的消息了。在旁边的徐宅中你找到了徐市，道破他的真实身份。徐福见到你分外高兴，他告诉你当年欺骗始皇是为了出海经商，现在他已经打通了与海外的航路，做了富商。你们两人痛饮一番，次日你告别徐福，继续踏上旅程。<br>任务奖励：累计得到10000点经验值和3000文钱。</p></blockquote><h3><span id="pzhi-xian-58-bang-wu-xin-yin-shui-zhu-jian">支线58：帮吴心引水铸剑</span><a href="#pzhi-xian-58-bang-wu-xin-yin-shui-zhu-jian" class="header-anchor">#</a></h3><blockquote><p>从卢生那里得到剑客吴心的消息后，找到吴心向他借用湛卢宝剑，不想却受到他的奚落。如果选择与他战斗，打败他之后可以得到湛卢宝剑；如果选择虚心应对，不与他战斗，吴心会要求你为他做一件事：把山洞里的水引出来方便他淬火铸剑。答应帮他引水。进入山洞，消灭了洞内的虎蛟，发现水道洞穴被岩石堵住了。如果前面已经学会制造铁锹的方法，可以制造一把铁锹或者向吴心的徒弟索要铁锹。拿到铁锹后就可以打通水道了。返回向吴心报告，吴心就会把湛卢剑交给你。<br>任务奖励：宝剑<strong>湛卢</strong>、3点声望。</p></blockquote><h3><span id="pzhi-xian-59-xun-zhao-zhu-jian-cai-liao">支线59：寻找铸剑材料</span><a href="#pzhi-xian-59-xun-zhao-zhu-jian-cai-liao" class="header-anchor">#</a></h3><blockquote><p>帮助吴心引水成功后，当你再一次回到泰山。吴心会告诉你他铸剑用的两样关键材料——地火石和雪松木被弄丢了。答应帮他寻找这两样材料。吴心会提示你雪松木在衡山城，地火石在云雾谷。找到两样东西后，回到泰山交给吴心，吴心终于铸成一把绝世奇刃。为了感谢你，他将铸成的宝刀灵火赠给了你。<br>任务奖励：<strong>短刀灵火</strong>。</p></blockquote><h2><span id="per-shi-er-jiu-jiang">二十二、九江</span><a href="#per-shi-er-jiu-jiang" class="header-anchor">#</a></h2><h3><span id="pzhu-xian-2-8-zai-xi-bian-shu-lin-li-zhao-dao-yun-shi-de-dao-tian-gong-zhi-tie">主线2-8：在西边树林里找到陨石，得到天宫之铁。</span><a href="#pzhu-xian-2-8-zai-xi-bian-shu-lin-li-zhao-dao-yun-shi-de-dao-tian-gong-zhi-tie" class="header-anchor">#</a></h3><h3><span id="pzhi-xian-60-sha-diao-jia-zhong-de-lang">支线60：杀掉家中的狼</span><a href="#pzhi-xian-60-sha-diao-jia-zhong-de-lang" class="header-anchor">#</a></h3><blockquote><p>在村中遇到吴富贵，他正在家门口徘徊，原来他忽然发觉家中豢养的狗竟然是一匹狼，吓得他现在不敢回家。帮他杀死家中的狼，任务完成。<br>任务奖励：5000点经验、1点声望。</p></blockquote><h3><span id="pzhi-xian-61-bang-xiao-qi-zhao-hui-ta-de-di-di">支线61：帮小奇找回他的弟弟</span><a href="#pzhi-xian-61-bang-xiao-qi-zhao-hui-ta-de-di-di" class="header-anchor">#</a></h3><blockquote><p>在村中遇到小奇，他正在寻找他的弟弟小异。在村外的山洞中找到小异，任务完成。<br>任务奖励：4000点经验值，2点声望。</p></blockquote><h3><span id="pzhi-xian-62-quan-shuo-zhi-qin-hui-jia-hou-xu">支线62：劝说智勤回家（后续）</span><a href="#pzhi-xian-62-quan-shuo-zhi-qin-hui-jia-hou-xu" class="header-anchor">#</a></h3><blockquote><p>在智伯的家见到患了重病的智伯，了解到他们父子反目，儿子智勤自立门户，再也没有踏进家门半步。答应帮他劝回儿子，然后来到智勤家劝解智勤，智勤被你的话打动，但是仍然在犹豫。你回到智伯家，告诉他智勤一定会回来的。此后再次回到九江，会发现智勤已经回家，与父亲和好。为了感谢你对他的劝导，智勤会把宝剑工布赠送给你。<br>任务奖励：宝剑<strong>工布</strong>。</p></blockquote><h3><span id="pzhi-xian-63-sha-si-zhuang-jia-qian-zhi">支线63：杀死庄贾(前置：)</span><a href="#pzhi-xian-63-sha-si-zhuang-jia-qian-zhi" class="header-anchor">#</a></h3><blockquote><p>在陈胜被秦军打败后，在这里遇到黥布，从他口中得知陈胜已经死在自己的车夫庄贾手中。与黥布一起去杀庄贾，在村南找到庄贾，众人合力杀掉他后任务完成。此后<strong>黥布</strong>可以加入队伍。</p></blockquote><h2><span id="per-shi-san-peng-cheng">二十三、彭城</span><a href="#per-shi-san-peng-cheng" class="header-anchor">#</a></h2><h3><span id="pzhu-xian-2-9">主线2-9</span><a href="#pzhu-xian-2-9" class="header-anchor">#</a></h3><blockquote><p>拿到铁松之木和天宫之铁，你赶回荆无忌的家中，将两样物品交给萧起。萧起开始准备制作陷阱，但是他制造陷阱要耗费很长时间，而你却非常迫切地想尽早进入始皇陵。于是萧起便向扶你推荐起他的徒弟荆无忌，正说话间，在城外杀熊的少女走了进来，原来她就是萧起的徒弟荆无忌。荆无忌听说你要去闯始皇陵，不禁跃跃欲试。但是你却顾虑她是女子，有些犹豫，荆无忌赌气躲进了屋里。这时萧起忽然想起了一个重大消息，原来在一个月以前在骊山发生了一件大事，始皇下诏要把修建始皇陵的工匠们统统作为陪葬处死，为了逃命，工匠们暗自凿通了一个秘道，但是由于逃跑的人太多，终于被秦兵发现，大部分工匠都被杀死了，只有少数的几个人逃了出来。其中有一个名叫田纲的工匠据说现在就在衡山村附近。你听到这个消息十分高兴，决定到衡山村寻求田纲的帮助。此后再次与<strong>荆无忌</strong>对话，可以让荆无忌加入队伍。</p></blockquote><h3><span id="pzhi-xian-64-xun-zhao-hou-jiu-qian-zhi">支线64：寻找猴酒(前置：)</span><a href="#pzhi-xian-64-xun-zhao-hou-jiu-qian-zhi" class="header-anchor">#</a></h3><blockquote><p>之前在泰山和酒楼掌柜交谈得知猴酒的情报，再回到彭城酒楼与宋季交谈，答应帮他寻找猴酒。之后在云雾谷找到猴酒，回来交给他，可得到一把刈鹿刀。接到剑客吴心寻找铸剑材料的任务后，再回来与他对话，得知藏宝图的消息，然后到邯郸就可以触发丁迅的任务，得到<strong>藏宝图</strong>。</p></blockquote><h1><span id="di-san-zhang-gong-jiang-tian-gang">第三章 工匠田纲</span><a href="#di-san-zhang-gong-jiang-tian-gang" class="header-anchor">#</a></h1><h2><span id="per-shi-si-heng-shan-cun-he-heng-shan-cheng">二十四、衡山村和衡山城</span><a href="#per-shi-si-heng-shan-cun-he-heng-shan-cheng" class="header-anchor">#</a></h2><h3><span id="pzhu-xian-3-1">主线3-1</span><a href="#pzhu-xian-3-1" class="header-anchor">#</a></h3><blockquote><p>得到田纲的消息后，你快马加鞭赶往衡山村。在村口遇到樵夫，向他打听田纲的下落，他并不知情。但是他提到这里有一个姓张的铁匠，最近打铁的技艺突然大进。于是你决定去向这个铁匠打听打听。到了铁匠铺，看到张铁匠正在为丢了打铁锤烦恼，帮他寻找偷铁锤的小偷。经过张铁匠的回忆，有嫌疑的人包括村里的刘京、猎户冯壮和痞子钱四。来到村中展开调查，找到冯猎户了解到他只是想要张铁匠为他多打几个铁叉。在刘京家找到刘京，听他诉说了家中的不幸遭遇，你送他一些钱应急。刘京对你很是感激，终于说出他偷张铁匠打铁锤的事实。那一天他把锤从张铁匠的窗户扔出来，打算待会过去捡。可是等到他去捡锤时，却发现有人先下手把锤从屋外捡走了。看来无赖钱四的嫌疑最大，在村外找到无赖钱四，向他讨要铁锤。这里有三种方法可以要回铁锤：可以花2000文钱买回铁锤；也可以撒谎骗他要回铁锤；当然最解气的莫过于教训他一顿，把铁锤抢回来。得到铁锤后，交还给张铁匠。然后再向张铁匠打听田纲，得知他技艺大进全因为在后山发现了一本《铸经》，而这本书的署名人就是田纲。从张铁匠这里还可以学到制造捕兽夹的方法。你得到张铁匠的情报，来到后山寻找，终于找到了一个很隐蔽的山洞。用刺客的火眼金睛之术避过洞中的陷阱，终于在山洞的最里面找到了田纲。这田纲胆小如鼠，不过却很贪心。你费尽心机旁敲侧击外加利诱才终于套出始皇陵的大部分秘密。不过田纲也很机灵，最后开启始皇墓门的方法他始终不提，反而提出要考验你的偷盗能力，让你到衡山城去盗富商乌秸的贴身玉佩。<br>任务奖励：赠给刘京金钱，得到5000经验；拿回铁锤后，张铁匠会询问谁是偷锤的人，回答是钱四，得到3点智慧；回答是刘京，得到4000点经验；谁也不说，得到3点魅力。</p></blockquote><h3><span id="pzhu-xian-3-2">主线3-2</span><a href="#pzhu-xian-3-2" class="header-anchor">#</a></h3><blockquote><p>在乌府找到乌秸，得知他的爱子小虎被强盗绑架，勒索他一万文钱，可是目前他还凑不出这么大的数目。这里可以选择用一万文钱买下他的贴身玉佩；如果舍不得这笔钱，就要帮他去救回儿子。到城北的乱石岗杀死山贼，救回他的儿子。作为答谢，乌秸将玉佩赠送给你，并且还送你一卷**《司马穰苴兵法》**。<br>任务奖励：用钱买下玉佩，得到5000点经验值；救回他的儿子，得到6000点经验值和《司马穰苴兵法》。</p></blockquote><h3><span id="pzhi-xian-65-han-xin-jia-ru-qian-zhi-zhu-xian-3-2">支线65：韩信加入(前置：主线3-2)</span><a href="#pzhi-xian-65-han-xin-jia-ru-qian-zhi-zhu-xian-3-2" class="header-anchor">#</a></h3><blockquote><p>完成了解救乌秸儿子的任务，从乌府出来会遇到韩信，韩信会提出挑战，单挑打败他后，韩信就可以加入队伍了。</p></blockquote><h3><span id="pzhi-xian-66-bang-shang-ren-qi-zi-song-dong-yi">支线66：帮商人妻子送冬衣</span><a href="#pzhi-xian-66-bang-shang-ren-qi-zi-song-dong-yi" class="header-anchor">#</a></h3><blockquote><p>在民居中遇到商人妻子，她想给在彭城开杂货铺的丈夫送一件冬衣。帮他把冬衣送到彭城杂货铺的老板手中，任务完成。<br>任务奖励：百炼刀、2点声望。</p></blockquote><h3><span id="pzhi-xian-67-xun-zhao-gong-ju-xiang">支线67：寻找工具箱</span><a href="#pzhi-xian-67-xun-zhao-gong-ju-xiang" class="header-anchor">#</a></h3><blockquote><p>在民居中遇到木匠，他的工具箱遗失在城西的树林中。帮他前去寻找。在城西的树上找到工具箱，将它交还给木匠，任务完成。<br>任务奖励：<strong>龙眼木</strong>、1点声望。</p></blockquote><h3><span id="pzhi-xian-68-da-ting-mao-lin-de-zhu-chu-qian-zhi">支线68：打听毛林的住处(前置：)</span><a href="#pzhi-xian-68-da-ting-mao-lin-de-zhu-chu-qian-zhi" class="header-anchor">#</a></h3><blockquote><p>接到吴心寻找铸剑材料的任务后，来到衡山城，从路人处得知毛森的住处。到毛森家找到毛森，他正在寻找一块龙眼木。找到龙眼木送给他，他就会告诉你毛林已经搬到陈城去了。</p></blockquote><h3><span id="pzhu-xian-3-3">主线3-3</span><a href="#pzhu-xian-3-3" class="header-anchor">#</a></h3><blockquote><p>拿到乌秸的玉佩后，你赶回衡山村，将玉佩交给后山山洞中的田纲。田纲终于相信了你的能力，将进入始皇陵的秘道位置告诉了你。你了解到要想顺利进入始皇陵的内室，必须具备两样东西：一件是可以百毒不侵的金蟾珠，因为在墓室中布满了毒气；另一件是足以劈开玄铁重门的神兵利器。田纲告诉你有七把绝世神剑：干将、莫邪、湛卢、巨阙、工布、泰阿、鱼肠。只要拥有任一把，都足以碎金断石。百毒不侵的金蟾珠据说只有在西南的苗疆才能找到。并且开启最后的墓门需要一把特殊的钥匙，据说就藏在始皇陵的某处。得到始皇陵的情报后，还可以花5000文钱从田纲处买到书籍**《墨子杂守篇》**。</p></blockquote><h1><span id="di-si-zhang-bao-jian-yu-ling-zhu">第四章 宝剑与灵珠</span><a href="#di-si-zhang-bao-jian-yu-ling-zhu" class="header-anchor">#</a></h1><h2><span id="per-shi-wu-hu-qiu">二十五、虎丘</span><a href="#per-shi-wu-hu-qiu" class="header-anchor">#</a></h2><h3><span id="pzhi-xian-69-shi-jin-bu-mei">支线69：拾金不昧</span><a href="#pzhi-xian-69-shi-jin-bu-mei" class="header-anchor">#</a></h3><blockquote><p>在村中地上发现一个小布包，然后在村南会遇到丢失钱包的路人，可以选择将钱包还给他或者装作没看见，将钱私吞。<br>任务奖励：将小布包交还给他，得到400文钱和2点声望；选择将钱包私吞，得到2000文钱但声望下降1点。</p></blockquote><h3><span id="pzhi-xian-70-yu-da-han-da-du">支线70：与大汉打赌</span><a href="#pzhi-xian-70-yu-da-han-da-du" class="header-anchor">#</a></h3><blockquote><p>在村中遇到大汉，与他打赌如何不用力将一把剑弯折，然后立刻恢复成原来的模样。他让你选择身后屋中的一样东西，选择水缸，就可以赢得赌注。任务奖励：1000文钱、2点智慧。</p></blockquote><h3><span id="pzhi-xian-71-bao-jian-gan-jiang">支线71：宝剑干将</span><a href="#pzhi-xian-71-bao-jian-gan-jiang" class="header-anchor">#</a></h3><blockquote><p>从村中老者口中得知村子东北的小山就是昔日的吴王墓，据说吴王死时把两把宝剑干将和莫邪都陪葬在墓中，而最近那里经常闹鬼。你来到村子东北方的山洞，听到洞内有一群盗墓贼正在开会，原来这里闹鬼都是他们的把戏。从他们口中得知他们已经得到了干将和一把伪莫邪，你不由心中暗喜，没想到绝世宝剑这么快就出现在你面前。于是你闯进去打断了这群盗墓贼的发财美梦，一番激烈的战斗，你杀死这些盗墓贼得到了宝剑。<br>任务奖励：宝剑<strong>干将</strong>、太行之戈。</p></blockquote><h1><span id="er-shi-liu-chang-sha">二十六、长沙</span><a href="#er-shi-liu-chang-sha" class="header-anchor">#</a></h1><h2><span id="pzhi-xian-72-zhao-dao-cai-hua-zei">支线72：找到采花贼</span><a href="#pzhi-xian-72-zhao-dao-cai-hua-zei" class="header-anchor">#</a></h2><blockquote><p>在街上遇到衙役陈由，得知长沙城中出了一个采花贼，许多少女都相继失踪，连郡守的女儿也被拐走了，郡守为此大发雷霆，限期破案，否则都要斩他的脑袋。答应帮他寻找线索，随后在村子北方的地下洞窟中遇到阴哥，得知他就是采花贼，但是他说那些少女都是自愿跟他走的，而且他也没有欺负过她们。从洞内失踪少女的口中了解到这确实是事实。再找到阴哥，可以选择杀掉阴哥或者放了他。如果杀了阴哥，回到村中找到陈由，告诉他采花贼已经被你杀掉了，任务完成。放了阴哥再回去找到衙役陈由，表示帮不了他，让他赶紧离开，任务也可完成。<br>任务奖励：杀死阴哥，得到13000点经验值和3点魅力；放了阴哥，得到2点魅力。</p></blockquote><h2><span id="pzhi-xian-73-tao-yao-ling-zhi">支线73：讨要灵芝</span><a href="#pzhi-xian-73-tao-yao-ling-zhi" class="header-anchor">#</a></h2><blockquote><p>在酒楼中遇到苏泽正在借酒浇愁，原来他老娘身染一种怪病，只有村中齐财主家的九叶芝可以治愈这种怪病。但是齐财主趁人之危，竟然要2000文钱才肯卖，更让人痛恨的是齐财主提出如果苏泽把妻子送给他作小妾，灵芝就可以白送他。你听后义愤填膺，决定帮助苏泽。这里可以直接送给苏泽2000文钱；也可以杀掉齐财主，夺取九叶芝。再找到苏泽的家，将九叶芝交给苏泽，任务完成。<br>任务奖励：送给苏泽金钱，得到5000点经验值和2点声望；杀掉齐财主，得到8000点经验值。</p></blockquote><h2><span id="pzhi-xian-74-chu-diao-meng-hu">支线74：除掉猛虎(?)</span><a href="#pzhi-xian-74-chu-diao-meng-hu" class="header-anchor">#</a></h2><blockquote><p>到陈平家找到陈平，从他口中得知长沙附近出有猛虎经常伤人。你决定为民除害。杀老虎之前可以去何叔药铺要几个金桔。随后到村子东南的山坡上杀死猛虎，任务完成。<br>任务奖励：2点声望。</p></blockquote><h2><span id="per-shi-qi-he-jiang-cun">二十七、合江村</span><a href="#per-shi-qi-he-jiang-cun" class="header-anchor">#</a></h2><h3><span id="pzhu-xian-3-4">主线3-4</span><a href="#pzhu-xian-3-4" class="header-anchor">#</a></h3><blockquote><p>在合江村从村民的口中了解到金蟾珠在云雾谷的苗王处。</p></blockquote><h3><span id="pzhi-xian-75-hei-wu-zhu-shi-jian">支线75：黑巫术事件</span><a href="#pzhi-xian-75-hei-wu-zhu-shi-jian" class="header-anchor">#</a></h3><blockquote><p>在村长的家从村长那里了解到村子受到了黑巫术的诅咒，已经有很多人被诅咒而死，村子里的人都怀疑是村中的祭司昆蒲使用了黑巫术。再来到宗妲家，见到了祭司昆蒲的师弟宗妲。他发现你中了巫毒，并且告诉你要解除巫毒必须杀掉施放黑巫术的人，而施毒之人就是昆蒲。这里有两个选择：如果相信宗妲的话，到村子西南杀掉昆蒲，再回来找宗妲，他会解除你身上的毒咒，任务结束；如果不相信他的话，找到昆蒲后，昆蒲说出下毒的真正凶手正是宗妲，于是你和昆蒲一起去找他。在宗妲家的密室中找到了宗妲，他承认这一切都是他的阴谋。他早就对师兄昆蒲心怀嫉妒，认为自己比昆蒲强，所以暗中修行黑巫术，苦心设计了这个陷阱来杀死昆蒲。揭破了宗妲的阴谋，众人一起击败了宗妲，宗妲自杀身亡。这里要注意宗妲的法术攻击，他可以将人变成不能动弹的草人。宗妲死后，你身上的毒咒也终于消失了。此后昆蒲可以加入队伍，带上他再回到宗妲的家，可以解除宗妲家中的三个草人身上的毒咒，原来这些草人就是失踪的村人。宗妲虽然被自己的嫉妒心所吞噬，但是他仍然没有对无辜的村人下毒手，也许在他的内心深处仍然保持着善良的本性。</p></blockquote><h3><span id="pzhi-xian-76-jiao-mie-qiang-dao">支线76：剿灭强盗</span><a href="#pzhi-xian-76-jiao-mie-qiang-dao" class="header-anchor">#</a></h3><blockquote><p>在村子东面有一个废墟，里面盘踞着一伙强盗，可以剿灭他们。</p></blockquote><h3><span id="pzhi-xian-77-jin-long-kui">支线77：金龙盔</span><a href="#pzhi-xian-77-jin-long-kui" class="header-anchor">#</a></h3><h2><span id="per-shi-ba-yun-wu-gu">二十八、云雾谷</span><a href="#per-shi-ba-yun-wu-gu" class="header-anchor">#</a></h2><h3><span id="pzhu-xian-3-5">主线3-5</span><a href="#pzhu-xian-3-5" class="header-anchor">#</a></h3><blockquote><p>来到云雾谷口，一个面貌和蔼的青年主动迎了上来。他叫炎江，听说你要去谷里寻找金蟾珠，他便邀请你一起绑架苗王女儿茵珠，然后胁迫苗王交出金蟾珠。如果答应他绑架茵珠，那么只要杀掉茵珠就可以得到金蟾珠；如果不理他，在谷里遇到茵珠，向她提起此事。通过和茵珠的对话，你了解到炎江原来是她的族人，并且是她的丈夫。但炎江为了图谋苗王的位子，企图毒死苗王，事情败露后被鞭打一顿赶出谷来。不料炎江贼心不死，竟然又要绑架她。茵珠答应送你金蟾珠，但是提出条件要你杀死炎江。回到谷口杀死炎江后，得到<strong>金蟾珠</strong>，同时茵珠也可以加入队伍。与炎江战斗时要注意炎江周围的杀手，尽量避免被他们围攻。</p></blockquote><h3><span id="pzhi-xian-78-xun-zhao-hou-jiu">支线78：寻找猴酒</span><a href="#pzhi-xian-78-xun-zhao-hou-jiu" class="header-anchor">#</a></h3><blockquote><p>在云雾谷西面有一棵参天大树，在树洞里可以得到两壶猴酒。</p></blockquote><h3><span id="pzhi-xian-79-xun-zhao-bao-cang">支线79：寻找宝藏</span><a href="#pzhi-xian-79-xun-zhao-bao-cang" class="header-anchor">#</a></h3><blockquote><p>接到吴心寻找铸剑材料的任务，从丁迅手中得到藏宝图，再次来到云雾谷，在谷内发现一个神秘山洞，进入可以找到盘古巨斧、神兽甲和地火石。进洞之前最好准备大量的食物药材，因为洞中有大量的虎蛟和善翼，尤其是善翼，攻击力和防御力都很强。要尽量避免正面冲突，争取逐个消灭它们，减少自己的伤害。好不容易从洞穴中脱出，宋季和丁迅拦在你的面前，要你留下宝物。原来这一切都是他们设计的圈套，利用你去取宝物，他们再坐收渔利。如果前面帮丁迅找过医生，这里丁迅就会良心发现，自动离开。这样你就可以集中对付宋季。打败他们后，任务结束。<br>任务奖励：盘古巨斧、神兽甲、地火石。</p></blockquote><h2><span id="per-shi-jiu-wu-hua-cun">二十九、五华村</span><a href="#per-shi-jiu-wu-hua-cun" class="header-anchor">#</a></h2><h3><span id="pzhi-xian-80-jie-chuan-yi-ren-de-ba-xi">支线80：揭穿艺人的把戏</span><a href="#pzhi-xian-80-jie-chuan-yi-ren-de-ba-xi" class="header-anchor">#</a></h3><blockquote><p>在村中遇到卖大力丸的街头艺人，观察他的铁锤察觉出有鬼。与围观村民打赌，猜卖艺人的铁锤是真是假，然后可以选择花400文钱买下铁锤或者用武力夺取铁锤，将铁锤拿给围观村民看，揭穿艺人的骗人把戏。如果杀死艺人则拿不到围观村民的奖励。<br>任务奖励：累计得到9000点经验值和2点魅力。</p></blockquote><h3><span id="pzhi-xian-81-bang-ji-si-mai-wu-pin">支线81：帮祭司买物品</span><a href="#pzhi-xian-81-bang-ji-si-mai-wu-pin" class="header-anchor">#</a></h3><blockquote><p>在祠堂里找到祭司，他正在准备祭祀，可是祭祀物品还缺五个麦饼和两个华圣冬桃。帮他去筹集这些东西，到村内的药铺买到这些东西，交给祭司后任务完成。<br>任务奖励：金矿石、<strong>《商君书》</strong>、1点声望。</p></blockquote><h3><span id="pzhi-xian-82-jiao-xun-hun-hun">支线82：教训混混</span><a href="#pzhi-xian-82-jiao-xun-hun-hun" class="header-anchor">#</a></h3><blockquote><p>在村民处了解到村中混混的恶行，帮村民教训他一顿，从村民处得到奖励。<br>任务奖励：2000文钱。</p></blockquote><h3><span id="pzhi-xian-83-ke-zhan-yi-an">支线83：客栈疑案</span><a href="#pzhi-xian-83-ke-zhan-yi-an" class="header-anchor">#</a></h3><blockquote><p>在村中客栈向老板要一间房间休息，由于客房住满，老板把他的房间腾出一间给你。睡到半夜，忽然一声巨响，接着传来老板的一声惨叫。你急忙起身一看，只见一块巨石将老板连人带床砸了个稀烂。正惊愕间，客栈伙计也被惊醒，见状急忙报了官。县官把你当成嫌疑犯，要你在三天内证明自己的清白。在客栈厨房你找到了王来贵，了解到店里的长工赵来富、丁来瑞以及丫鬟小翠三人的情况。再在店里找到丁来瑞了解情况，得知他单恋小翠，而小翠却只喜欢赵来福。你劝解他一番。再找到店小二了解到客栈老板也对丫鬟小翠有意思。在客栈后面的柴房里，你找到断了腿的赵来富，了解到他前些天从房上掉下来摔断了腿，你留给他一些钱治伤。接下来你又在在客栈门口的菜摊上了解到王来贵前些日子买了些杀虫药。在药铺了解到赵长富曾经买过两罐蜂蜜。在铁匠铺了解到丁来瑞曾经买过几块磨刀石。随后再回到客栈找到赵来富、丁来瑞和王来贵三个人分别了解情况。经过一番推敲，你终于找出了真正的凶手，来到县衙大堂指出了凶手就是赵来富。县官传来了赵来富，他终于说出了事实真相：原来赵来富与小翠两情相悦，而客栈老板几次想强占小翠。赵来富忍无可忍才出此下策，他把大石放在屋梁上，再将蜂蜜涂在粱上吸引白蚁蛀坏房梁。就这样谋杀了老板。县官正要宣判，小翠冲了进来，供出她其实也参与了谋杀老板的行动，要与赵来富一起受刑。你被他们两人的爱情深深感动了，决定帮他们脱离苦海。于是你拔剑威逼县官放掉两人，再赠与他们盘缠远走它方。任务完成。<br>任务奖励：累计得到30000点经验值。</p></blockquote><h2><span id="psan-shi-han-zhong">三十、汉中</span><a href="#psan-shi-han-zhong" class="header-anchor">#</a></h2><h3><span id="pzhi-xian-84-zhao-dao-zheng-que-de-yao-chi">支线84：找到正确的钥匙</span><a href="#pzhi-xian-84-zhao-dao-zheng-que-de-yao-chi" class="header-anchor">#</a></h3><blockquote><p>在陆平的家找到陆平，得知他家中密室藏有许多祖传的宝贝，但是他却不知道该用那一把钥匙打开，而且如果三次打不开密室，大门就会永远关闭。答应帮他打开大门，他交给你七把钥匙。在每把钥匙上都刻着一个字，而在密室的大门上刻着“断桥残雪入眼前”。你猜出谜底是个“霜”字，于是选用霜字的钥匙打开大门。在藏宝室得到《山海经》。再把正确的钥匙还给陆平，任务完成。<br>任务奖励：2000文钱、<strong>《山海经》</strong>。</p></blockquote><h3><span id="pzhi-xian-85-bang-xi-hu-zhao-bu-shou-jia">支线85：帮猎户找捕兽夹</span><a href="#pzhi-xian-85-bang-xi-hu-zhao-bu-shou-jia" class="header-anchor">#</a></h3><blockquote><p>在村中遇到猎户，他正在找一个结实好用的捕兽夹。制造一个捕兽夹给他，任务完成。<br>任务奖励：提醒他索要报酬，得到200文钱和5000点经验值。</p></blockquote><h3><span id="pzhi-xian-86-an-wei-min-fu-xiao-li">支线86：安慰民妇晓丽</span><a href="#pzhi-xian-86-an-wei-min-fu-xiao-li" class="header-anchor">#</a></h3><blockquote><p>进入民居遇到民妇晓丽，她的丈夫徐庆去戍卫边疆和匈奴作战，曾经给他写过一封信，她央求你告诉她信上的内容。你接过信一看原来这封信竟是用鲜血写成的诀别书，她的丈夫徐庆决定去刺杀匈奴单于，自知很难活着回来，于是写了这封信回来与她诀别。如果告诉晓丽实情，则魅力声望都会下降1点；隐瞒实情安慰她，则魅力、声望、悟性都会上升1点。</p></blockquote><h2><span id="psan-shi-yi-ju-lu">三十一、巨鹿</span><a href="#psan-shi-yi-ju-lu" class="header-anchor">#</a></h2><h3><span id="pzhi-xian-87-bang-mo-hong-bao-chou">支线87：帮莫洪报仇</span><a href="#pzhi-xian-87-bang-mo-hong-bao-chou" class="header-anchor">#</a></h3><blockquote><p>在村中找到崔九打听铸剑师的事，却听道了莫洪的冤仇：村中的恶霸张三张五兄弟侮辱了莫洪的妻子，导致她悬梁自尽，而莫洪又是个文弱书生，无法为他妻子报仇。你决定替莫洪报仇，在莫洪家见到莫洪，不料他正是莫邪的后人，而莫邪剑一直收藏在他家中。莫洪表示如果你能杀掉张三张五兄弟为他报仇，他就将莫邪剑相赠。杀死张三和张五，任务完成。<br>任务奖励：<strong>莫邪剑</strong>、2点声望。</p></blockquote><h1><span id="di-wu-zhang-huang-ling-zhi-mi">第五章 皇陵之谜</span><a href="#di-wu-zhang-huang-ling-zhi-mi" class="header-anchor">#</a></h1><h2><span id="pli-shan">骊山</span><a href="#pli-shan" class="header-anchor">#</a></h2><h3><span id="pzhu-xian-5-1">主线5-1</span><a href="#pzhu-xian-5-1" class="header-anchor">#</a></h3><blockquote><p>拿到七把宝剑中的任一把和金蟾珠后，你从咸阳来到骊山。在山上找到了通往始皇陵的入口。注意骊山有大批的狼群，发现狼群后可以适当的后撤，避免引出更多的狼。</p></blockquote><h2><span id="pshi-huang-ling-wai-cheng">始皇陵外城</span><a href="#pshi-huang-ling-wai-cheng" class="header-anchor">#</a></h2><h3><span id="pzhu-xian-5-2">主线5-2</span><a href="#pzhu-xian-5-2" class="header-anchor">#</a></h3><blockquote><p>穿过骊山的秘道，你来到了始皇陵外城，正象田纲所说的那样，始皇陵内处处布满了夺命的机关。不过好在你是有备而来，一边让同伴用火眼金睛之术侦测着陷阱，一边步步为营，小心谨慎地摸索前进，终于你找到了内城的入口。这里的兵马俑随时都有可能变成敌人向你攻击。注意兵马俑都是土属性的，要尽量多使用克土属性的技能，或者装备克土属性的武器和防具。</p></blockquote><h2><span id="pshi-huang-ling-nei-cheng">始皇陵内城</span><a href="#pshi-huang-ling-nei-cheng" class="header-anchor">#</a></h2><h3><span id="pzhu-xian-5-3">主线5-3</span><a href="#pzhu-xian-5-3" class="header-anchor">#</a></h3><blockquote><p>来到内城，经过你仔细的寻找，终于发现了始皇墓室，但是一把奇形的巨锁将墓室的大门紧紧锁住，看来没有钥匙是打不开的。你想起田纲的话，于是又开始四处寻找打开墓门的钥匙。很快你就发现在始皇墓室两侧各有一个墓室，里面各有一个巨大的机器兽，打倒它们后你找到了阴文虎符和阳文虎符。将它们合在一起，终于始皇墓室的大门向你敞开了。你按捺住激动的心情，走进墓室，用双手轻轻打开始皇帝的陵寝，你终于又一次见到了自己的父亲始皇帝。经过仔细验查之后，你感到无比的震惊！父皇的腹腔内明显有中毒的迹象，而更让你震惊的是父亲勃颈上的勒痕以及手中那块胡亥的贴身玉诀……这一切无一不在向你证明父亲被谋杀的事实。可是你怎么也不相信平日里那个懦弱无能的弟弟会亲手杀害自己的亲生父亲，这一切的背后究竟隐藏着什么？此刻你真想立刻飞回咸阳，向胡亥问个清楚。</p></blockquote><h1><span id="di-liu-zhang-zhang-yi-qiu-yuan">第六章 仗义求援</span><a href="#di-liu-zhang-zhang-yi-qiu-yuan" class="header-anchor">#</a></h1><h2><span id="pli-shan">骊山</span><a href="#pli-shan" class="header-anchor">#</a></h2><h3><span id="pzhi-xian-88-fang-zhong">支线88：方仲</span><a href="#pzhi-xian-88-fang-zhong" class="header-anchor">#</a></h3><blockquote><p>从始皇陵出来，在骊山回去的路上你遇到了墨门钜子方仲，他正在躲避师弟赵霸的追杀。问起事情的原委，原来是赵霸投考了朝廷，弑师篡位，方仲带着墨门令牌逃了出来。正说话间，赵霸派来的杀手追了上来，将方仲团团围住。你帮助方仲杀退了追兵，从方仲口中得知陈胜吴广在大泽乡起义的消息，起义军分兵三路进攻咸阳，其中周文一路已经逼近咸阳了。这时你的心情十分复杂，虽然你痛恨胡亥赵高的暴行，但是你毕竟是大秦的太子，眼看秦朝的天下岌岌可危，而自己却无力回天，一时间矛盾和痛苦占据了你的心房。此后方仲可以加入队伍。</p></blockquote><h2><span id="pxian-yang">咸阳</span><a href="#pxian-yang" class="header-anchor">#</a></h2><h3><span id="pzhu-xian-6-1">主线6-1</span><a href="#pzhu-xian-6-1" class="header-anchor">#</a></h3><blockquote><p>从骊山回到咸阳，你又找到了桓峰，向他说明了调查始皇陵的结果。桓峰也很吃惊，经过他冷静的分析，推断出赵高很有可能就是幕后的黑手，一切的元凶。可是赵高已经是朝廷的权臣，兵马大权在握，平日里想要接近他都难，如何才能报这杀父之仇呢？桓峰建议你借助各地起义军的力量来消弱赵高的势力，然后再伺机报仇。你听从了桓峰的建议，从他口中了解到起义军周文的部队已经占据了咸阳东部的戏水村，于是决定前往试探。</p></blockquote><h2><span id="pxi-shui-cun">戏水村</span><a href="#pxi-shui-cun" class="header-anchor">#</a></h2><h3><span id="pzhu-xian-6-2">主线6-2</span><a href="#pzhu-xian-6-2" class="header-anchor">#</a></h3><blockquote><p>从咸阳来到戏水村，在义军营寨内见到将领周文，得知少府章邯武装了七十万修建阿房宫的刑徒，已经将周文困在这里，形势已经相当危急。周文几次派出请求援军的使者，都没有突围出去。你决定帮周文去搬救兵，周文将求救信交与你，让你迅速赶往陈城向陈胜搬取救兵。如果选择与周文分析当前形势，而且分析正确的话可以得到经验值。</p></blockquote><h3><span id="pzhi-xian-ren-wu-89-quan-shuo-xiao-yuan-yuan-hui-jia">支线任务89：劝说小媛媛回家</span><a href="#pzhi-xian-ren-wu-89-quan-shuo-xiao-yuan-yuan-hui-jia" class="header-anchor">#</a></h3><blockquote><p>在民居中遇到中年妇女，她让你帮她叫小女儿媛媛回家。在村中找到小媛媛劝说她回家，任务完成。<br>任务奖励：2000点经验值、1点声望、1点魅力。</p></blockquote><h2><span id="pqiu-jiu-zhan-chang">求救战场</span><a href="#pqiu-jiu-zhan-chang" class="header-anchor">#</a></h2><h3><span id="pzhu-xian-6-3">主线6-3</span><a href="#pzhu-xian-6-3" class="header-anchor">#</a></h3><blockquote><p>接受了周文的委托，你进入了求救战场，打算突破这里的秦军营寨赶往陈城。营寨内布满了秦军，注意不要猛冲冒进，要保持耐心，将敌人逐渐引出来消灭掉。如果敌人中有法师，要集中力量先杀死他。营寨的出口处还埋伏有很多伏兵，注意不要被他们包围住。</p></blockquote><h2><span id="pchen-cheng">陈城</span><a href="#pchen-cheng" class="header-anchor">#</a></h2><h3><span id="pzhu-xian-6-4">主线6-4</span><a href="#pzhu-xian-6-4" class="header-anchor">#</a></h3><blockquote><p>突破了章邯的包围圈，你加快攻击速度赶到了陈城。在帅府你见到了起义军的领袖人物陈胜，将周文的求救信交给他。不料陈胜见信后竟然无动于衷，反而叫你先去休息。你正摸不着头脑，在帅府门前遇到了陈胜的谋士蔡赐，听他说道将军万勇带着一些士兵气冲冲往城西去了。你决定前去看看究竟。刚到城外，就看到一个妇人带着一个孩子向你奔过来求救，一问才知道她们是义军将领武臣的家眷，陈胜正在派人追杀她们。答应救助她们，然后击退万勇的追兵。之后去找蔡赐了解情况，原来是武臣攻下邯郸后擅自称王，要与陈胜平起平坐，陈胜大怒，要族灭武臣的家属。你和蔡赐一同劝说陈胜以大局为重，先忍耐武臣的行为，承认他的王位，再命令他西向出兵灭秦。陈胜觉得有理，决定听从蔡赐的建议。让你担任使者去向武臣祝贺并令他发兵去救周文。无奈之下，你只有接受了这个差使。<br>任务奖励：完成周文的委托，得到20000点经验值。救下武臣的家眷，得到20000点经验值。</p></blockquote><h3><span id="pzhi-xian-ren-wu-90-diao-cha-zhai-yuan">支线任务90：调查宅院</span><a href="#pzhi-xian-ren-wu-90-diao-cha-zhai-yuan" class="header-anchor">#</a></h3><blockquote><p>在城内遇到一个看宅的老汉，他告诉你这屋子闹鬼，宅子后面的地洞里经常发出怪声，很多人进去后都没有再回来。帮他去调查地洞，在洞内发现了很多虎蛟，杀死他们后，调查地洞，发现所谓的怪声是风穿过洞穴发出的声音。出洞将真相告知老汉，任务完成。<br>任务奖励：20000点经验值、2点智慧。</p></blockquote><h3><span id="pzhi-xian-91-xun-zhao-xue-song-mu">支线91：寻找雪松木</span><a href="#pzhi-xian-91-xun-zhao-xue-song-mu" class="header-anchor">#</a></h3><blockquote><p>接到吴心寻找铸剑材料的任务后，在衡山城毛森处得知毛林搬来了陈城。向街上的儿童打听到毛林家的位置。找到毛林询问雪松木的下落，得知他要拿雪松木跟隔壁的兰二换哮喘病的秘方，找隔壁的兰二要到秘方，交给毛林，得到雪松木。<br>任务奖励：<strong>雪松木</strong>。</p></blockquote><h2><span id="phan-dan">邯郸</span><a href="#phan-dan" class="header-anchor">#</a></h2><h3><span id="pzhu-xian-6-5">主线6-5</span><a href="#pzhu-xian-6-5" class="header-anchor">#</a></h3><blockquote><p>从陈城来到邯郸，到邯郸晋见武臣，传达了陈胜的意思，不料武臣的谋士张耳看破了陈胜的意图，劝武臣不要发兵咸阳，而是继续向南北扩张地盘。武臣听从他的建议，随即把你们软禁起来。你看准机会杀死守卫，拿到客房钥匙，救出同伴，一起杀出武臣帅府。</p></blockquote><h3><span id="pzhi-xian-92-hu-song-bao-zhu">支线92：护送宝珠</span><a href="#pzhi-xian-92-hu-song-bao-zhu" class="header-anchor">#</a></h3><blockquote><p>在客栈外和商人说话，得知刘岩买到了稀世宝珠。进客栈找到刘岩，他委托你将宝珠送到他丰县的家中，报酬是8000文钱和一把家传宝刀。</p></blockquote><h2><span id="pchen-cheng">陈城</span><a href="#pchen-cheng" class="header-anchor">#</a></h2><h3><span id="pzhu-xian-6-6">主线6-6</span><a href="#pzhu-xian-6-6" class="header-anchor">#</a></h3><blockquote><p>从邯郸回到陈城，到帅府向陈胜报告。迎面遇见一个浑身血污的义军士兵，原来周文的部队已经被章邯击溃了。从他口中听到刘邦也已经起兵，并且已经攻占了丰县。到帅府内见到陈胜，将武臣的行为向他诉说一遍。陈胜尽管对武臣恨得牙痒，但是一谈到出兵救援周文，他又开始推托。你对这支起义军内部的争斗大失所望，认为他们不可能打败章邯率领的秦军。这时你想起了刘邦，遂决定前去丰县探望他。</p></blockquote><h1><span id="di-qi-zhang-jie-bing-duo-cheng">第七章 借兵夺城</span><a href="#di-qi-zhang-jie-bing-duo-cheng" class="header-anchor">#</a></h1><h2><span id="pfeng-xian">丰县</span><a href="#pfeng-xian" class="header-anchor">#</a></h2><h3><span id="pzhu-xian-7-1">主线7-1</span><a href="#pzhu-xian-7-1" class="header-anchor">#</a></h3><blockquote><p>你赶到丰县，却看到丰县的城门紧闭，而且戒备森严，而刘邦的大营却驻扎在城外。到营寨内见到刘邦一打听，原来他占领丰县后带兵出去打仗，让部下雍齿镇守丰县，回来后却发现雍齿已经投降秦军了。这几日他连续攻打丰县不下，反而折损了许多兵马，如果等到秦兵的援军一到那形势可就危急了。问起解决之策，刘邦说起昔日楚国大将项燕的后人项梁已经起兵反秦，手下有十几万兵马，而且侄儿项羽勇力过人，号称霸王。现在他们正在攻打离此不远的薛城，刘邦想派人去向项粱借五千精兵来攻打丰县。于是你自告奋勇答应替他跑一趟。</p></blockquote><h2><span id="pxie-cheng">薛城</span><a href="#pxie-cheng" class="header-anchor">#</a></h2><h3><span id="pzhu-xian-7-2">主线7-2</span><a href="#pzhu-xian-7-2" class="header-anchor">#</a></h3><blockquote><p>你从丰县赶到了薛城，在帅府见到了项梁，将刘邦求援的事情告诉项梁。项梁很爽快地借给你五千精兵，还派了十员虎将助阵。而号称霸王的项羽带兵去取襄城，并不在薛城内。从项粱口中得知陈胜的部队已经被章邯击溃，全军覆没了。项梁有称王之意，询问你的意见，选择不同意其称王。随后范增出现，力劝项梁立楚王后人为王，以号召天下义军。项梁听从了他的建议，开始寻访楚王的遗孤。在城门外你找到正在哭泣的牧童，他的羊被山魈偷走了。帮他杀掉城南山坡上的山魈王，得到山魈的头骨。将头骨交给牧童，牧童会送给你一块玉石，你仔细一看竟是楚王之玺。原来这个牧童就是你要寻找的楚怀王的后人铁心。将玉石还给铁心，然后回到薛城帅府，告诉范增已经找到楚怀王后人的消息。<br>任务奖励：累计得到40000点经验值和5点声望。</p></blockquote><h3><span id="pzhi-xian-93-qu-zhu-ye-zhu">支线93：驱逐野猪</span><a href="#pzhi-xian-93-qu-zhu-ye-zhu" class="header-anchor">#</a></h3><blockquote><p>在城外遇到卫青，得知其城外的祖坟最近经常被野猪践踏。答应帮他驱逐野猪，之后到城北方的坟地杀掉野猪。回来告知卫青，任务完成。<br>任务奖励：20000点经验值、2000金钱、1点声望。</p></blockquote><h3><span id="pzhi-xian-94-ye-wan-de-zao-yin">支线94：夜晚的噪音</span><a href="#pzhi-xian-94-ye-wan-de-zao-yin" class="header-anchor">#</a></h3><blockquote><p>在城西的刘阳家见到刘阳，听他说起最近晚上隔壁总是有很大的动静，吵得他无法入睡，可是白天却很安静，一个人都没有。到隔壁调查，发现一个秘道，里面藏了好几箱宝贝，原来这是个强盗窝，晚上的嘈杂声就是他们挖掘地道发出的声音。消灭了这些强盗，回去告诉刘阳可以安心睡觉了，任务完成。<br>任务奖励：2点声望。</p></blockquote><h3><span id="pzhi-xian-95-diao-cha-jiu-guan-fu-jin-de-lao-hu">支线95：调查酒馆附近的老虎</span><a href="#pzhi-xian-95-diao-cha-jiu-guan-fu-jin-de-lao-hu" class="header-anchor">#</a></h3><blockquote><p>在城中的小酒馆找到老板张志鹏，得知酒馆后院最近经常有老虎出没，以致客人流失，酒馆眼看就要关门了。答应帮他调查此事，从酒馆旁门来到后院，竟然真的发现了一只老虎，打倒老虎后才发现这老虎是人假扮的。逼问扮虎的人，得知这派人来扮老虎的人就是是对面酒楼的掌柜雪峰。回去告诉张志鹏老虎已经被你消灭了，可以选择要报酬或者不要报酬。之后到酒楼中以此事要挟老板雪峰，可以选择敲他一笔钱或者警告他。<br>任务奖励：不要张志鹏的报酬，得到15000点经验值，声望1点，魅力2点；要报酬得到金钱500，声望下降1点，魅力下降2点。敲雪峰一笔钱，得到金钱2000，声望下降1点，魅力下降2点；警告他得到10000点经验值，1点声望和1点魅力。</p></blockquote><h2><span id="pfeng-xian">丰县</span><a href="#pfeng-xian" class="header-anchor">#</a></h2><h3><span id="pzhu-xian-7-3">主线7-3</span><a href="#pzhu-xian-7-3" class="header-anchor">#</a></h3><blockquote><p>从项粱处要到援军后，你返回了丰县。刘邦见到援军，自然喜出望外。你问起刘邦破城的方案，他说为了避免过多的伤亡，打算派人潜进丰县，制造混乱，然后里应外合攻破城池。你自动请缨，潜进城中制造混乱。刘邦心中早就想请你前去，见你主动开口正中他的下怀。找到萧何了解到丰县城墙的西南角靠近山壁，可以利用地形翻越进城。你与伙伴们来趁夜来到到城郭西南角的山壁，悄悄翻进城内。你决定去刺杀雍齿来制造混乱。由于帅府正门前士兵众多，你只能从后门潜入府邸。这里要注意雍齿会召唤出很多士兵，如果与他正面混战，难度会很大。最好一开始战斗就往外撤，然后再将敌人一点一点引出来集中消灭，最后剩下雍齿一个人就好对付多了。杀掉雍齿后，城中果然一片大乱，刘邦趁势进攻夺回了丰县。庆功宴上，刘邦对你的功劳赞不绝口。你的假名“子秦”也传遍了义军上下，名噪一时。你问起刘邦以后的打算，他感到自己势单力孤，决定率兵到薛城与项梁汇合，共伐暴秦。<br>任务奖励：得到20000点经验。</p></blockquote><h3><span id="pzhi-xian-96-sha-diao-han-ji">支线96：杀掉韩吉</span><a href="#pzhi-xian-96-sha-diao-han-ji" class="header-anchor">#</a></h3><blockquote><p>在刺杀雍齿之前，从居民胡克口中得知县中的韩吉倚仗官势，霸占了城中唯一的水井，向百姓盘剥重税。城中的张老汉从外地运来两车水，韩吉就把他的腿打断了。到张老汉家了解了情况，你决心为百姓除此大害。找到韩吉的家杀掉他，任务完成。<br>任务奖励：40000点经验值、2点声望。</p></blockquote><h3><span id="pzhi-xian-97-hu-song-bao-zhu">支线97：护送宝珠</span><a href="#pzhi-xian-97-hu-song-bao-zhu" class="header-anchor">#</a></h3><blockquote><p>之前在邯郸酒楼接受刘岩运送宝珠的任务，这时找到他家，将宝珠交还给他，任务完成。<br>任务奖励：金钱8000、邀星刀。</p></blockquote><h3><span id="pzhi-xian-98-quan-shuo-he-ji-hui-jia">支线98：劝说何纪回家</span><a href="#pzhi-xian-98-quan-shuo-he-ji-hui-jia" class="header-anchor">#</a></h3><blockquote><p>在何家见到何纪的妻子，听她说起丈夫何纪整日和几个混混为伍，导致夫妻反目。答应帮他劝说何纪回家。然后到酒楼中找到何纪，假装他的表亲劝说他回家，何纪虽然心动，但是忌惮身边的两个混混，不敢有所表示，于是你杀掉旁边的两个混混，何纪终于回心转意答应回家。任务完成。<br>任务奖励：40000点经验值。如果杀掉何纪或他妻子都没有经验值。</p></blockquote><h1><span id="di-ba-zhang-yong-chuang-tian-lao">第八章 勇闯天牢</span><a href="#di-ba-zhang-yong-chuang-tian-lao" class="header-anchor">#</a></h1><h2><span id="pxie-cheng">薛城</span><a href="#pxie-cheng" class="header-anchor">#</a></h2><h3><span id="pzhu-xian-8-1">主线8-1</span><a href="#pzhu-xian-8-1" class="header-anchor">#</a></h3><blockquote><p>来到薛城，在帅府里你第一次见到了项羽，见他相貌奇异，身姿魁伟，不由心下暗暗赞叹。听到刘邦和项羽正在商议如何攻打三川郡。你想起三川郡的守将正是你的好友——李斯的儿子李由。于是你请命去劝降李由，众人见你胸有成竹，欣然同意你前往一试。</p></blockquote><h2><span id="psan-chuan-jun">三川郡</span><a href="#psan-chuan-jun" class="header-anchor">#</a></h2><h3><span id="pzhu-xian-8-2">主线8-2</span><a href="#pzhu-xian-8-2" class="header-anchor">#</a></h3><blockquote><p>来到三川郡，你冒充京城来的御使混进帅府，从门口守卫那里打听到之前已经有一位御使到达了三川郡。在帅府客房找到了御使，从他手中得到赵高写给三川郡守陆鲂的密函。这里可以选择胁迫、欺骗或者杀死他三种手段得到密函。在这封密函中，赵高要郡守陆鲂制造李由通敌叛国的伪证，以便他铲除最后的障碍李斯。在帅府内你见到了好友李由，他见到你没有死，十分惊喜。当听到你劝他投降义军献出三川郡，他大惑不解，你将赵高的罪行告诉了他，并表示对如今分崩离析的大秦天下已无眷顾之情，现在你的心中只有一个目的，那就是亲手除掉赵高，得报这一身的血海深仇。见李由还有犹豫，你便将手中密函交给他。李由看了密函，得知父亲李斯已经被赵高下了大狱，终于下定决心献城投降。为了掩人耳目，李由听从了你的建议，利用诈死潜回咸阳去营救父亲李斯。你决定助李由一臂之力，与他约定在咸阳酒楼碰面。<br>劝降了李由，刚从帅府出来，迎面遇上了郡守陆鲂来捉拿你，你拔剑斩了陆鲂，杀出了帅府。回到薛城，众人见你成功归来，都很高兴。你把李由诈死投降的计划告诉刘邦。随后义军顺利攻下了三川郡，而李由战死的消息也迅速蔓延开来。你见义军攻势已无阻碍，便辞别刘邦，赶往咸阳与李由汇合。<br>任务奖励：胁迫御使，得到10000点经验值；杀死御使，无经验；欺骗御使，得到45000点经验值。劝降李由成功，得到50000点经验值。</p></blockquote><h2><span id="pxian-yang">咸阳</span><a href="#pxian-yang" class="header-anchor">#</a></h2><h3><span id="pzhu-xian-8-3">主线8-3</span><a href="#pzhu-xian-8-3" class="header-anchor">#</a></h3><blockquote><p>回到咸阳，在城西的酒楼你见到了李由。此时李由可以加入队伍。他说起天牢戒备很严，没有通行文书很难进入。这时你又想起了桓峰，于是一行人来到桓峰府，桓峰给你写了一封天牢的通行公文。凭着桓峰的文书，你们通过了层层盘查，不过这种出乎意料的顺利总让你感到有些奇怪。终于在天牢三层找到了李斯。李斯一见到你，便涕泪俱下，痛悔自己的过错，说出了他因为贪图权势，顺从赵高篡改始皇遗诏的真相。见到儿子李由平安无事，他十分欣慰，甘愿一死以偿其罪。但是当听到你们是凭着桓峰的文书到达此地时，他立刻脸色大变，急声叫你们赶紧离开。你正要问原因，周围忽然涌出无数秦兵，桓峰阴笑着出现在你的面前。没有想到至交好友竟会出卖自己，你的心中充满了惊愕和愤怒。这时李斯告诉你，桓峰已经被赵高的巫术所控制，现在的他只不过是行尸走肉而已。你和伙伴们一起奋力杀向牢门，周围的秦兵纷纷溃散，桓峰终于出现在你的眼前。尽管你从未想过要和这个亲如手足的好友交战，但严酷的现实却再一次使你陷入了两难的境地。终于在苦战之下，桓峰终于倒在了你的剑下。此时如果队伍内有赵茜，她会阻止你最后杀掉桓峰。<br>众人杀至大牢二层，都有些疲惫了，而大牢外面已经被无数的秦军围了个水泄不通，如果冲出去将肯定是死路一条。这时你在牢房中遇到了囚徒张三，在和他的交谈中得知他是一个神偷，为了躲避追捕他的捕快，故意被抓住藏在大牢中。他佩服你勇闯天牢，确实是条好汉，指点你从他挖的地道中逃生。</p></blockquote><h2><span id="pxi-shui-cun">戏水村</span><a href="#pxi-shui-cun" class="header-anchor">#</a></h2><h3><span id="pzhu-xian-8-4">主线8-4</span><a href="#pzhu-xian-8-4" class="header-anchor">#</a></h3><blockquote><p>你得到神偷张三的帮助，穿过地道从咸阳天牢中逃出生天。出了地道，你已经身处戏水村。向道旁的武士打听义军的动向，得知项梁在定陶被章邯打败，自己也死在乱军当中。但项羽随后在河北破釜沉舟，大战章邯，九战九胜，章邯节节败退，现在两军正在巨鹿对峙。你意识到这一战是胜负的关键，决定马上赶往巨鹿。</p></blockquote><h3><span id="pzhi-xian-99-fei-chu-pei-zang-lou-xi">支线99 废除陪葬陋习</span><a href="#pzhi-xian-99-fei-chu-pei-zang-lou-xi" class="header-anchor">#</a></h3><blockquote><p>在戏水村遇到正在逃跑的秋水，得知他的丈夫不久前死了，而村里的人要捉住她陪葬。你答应救助她，随后村民追到，得知这一切都是村长的命令。于是你到村中找村长理论，而秋水也鼓起勇气当众揭穿村长杀害她丈夫的暴行。原来村长贪图她的美色，正在意图不轨时被她丈夫发现，不想村长一刀就杀了她丈夫，而后又威逼她改嫁，秋水不从，村长就要她陪葬。听到真相，愤怒的村民们一拥而上杀死了村长。村长虽然死了，可是村民们依然要遵循祖宗的规矩，要秋水陪葬。经过你一番劝解，村民们答应如果能杀死村子西北方的怪兽，就更改这一族规。于是你到村子的西北方杀掉怪物，拿到怪物头骨，将它交给村中的长老，村中陪葬的陋习终于被取消了。任务完成。<br>任务奖励：5点声望。</p></blockquote><h1><span id="di-jiu-zhang-ju-lu-xie-tu">第九章 巨鹿血屠</span><a href="#di-jiu-zhang-ju-lu-xie-tu" class="header-anchor">#</a></h1><h2><span id="pju-lu">巨鹿</span><a href="#pju-lu" class="header-anchor">#</a></h2><h3><span id="pzhu-xian-9-1">主线9-1</span><a href="#pzhu-xian-9-1" class="header-anchor">#</a></h3><blockquote><p>你从驿站快马赶到巨鹿，刚到巨鹿郊外，迎面遇到正在逃命的司马欣，得知他正在被赵高追杀，于是你击退秦兵救下他。从他口中得知，章邯派他去咸阳求援兵，但是赵高忌惮章邯功高，不但拒不发兵，还想陷害章邯。司马欣见势不妙，从咸阳逃了出来，却被赵高派人追杀。得知章邯的窘境，你决定说服项羽接纳章邯投降，以避免过多的争斗。于是你带着司马欣来到项羽的大营。项羽因为叔叔项粱死在章邯手中，不愿意接受章邯的投降，但是经过你和范增的力劝，他终于答应接受章邯投降。但是使你震惊的是他坚持要把二十万秦军坑杀，以慰叔父项梁在天之灵。你本意是要尽量减少流血，几曾想到这二十万人的性命会遭到残杀。你苦苦相劝，项羽依然不改成命。他的这种暴虐天性使你产生了深深的厌恶，你愤然拂袖离去。然而更让你意外的是你竟然遭到了项羽部下的追杀，这使你对项羽最后的一点尊敬也消失了。你预感到项羽终难成大事，随即你想到了刘邦，如果有他在这里，这样的惨剧也许就不会发生。你决定去阳城刘邦那里看一看。</p></blockquote><h1><span id="di-shi-zhang-a-fang-liang-meng">第十章 阿房惊梦</span><a href="#di-shi-zhang-a-fang-liang-meng" class="header-anchor">#</a></h1><h2><span id="pyang-cheng">阳城</span><a href="#pyang-cheng" class="header-anchor">#</a></h2><h3><span id="pzhu-xian-10-1">主线10-1</span><a href="#pzhu-xian-10-1" class="header-anchor">#</a></h3><blockquote><p>在阳城帅府见到刘邦，见到你他非常高兴，他屯兵宛城，屡攻不下，正需要有人帮忙。他和项羽与楚怀王约定先入关者为王，所以他想绕开宛城直接西取咸阳。你向他分析此举容易陷入腹背受敌的被动局面，反对他采用这一方针。他欣然接纳了你的意见，让你到帅府偏房找到萧何商量对策，了解宛城的情况。找到萧何，你了解了宛城的情况，想出一招声东击西之计，得到萧何的赞同。你们决定依计行事，由你潜进宛城，趁乱打开城门。<br>任务奖励：反对刘邦绕开宛城的计划，得到15000点经验值。提出声东击西的计策，得到20000点经验值。</p></blockquote><h3><span id="pzhi-xian-100-zao-yu-xiao-tou">支线100：遭遇小偷</span><a href="#pzhi-xian-100-zao-yu-xiao-tou" class="header-anchor">#</a></h3><blockquote><p>在阳城碰到小偷徐渭，察觉到她偷你的钱包。劝她改邪归正或者用武力教训她，拿回被偷的钱。<br>任务奖励：劝她改邪归正，得到1点声望和3点魅力；动用武力将没有奖励。</p></blockquote><h3><span id="pzhi-xian-101-bang-mu-jiang-yao-hui-gong-qian">支线101：帮木匠要回工钱</span><a href="#pzhi-xian-101-bang-mu-jiang-yao-hui-gong-qian" class="header-anchor">#</a></h3><blockquote><p>在城门外见到陈木匠，他为城里的黄七修好了房梁，可是黄七借口他活不好，说好的三千文工钱就是不给他。答应帮他去向黄七讨回工钱。然后到黄七家找到黄七，他还打算赖帐。你只好动手教训他一顿，他才乖乖交出了三千文工钱。将工钱交给陈木匠，任务完成。<br>任务奖励：20000点经验值、2点声望。</p></blockquote><h2><span id="pwan-cheng">宛城</span><a href="#pwan-cheng" class="header-anchor">#</a></h2><h3><span id="pzhu-xian-10-2">主线10-2</span><a href="#pzhu-xian-10-2" class="header-anchor">#</a></h3><blockquote><p>到了宛城，你用了10000文钱买通城门守将方才进入宛城。配合刘邦的攻势，你闯进帅府，劝说郡守投降。郡守见形势危急，也有意投降，可是他手下的一部分将领却执意要战，你拔剑斩杀了这些顽固将领。郡守才终于决定开城投降。刘邦顺利取得宛城后，前方再无阻碍。他决定立刻挥军直取咸阳，而你为了手刃仇人，辞别刘邦，打算趁乱进入咸阳找赵高报仇。</p></blockquote><h3><span id="pzhi-xian-101-wei-liao-shi-jian">支线101：尉缭事件</span><a href="#pzhi-xian-101-wei-liao-shi-jian" class="header-anchor">#</a></h3><blockquote><p>在宛城的民居内，你找到了昔日大秦的元老尉缭，如果你的悟性大于100，就可以听到尉缭对书法的见解，从中有所领悟。之后尉缭会让你去他修炼的地下密室。在密室内会遭到兵马俑的围攻，打败兵马俑后，在密室内可以找到尉缭铁锤和《黄帝八十一难经》。<br>任务奖励：听到尉缭对书法的见解，得到50000点经验值和30点智慧。</p></blockquote><h3><span id="pzhi-xian-102-na-fu-zhi-ti">支线102：那父之蹄</span><a href="#pzhi-xian-102-na-fu-zhi-ti" class="header-anchor">#</a></h3><blockquote><p>在马平家门口遇到马平，他说有个强盗闯进他家绑架了他儿子作人质，勒索他五千文钱。帮他摆平家中的强盗，救下他儿子，马平感激之下把传家之宝那父之蹄相赠。<br>任务奖励：<strong>那父之蹄</strong>、1点声望。</p></blockquote><h2><span id="pa-fang-gong">阿房宫</span><a href="#pa-fang-gong" class="header-anchor">#</a></h2><h3><span id="pzhu-xian-10-3">主线10-3</span><a href="#pzhu-xian-10-3" class="header-anchor">#</a></h3><blockquote><p>你离开了宛城，回到咸阳。由于刘邦的人马已经逼近咸阳，城内已经一片混乱。你闯进阿房宫，从门卫口中得知赵高刚刚率领着许多人进入了阿房宫。杀散阿房宫中的侍卫，你来到了胡亥的寝宫。这时赵高指使赵成和阎乐逼杀了胡亥。当你见到胡亥时，他已经奄奄一息，临死前胡亥向你哭诉着赵高在沙丘勒死父亲的那一幕，虽然早有准备，你的脑中还是一阵晕眩。面对着胡亥的尸体你百感交集，你痛恨他的懦弱无能，又可怜他傀儡一般的命运，现在他已经遭到了他应有的报应，你慢慢合上了他的双眼。现在是该解决一切怨恨的时候了，在你心中积存已久的怒火已经到达了爆发的边缘。赶到子婴寝宫，你终于见到了元凶赵高。赵高留下赵成和阎乐拦住你，自己却逃回府邸。一场混战，你杀掉了赵成和阎乐，直奔赵高府邸。</p></blockquote><h1><span id="zui-zhong-zhang-xie-zhai-xie-chang">最终章 血债血偿</span><a href="#zui-zhong-zhang-xie-zhai-xie-chang" class="header-anchor">#</a></h1><h3><span id="pzhu-xian-11">主线11</span><a href="#pzhu-xian-11" class="header-anchor">#</a></h3><blockquote><p>从阿房宫中杀出，你闯入赵高府邸寻找赵高。在府内你发现了一个地宫入口。冲破了层层阻碍，你终于在地宫三层找到了赵高。一场你期待已久的复仇决战开始了。这里要注意赵高有两次变身，也就是说要打败他三次才能彻底消灭他。而且每次变身后，赵高的属性都会增强。他法术攻击的威力尤其强大，有时甚至能一击致命，所以要随时注意他的准备动作，一旦发现他要释放强力法术，就要快速跑开，脱离他的法术范围。针对他经常瞬间转移的特性，用强力的远程攻击应该是个不错的方式。另外就是要准备大量的食物药材，随时注意补充生命值。当赵高终于倒在你的剑下，你的心中却并没有大仇得报的快感，只有着无尽的迷惘，你昂首向天，自己的归宿究竟在何方？ 结局。</p></blockquote><h1><span id="zong-jie-ju">总结局</span><a href="#zong-jie-ju" class="header-anchor">#</a></h1><blockquote><p>公元前221年，秦始皇剿平六国，终结了春秋五强争霸，战国七雄逐鹿数百年的纷争，建立了中华历史上第一个统一的王朝——大秦帝国！<br>公元前206年，楚人后裔项羽率领四十万义军攻入咸阳，一把大火将富丽无双的阿旁宫付之一炬，标志着显赫一时的大秦帝国土崩瓦解。<br>在阿房宫烧了三月之久的熊熊烈火中，赢秦列祖列宗历经百年为之前仆后继顽强搏击而创下的皇皇伟业，赫赫声威，伴随着那袅袅青烟黯然逝去，进入了任凭江上钓翁、里巷老妪随意戏说的历史。<br>短短十五载，大秦就像历史长空中划过的流星，在绽放了他耀眼光芒之后，便瞬息消失，无迹可寻。可留给我们的却是无尽的思考与慨叹……</p></blockquote><h2><span id="pjie-ju-yi-gui-yin-tao-yuan">结局一 归隐桃源</span><a href="#pjie-ju-yi-gui-yin-tao-yuan" class="header-anchor">#</a></h2><blockquote><p>手刃仇人的快感并没有在你心中停留多久，耳边隐隐传来的依然是疆场的铁蹄奔雷、百姓的哀鸣呻吟。赵高死了，但战争却并没有因此而结束。战乱的年代带给百姓们的永远是痛苦与伤害，和平才是他们永恒的期盼。而这一切不是杀死一个赵高就能实现的！<br>你最终回到了赵村边那个与世隔绝的世界，为战乱中需要生存渴求安定的百姓建设了一个真正的世外桃源。时光流逝，这个被你命名为“桃花之源”的地方一点点的兴盛起来，居民们安居乐业，其乐融融。你没有告诉他们你的名字，看着洋溢在他们眉宇间的欢乐，你觉得对你而言那已经足够了。<br>必要条件：完成找到桃花源的任务。</p></blockquote><h2><span id="pjie-ju-er-gui-yin-miao-jiang">结局二 归隐苗疆</span><a href="#pjie-ju-er-gui-yin-miao-jiang" class="header-anchor">#</a></h2><blockquote><p>既没有兴奋畅快，也没有心满意足，手刃仇敌后你只有一种感觉——如释重负。你将宝剑插在地上仰面向天，想从冥冥的空中找到父亲凝视你的双眼。刘邦的大军已抵城边，社稷已倾，大秦将亡，这不再是你的国家了，你唯有选择离开。<br>茵珠陪着你回到了云雾谷，你在这里开始了真正平静的生活，布衣取代了盔甲，宝剑换作了药锄，你觉得这种无欲无求或许才是真正适合你的归宿。<br>必要条件：茵珠必须在队伍中。</p></blockquote><h2><span id="pjie-ju-san-gui-yin-fu-sang">结局三 归隐扶桑</span><a href="#pjie-ju-san-gui-yin-fu-sang" class="header-anchor">#</a></h2><blockquote><p>报得大仇的你悄然离开了咸阳，重返泰山。令你吃惊的是，徐福似乎早已料到你会来，一支满载待发的船队在你的带领下，出海东渡，去寻求传说中缥缈虚幻的海外仙山。后世，当扶桑之名传入中原时，没<br>有人想得到这和你的名字是否有着些许微妙的关联。但这一切都不重要，当你登上那个人迹罕至的海岛，你的生命已经开始了新的序章。<br>必要条件：完成卢生事件，找到徐福。</p></blockquote><h2><span id="pjie-ju-si-gui-yin-sai-wai">结局四 归隐塞外</span><a href="#pjie-ju-si-gui-yin-sai-wai" class="header-anchor">#</a></h2><blockquote><p>默默地还剑入鞘，你觉得自己应该笑，可充塞胸臆的却是一种想哭的冲动。围绕金钱权力，手足可以相残，朋友拔刀反目。手握权杖的人只要一句话，千万人头就会落地。这不是你的世界，你只想离开。你来到北方，融入豪爽质朴的塞外民族，有时与匈奴新单于冒顿一起骑猎于茫茫草原，日子过得单纯简单却快乐。<br>冒顿为了感激你帮助他夺回王位，一直信守诺言，从不侵犯中原。可惜，刘邦统一全国之后，意欲大举攻打匈奴，胸怀雄才伟略的冒顿先是假意示弱，而后乘刘邦在白登山巡视不备之际，突起四十万精兵将其包围，千钧一发之际，借助你的帮忙，刘邦才免于一死。后世人一直对冒顿当时不杀刘邦感到困惑，那是因为他们不知道你的存在，历史就是这样，真正创造历史的人十之八九都没有留下他们的名字。<br>必要条件：帮助冒顿夺得单于之位。</p></blockquote><h2><span id="pjie-ju-wu-gui-yi-mo-men">结局五 皈依墨门</span><a href="#pjie-ju-wu-gui-yi-mo-men" class="header-anchor">#</a></h2><blockquote><p>你突然觉得自己好累，人为什么要自相残杀？为什么彼此间不能和睦相处？那么多的尔虞我诈，你死我活，为了一点权势连自己的亲兄弟都能出卖，为了一时之利，可以抛弃做人的尊严。如此种种，这些究竟都是为了什么？你记起墨钜方仲经常向自己提起的墨家“兼爱、非攻”的思想，想起旅途中和方仲多次的彻夜畅谈，突然觉得或许只有依照墨家的主张才能营造一个完美的世界。于是，你和方仲四处浪迹，一起为了理想中的世界而奋斗。<br>必要条件：方仲必须在队伍之中。</p></blockquote><h2><span id="pjie-ju-liu-xi-mei-gui-yin">结局六 携美归隐</span><a href="#pjie-ju-liu-xi-mei-gui-yin" class="header-anchor">#</a></h2><blockquote><p>都结束了。长久以来，你一直盼望着这一刻的到来，然后当这一刻真的到来的时候，你却突然觉得难以接受，从此以后，自己的存在还有什么意义？仇恨、背叛、奸谋、鲜血、死别……你突然觉得自己是如此孤独，自己已经一无所有！于是，你痛哭失声。一只温暖的手悄悄地放在你的肩头，你转过身，看着这些与自己一同出生入死的女子，她们与自己一样，经历了生离死别，经历了世间的风雨，她们默默地注视着你，是的，从此以后，你便是她们唯一的依靠，唯一的亲人。<br>春夏交替，年复一年，没有人知道扶苏究竟去了哪里。很多年以后，曾经有人在骊山看到一个中年男子在始皇陵前祭奠，他的身后还有几个女子和孩童……<br>必要条件：队伍中全是女性。</p></blockquote><h2><span id="pjie-ju-qi-fu-zuo-liu-bang">结局七 辅佐刘邦</span><a href="#pjie-ju-qi-fu-zuo-liu-bang" class="header-anchor">#</a></h2><blockquote><p>此时此刻，你的心中百感交集。父亲一统江山、君临天下时的霸王气概，儿时和兄弟姐妹一起嬉戏时的无忧无虑，与娇妻新婚燕尔时的柔情蜜意，戍守边关放马大漠时的豪情逸致……过往的一切在你眼前一一浮现。泪，悄然而下。这一切，仿佛在梦中，朦朦胧胧却又如此的清晰，梦醒之后，一切都变了。只有自己儿时便执著的抱负依旧不改——让天下百姓不再受兵戈之苦，不再受分离之痛，不再流离失所。但如今的大秦帝国已风雨飘摇、大势已去，即便自己重登皇位，又能如何？<br>力挽狂澜不如开天辟地！你想到了刘邦。是的，如今群雄四起，但只有刘邦才有君临天下的气概和谋略。项羽不过是有勇无谋的一介勇夫，治天下，非刘邦莫属。于是，你找到刘邦，与张良、韩信等人一起南征北战，终于一统天下。刘邦登基之日，你留信辞行，毅然归隐。信中，你叮嘱刘邦，对任何人都不要提起自己，任何时候都不要告诉别人秦太子扶苏曾助他称帝。从此以后，你只是一个普通的大汉子民，你的名字叫作子秦…</p></blockquote>]]></content>
      
      
      <categories>
          
          <category> 7201：游戏攻略 </category>
          
      </categories>
      
      
    </entry>
    
    
    
    <entry>
      <title>冥想</title>
      <link href="/660301/"/>
      <url>/660301/</url>
      
        <content type="html"><![CDATA[<p>1</p><p>最开始给自己定每天冥想五分钟的小目标。脚放平或者盘腿，眼睛闭上或者盯着远处/白墙。专注于呼吸，吸气的时候脑袋里浮现出&quot;吸&quot;字，呼气时脑袋里想着&quot;呼&quot;字。如果轻松完成可以加大难度不想着这两个字尝试冥想，你就可以感受到空气从鼻腔进入，胸腔和腹部随着呼吸浮动的感觉。再接下来可以根据适应情况加大难度，尝试十分钟…十五分钟…这样。冥想的主要目的不是啥都不想，而是让你更专注。专注于呼吸做训练。不要怕冥想时候的痛苦，冥想时的痛苦都会在生活中反馈给你更专注。</p><p>2</p><p>冥想（正念练习）无论采取任何形式，是一种不断把我们的心拉回当下的练习。在《简单冥想术》中，作者用“头脑空间”这个比喻，来阐述我们与生活之间的关系。头脑空间不是一种依赖于表面情感的内心状态，无论在悲伤或是愤怒，激动或是快乐的时候，你都能清晰地感觉到它。头脑空间与你的任何想法、感受都能和睦地共处；这正是冥想会让人感觉舒爽的缘由。——如果说情绪是白云，是乌云，是阳光，是雨水，头脑空间，就是天空。一切都在天空之中上演，然而无论是风和日丽，还是倾盆大雨，天空本身，并不发生任何改变。生活是一场由5个情绪演员担任主演的剧目。我们的生命体验被5个角色主宰——快乐（joy)、悲伤（sadness)、恐惧（fear)、厌恶（disgust）、以及愤怒（anger）。</p><p>3</p><p>每天10分钟冥想，当做是纯粹的休息时间。你可以将冥想与日常生活中的某个场景结合起来，从而让做冥想变得更简单。比如，很多人喜欢在睡前冥想，脑海中就会形成（先冥想，再睡觉）的习惯，不仅容易操作，还可以发挥冥想在帮助睡眠的好效果。也有人喜欢（用冥想代替午休）这样的习惯，都是方便的。</p><p>4</p><p>姿势的选择：任何让你感到放松的姿势，都是好的。无论是坐下来，双腿垂直，肩背部放松，抑或是睡前躺在床上，全身非常放松的感觉，都是不错的姿势。方法：关注自己的呼吸，5秒钟吸气，5秒钟呼气，用这样的节拍开始引导自己的呼吸节奏慢下来，心率也会紧接着慢下来。如果你感到比较难以专注，可以选择高质量的冥想引导词，来帮助你进入冥想的状态，音乐和语音的节奏，会帮助你放慢呼吸的节奏，且引导你的意识进入更加专注的状态。比较好的冥想引导词可以找：轻松冥想（微信公众号），和 睡前冥想必听 （荔枝FM 以及 iphone播客都有）记录自己的冥想感受，keep a track record，你将会看到自己的进步。</p><p>5</p><p>冥想是一项技能，和任何技能一样，都需要经常的重复才能学好、精通。也许最开始，你每次10分钟，都需要花9分钟，才能摆脱各种复杂情绪的追杀。但渐渐地，你会发现自己只需要一两次呼吸，就能进入高度平静和专注的状态。</p>]]></content>
      
      
      <categories>
          
          <category> 6603：冥想 </category>
          
      </categories>
      
      
    </entry>
    
    
    
    <entry>
      <title>积极心理学</title>
      <link href="/620301/"/>
      <url>/620301/</url>
      
        <content type="html"><![CDATA[<h2><span id="pji-ji-xin-li-xue">积极心理学</span><a href="#pji-ji-xin-li-xue" class="header-anchor">#</a></h2><blockquote><p>Tal Ben-Shahar 博士<br>哈佛大学1504号课程《积极心理学》笔记</p></blockquote><h3><span id="pru-men">入门</span><a href="#pru-men" class="header-anchor">#</a></h3><ul><li><strong>什么是积极心理学？ 为什么要学习积极心理学？</strong><br>积极心理学是一门实用科学，它不是告诉你什么是抑郁症，你为啥会得抑郁症等等。而是告诉你如何<strong>提高自己的基础幸福水平</strong>，告诉你的是实用的可以习得的方法。学习积极心理学并将它应用于生活中会使你更加幸福并且一直幸福下去。</li><li><strong>这门课的授课对象</strong><br>这门课的授课对象是对积极心理学有兴趣的以及想更开心的人，如果你非常开心，你还可以更开心；如果你非常不开心，你也可以更开心。</li><li><strong>这门课的内容</strong><br>理解是盛放信息的容器。本课程在于传递信息，改变容器的形状。<br>对同样的客观信息进行不同的解读。</li><li><strong>这门课的前提</strong><br>我们应该尊重人性而不是完善人性，这是精神健康和幸福的重要基础。</li><li><strong>No one is coming！</strong><br><strong>No one is coming to make your life better for you.</strong><br>没有人会来拯救你，没人会来帮你把你的生活变得更美好，你要对自己的生活、自己的自信、自己的自尊、自己的幸福负责。</li><li><strong>最重要的往往是常识，大道至简。</strong><br>很多事情我们都觉得是常识所以忽略了它的存在，比如课程上博士提到的所有东西其实都是我们所知道的或者感受过的，但是我们却常常忽略了他们的存在，而这个课程就是要提醒我们这些东西的存在并且不要忽视他们的作用。</li><li><strong>内省时刻 (Me Time)</strong><br>我们大多数时间花在外部，关照自己的时间太少了。关照自己和沉默有关系，多给自己一些沉默的留白，对于生活、工作、修身都很重要。语言信息的交流并不是教与学的全部，沉默是学习的必要环节。每个心理医生都有一个 Me Time 用这个时间处理自己和自己、自己和世界的关系，因为平时他们的工作就是做人们负能量的“垃圾桶”。心理医生也是人，他们接受了太多负面的东西也会有怀疑自己的时间，这时候就需要一个和任何人无关的Me Time去调节。其实普通人也是一样，如同吾日三省吾身，当然不是要你每天都在自我批评中度过，而是当你在进行某种经历时，如何做，哪里有不足，应该如何解决这些问题，思考都是发生在经历之后安静的自省时间，只有这样我们才能获得更好的经验并且记住它。</li></ul><h3><span id="pxing-fu">幸福</span><a href="#pxing-fu" class="header-anchor">#</a></h3><ul><li><strong>个体幸福感的要素</strong><br>①基因设定。<br>②受意识和行为支配的部分，即我们的行为处事方式、思维、生活的重心、三观。<br>③外部环境。</li><li><strong>我们对世界的体验受到我们关注点的影响。</strong><br>We see what we look for and we miss much of what we are not looking for，even though it is there…Our experience of the world is heavily influence by where we place our attention – Stavros and Torres.<br>问题缔造现实，你的关注点影响你的认知。感谢和追求那些美好的事物，美好的事物也会回报你。<br><strong>应对抑郁、焦虑的方法不是只关注抑郁本身，而是培养乐观、培养长处、培养并认清个人的热情所在。</strong><br>问问自己是忙着远离痛苦、远离不幸，还是努力追求幸福？<br>我们要改变我们的认识、心境，改变我们对世界的诠释，以及我们的遭遇。重要的是我们选择领悟什么。</li><li><strong>幸福和外部因素的关系</strong><br><strong>外部因素对于幸福的程度作用是非常有限的。</strong> 只会持续一段时间。但不意味着努力进入一所好学校获得更好的收入等等是徒劳的，不意味着我们不能提升自己的幸福水平。如果降低期望值就会更容易满足，更容易快乐，短期来看是可能有一定效果的，但长期就不会这样了。问题不在于降低或提高期望值，问题在于正确和错误的期望值。错误的期望是认为进入一家好公司、获得升职、找到理想的伴侣就能让自己快乐，这是外在期望。<strong>正确的期望应该是相信自己内在的改变。</strong></li><li>幸福并不会随着痛苦的消失立刻出现。<br>正因为如此，我们需要积极心理学。积极心理学主要关注的是健康模式，如何才能让人从生理上、心理上，在自身与身外，都能丰富起来，怎样帮助他们摆脱生活中的羁绊，进而获得新生。</li><li>当我们不是逃避而是面对时快乐的基础水平会提高：<br>①自我知觉理论：通过观察自己的某些方式的行为会得到关于自己自尊或者仁慈等方面的结论。如果我面对了，我尝试了那我就认为我是一个有勇气的人。<br>②当我们经历失败后会发现真正来自于失败的痛苦远小于我们想象，就会更有自信。<br>③更多的成功，因为只有先去面对尝试才可能成功，成功了又会推动我们更加有动力然后获得更多成功。</li><li><strong>被正确理解的目标才会让人幸福。</strong><br>因为仅仅是实现目标是不会带来幸福的，只有充分理解目标的正确作用，要理解到不是实现目标带来幸福而是<strong>拥有目标让人幸福</strong>，设定目标，实现目标不是最终目的而是获得幸福的一种手段。（实现目标当然会感觉快乐，升职加薪迎娶白富美当然让人开心，但研究表明一味的只追求目标的实现，万一失败会变的很难接受，即使是成功了也只是短暂的快乐，然后会恢复到基础水平甚至会降低到基础水平以下。要设定目标全心投入，但不要为胜利而活，要为过程而活。）</li><li>幸福与自尊的关系<br>幸福与丰富的物质生活没多大关系，我们住哪儿跟幸福也没多大关系。但幸福跟自尊却有很大的关系。</li><li><strong>信念即自我实现的预言。</strong><br>它强大到可以控制身体。境随心转，全有意念升起，我们的念头造就了世界。</li><li><strong>允许自己是一个凡人</strong>。<br><strong>拒绝本性会导致次优表现</strong>，我们不允许自己是一个凡人，因为我们发现有人看着我们，面子变的越来越重要，为此我们付出代价包括精力水平、幸福感、快乐感、创造力等等，最终以成就大小作为代价。<strong>当我们压抑一种自然现象时，那种现象只会加强。</strong> 压抑自然的痛苦情绪也会有一样的效果，企图抑制它们时，它们会加强。不是说我们肆无忌惮的表达情绪，而是在一个空间，生活中的私密空间，和挚友一起时和家人一起时，最重要的是面对自己时，允许自己是一个凡人。<br>允许自己各种情绪的转换。 嫉妒、沮丧、焦虑、愤怒是人性的一部分，无所谓好坏之分，问题是我们要用什么态度去对待这些情感。会有某种负面情感很正常，但这并不意味着必须要向这种情感产生的想法屈服。没有必要接受自己所有不理智的想法。<br>要提高我们的心理免疫系统。当我们允许自己做凡人时，我们的心理免疫系统就会提高。<br>每天都提醒自己一到两次，要允许自己做凡人，也同样允许别人做凡人。</li></ul><h3><span id="pji-ji-he-le-guan-zhu-yi">积极和乐观主义</span><a href="#pji-ji-he-le-guan-zhu-yi" class="header-anchor">#</a></h3><ul><li><strong>培育积极心态</strong><br>我们应该努力培育积极心态，在自己身上和周围人身上，不能只将它们作为终极目标，还要将其作为手段实现心理成长，改善心理和身体健康。因为积极情绪似乎能扩展人们的瞬间想法和动作指令库并建立持久的个人资源。通过体验积极情绪，人们实现改变，变的更有创造力、更博学，适应力更强，更容易融入社会，获得更健康的人格。</li><li><strong>态度影响行动，行动同样也能影响态度。</strong><br>我们走路昂首挺胸或者弯腰驼背都会传递给外界不同的信息，这种信息也会传递给自己。研究表明，即使是假装快乐，假装幸福我们的情绪也会有所改变。但有些时候，我们不想弄假成真，我们想哭泣想要发泄，但有些时候不得不准时出门，不得不参加派对即便一点也不想出门。这里的区别就在于积极接受和准许为人的平衡，仍然接受我的情绪接受我的痛苦，并感受它，同时选择用最适当最对自己有益的方式去面对。能接受事实但仍能通过假装，通过行为的改变来影响心情去积极面对。(一个人的时候允许自己感受所有的坏情绪，即使是需要做心理建设才能跨出门也要在人前尽量表现的正常和快乐然后投入工作在人前的那些时间也就不会觉得难熬。<br>Fake it, till make it.</li><li><strong>积极的人在处理事情的时候是会看到事物之间的关联性。</strong><br>关联性包括三个方面对生活的感受性和信息：<br>1）领悟性：在生命中个体感受到来自内外部环境的压力是明确、具体、可预测的；<br>2）可控性：个体感受到应对内外部环境压力所需资源是充分的，可以利用的；<br>3）有意义：个体感受来自外部环境的压力具有挑战性值得耗时间和精力去应对。<br>这也是日记的作用，你会在日记里发现这三点，当我们真的写下我们的经历，那些艰难的经历就自然而然产生关联感。换句话说就是，积极的人不是不会遇到困境，而是遇到困境的时候他们的思考方式是不一样的，是积极的，他们认为生活中的高低起伏对他们来说是宝贵经历并且他们能处理得了承受的了，而且认为困难的出现不是毫无意义的自己可以从中得到成长。</li><li><strong>如何变的乐观？</strong><br>①将自己置于风险之中去面对。我们要的是行动不是空谈，行动的力量永远大于语言，我们对任何事情都要付出，你要更有信心就必须去克服困难。<br>To dare is to lose one’s footing momentarily,not to dare is to lose oneself. <strong>勇于冒险或许会一时失足，却步不前则迷失自我。</strong><br>②利用想象力。当我们真的看到某样东西和只是想象这样东西的时候会激活相同的神经元，也就是说大脑根本分不清你是真的在经历还只是在想象。当我们想象成功时，从某种意义上来说是在为大脑做一个模拟，可以说是欺骗大脑认为这件事情是真的。而大脑不喜欢外界和内在不一致，如果不断想象成功，大脑会激发外部（努力等）使现实和内心相符。当然我们不能只想象结果，还要想象整个过程包括会遇到的困难克服困难等等。(努力想象如果真的跨出那一步，会遇到的问题，需要解决的事情应该怎么去解决，最后获得自己想要的工作状态和生活，想象然后做好准备去做。)<br>③认知疗法。这种疗法已被使用40年，它的基本前提是思想驱动情感。它认为如果我们想改变情感应该干预的是评估和想法层面。特别的，我们要恢复理性意识、我们要恢复真实，当然这不是说要克制改变自然的感受而是我们有时候的感受是荒谬的，比如夸大发生的事情、狭窄的“隧道思维”、过度自责等。爱默生说：对不同思想而言，世界既是天堂也是地狱。就是这个意思。重建认知，学习乐观的诠释事情，即要积极的肯定值得肯定之处。</li><li><strong>乐观这么棒，但为什么没有很多人是乐观的？</strong><br>一个原因是媒体过多地负面消息报道。媒体每天会播放大量的负面消息，他们有这种负面倾向，且只强调负面并将其放大。负面事物和特例又常常会抓住我们的注意力，因为自然把我们创造成这样，所以我们习惯于关注这些负面消息。世界上有很多美好的事物，但我们很快就会适应且不再察觉它们。<br><strong>如何解决？</strong><br>宏观上建立积极新闻的渠道，对过多的坏消息予以抵制；将艺术的作用发扬光大。微观上应心怀感激，切勿等到不幸发生时才意识到。</li></ul><h3><span id="pxin-huai-gan-ji">心怀感激</span><a href="#pxin-huai-gan-ji" class="header-anchor">#</a></h3><ul><li>艾默生说，<strong>如果星星每千年闪烁一次，我们都会仰视赞美这个世界的美丽，但是因为他们每天都在闪烁，我们将之视为理所当然。</strong></li><li>我们感激好事时，好事会增值。<br><strong>不要等到外界发生一些异常的悲剧时，我们才开始感激习以为常的东西</strong>，如果我们把感激当成一种生活习惯，如果我们培养感恩的习惯，<strong>不再把好事习以为常</strong>，感激能带来人类感受到的最为单纯的快乐。感激能形成一个良性循环，你总能找到可以感激的东西。</li><li><strong>怎么培养感激？</strong><br>审视平凡的一天，有什么事是你不自觉地会去处理的？有什么事是不费力你就会全心投入进去的？可能是早晨的咖啡或者带你的狗出去散步等等，这些小事都是值得感激的。培养感激需要一次又一次的练习，直到变成习惯、性格的一部分。<br><strong>感激一定要付诸行动。</strong><br>或许会觉得有些矫情，但这真地能改变现状。关键是<strong>保持新鲜感</strong>。<br><strong>如何保持新鲜感？</strong><br>同一件事情感激它的不同方面。<br>去观察新的事物，留心那些以往视而不见的事物。<br>形象化，这样就可以用孩子的眼光来看待世界。</li><li><strong>感激对身体有好处。</strong><br>如心率变异性会降低，这正是健康长寿的征兆。当我们感到感激时，我们的副交感神经系统会得到增强（副交感神经系统功能众多，其中之一就是可使心跳变慢），会让我们感到平静，我们的免疫系统也会得到增强。</li></ul><h3><span id="pzuo-chu-gai-bian">做出改变</span><a href="#pzuo-chu-gai-bian" class="header-anchor">#</a></h3><ul><li><strong>改变的最大障碍是低估了自己能改变的能力。</strong></li><li><strong>改变需要时间，其过程会给人带来乐趣，不亚于改变的结果。</strong></li><li>大脑神经元在我们这一生中都会发生变化，不断生长，不断更新。<br>研究结果表明，大脑在很多时候像是肌肉，如果善用，它就不会钝化。<br>大脑不同的神经元之间有数百万计的通道，有些很薄，相对较新，有些更厚更成熟。每一次思考都会在神经之间建起一条通路。换句话说人的思维模式是有迹可寻的，思维的路径像河流一样发展。每次有河水流过，河道就会渐渐拓宽。没水流过也就是神经通路停止活动的时候，通道就会稍有缩回。所以神经通道使用的时候会增长，不用的时候便会萎缩。<br>在一个刚刚建立的神经通道中，因神经具有可塑性，新的神经通路不断出现，新的神经也在不断地产生。起初，新的神经通路很窄，如果只记住一次就会退化，不断地看到就会强化，变得越来越粗，最后就不会被忘记。神经通路与河流一样，可以自我强化。<br>所以经验就是深化已建立其起来的神经通路，并将其进一步加强。这与建立新的通道不同，建立新通道是把记住的东西连接到其它已经存在的神经通道上，连接到现有的记忆中。<br>一条新建成的神经通路会吸引更多的行动，并在这个过程中变得越来越粗；而没有真正建立起来的通路和较细的通路很容易消失。通路越粗，就越容易保留下来。这就是自我增强。<br>养成习惯也是如此，某件事被反复加强时，就会成为习惯。思维会产生定式，你的思路会沿着特定的轨迹走下去。</li><li>音乐和运动<br>研究表明，经常练习音乐和运动的人，他们的大脑形状会发生变化，在相关区域会建立更多的神经通路，可以使你弹奏C大调，或者按照乐谱上所写的方式移动手指，脑中就会建立起某些神经通道，大脑神经区域的联系也会更强。</li><li>冥想和瑜伽<br>冥想和瑜伽可以塑造或改变大脑中的神经通路，使人的大脑更为活跃，从而使人更易受到积极情绪的影响，更能适应痛苦的发生。我们可以改变神经可塑性和神经发生。</li><li>改变的形式：渐变式和激进式。<br>渐变式：专注冥想。专注冥想可以说是最有效的干预方式，它能给你带来平和与宁静。只要坚持冥想至少8周时间，大脑就会发生改变。至少8周的常规冥想也将使我们的免疫系统得以增强。每天用20或30分钟冥想就能达到效果。<br>激进式：激进式就是硬碰硬，直面风险，跳出舒适区进入学习区（指很少接触甚至未曾涉足的领域，在此区域可以充分锻炼自我）。<br>负面例子：PTSD（创伤后应激障碍）<br>正面例子：巅峰体验理论（指人生最美好的时刻是瞬间强烈的幸福感，甚至是欣喜若狂、如痴如醉、欢乐至极的浓缩）。巅峰体验后，可能会积极影响人们之后的生活。</li><li>首先要问自己是否真的需要改变？因为有些负面的东西也与正面相关。</li><li>坚持下去。<br>不论是哪种形式的改变重要的是<strong>将改变坚持下去，而不是突发情况后又回到原点</strong>。对于灵丹妙药、立刻见效的追求是导致抑郁症、焦虑症等等高发的原因，当人们发现灵丹妙药没用时，会觉得是自己的问题。事实上是没有灵丹妙药，任何事都需要时间。</li><li>要改变人生轨迹，就要从两种基本方法中选择。<br>其一，你可以指引你的能量以及注意力，用其管理思想集中精神巩固力量释放情感以及想象乐观结果，从而使你最终获得自信，鼓起勇气下定决心做出承诺，获得充分的激励去做你要做的事情；<br>其二，你也可以直接去做。</li><li>创建一个列表<br>找出你能做的事，然后再从中找出你想做的事，再从中找出你最想做的事，再找出你最最想做的事，然后做那些事。如果我们知道自己要往哪走，内心就不会有那么多心理冲突，正因为没有目标才会不快乐。</li></ul><h3><span id="pji-ji-huan-jing-de-li-liang">积极环境的力量</span><a href="#pji-ji-huan-jing-de-li-liang" class="header-anchor">#</a></h3><ul><li>皮格马利翁效应 Pygmalion Effect<br>人们基于对某种情境的知觉而形成的期望或预言，会使该情境产生适应这一期望或预言。所以对一个人传递积极的期望，就会使其进步更快，发展更好。反之则会使人自暴自弃，放弃努力。</li><li>为自己创造积极地环境，从而受到积极性地暗示。</li><li>怎么创建一个积极的环境？</li><li>多数人都是照你做的做而不是你说的。<br>所以想要传播快乐，最好的方法不是说，而是努力争取自己的快乐，因为那时你就成为了榜样。Leadership 同样适用，领导最重要的不是说的话，而是如何<strong>以身作则</strong>。(想要别人快乐自己就要是个快乐的人自然别人会接受到你快乐的感染，想要幸福自己必须幸福，自己全是负能量别人也会是负能量，爱自己才能有爱他人的能力。)</li></ul><h3><span id="pren-shi-zi-ji">认识自己</span><a href="#pren-shi-zi-ji" class="header-anchor">#</a></h3><ul><li>为什么人们不停的寻找错误？ 为什么要维持悲观的态度？<br>因为大多数人潜意识里将寻找过错和现实主义联系起来，不想成为一个脱离现实盲目乐观的人。人们常常把幸福和偷懒联系在一起，因为现实所信奉的真理是“No pain，no gain”。如果我现在快乐，就意味着我不再经历痛苦，就意味着我放弃了。所以我们在潜意识里选择不快乐，这样的话我们就不会失去其他珍贵的东西，比如勤奋刻苦、雄心等等。（应该更好的去理解这些品格的含义才能摆脱抑郁、焦虑等等。）</li><li>大部分行为的改变都是渐进式的，怎样的是突发式呢？<br>比如PTSD（坏的突发式改变）。好的改变就是，承担风险，当我们去应对突来的风险时我们要去冒险做一些不太愿意做的事，不是巨大的让人受到创伤入PTSD的那种冒险而是离开舒适区进入学习区，适度的不适感紧张感。想要改变别无它法，只有真正实质的行为改变。</li><li>找到属于你的人格力量，用他们去解决你需要解决的问题困难。<br>二十四中人格力量：创造力、好奇心、头脑开明、爱学习、洞察力、勇敢、持久、正直、有活力、爱、善良、社会智商、公民权、公正、领导能力、宽恕和仁慈、谦虚/谦逊、谨慎、自律、欣赏美丽和卓越、感恩、希望、幽默、精神信仰。</li></ul><h3><span id="pwan-mei-zhu-yi">完美主义</span><a href="#pwan-mei-zhu-yi" class="header-anchor">#</a></h3><ul><li>过犹不及。</li><li>完美主义的范围<br>我们讨论的完美主义是，一种充斥在我们的生活中的对失败的失能性恐惧，特别是在我们在意的地方。<br>完美主义一般会有以下表现：自卫性、没有自我、不接受失败。</li><li>完美主义的根源<br>①社会影响。结果论，结果最重要，只有成果才会有奖励；<br>②赞美方式。不是所有的赞美都是好的，不对的赞美也会导致完美主义基模在脑内建立。研究表明比起赞美孩子<code>你真聪明</code>，赞美他<code>你真努力</code>会更好，重视努力让孩子拥有一个她自己能够掌控的变量，这让他们认为自己能够掌握自己的成功，强调自然天赋让孩子无法掌控成功，这不会给孩子提供面对失败的方法，当关注天赋方面时其实就是在建立完美主义基模。</li><li>解决完美主义的办法<br>1、认识它。意识到自己的问题承认自己的问题。<br>2、专注于对努力的奖励而不是结果或者天赋<br>3、积极接受<br>4、开始行动</li><li>完美主义是阻止我们帮助他人的最大障碍之一，<br>接受“困难存在并且可能不容易解决”这件事，不要用完美主义要求别人。</li></ul><h3><span id="pzi-lu-he-tuo-yan">自律和拖延</span><a href="#pzi-lu-he-tuo-yan" class="header-anchor">#</a></h3><ul><li><strong>如果有更多的自律自己一定会做的更好？</strong><br>坏消息是，你不能获得更多的自律，你现在拥有的就将是全部；好消息是，更多的自律实际上并不重要，不管是对于成功还是幸福来说，只有将依靠自律来获得改变转变到例行公事上来。建立例行公事需要定义精确的行动，并在特定的时间执行它们以深深扎根的价值观为动力。保持例行公事不需要太多自律，但建立例行公事需要大量的自律。改变习惯通常需要很多时间，其中的关键点是每个月内不要尝试建立超过两件习惯，最好是只建立一个，因为我们的自律是有限的。（这个观点是一般人想不到的，至少我也是这么觉得如果我能有更多的自律我会做的更好，但就如同我们每天早上起来刷牙洗脸不需要用自律去控制去对自己说好了现在你要开始洗脸了一样，当我们将一些我们觉得对自己有益的东西比如锻炼、看书、冥想等等行成如同刷牙一样的行为习惯的时候我们就不需要用自律去控制它，做这些事情也变的简单容易起来。）</li><li>制定目标的建议<br>首先，将它们写下来；<br>第二，制定最早期限，也就是希望完成这些目标的日期；<br>第三，明确目标，目标是一种手段不是最终目的，细化每一步，制定一个长期计划然后将其拆分为短期或中期目标。</li><li>我们总是想要在最短的时间里做完更多的事情，这让我们失去很多。<br>其实压力不是问题，相反它对我们有好处，它培养了我们的忍耐力并且从长远来讲让我们更快乐，真正的问题是<strong>恢复</strong>！没有恢复导致压力变成焦虑变成抑郁。在处理压力时我们所要做的就是抽出点时间让自己恢复，将我们对生活的理解从马拉松运动员变为短跑运动员。<br>建议：用一到两个小时来专注的工作，精力集中，然后用至少十五分钟来恢复，可以是冥想、健身等等。<br>Work hard play hard！<br>注意：休息的时候也需要专注而不是将很多你认为你都喜欢的事情放在一起做，那样的到的乐趣将降低。</li><li>克服拖延症的方法：<br>1、不要等到灵感来了，动力来了才开始行动，而是先行动，灵感和动力自然会来。克服拖延症，忽略态度和情绪，先着手干5分钟。<br>2、奖励自己，不是达成目标才奖励而是注重过程中的进步。<br>3、公布出去。公布目标一定程度上迫使你去做。<br>4、和他人一起训练如果你觉得有必要。<br>5、Make a list。<br>6、允许自己休息，劳逸结合。</li></ul><h3><span id="pmian-dui-tong-ku">面对痛苦</span><a href="#pmian-dui-tong-ku" class="header-anchor">#</a></h3><ul><li><strong>一个人遇到困境悲伤等突发不良事件的反应过程</strong>：<br>①震惊和否定。你刚得悉消息的一刻，很可能会有一种麻痹的不信任感。你兴许会在某种水平上否认事实，以防止疼痛。而震惊的感觉则会维护你的感情，使你不至于一下子被情感吞没。这个阶段可能持续好多周。<br>②痛苦和内疚。当震惊的感觉褪去。取而代之的将是巨大的痛苦。固然是难以承受的精神折磨，但是你必须彻底地蒙受这种痛苦，不要暗藏它、回避它，也不要打算借助酒精或者药物消愁。你也可能会因为做过或没做过的某些事件而觉得内疚或后悔。在这一阶段，你感到生活一团糟，处处令你惊骇。<br>③愤怒和沮丧。感觉将被恼怒所代替，你可能会把坏消息归罪为别人。请尽力把持自己，由于这样会给你的人际关联带来永久的损害。这种时候，人轻易发泄本人郁积已久的情感。你可能会抱怨，在极度懊丧中，你也可能会对上天许下徒劳的宿愿。<br>④消沉，回想，孤独。当你的朋友开始认为你的生活应当回到正轨的时候，你很可能正被长时间的悲伤的回忆所包抄。这是伤逝的一个正常阶段，所以不要因为旁人善意的劝解而强装没事。在这个阶段，别人的激励并不多大的辅助。在这段时光，你会终于懂得你毕竟失去了什么，而这会使你消沉。你可能会成心把自己隔离起来，回忆从前，脑海被那些记忆所盘踞。你可能会感觉到充实与失望。<br>⑤好转。当你逐步适应了巨变之后的生活，你的生活会变得较为沉着，趋于有序。痛苦会减轻，你的低沉也将有所好转。<br>⑥重建和恢复生活。恢复生活的运行，你的心智也开始从新的工作，对于巨变所导致的生活问题，你会下意识地追求现实的解决方式。你将开始也对一些实际问题和财务上的问题，开始重建生活。<br>⑦接受和期望。在这最后一个阶段，你学会了接受，学会了面对事实。接受并不象征着立刻能变得快活。在经历过痛苦之后，你再也不会回到之前那一个无牵无挂的你了。但你总会找到一条前行的路。你会开始往前看，开始打算将来。最后，你将可能不带痛苦地回忆起之前的生活，悲痛会有，然而揪心的痛苦不再。你将再次对未来的美妙生活怀有期望，乃至在生活经历中再次找到乐趣。</li><li>研究发现：<strong>对于糟糕的经历，书写和说出来是最好的化解方法</strong>，<br>而对于好的经历却相反，书写和谈论都会导致心理上感觉更糟糕，只有想和沉思积极经历感觉会更好。为什么呢，这是分析和重建的区别。书写和谈论属于分析，当我们分析一次经历时，当我们清理它时，它对消极经历有帮助，所以心理治疗才有帮助，心理治疗师除去技术、知识、经验更重要的是他们是不是感同身受，他们是不是好的聆听者？当我们觉得我们可以谈论或者分析痛苦情绪时我们感觉更好。当我们沉思痛苦情绪却不去清理它时，我们收窄。压缩、感觉更悲哀。相反，当我们分析积极经历时，真正地分析它尝试理解为什么会发生等等是没有帮助的，但我们只是沉思积极经历时，只是想也会提升我们的幸福感。感激修行就是重播快乐经历。</li><li>研究表明<br>连续几天每天只需要短短的十五分钟时间写下你最难过的经历或者最好的经历都可以减少焦虑，并且男士比女士受益更多。其中需要注意的是写难过经历的时候能谈谈你对经历的最深刻感受和想法，写写当时的感想和现在对它的看法；而<strong>写最好的经历就不要去分析它而是重新去感受去描写整个过程写下你当时的感受就可以了。</strong> 之前就有讲到过分析痛苦经历和重现美好经历对于人的影响是积极的，写日记就是在做这件事情，因为有时候有些事情是我们无法对他人开口进行倾诉的。（为什么男士会比女士受益更多？那是因为相对来说女人更愿意去和他人交流说出自己的感受，社会对女性和男性的定义也不同，女性表现出痛苦脆弱更容易被社会接受。这其实是性别不平等带来的后果，性别的不平等看似受到伤害的只有女性但男性往往也受到伤害比如无法表现出脆弱的一面，但人人都会有脆弱的一面。）</li><li>处理困境、坏情绪的技巧。<br>允许自己为人，接受现实、接受这个困境接受坏情绪；<br>重建，将情况诠释为积极的，看到其中的闪光点其中的成长机会等等；<br>分心，将注意力转移到他处，有时候过分的分析、处理会带来坏处，当负面情绪出现时将我们的注意力转移到别处去，比如听听音乐跑个步等。不是说不去面对不去处理，只是说如果某种情绪或想法反复出现，永远都在徒劳抗争有时更好更有用的方法是去做别的事情来忘记。</li></ul><h3><span id="pling-dan-miao-yao">灵丹妙药</span><a href="#pling-dan-miao-yao" class="header-anchor">#</a></h3><ul><li>睡眠<br>研究表明，睡眠剥夺对幸福有影响，睡眠剥夺会使认知能力和生理机能受到损害，对心情的影响则更甚。夜晚睡眠不足的人易感觉不快乐，更紧张，身体更虚弱，精神和身体上愈发疲劳。充足的睡眠让我们感觉更好更快乐，更有精力和活力。</li><li>运动<br>每周三次到四次，每次三十分钟的有氧运动。<br>压力增大时可能会首先放弃运动，要在潜意识里觉得自己值得幸福，值得拥有美好的身体。<br>运动是你不能放弃的，因为它是一项投资。特别是压力大的时候，它的作用如同百忧解。<br>每周三次到四次，每次三十分钟的有氧运动镇定效果胜过最强的精神药物。</li><li>冥想<br>每周五次以上，每次十五分钟的冥想。<br>冥想可极大程度上改变我们的大脑，帮助产生积极情绪，并在痛苦面前变得更坚定。<br>冥想不是说要达到一种顿悟的境界，冥想的意义在于专注于现状，此时此刻，与此时此刻存的存在做挣扎，我们能把思想锻炼的更专注、更留神。</li><li>拥抱<br>至少12个拥抱。</li></ul><h3><span id="pzi-zun">自尊</span><a href="#pzi-zun" class="header-anchor">#</a></h3><ul><li>什么是自尊？<br>自尊是一种觉得自己能够应付生活中的基本挑战，值得享受快乐的感觉。</li><li>如何提高自尊？<br>1：正念冥想。<br>2：关注榜样的力量，像身边的人学习，集中优势。<br>3：多做运动。<br>4：永无止境快乐学习。<br>5：寻找到自己的兴趣，有独立与世界的个性。<br>6：感受自己的心流。<br>7：思考为什么<br>8：认真思考自己，表达核心的自我。<br>9：留时间去思考</li><li>我们对待他人的方式经常都反映了我们怎样对待自己。<br>当我们培养自爱时，我们更有可能富有同情心，愿意帮助他人。我们对待他人的方式经常都反映了我们怎样对待自己，所以那些有强烈自我认同的人，更能认同别人。当我们对自己更好对自己的要求更高，同样就会对别人更好。</li><li>你真正的潜力，埋藏在你的灵魂深处，<br>在你的知识和精神触及不到的地方，埋藏在你的恐惧和焦虑之下。虽然它隐藏起来了，但它还在那里。我知道，因为我以前感受过它的存在。我知道别人也有，因为我见过别人做过奇迹一般的事。我们体内都有一股无可匹敌的潜力，散发着微弱的光芒，当我们找到它时，它就会发出万丈光芒。</li></ul><h3><span id="pyou-mo">幽默</span><a href="#pyou-mo" class="header-anchor">#</a></h3><ul><li>幽默是什么？<br>幽默是一种选择，有意地去选择怎样来看待这个世界，用适应性的强有力的眼光来看待这个世界。把幽默看成一种正念的眼光。<br>正念的定义是留心眼前的情景（being present in the situation），这样你就能留意到环境中的可能性。而幽默的定义和正念的定义相似，当你留意眼前的环境实际上就是在用一种方式理解世界，这使得你能看到比环境本身更多的可能性。</li><li>幽默的好处？<br>研究表明，幽默对我们的生理和心理有很多好处。<br>即使是一点点幽默，就能提高我们的免疫系统。<br>幽默具有后效应，能提高忍痛力。<br>幽默能释放压力，减少癌症的发病率。</li><li>男女所寻求的幽默是有差别的。<br>女人笑的次数与女人喜欢男人的程度成正比，女人笑的程度与男人喜欢她的程度成正比；男人的笑对两个人的吸引力都没有任何影响。</li><li>幽默是一种心理治疗方法，可有效抵御消极。</li><li>提高幽默能力的方法？<br>1、用日记记录身边有趣的事，积极的事，使大脑形成在生活中寻找有趣事情的模式，把幽默培养成一种技能。<br>2、观察好笑有趣的人，与此同时学会他们身上幽默的规律。<br>3、两问题方法。经常问自己“我为什么这么有趣？”“为什么别人没发现我的幽默？”逐渐建立起自尊心，用笑对待创伤。<br>4、多样性是生活的调味剂，人们对固有的模式改变的越多，会发现越多的潜在可能。<br>5、幽默就像乐观主义，是人们用来看世界的晶状体，它需要我们留意身边的可能性，使人们更健康，它改善了社会效益和物质效益。<br>6、它可以作为一种治疗方法。但在痛苦矛盾的时候，经济不景气的时候，幽默最为重要。</li></ul><h3><span id="pren-ji-guan-xi-he-qin-mi-guan-xi">人际关系和亲密关系</span><a href="#pren-ji-guan-xi-he-qin-mi-guan-xi" class="header-anchor">#</a></h3><ul><li>感情的目的<br>大多数人认为感情（relationship）应该是我们可以得到认可，有人可以在背后做支柱，这在我们的关系中确实是重要的。但如果我们想要长期的、成功的、健康的、有激情的关系，那最基本的目标是通过关系被了解，而不是得到认可。换句话说，“我的的伙伴如何才能更了解我呢”，当然要循序渐进慢慢敞开心扉。此方法同样适用亲情和友情。</li><li>白金法则<br>如果你的好朋友失败了，你会怎么对他？是拒绝他们，打击他们还是拥抱他们，你会因此不爱他们吗？你不会。那为什么要将那些毫无共鸣的标准强加给我们自己呢？ 对待自己不能不同于对待别人，要有同样的标准，要像接受他人失败一样接受自己失败。</li><li>交友配额<br>问问自己，和别人相处多少小时觉得愉快，觉得和人相处是一种享受。不是和人待在一起就表示你开心快乐，每个人需要的不一样，每个人都需要一个可以释放压力和负面情绪的恢复龛，有的人需要更很多人待在一起使自己恢复，有的人则需要一个人寻找平静。你需要找到自己的配额。</li><li>被了解是想要表达自己，被认可则是想要取悦别人。<br>敞开心扉表达自己风险更高，但是当我们表达自己的时候更可能收获一段美好的恋情。没什么可以保证我们可以收获一份美好的恋情，但一味的抑制自己取悦别人，失败是肯定的。表达自己最初得不到效果，但随着时间推移真诚会吸引到其他人，这同样适用于人际关系领域。从想要被认可转换为想要被了解。</li><li>真诚回应的人会变得更快乐。<br>做出主动的建设性回应的伴侣是在为艰难时刻准备积极正面情绪。</li><li>我们越独立，就越互相依赖。<br>这种依赖是一种更高层次的，相互了解相互接受的。独立与依赖相互依存。</li></ul><h3><span id="pqin-mi-guan-xi">亲密关系</span><a href="#pqin-mi-guan-xi" class="header-anchor">#</a></h3><ul><li>爱情在于细节<br>爱情就在细节中，能够长期维持幸福恋情的是细节，是那些微小的事，是每天的生活常规，触摸，凝视，共进晚餐。维持幸福需要长久的努力。</li><li>在爱中展示真实的自己，不固执、不计较，是爱情保鲜的秘方。</li></ul><h3><span id="pjie-yu">结语</span><a href="#pjie-yu" class="header-anchor">#</a></h3><ul><li>每次你去某个美丽的地方，<br>国外或国内，记住要简化问题，记住照顾自己，记住要锻炼，记住要果断坚决，在适当的时候说“不”，记住要经营你的感情，记住你生命中什么才是真正最重要的东西。</li></ul><p><strong>一、积极心理学绪论</strong></p><p><strong>1、什么是积极心理学？</strong></p><ul><li>成功最重要的两点：一是自信，强烈的愿望，相信自己能成功；二是好奇，多问问题。</li><li>最重要的往往是常识，大道至简。做减法比做加法让心灵成长更快，复杂之后的简单才是真简单。</li><li>我们大多数时间花在外部，关照自己的时间太少了。关照自己和沉默有关系，多给自己一些沉默的留白，对于生活、工作、修身都很重要。语言信息的交流并不是教与学的全部，沉默是学习的必要环节。</li><li><strong>信息的解读比信息本身更重要。信息</strong>如同填满一个容器，而<strong>解读</strong>如同改变这个容器的形状。</li></ul><p><strong>2、为****什么要学习积极心理学</strong></p><ul><li>问题缔造现实，你的关注点影响你的认知。感谢和追求那些美好的事物，美好的事物也会回报你。</li><li>从普通变得不普通，你需要：适应力强、有榜样、有助人行为、关注优势承担责任。</li><li>预防困苦最有效的方法——不管是抑郁还是焦虑——实际上是专注于培养积极心态。</li></ul><p><strong>3、幸福是一种随机现象吗？</strong></p><ul><li>培养内心和周围人的正面力量。我们通过培养正面力量使心理引擎更强大，解决更多的问题。</li><li>向最优秀的人学习，比如一个领域排名前5%的，<strong>不要向平均水平看齐</strong>。</li><li>向自己的巅峰时刻学习。</li></ul><p><strong>二、积极环境</strong></p><p><strong>1、积极的环境能改变人</strong></p><ul><li>内在因素对幸福感的决定性——基本需求满足后，财富对幸福感的影响很小。内在因素是指对世界的解释、关注点等。</li><li><strong>改变的最大障碍是低估了自己能改变的能力。</strong></li><li>痛苦等负面情绪对于人来说不可或缺，我们要允许自己作为人所产生的任何情绪，学习积极心理学不是避免负面情绪，而是能处理负面情绪。</li><li>非常有益于心理健康的冥想：坐直，放松背，放平脚，深呼吸，思想聚焦在呼吸上，平静之后让所有的情绪释放。</li></ul><p><strong>2、环境的力量</strong></p><ul><li>快乐是道德追求和最终目标。（生命的最终目标是快乐；生命的主要活动是寻找快乐。  ）</li><li>对于领导、家长而言，员工和孩子会按照你做的去做，而非说的。</li><li>信念即自我实现的预言，它强大到可以控制身体。境随心转，全有意念升起，我们的念头造就了世界。</li><li>皮格马利翁效应：当我们怀着对某件事情非常强烈期望的时候，我们所期望的事物就会出现。期望什么，就会得到什么，坏事也一样。</li></ul><p><strong>三、乐观与挫折</strong></p><p><strong>1、乐观主义</strong></p><ul><li>最成功的科学家也是失败次数最多的。</li><li>错误的自尊公式=实际/期望。</li><li>赢得彩票会让你快乐一时，但基本几个月后你的快乐水平就回到从前；失去一百万会让你难过一时，但基本几个月后你的快乐水平就回到从前。</li><li>在真正着手处理之后，实际的失败远远小于想象中的，远没有那么严重和深远。</li></ul><p><strong>2、逆境还是机遇</strong></p><ul><li>行动——把自己置于风险之上，一点点的成功也能有助于提高自我效能。</li><li>想象——想象可以愚弄大脑，使之无法区分真实和虚幻，由于大脑无法忍受不一致的情况，所以大脑会启动内部的各种力量打破这种不一致。</li><li>认知——选择去负责，而不是抱怨。遇到事情问自己：是不是走了极端？是不是以点概面？是不是用情绪代替了判断？</li></ul><p><strong>四、感知与积极情绪</strong></p><p><strong>1、感激</strong></p><ul><li>培养感恩习惯，<strong>不把好事习以为常</strong>，感恩让人感到平静。与孩子每晚谈感激与快乐的事，有助于培养其乐观性。</li><li>关注正面新闻，躲避媒体为了博眼球的负面煽动。从艺术中学习，无论音乐、电影、雕塑，美术何种艺术形式，艺术都是将美好的一面表现出来。</li></ul><p>2、<strong>积极情绪</strong></p><ul><li><strong>艾默生说：如果星星每千年闪烁一次，我们都会仰视赞美这个世界的美丽，但是因为他们每天都在闪烁，我们将之视为理所当然。</strong></li><li>练习感激，甚至将它们记下来，你将看到越来越多的积极事物 。</li></ul><p><strong>五、改变</strong></p><p><strong>1、如何去改变</strong></p><ul><li>潜意识中可能不想改变密切关联的品性，如：完美主义——动力雄心，担忧焦虑——责任感，精简化——失去优势，古板——言行一致，幸福——偷懒。</li><li>神经可塑性是指神经元有可塑性，神经元是发展的，在人的一生中不断生成，直到我们死去。</li><li>关于改变的ABC理论。A代表情感情绪：强化高峰体验，提供情感动力。B代表行为行动：走出自己的舒适区，做你害怕的事，害怕就会消失。 C代表认知、思维 ：认识到自己脑子中存在不少根深蒂固但未必正确的观念。</li></ul><p>2、<strong>养成良好习惯</strong></p><ul><li>如果想要养成好习惯，不断地重复吧。我们培养习惯，而习惯将造就我们。 如果你想说服一个人，不断地重复吧，一般说服一个人要改变原来的观点，最少需要6次。</li><li>远离舒适区，当你感觉无助的时候，可能正处在健康的改变状态。</li><li>很多时候不是自律起作用，而是习惯起作用。记录好习惯的培养过程，比如30天内培养一个好习惯，就会与众不同。</li><li>遇到事情留给自己一个解读时间：这是机会还是威胁？是竞争还是合作？是自愿还是责任？是成长还是灾难？</li></ul><p>3、<strong>坚持写日记</strong></p><ul><li><strong>自传书是最好的自助书，把美好的事情写下来，内心会有力量。</strong></li><li>写日记可以增强神经通路，增强对生命的控制力和预见能力。</li><li>刚开始写日记焦虑程度会上升，持续4天后焦虑水平会稳定在比原本更低的水平，同时免疫系统提升，变得更social。</li></ul><p><strong>六、面对压力</strong></p><p><strong>1、勇于面对压力</strong></p><ul><li>工作or职业or使命？所有的工作都可以分为以上三种，选择权在你。</li><li>自我和谐，才算真正生活过。</li><li>睡觉少，智商减分。适当的压力是积极的，不积极地方是压力带来的不休息和持续运作。</li></ul><p><strong>2、过犹不及</strong></p><p>克服拖延症，忽略态度和情绪，先着手干5分钟。</p><p>在做成的时候奖励自己，好过在刚开始做的时候激励自己。</p><p>为自己的孩子营造心理安全，让他们不害怕告诉你他们做得不好，这样他们就不容易成为完美主义。</p><p><strong>3、完美主义</strong></p><ol><li>完美主义：对失败的失能性恐惧，尤其是对我们在意的方面。</li><li>完美主义的特征是过度关注失败，自卫性强，会带来自尊和精神上的双重压力。而追求卓越的特征是心胸开阔、关注成功，享受过程。</li><li>治疗完美主义的方法是专注于对努力的嘉奖，而非对胜利结果的嘉奖。尊重螺旋上升的理论。</li></ol><p><strong>4、享受过程</strong></p><ol><li>锻炼提高自尊，对治疗焦虑和压力也十分有效。跑步锻炼有利于形成新的神经通路，锻炼后能更好地吸收所阅读的东西。</li><li>从失败中挖掘闪光点，失败是成长的学费。</li><li>完美主义是阻止我们帮助他人的最大障碍之一，<strong>接受“困难存在并且可能不容易解决”这件事，不要用完美主义要求别人。</strong></li></ol><p><strong>七、运动、冥想、睡眠</strong></p><p><strong>1、运动</strong></p><ol><li>压力增大时可能会首先放弃运动，要在潜意识里觉得自己值得幸福，值得拥有美好的身体。</li></ol><p><strong>2、冥想</strong></p><ol><li>长期冥想者的惊吓反应更少；平静会传染，不宜生气。<strong>平静增强免疫力，焦虑会使免疫力降低。</strong></li><li>苦苦思索是问题的症结之一，不是解决办法。</li><li>在冥想过程中察觉并接收身体信号，身体有自我疗愈功能。</li></ol><p><strong>3、睡眠</strong></p><ul><li>尽量深一些呼吸，现代人的呼吸很浅，深呼吸能帮助我们心平气和。</li><li>保证8小时的睡眠是一种投资：对免疫系统、精力水平、体重、创造力、降低事故发生等各方面都有益处。</li></ul><p><strong>八、亲密关系</strong></p><p><strong>一、如何让爱情天长地久？</strong></p><ul><li>不对外人做的事，也不要对亲密的人做。</li><li>幸福的婚姻，基于深厚的友情之上——尊重对方、享受相处，深入了解对方，熟知好恶、持久尊重，在大问题及琐事上，表现出爱意。</li><li>在爱中展示真实的自己，不固执、不计较，亲密关系是爱情保鲜的秘方。</li><li>允许冲突的发生并把它当成两人携手成长的机会，永远不要因为争执恶语相向。</li></ul><p><strong>二、幸福与幽默</strong></p><ul><li>人们倾向于在平日生活中和幽默的人多接触，幽默的生活方式也是会传染。</li><li>幽默是可以培养的，多寻找令你开心的事；向幽默的人学习他们思维和话语中的幽默模式。</li><li>经历过人生起伏还能笑对生活的人，内心是真正的强大。</li></ul><p><strong>三、爱情与自尊</strong></p><ul><li>真正的恋情，基础不是责任感，不是否定自我的利他主义者，我们越独立，就越相互依赖。</li><li>自尊不是空洞的心理强化能产生的，也不依赖于别人的表扬。自尊存在于现实中，是努力的产物。</li><li>可以提高自尊的实践：（1）正直——“我的话很重要，可以信赖。”（2）自我觉察——“我的价值不需要通过赞扬证明。”（3）努力追求有目标、有使命的生活。（4）担起责任，承认自己在某方面有不可替代性。（5）自我接纳。（6）有主见，支持所信仰的东西。</li></ul><p><strong>四、自尊与自我的实现</strong></p><ul><li>独立的人，比较心不那么强烈。从如何对待别人，可以看出如何对待自己。</li><li>荣誉的本质：尊敬自己，相信自己。</li></ul><h1><span id="ji-ji-xin-li-xue">积极心理学</span><a href="#ji-ji-xin-li-xue" class="header-anchor">#</a></h1><p>1612</p><ul><li>享受安静以及内省的重要性</li><li>一件事情从不同角度理解结果都不一样</li><li>相信自己并保持好奇心</li><li>如果我只剩下一年我会做什么？</li><li>专注于优点：培养积极性和个人优点，提积极的问题</li><li>世界最缺的是务实的理想主义者</li><li>赞美不是盲目的。合适的赞美可以有效提升别人的自尊</li><li>冥想可以转换大脑思维，使我们更容易感染积极情绪</li><li>每周三次，每次三十分钟的有氧运动强过最强的精神药物</li><li>相信改变是可能的，这是一个十分重要的基础观点</li></ul><p>1701</p><ul><li>如何制造一个积极的环境：①找一些你爱的人或地方的照片 ②让你开心的东西，比如艺术品 ③名人名言 ④把喜欢的书放在身边 ⑤激励你的音乐或者电影</li><li>影射效应：体现情境的力量，使用积极的影射可以提高自己，去创造一个积极的环境。</li><li>安慰剂效应：精神对构建我们生理、情感、认知以及外在环境起了重要作用。</li></ul>]]></content>
      
      
      <categories>
          
          <category> 6203：积极心理学 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 积极心理学 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>能量管理</title>
      <link href="/610201/"/>
      <url>/610201/</url>
      
        <content type="html"><![CDATA[<h1><span id="neng-liang-guan-li">能量管理</span><a href="#neng-liang-guan-li" class="header-anchor">#</a></h1><ul><li><p>无论精神在早晨有多么充沛，这种状态都不能持久。没有良好的习惯，注意力就会开始分散，从而影响工作效率，最终让自己疲惫不堪。</p></li><li><p>当你坐立不安的时候，起来走走。当人们讲到能量和消耗的时候，你通常都会想到运动，但是人们不知道的是非运动性能量消耗（在学术界统称为NEAT）实际上所占据的时间和所消耗的能量会更多。改变非运动性能量消耗更加容易，因为运动需要更加坚定的意志力，但是非运动性能量消耗所造成的影响也非常深远。专注研究运动保健学的Jacquelyn Kulinski博士讲到：“我们发现久坐以后，起来动一动是能够让人更加健康。如果你需要在办公桌前久坐，不妨经常换一下坐姿，在思考的时候，站起来伸展一下，接电话的时候也可以走来走去。”</p></li><li><p>用5分钟来克服拖延。斯坦佛研究员BJ Fogg指出，改变的你行为最好的方法是让你的目标变得更加简单。最为简单的方式是减少目标达成的时间。举个例子，锻炼一分钟比锻炼一个小时更加容易让人坚持下去。同样的原则适用于工作，每当Brian Scudamore感觉到压力山大的时候，整个人都不在状态的时候，他就用手机设定5分钟，在这5分钟内全身心投入工作，Scudamore 说：“在这5分钟里我建立起工作的势头，在5分钟结束以后，我依然会继续专注地工作。”设定长远艰难的目标对于公司未来发展是非常有益的，但是如果你今天不在状态的话，这个长远艰难目标就会变成你拖延的理由。专注在完成简单任务之所以有用是因为：建立持续工作的势头，让你更加专注。能够让你行动起来。建立一个说到做到的自我形象。给你一种进步的感觉，让你变得更加乐观，并且更容易控制自己。</p></li><li><p>到大自然去进行“口袋式旅行”。长期接触绿色植物能够提升你的免疫系统能力，长期生活在黑白的钢筋水泥森林里面，不去接触绿色植物会增加过敏、哮喘以及其他疾病的患病概率，这种症状叫做“缺乏自然失调症。”Kay Koplovitz每天都要去纽约中央公园散步15分钟，她将其称为“口袋式旅行。”研究指出，在大自然里走5分钟能够立即放松我们的神经，减少体内的皮质醇以及压力荷尔蒙。更加重要的是，注意力恢复理论指出，大自然能够让你重新获得专注的能力。如果你没有时间去大自然里散步，你可以花40秒看看窗外绿色的风景。短短的40秒能够帮助你重新专注到工作上来，帮助你减少工作当中所犯的错误。</p></li><li><p>小睡一会，高效生活。历史上很多著名人物，都得益于小睡这个习惯。从总统（里根，肯尼迪，詹森，克林顿）到艺术家（达利，达芬奇）再到企业家（爱迪生，洛克菲勒）这些人都有午睡的习惯。一份研究报告指出，10分钟的小睡能够减少疲惫，提升认知表现达两小时，达利有一个小睡技巧以此来提升他的创造力，他称之为“带着钥匙睡眠。”他拿着钥匙坐在椅子上。如果他睡着的话，钥匙就会掉落在地上，让他醒来，这种方法会让他进入深度休息状态，让他从意识思维转移到无意识思维上去。Sevetri Wilson选择在别人睡觉的清晨开始工作，在别人休息的晚上小睡一会。Wilson说道：“这样的节奏让我能够让我保持专注，不会被信息和电视分散我的注意力。”越来越多的公司开始意识到小睡的好处，举个例子，Huffington Post和Hubspot的CEO为员工打造了一个小睡的房间。</p></li><li><p>学一门乐器，增强大脑可塑性。脑神经科学家Anita Collins讲到，演奏音乐相当于给大脑做了一次“全身锻炼，”因为演奏音乐“基本上需要用到大脑的每一个区域。”更为重要的是，演奏音乐能够增强我们大脑的可塑性以及大脑的整体表现。Joe Apfelbaum将此项研究付诸实践，并将音乐融合进了公司的文化。他说：“对于我而言，保持对工作的热情，我需要做点不一样的事情，当我们进行头脑风暴的时候，我有时候会弹吉他或者其他乐器，这些乐器在我的办公司里非常常见。”爱因斯坦钟爱小提琴，并且非常擅长于拉小提琴。他包含热情地写道：“我白日梦所梦到的全是音乐，我将我的生命看做乐章，我在音乐当中获得无穷的乐趣。”学会玩一门乐器，并不是如你所想的那么艰难。</p></li><li><p>在一天结束时创建简单列表。很多的文章和书都在讲开始工作的一天应该是怎么样的，最核心的一个原则是专注困难而且重要的任务上面。Emerson Spartz讲到：“如果你将困难且重要的任务拖到下午的话，你更有可能去拖延，变得低效，工作质量也偏下。”Spartz将一些不太需要注意力的工作（比如回复邮件，回复微信等）留到工作当中的最后一个小时。Spartz 说：“我在一天当中会定时间去回复紧急邮件，但是我预留最后一个小时来去处理一些不紧急的邮件，这对我的大脑来说更加容易，因为这个时候，我的注意力更加容易涣散。”</p></li><li><p>去健身房，好好锻炼。他讲到：“我能够在早上的时候非常专注，所以在早上锻炼的话会让我原本可以在办公室里非常专注的时间浪费掉。我现在开始在中午或者是在下午锻炼（尤其是当我工作比较多的时候。）最开始的时候，在大中午离开公司让我感觉非常奇怪，但是所花费的时间都是一样的，不同的是在一天当中，我能够变得更加的专注。”Cameron Herold同样也在中午锻炼，他雇了一个私人教练督促他去锻炼。Herold 说道：“如果我能停止工作，并开始锻炼，我能够让我的让我的工作完成地更加出色。聘请一个私人教练能够督促我进行锻炼。”29份研究报告指出，锻炼大幅提升我们的注意力，处理信息的速度，以及执行的能力。</p></li><li><p>建立外在结构。</p></li><li><p>安排“情绪发泄”时间。每个星期都安排一些发泄情绪的时间，只要安全无误，你喜欢做什么就做什么，比如听震耳的音乐、看赛马或大吃一顿。</p></li><li><p>充电。每天留一点时间什么都不做，你可以把这段时间看成是重新充电，这样就不会自责了。小睡一下、看电视、发呆、禅修，任何安静的休息都好。</p></li></ul><p>能量管理</p><h2><span id="p-jing-li-guan-li-de-du-shu-bi-ji">《精力管理》的读书笔记</span><a href="#p-jing-li-guan-li-de-du-shu-bi-ji" class="header-anchor">#</a></h2><p>1、精力管理要遵循四个基本原则：</p><ul><li>全心投入是确保最优表现的最佳精力状态，需要调动四种独立且相关联的精力源：体能、情绪、思维、意志。</li><li>使用过度和使用不足都会削弱精力，必须不时更新精力以平衡消耗。</li><li>想突破自己的精力极限，就要像训练肌肉一样系统训练。</li><li>建立仪式感和习惯（细致具体的精力管理方法），是全心投入、保持高效表现的诀窍。</li></ul><p>2、体能：</p><ul><li>体能是身体最基本的精力源。</li><li>可以从呼吸，体育锻炼，饮食，睡眠，活动周期五个方面来改善体能。</li><li>呼吸：深呼吸(腹式呼吸)。</li><li>体育锻炼：体育锻炼是一个很好的办法。尤其是高强度间歇训练，能够短时间提升到燃脂心率，提高心肺功能，改善大脑供血。</li><li>饮食：吃升糖指数低的食物（全麦、蛋白质、坚果、低糖水果），每天喝至少2升水。</li><li>睡眠：每天保持7到8小时的睡眠。</li><li>活动周期：早睡早起，睡午觉，工作60到90分钟就休息15-30分钟。</li></ul><p>3、情绪：</p><ul><li>管理情绪的终极目标是掌握各种情绪，而不是被各种情绪所掌控，这样就减少了内耗成本，将精力用于做事情上。作者介绍了五大招，提升情感精力：</li><li>第一招：获得正面情感。在日常工作和生活中，我们要学会调节自己的积极情绪，获得正面情感，为效能提供动力。这些积极情感包括：自信、自律、人际沟通、理解和关爱他人。发展各种爱好，享受一段安静的独处时光，定期陪伴家人、朋友聚会…只要能带来享受、满足和安全感的活动都能激发正面情感。</li><li>第二招：让人际关系促进精力再生。在人际交往中，要多倾听，少批判；批评要有“套路”，先肯定对方，再提出意见，最后以鼓励结束反馈，把批评意见像三明治一样地夹在鼓励认可中间。还可以在工作中结交一位好朋友。</li><li>第三招：积极扩充情感容量。迈出舒适圈，做自己要做，但是害怕做的事情。比如内向的人可以设定一个“见面第一个打招呼”的目标；害怕被拒绝的业务员可以设定一个“每天下午3点到4点拜访客户”的目标，当你行动起来，会发现没有想象中那么可怕。业余时间，还可以做一些跟工作无关的公益活动，发挥自己的特长，这样能够获得很多的正面回馈和正能量，帮助自己树立自信。</li><li>第四招：学会接纳正反两面的情感。向往勇敢，但是也要接纳和允许自己害怕；向往自律，对于自己的偷懒也不要过度批判。</li><li>第五招：学会从跌倒处站起。我们要像《反脆弱》一般，遭遇挫折后能够触底反弹，从失败中汲取营养，变得更强大。</li></ul><p>4、思维：</p><ul><li>保持乐观：<br>通过日记进行自我积极对话。Susan Kuang说过，她刚回国时，有一段时间内心非常没有自信，整个人的状态很不好。于是她写了半年的日记进行自我积极对话。具体方法是，在日记本的左边，写下自己消极的解读。然后，在日记本的右边，针对每一条消极的解读进行反驳。通过自己与自己的对话，把自己对自己的看法进行积极的强化，最后越来越乐观，越来越自信，整个人的状态被打开了。此外，每天写感恩日记也是一个很好的办法。<br>对于容易焦虑的人，可以每天早上列出危机处理清单。写下所有认为会出错、会有问题的事物，将其看作是挑战和机遇，而不是灾难或威胁。问自己，最坏的情况是怎样的，后果可否接受？写到这里，往往会发现，事情并没有自己想象当中那么严重，于是就能够平静地对待了。</li><li>保持专注：<br>根据书中的案例，提出的建议有：早上花20-30分钟记录工作和生活中出现的问题，工作前把情绪排遣出去，避免工作时被这些情绪干扰；上班途中思考一天的工作和挑战，设想如何处理具体危机，为接下来的工作作好准备；先处理最重要的事情，或者根据自己的生物钟，把精力最为充沛的时间段留给最重要的事情；每天进行总结反思。<br>此外，番茄钟是保持专注的好方法，亲测有效。</li><li>提高创造力：<br>我们的左脑和右脑分管不同的区域，其中左脑是负责数字逻辑；右脑是负责语言艺术等能力。因此，创造力的关键在于转换思维频道，激活不同的大脑部分。作者指出，灵感时刻创造的最高形式依靠投入与抽离、思考与放松、活跃与休息有节奏的交替。人的大脑，在放松中思考更容易有创造力，沐浴、听音乐、散步…欧阳修曾说：“余平生所作文章，多在三上，乃马上、枕上、厕上也。”便是这个道理。<br>关于创造力，美国教授芭芭拉·奥克利所著《学习之道》里有更为细致的阐述，很推荐。</li><li>重塑大脑：<br>“年纪大了，脑子不好使了。”连90后都开始“中年危机”的当今社会，青年一代的焦虑尤甚，害怕时间来不及，害怕还没成功就已衰老。看完这本书，我们或许不那么悲观了，作者书中指出，记忆衰退是由于思维不够活跃导致的，无论哪个年龄阶段，记忆“肌肉”萎缩都可以持续优化大脑。<br>锻炼大脑也如同锻炼身体，要系统地加以锻炼，必须不断突破舒适区并充分休息。慢跑可以使更多的血液和氧气输送到大脑，帮助修复脑部细胞；短暂压力之下，刺激肾上腺素分泌，可以提高记忆力；学习新事物，建立起大脑细胞新的联结，可以维持大脑的良好状态。</li></ul><p>5、意志：</p><ul><li>意志力，可以为所有层面的行为提供动力，带来激情、恒心和投入。意志与我们的价值观息息相关。正如尼采所说“知晓生命的意义，方能忍耐一切”。按照自己的价值观而活，将提供巨大的动力支持。</li><li>那，如果我不知道自己的价值观是什么，该怎么办呢？作者用一组问答，帮助我们寻找自己的深层价值取向：<br>Q1：如果现在就是人生的尽头，你学到的最重要的3件事是什么？为什么它们如此重要？<br>Q2：你最敬重谁？最钦佩他的3种品质？<br>Q3：你能做到的最好的自己是什么样的？<br>Q4：你希望你的墓志铭上如何总结你的人生？<br>拿出一张A4纸，写下这些问题的答案，你就会明白，哪些对你来说是最重要的，你最看重的是什么。</li></ul><p>6、管理精力的三个步骤：一、明确目标：</p><ul><li>知道什么最重要，才能全心投入。</li><li>明确“目标”，指的就是与价值观指向的目标，即“使命感”。使命只能由自己定义。正如维克多·弗兰克尔在《活出生命的意义》一书中说的：人类不应该询问生活的意义，因为他自己才是需要做出回答的人。他只能为自己的生活作答，并负起相应的责任。作者强调，只有我们将使命感从负面变成正面、从外部转向内部、从自我变成他人时，才能为我们提供更强大、持久的精力。</li><li>确定积极的目标：<br>作者对目标进行了分类：积极的目标和消极的目标。<br>我曾参加过前麦肯锡合伙人、盖茨基金会李一诺的线下课时，她讲道“焦虑”的原因让我深受触动：<br>人为什么焦虑，会不快乐？是因为很多人奋斗的目标是恐惧，害怕没钱、没地位，害怕变成自己不喜欢的样子，一面害怕一面往前走。所以他们活在焦虑之中，哪怕有所得，也没有真正快乐。<br>而有的人，他们奋斗的目标是爱，他们爱自己、完全地接纳了自己；爱社会、爱世界，所以他们能够平和，能够快乐。<br>所以书中说的“当目标感从消极流向积极、从外部流向内部、从自己流向他人，它就成为生活中最强大也最持久的精力源。”就很好理解了，消极的目标会不断产生内耗，消耗我们的精力；而积极的目标，则会产生动力。<br>这给我们的启示是，在现实的工作和生活中，我们要将注意力从内心的威胁转化为变好变强的挑战和机遇，将生存动机从恐惧转化为人生的意义，从更高维度来看待当下。那么，我们就不会纠结于眼前的困难，更有勇气和动力做我们的事情。</li><li>将目标由外部转移到内心：<br>成年后，我们经常会惊叹，为什么小孩子的精力那么旺盛呢？哪怕是一个小玻璃珠、一片小树叶，他们也能兴趣盎然。很简单，因为他们喜欢。<br>心理学家曾做过一个试验，他们找到一群兴高采烈玩游戏的小朋友，许诺他们，如果他们完成了游戏中的任务便会获得奖励。<br>玩自己高兴的事情，还能获得奖励，听起来很不错吧？孩子们应该会更加乐此不疲了吧？试验的结果是，过了一段时间，孩子们对这个游戏再也提不起兴趣了。<br>哪怕是自己原本喜欢的游戏，一旦与外部奖励联系起来，他们对的兴趣就会消失。因为，他们做游戏的动力变为了获得奖励。<br>因此，心理学家得出结论，人们可以被物质奖励或外部激励所驱使，但只有在自由选择并享受事物本身的情况下，人们才会有更多的热情，从中获得乐趣。<br>我们做一件事情，外在动机包括金钱、认同感、社会地位、权力、爱情等等，获得外在激励会损害我们的内在动机。真正的内在动机，包括兴趣、满足感，才能够提供持久的动力。<br>激发内在动力，可以按照以下几个步骤：<br>1.明确什么是自己最珍视的品质？<br>2.我做的事情是否符合这些品质？<br>3.如果不符合，我要怎样调整。<br>举个例子，我对当前的工作环境不满意，我觉得工作没有前景、周围的同事都是负能量，我不喜欢现在的工作，于是对自己的任务敷衍塞责，明明没干什么事情，但是一天下来还是会特别累。这个时候，我要停下来，想一想：<br>我看重什么品质，希望自己是什么样的人？（认真、负责）<br>但是我现在所做所为违背了这些品质，那我要调整自己：我工作不是为了做给别人看的，我是为了自己的成长、为了…<br>这样想着，我便又有了动力，不再无精打采。接下来，我就要开始认真做事情，使自己的行为与价值一致。</li></ul><p>7、管理精力的三个步骤：二、正视现实：</p><ul><li>弗洛伊德认为整个人格由三大系统组成，它们是本我、自我、超我。其中，“超我”是理想中的自己，拥有着自律、善良、上进等我们所喜爱的美德，犹如天使般美好；“本我”是动物性的“我”，它懒惰、贪婪，还有一些我们不喜欢的阴暗面；“自我”就是平时表现出来的那个“我”，自我所作的决策，是超我和本我共同影响下的结果。</li><li>出于自我保护，我们的大脑为我们设置了一道防御系统，帮助我们维护我们的人格自尊，使我们有了生存和发展的心理基础。但这道防御系统也让我们和真实的自我产生了隔阂。对于我们不喜欢的那一面，我们会采取麻木无视、掩饰、找借口、影射到他人身上等方式进行回避和压制。在实际生活中，我们常常会看到，内心软弱的人，粗暴对待他人；自卑的人吹嘘自己的成就；不愿面对自己内心的嫉妒，用微妙的方式诋毁他人。</li><li>事实上，我们认为的，是我们进行选择过滤的结果，并不代表真实。</li><li>书中写道：“只有满怀震惊地看到真实的自己，与我们希望或想象中的自己区分开，才算迈向自己生活现实的第一步。”形容真实自我，用的是“满怀震惊”四个字，可见想象与真实的差距之大。</li><li>回避现实会消耗大量精力，为了节省精力，我们要诚实地对待自己。那么，怎样诚实地对待自己呢？</li><li>第一步，认识自己<br>将自己当作研究对象，像一个旁观者一样地观察自己为人处事的模式，客观地作出评价。在这一过程中，我们要反复告诉自己，自己的观点并不一定就是事实，只是我们解读世界的方式，要分清观点与现实。<br>当自我解读采用个人的、消极的和渲染夸大的角度，我们会放弃并失去动力。<br>举个例子，焦虑来袭时的两种认知：<br>A：我就要陷入焦虑中了（我是受害者/无能为力）<br>B：我感受到了焦虑（焦虑只是一种感觉，我依然拥有决策和行动的能力）<br>B的认知模式明显优于A，因为B的表达，只是在陈述事实，不带任何消极的情绪。<br>关于焦虑等消极情绪，我非常建议冥想的方式，将焦虑这些情绪看成是飘在自己心绪世界中的云朵。当这些情绪在心底涌现时，不要批判自己，也不要压制这些情绪，想象自己是一个旁观者，看着云朵飘走。</li><li>第二步，承认自己的局限性<br>一方面，要清楚地知道，自己并不一定总是对的，也可能会错。另一方面，也要告诉自己，偶尔犯错无损于自己的形象。这样，可帮助降低自我防御，增强积极精力。</li><li>第三步，接受自我<br>心理学有个名词叫做“投射”，在上文已经提到了。把对自己的不满归咎到别人身上，就叫投射。事实上，如果你特别讨厌某人的性格，其实这种你讨厌的性格特质，你也有，而且是你性格中最压抑的一面。<br>有这样的心理，代表着我们想否认自己。作者强调，我们都是光明与暗影、美德与恶行的混合体，爱全部的自我，包括阴影部分，接受全部的自我。<br>这并不意味着我们要放任自流。接受自我包含两种意思，一方面，要从道德上意识到阴影部分是种负累，一定要改变；另一方面，要认可并微笑接受自己的不足和阴影，对于自己不愿面对事实也要理解。<br>对于自己的阴影，不要过份地关注和挖掘。任何人都不是非黑即白的，无休止地追寻真相会有损自我，不带怜悯的诚实是种残酷，对人对己均是如此。<br>其实就是我们常说的，改变能改变的，接受无法改变的。</li></ul><p>8、管理精力的三个步骤：付诸行动</p><ul><li>根据科学家研究，人类行为只有5%是受自我意识支配的，95%是自动反应或应激反应。正如我们常说的“优秀是一种习惯。”</li><li>《自控力》一书中介绍过，人的自控力像肌肉一样，也会消耗甚至力竭。自律不能光靠意志力，更多的是要养成良好的习惯。</li><li>《精力管理》一书中，更进一步说到，当我们面对的困难越大，越容易退回旧习惯中。因此，一定要建立自己的仪式习惯，这样有助于促进改变，有压力时更容易行动，也能确保在困难的情况下能够继续，在精力消耗和恢复之间达到平衡，不至于“身体被掏空”。</li><li>关于建立自己的仪式习惯，作者介绍了一些小诀窍：<br>建立属于自己的“战前准备程序”，比如深呼吸、泡咖啡等等。然后在内心对即将要做的事情进行预演。<br>每天固定时间干固定的事情。比如，将上午9点-11点固定为工作时间，这个时段内，关掉手机等一切干扰；中午12点固定为健身时间。<br>每周/月固定时间与爱人约会、与家人相处。</li><li>关于建立自己的仪式习惯，作者也介绍了一些注意事项：<br>压力越大仪式就应该越严格<br>适时更新仪式内容，保持新鲜感<br>提倡人生中重大时刻、纪念日的仪式<br>在建立“做某事”的仪式习惯时，至少要保持30-60天的周期。决定习惯形成的关键在于，要将时间和行为具体化，这样就便于实施。<br>建立“不做某事”的仪式习惯时，可以采用“如果…就”的预案， 这个在古典的《超级个体》中也提到过。比如，<br>减肥期间：如果我想吃甜点，就去吃一片水果。<br>要专注于想要建立的行为上，而不是要抵制的行为上。再比如，<br>不焦虑：如果我焦虑，我就微笑。<br>在情绪来临让自己面带微笑，即便是装出来的也会有效果。原因是，人的表情、肢体，与情绪是相互影响的。</li><li>渐进，每次把精力放在一个重大改变上。</li></ul><p>精力管理</p><h3><span id="pyi-jing-li-guan-li">一、精力管理</span><a href="#pyi-jing-li-guan-li" class="header-anchor">#</a></h3><ul><li><p>人每天的精力不是均等分布的，而是波浪型分布。起床清醒后，精力会迅速攀升，在上午达到高峰，然后随时间幂指式递减。睡觉和冥想都会清理大脑进程，清空缓存，会恢复一定精力。</p></li><li><p>而精力管理的目标并不是单单有充足的精力，而是利用精力做最有价值的事情。</p><blockquote><p>如图所示，精力管理的目标是：在精力曲线与时间围成的区间内，填充总价值量最多的任务块。<br>其中：<br>★ 任务一：开拓创新型任务。精力消耗量大（高度高），持续时间有限，价值很高。<br>★ 任务二：维护型任务。精力消耗量低（高度低），持续时间长，价值一般。<br>★ 任务三：一般事情。精力消耗量低（高度底），持续时间短，价值较低。<br>★ 干扰项：趣事。即粉色区块，趣事有很强的趣味性，也会提供一定的价值，就像看视频、微博、微信、知乎一样。它们刚开始时消耗精力极少，用户粘性强，持续时间长，后期消耗精力大。为什么后期消耗精力大？一方面快感也会消耗精力的，另一方面由于价值供应不足，人就会因为价值的缺失而产生焦虑，消耗精力。最后，人为了填充价值的缺失，就会增加趣事的摄入量，导致消耗更多精力。</p></blockquote></li><li><p>根据任务的特点，人应该在上午时完成任务一，中午完成任务二，晚上完成任务三。</p></li><li><p>日常计划可以是：<br>上午完成最重要、最有挑战性的开拓型任务。<br>下午完成持续性、维护性、一般性任务。<br>晚上完成机械型、重复型任务，或单纯信息摄入型任务，比如听讲座，看学习视频等。<br>同时根据干扰项的特点，人要尽量推迟插入干扰项的时间，因为他们持久时间长，消耗大量精力，导致其余任务很难完成。<br>可以允许自己在晚上看娱乐视频和玩游戏。</p></li></ul><h3><span id="per-shui-mian">二、睡眠</span><a href="#per-shui-mian" class="header-anchor">#</a></h3><ul><li>人一天的精力曲线与前一天的睡眠状态息息相关。前一天睡眠不好，即影响精力，还会影响自信，是自律的第一大敌。</li><li>另一方面，人在入眠之时，恰恰是一天之中精力水平最差的时候，很容易管不住自己，导致熬夜娱乐。因此睡眠很容易被不自律而影响。</li><li>关于睡眠，有以下几点经验：<br>①晚上冥想后就洗漱（九点左右）。目的是让11点的时候自己能倒头就睡，入睡没有阻碍。<br>②手机调到飞行模式。睡眠时的手机异响并不会直接惊醒自己，但会让自己从深睡眠，跳到浅睡眠，人在浅睡眠中就容易多梦，导致疲惫。<br>③躺下后，不再接触开放信息源。微信、知乎、微博、B站都是开放信息源，新鲜内容源源不绝，一开始就停不下来。<br>④11点准时休息。<br>⑤别赖床。听听音乐，伸伸懒腰就可以起床了。</li></ul><h3><span id="psan-yuan-chi-you-huo">三、远离诱惑</span><a href="#psan-yuan-chi-you-huo" class="header-anchor">#</a></h3><ul><li>诱惑是环境与脑回路共同作用的结果。它是客观的，不是主观的。</li><li>很多人常常以为诱惑可以靠观念的转变解决，或者靠自制力解决。</li><li>太Naive了，诱惑是一种客观的存在，客观的存在对主观的愿望常常是降维打击，就像三体水滴碾压宇宙舰队一样。</li><li>我曾经对游戏上瘾，其客观原因在于两点，一是国外的生活枯燥和压抑，不能提供足够的满足感。二是，上瘾已经形成了回路，这个奖惩回路很强健。</li><li>如果我的生活状态不发生明显的改变，上瘾的状态就不会改变。</li><li>明白了这点，我放弃了通过主观努力克服上瘾的想法，只有远离诱惑一条路可走。正是断了这个念想，我之后再也没有打过游戏。</li></ul><h3><span id="psi-bu-zai-kai-fang-xin-xi-yuan-xia-xue-xi">四、不在开放信息源下学习</span><a href="#psi-bu-zai-kai-fang-xin-xi-yuan-xia-xue-xi" class="header-anchor">#</a></h3><ul><li>在知乎的官方平台上看文章，我常是不认真的，一目三行。但是同样的文章在笔记软件的环境下看，我就看得更仔细了。</li><li>和吃饭一样，在锅里吃饭我们肯定是凑合扒饭，在碗里吃才会仔细咀嚼。</li><li>开放的环境下总是给人仓促的感觉。封闭的环境下，人才会安心学习。</li><li>在使用知乎、微信、B站时，先把要看的东西摘出来，然后把它们做为有限资源 慢慢享用，这是大幅提高时间利用率的方法。</li></ul><h3><span id="pwu-xue-bu-jin-qu-shi-zen-me-ban">五、学不进去时怎么办</span><a href="#pwu-xue-bu-jin-qu-shi-zen-me-ban" class="header-anchor">#</a></h3><ul><li>人有一种行动偏误，就是在不知所措的时候，总是要做些什么才能安心。</li><li>比如有人在投资股票时，看到股价波动，总是要操作一下，要么追加，要么抛出，结果自然是亏本。为了应对行动偏误，人最优的策略是，<strong>在情况不明时按兵不动，直到分析清形势</strong>。</li><li>学不进去时，表明大脑判断自己没有能量支持后面的学习，最优的策略就是<strong>休息储能，然后再战</strong>。休息储能，可以使用假寐，冥想，做眼保健操，深呼吸等等，总之让大脑放空，安静下来，持续一断时间。等能量恢复到安全线以上，就可以继续之前的学习了。</li><li>为什么要继续之前的学习？**因为大脑对一门学科进行高强度的集中突破，是最高效的学习方法之一。**如果在难处就中断学习，大脑就自动为此门学科贴上“困难”的标签，你就不可能爱上这门学课了。把当前的难点跨过去，你就驯服了它，否则它就驯服了你。</li></ul><h3><span id="pliu-zui-qiang-you-li-de-wu-qi-shi-zhuang-tai">六、最强有力的武器是状态</span><a href="#pliu-zui-qiang-you-li-de-wu-qi-shi-zhuang-tai" class="header-anchor">#</a></h3><ul><li>自律的目标不是一段时间内有爆棚的生产力，而是<strong>维持一个状态</strong> —— 每晚都心满意足地躺下，清晨都满怀期待地睁眼。当人处于这样的状态中时，时间本身像裹了糖一样，这就是天底下最幸福的生活生式。有这种生活状态的人，就算遭受一定的命运重击，仍然能恢复到自己本来的位置。这样的状态既是最厚的铠甲，也是最锋利的武器。所以追求自律的过程中，大可不必因为一两次失败而沮丧，因为你的目标不是一城一池，而是一个状态。也不要太过分透支精力，不要熬夜学习，因为你的目标不是一城一池，而是一个状态。一个保有余力的生活状态。</li></ul>]]></content>
      
      
      <categories>
          
          <category> 6102：能量管理 </category>
          
      </categories>
      
      
    </entry>
    
    
    
    <entry>
      <title>读书笔记《奇特的一生》</title>
      <link href="/610102/"/>
      <url>/610102/</url>
      
        <content type="html"><![CDATA[<h1><span id="du-qi-te-de-yi-sheng">读《奇特的一生》</span><a href="#du-qi-te-de-yi-sheng" class="header-anchor">#</a></h1>]]></content>
      
      
      <categories>
          
          <category> 6101：时间管理 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 读书笔记 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>时间管理</title>
      <link href="/610101/"/>
      <url>/610101/</url>
      
        <content type="html"><![CDATA[<h2><span id="pmu-biao-guan-li">目标管理</span><a href="#pmu-biao-guan-li" class="header-anchor">#</a></h2><p>别去管目标：<br>减肥20磅是一个目标，而正确饮食则是一个体系。<br>在4个小时内跑一次马拉松是一个目标，而每日锻炼则是一个体系。<br>体系指的是您定期做的某件从长远来看能够增加您幸福几率的事情。<br>—— Scott Adams</p><h2><span id="pshe-zhi-mu-biao-de-yuan-ze">设置目标的原则</span><a href="#pshe-zhi-mu-biao-de-yuan-ze" class="header-anchor">#</a></h2><p>目标不可贪多。<br>目标太多，什么事都做不好，做不全。你就会开始怀疑自己，直至放弃。刚开始列出我的一周计划时候，满满的一张纸，看着这么多的目标，感觉自己真的很有激情，为自己每一刻都在努力而喜悦。结果刚开始两天，就败下阵来。后来试着删除简化我的目标清单，就会发现，目标瞄准一两件事后，越来越有自信并且越有工作状态，心有余力时，我再去想着给自己安排另外自己想做的事情。推荐利用类似<code>四象限法</code>思维进行思考，按照紧急重要、重要不紧急、紧急不重要、与不重要不紧急分级安排事件。</p><p>分解任务，适当休息。<br>很多工作没有办法在一定时间内完成时，就会使人疲惫抑或放弃，所以懂得如何分解任务就显得非常必要了。利用番茄工作法，你可以延长专注也可缩短休息，但不可不休息，人的生理状态与记忆能力等都需要适当的缓冲而非持续工作。</p><p>关键性目标<br>关键性目标是指你的投入与回报不对等，有些习惯只需要很少的投入就能带很大的回报。比如说，每天10-30分钟的有效运动，只要坚持2、3个月，给你带来的各种效果会超出你的想象。从以往的100天行动反馈中来看，运动、冥想、慢跑、每天优先完成三件要事、一个梦想番茄、不抱怨、赞美、保持冷静、存入收入的10%、定期回顾、永远不说谎、保持冷静和放松，这些习惯的回报要比其它的习惯高一些。</p><h2><span id="plie-chu-todolist">列出ToDoList</span><a href="#plie-chu-todolist" class="header-anchor">#</a></h2><p>待办事项清单可以分为两类，一类是long-term list，一类是short-term list。long-term list 可以以一周一个月一年来记录，也就是说你所有做的一切都是朝着这个目标前进的，你列出清单也是为了更好的审视自己是否完成是否偏离。short-term list这个也主要分为两类，一类是你生活琐事清单，一类是你的目标清单。生活琐事就如打电话，买水果，洗衣服等等。目标清单就是朝着long-term list 的一步步脚印。</p>]]></content>
      
      
      <categories>
          
          <category> 6101：时间管理 </category>
          
      </categories>
      
      
    </entry>
    
    
    
    <entry>
      <title>英语语法</title>
      <link href="/510404/"/>
      <url>/510404/</url>
      
        <content type="html"><![CDATA[<p>语法篇<br>词性<br>名词<br>分类<br>专有名词<br>普通名词<br>可数名词<br>个体名词<br>集体名词<br>不可数名词<br>物质名词<br>抽象名词<br>名词的数<br>可数名词有单数/复数形式<br>名词所有格<br>动词<br>分类<br>实意动词<br>及物动词<br>不及物动词<br>系动词<br>助动词<br>情态动词<br>形式<br>原形<br>一般现在时，第三人称单数形式<br>现在分词，ing形式<br>过去分词，ed形式<br>过去式<br>形容词<br>副词<br>代词<br>人称代词<br>物主代词<br>反身代词<br>数词<br>基数词<br>序数词<br>冠词<br>a / an<br>the<br>介词<br>连词<br>感叹词<br>其他<br>动名词<br>动词不定式<br>分词<br>句子种类和成分<br>句子种类<br>根据内容<br>陈述句<br>疑问句<br>祈使句<br>感叹句<br>根据形式<br>简单句<br>复合句<br>并列句<br>句子成分<br>主语<br>谓语<br>宾语<br>补语<br>定语<br>状语<br>表语<br>同位语<br>基本句型<br>S-V | 主语+谓语(不及物动词)<br>S-V-O | 主语+谓语(及物动词)+宾语<br>S-V-P | 主语+谓语(系动词)+表语<br>S-V-O2-O1 | 主语+谓语+间宾+直宾<br>S-V-O-OC |  主语+谓语+宾语+宾补<br>it引导结构<br>并列句<br>简单句 + 并列连词（and，but，or，so） + 简单句<br>时态<br>语态<br>主动语态<br>被动语态<br>语气<br>陈述语气<br>祈使语气<br>虚拟语气<br>复合句<br>主句 + 从句<br>从句<br>名词性从句<br>主语从句<br>表语从句<br>宾语从句<br>同位语从句<br>形容词性从句 / 定语从句<br>限定性<br>非限定性<br>副词性从句 / 状语从句<br>其他从句<br>非谓语动词<br>独立主格结构<br>倒转句</p>]]></content>
      
      
      <categories>
          
          <category> 5104：英语 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> UPDATE </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>词根词缀</title>
      <link href="/510403/"/>
      <url>/510403/</url>
      
        <content type="html"><![CDATA[<h1><span id="a">A</span><a href="#a" class="header-anchor">#</a></h1><h2><span id="pa-zai-zhi-shang">a- | 在…之上</span><a href="#pa-zai-zhi-shang" class="header-anchor">#</a></h2><ul><li><strong>a</strong>board<br>prep. 在船/飞机/车上</li></ul><h2><span id="pab-abs-chi-kai-pian-chi">ab-，abs- | 离开，偏离</span><a href="#pab-abs-chi-kai-pian-chi" class="header-anchor">#</a></h2><ul><li><strong>ab</strong>normal<br>adj. 反常的</li></ul><h2><span id="p-able-ible-neng-gou-de-xing-rong-ci">-able，-ible ▲ | 能够…的（形容词）</span><a href="#p-able-ible-neng-gou-de-xing-rong-ci" class="header-anchor">#</a></h2><h2><span id="panti-xian">anti- | 先</span><a href="#panti-xian" class="header-anchor">#</a></h2><ul><li><strong>anti</strong>cipate<br>vt. 预期</li></ul><h2><span id="pac-ad-af-ag-ap-ar-as-at-biao-qiang-jia-jia-qiang">ac-，ad-，af-，ag-，ap-，ar-，as-，at- | 表强加，加强</span><a href="#pac-ad-af-ag-ap-ar-as-at-biao-qiang-jia-jia-qiang" class="header-anchor">#</a></h2><ul><li><strong>ac</strong>cuse<br>vt. 指控</li></ul><h1><span id="b">B</span><a href="#b" class="header-anchor">#</a></h1><h2><span id="pbene-hao">bene- | 好</span><a href="#pbene-hao" class="header-anchor">#</a></h2><ul><li><strong>bene</strong>ficial<br>adj. 有益的</li></ul><h2><span id="pbio-sheng-ming">bio- | 生命</span><a href="#pbio-sheng-ming" class="header-anchor">#</a></h2><ul><li><strong>bio</strong>logy<br>n. 生物学</li></ul><h1><span id="c">C</span><a href="#c" class="header-anchor">#</a></h1><h2><span id="pcata-xiang-xia">cata- | 向下</span><a href="#pcata-xiang-xia" class="header-anchor">#</a></h2><ul><li><strong>cata</strong>log<br>n. 目录</li></ul><h2><span id="pcent-i-hundred-bai">cent(i)  | = hundred 百 △</span><a href="#pcent-i-hundred-bai" class="header-anchor">#</a></h2><ul><li><strong>cent</strong></li><li><strong>centi</strong>grade</li><li><strong>cent</strong>ury</li><li>pre<strong>cent</strong><ul><li>per<strong>cent</strong>age</li></ul></li><li><strong>centi</strong>meter</li><li><strong>cent</strong>ennial</li></ul><h2><span id="pcirc-cycl-ring-circle-yuan-huan">circ,cycl | = ring,circle 圆，环 △</span><a href="#pcirc-cycl-ring-circle-yuan-huan" class="header-anchor">#</a></h2><ul><li><strong>circ</strong>le<ul><li><strong>circ</strong>let</li></ul></li><li><strong>circ</strong>us</li><li><strong>circ</strong>uit</li><li><strong>circ</strong>ular</li><li><strong>circ</strong>ulate</li><li><strong>cycl</strong>e</li><li>bi<strong>cycl</strong>e</li><li>re<strong>cycl</strong>e</li><li>en<strong>cyclo</strong>pedia<ul><li>en<strong>cyclo</strong>pedic</li></ul></li></ul><h2><span id="pco-col-com-con-cor-yi-qi-gong-tong">co-，col-，com-，con，cor- | 一起，共同</span><a href="#pco-col-com-con-cor-yi-qi-gong-tong" class="header-anchor">#</a></h2><ul><li><strong>com</strong>bat<br>n. 战斗</li></ul><h2><span id="pcontra-xiang-fan">contra- | 相反</span><a href="#pcontra-xiang-fan" class="header-anchor">#</a></h2><ul><li><strong>contra</strong>st<br>v. 对比，对照</li></ul><h1><span id="d">D</span><a href="#d" class="header-anchor">#</a></h1><h2><span id="pde-chi-jia-qiang-ci-yi">de- | 离；加强词义</span><a href="#pde-chi-jia-qiang-ci-yi" class="header-anchor">#</a></h2><ul><li><strong>de</strong>part<br>vi. 离开；背离</li></ul><h2><span id="pdi-dif-dis-fen-kai-chi-kai">di-，dif-，dis- | 分开，离开</span><a href="#pdi-dif-dis-fen-kai-chi-kai" class="header-anchor">#</a></h2><ul><li><strong>dis</strong>card<br>vt. 丢弃</li><li><strong>dis</strong>tance<br>n. 距离，远方，遥远</li></ul><h2><span id="pdia-chuan-guo">dia- | 穿过</span><a href="#pdia-chuan-guo" class="header-anchor">#</a></h2><ul><li><strong>dia</strong>meter<br>n. 直径</li></ul><h1><span id="e">E</span><a href="#e" class="header-anchor">#</a></h1><h2><span id="pe-ef-ex-chu-chu-lai">e-，ef-，ex- | 出，出来</span><a href="#pe-ef-ex-chu-chu-lai" class="header-anchor">#</a></h2><ul><li><strong>ex</strong>prot<br>v. 出口</li></ul><h2><span id="pem-en-zai-zhi-zhong">em-，en- | 在…之中</span><a href="#pem-en-zai-zhi-zhong" class="header-anchor">#</a></h2><ul><li><strong>en</strong>close<br>vt. 围住</li></ul><h1><span id="f">F</span><a href="#f" class="header-anchor">#</a></h1><h2><span id="pfore-qian">fore- | 前</span><a href="#pfore-qian" class="header-anchor">#</a></h2><ul><li><strong>fore</strong>head<br>n. 前额</li></ul><h1><span id="g">G</span><a href="#g" class="header-anchor">#</a></h1><h1><span id="h">H</span><a href="#h" class="header-anchor">#</a></h1><h2><span id="p-hood-shi-dai">-hood | 时代</span><a href="#p-hood-shi-dai" class="header-anchor">#</a></h2><ul><li>child<strong>hood</strong></li></ul><h1><span id="i">I</span><a href="#i" class="header-anchor">#</a></h1><h2><span id="pi-il-im-in-bu">i-，il-，im-，in- | 不</span><a href="#pi-il-im-in-bu" class="header-anchor">#</a></h2><ul><li><strong>in</strong>different<br>adj. 不关心的</li></ul><h2><span id="pil-im-zai-zhi-shang">il-，im- | 在…之上</span><a href="#pil-im-zai-zhi-shang" class="header-anchor">#</a></h2><ul><li><strong>im</strong>pose<br>vt. 把…强加于</li></ul><h2><span id="pin-jin-ru-xiang">in- | 进入；向</span><a href="#pin-jin-ru-xiang" class="header-anchor">#</a></h2><ul><li><strong>in</strong>dicate<br>vt. 表明，示意</li></ul><h2><span id="pinter-zai-zhi-jian">inter- | 在…之间</span><a href="#pinter-zai-zhi-jian" class="header-anchor">#</a></h2><ul><li><strong>inter</strong>fere<br>vi. 干涉</li></ul><h1><span id="j">J</span><a href="#j" class="header-anchor">#</a></h1><h1><span id="k">K</span><a href="#k" class="header-anchor">#</a></h1><h1><span id="l">L</span><a href="#l" class="header-anchor">#</a></h1><h2><span id="pline-xian-xian-tiao-xing">line | 线，线条；行 △</span><a href="#pline-xian-xian-tiao-xing" class="header-anchor">#</a></h2><ul><li><strong>line</strong></li><li>air<strong>line</strong></li><li>dead<strong>line</strong></li><li>guide<strong>line</strong></li><li>head<strong>line</strong></li><li>out<strong>line</strong></li><li>base<strong>line</strong></li><li>border<strong>line</strong></li><li>under<strong>line</strong></li><li><strong>line</strong>ar</li><li>date<strong>line</strong></li><li><strong>line</strong>age</li><li>hard<strong>line</strong></li></ul><h2><span id="plong-leng-chang">long,leng | 长</span><a href="#plong-leng-chang" class="header-anchor">#</a></h2><ul><li><strong>long</strong></li><li>life<strong>long</strong></li><li>be<strong>long</strong></li><li><strong>long</strong>ing</li><li><strong>long</strong>itude</li><li><strong>long</strong>signt<strong>ed</strong></li><li><strong>long</strong>ev<strong>ity</strong></li><li><strong>long</strong>head<strong>ed</strong></li><li>pro<strong>long</strong></li><li><strong>leng</strong>th<strong>en</strong></li><li><strong>leng</strong>th<strong>y</strong></li></ul><h1><span id="m">M</span><a href="#m" class="header-anchor">#</a></h1><h2><span id="pmark-marc-mark-ji-hao-fu-hao">mark,marc | = mark，记号，符号</span><a href="#pmark-marc-mark-ji-hao-fu-hao" class="header-anchor">#</a></h2><ul><li><strong>mark</strong></li><li><strong>mark</strong>ed</li><li>book<strong>mark</strong></li><li>lend<strong>mark</strong></li><li>post<strong>mark</strong></li><li>re<strong>mark</strong></li><li>re<strong>mark</strong>able</li><li>tide<strong>mark</strong></li><li>trade<strong>mark</strong></li><li>un<strong>mark</strong>ed</li><li><strong>mark</strong>sman</li><li>hall<strong>mark</strong></li></ul><h2><span id="pman-manu-mani-main-shou">man-，manu-，mani-，main- | 手</span><a href="#pman-manu-mani-main-shou" class="header-anchor">#</a></h2><h2><span id="pmagn">magn-</span><a href="#pmagn" class="header-anchor">#</a></h2><h2><span id="pmicro-mini-wei-xiao">micro-，mini- | 微，小</span><a href="#pmicro-mini-wei-xiao" class="header-anchor">#</a></h2><ul><li><strong>micro</strong>wave<br>n 微波</li></ul><h2><span id="pmulti-duo">multi- | 多</span><a href="#pmulti-duo" class="header-anchor">#</a></h2><ul><li><strong>multi</strong>ple<br>adj 复合的，多重的</li></ul><h1><span id="n">N</span><a href="#n" class="header-anchor">#</a></h1><h2><span id="pnon-bu">non- | 不</span><a href="#pnon-bu" class="header-anchor">#</a></h2><ul><li><strong>non</strong>sence<br>n. 废话</li></ul><h1><span id="o">O</span><a href="#o" class="header-anchor">#</a></h1><h2><span id="pob-op-xiang-fan">ob-，op- | 相反</span><a href="#pob-op-xiang-fan" class="header-anchor">#</a></h2><ul><li><strong>op</strong>pose<br>vt. 反对</li></ul><h2><span id="pout-xiang-wai-chu-lai">out- | 向外，出来</span><a href="#pout-xiang-wai-chu-lai" class="header-anchor">#</a></h2><ul><li><strong>out</strong>let<br>n. 出口</li></ul><h2><span id="pover-yue-guo">over- | 越过</span><a href="#pover-yue-guo" class="header-anchor">#</a></h2><ul><li><strong>over</strong>look<br>vt. 忽视</li></ul><h1><span id="p">P</span><a href="#p" class="header-anchor">#</a></h1><h2><span id="pper-chuan-guo">per- | 穿过</span><a href="#pper-chuan-guo" class="header-anchor">#</a></h2><ul><li><strong>per</strong>spective<br>n. 视角</li></ul><h2><span id="ppost">post-</span><a href="#ppost" class="header-anchor">#</a></h2><h2><span id="ppre-qian-zai-zhi-qian-yu-xian">pre- | 前，在…之前；预先</span><a href="#ppre-qian-zai-zhi-qian-yu-xian" class="header-anchor">#</a></h2><h2><span id="ppro-xiang-qian">pro- | 向前</span><a href="#ppro-xiang-qian" class="header-anchor">#</a></h2><ul><li><strong>pro</strong>mote<br>vt. 促进</li></ul><h1><span id="q">Q</span><a href="#q" class="header-anchor">#</a></h1><h1><span id="r">R</span><a href="#r" class="header-anchor">#</a></h1><p>re- | back；again</p><ul><li><strong>re</strong>call<br>vt. 回忆起</li></ul><h1><span id="s">S</span><a href="#s" class="header-anchor">#</a></h1><h2><span id="psign-mark-sign-ji-hao-xin-hao">sign | = mark,sign 记号，信号</span><a href="#psign-mark-sign-ji-hao-xin-hao" class="header-anchor">#</a></h2><ul><li><strong>sign</strong></li><li>de<strong>sign</strong></li><li>re<strong>sign</strong></li><li><strong>sign</strong>al</li><li><strong>sign</strong>fic<strong>ance</strong><ul><li><strong>sign</strong>fic<strong>ant</strong></li></ul></li><li>as<strong>sign</strong><ul><li>as<strong>sign</strong>ment</li></ul></li><li>con<strong>sign</strong></li><li>de<strong>sign</strong>ate</li><li>re<strong>sign</strong>ation</li><li><strong>sign</strong>ature</li><li>con<strong>sign</strong>ment</li><li><strong>sign</strong>alize</li></ul><h2><span id="psemi-ban">semi- | 半</span><a href="#psemi-ban" class="header-anchor">#</a></h2><ul><li><strong>semi</strong>conductor<br>n. 半导体</li></ul><h2><span id="pst-sta-stat-stan-stant-stin-stand-zhan-li">st-，sta-，stat-，stan，stant-，stin- | = stand 站立</span><a href="#pst-sta-stat-stan-stant-stin-stand-zhan-li" class="header-anchor">#</a></h2><ul><li>stable<br>adj. 稳固的</li><li>statue<br>n. 雕像<br>vt. 以雕像装饰</li><li>di<strong>st</strong>ance</li><li>still<br>adj. 静止的，不动的</li><li>stage<br>阶段，时期</li><li>steady<br>稳固</li><li>ob<strong>st</strong>acle<br>妨碍</li><li>stalk<br>追踪，搜索</li><li>steer<br>引导，驾驶，航行，控制</li><li>stem<br>遏制，堵住</li><li>re<strong>st</strong>aurant<br>餐馆，饭店</li></ul><h2><span id="psub-zai-xia">sub- | 在…下</span><a href="#psub-zai-xia" class="header-anchor">#</a></h2><ul><li>subway<br>n. 地铁</li></ul><h2><span id="psur">sur-</span><a href="#psur" class="header-anchor">#</a></h2><h2><span id="psuper-zai-zhi-shang-chao-ji-de">super- | 在…之上，超级的</span><a href="#psuper-zai-zhi-shang-chao-ji-de" class="header-anchor">#</a></h2><ul><li>superior<br>adj. 优于…的</li></ul><h1><span id="t">T</span><a href="#t" class="header-anchor">#</a></h1><h2><span id="ptrans-heng-guo-yue-guo">trans- | 横过，越过</span><a href="#ptrans-heng-guo-yue-guo" class="header-anchor">#</a></h2><ul><li>transplant<br>vt. 移植</li></ul><h2><span id="ptri-san">tri- | 三</span><a href="#ptri-san" class="header-anchor">#</a></h2><ul><li>triangle<br>n. 三角</li></ul><h1><span id="u">U</span><a href="#u" class="header-anchor">#</a></h1><h2><span id="pun-bu">un- | 不</span><a href="#pun-bu" class="header-anchor">#</a></h2><ul><li>uncover<br>vt. 揭露</li></ul><h2><span id="punder-zai-xia-mian-di-yu">under- | 在…下面，低于</span><a href="#punder-zai-xia-mian-di-yu" class="header-anchor">#</a></h2><ul><li>underline<br>vt. 在…下面划线</li></ul><h2><span id="puni-yi-ge">uni- | 一个</span><a href="#puni-yi-ge" class="header-anchor">#</a></h2><ul><li>unique<br>adj. 唯一的，独特的</li></ul><h1><span id="x">X</span><a href="#x" class="header-anchor">#</a></h1><h1><span id="y">Y</span><a href="#y" class="header-anchor">#</a></h1><h1><span id="z">Z</span><a href="#z" class="header-anchor">#</a></h1><h2><span id="p01-vi-vit-vita-viv-vig">01、vi/vit/vita/viv/vig</span><a href="#p01-vi-vit-vita-viv-vig" class="header-anchor">#</a></h2><blockquote><p>生命</p></blockquote><ul><li><p>survive<br>vt. 比…活得久/幸免于<br>vi. 幸存<br>sur = super：超，在…上<br>surmount：登上，战胜（困难）</p></li><li><p>survivor<br>n. 幸存者</p></li><li><p>survival<br>n. 幸存<br>al：形容词后缀，的</p></li><li><p>revive<br>v.（使）苏醒，复活<br>re = back，again</p></li><li><p>revival<br>n. 复苏；振兴，复兴</p></li><li><p>vivid<br>adj. 鲜明的；鲜艳的；生动的<br>id：一般做形容词后缀</p></li><li><p>vital<br>adj. 生命的，生死攸关的，至关重要的</p></li><li><p>vitality<br>n. 生命力，活力</p></li><li><p>vitalize<br>v. 使有生机，赋予活力<br>ize：动词后缀</p></li><li><p>revitalize<br>v. 使恢复生机，重振</p></li><li><p>vigor<br>n. 生命力，活力<br>vigor and vitality：生机与活力<br>safe and sound：安然无恙</p></li><li><p>vigorous<br>adj. 有力，精力充沛的，朝气蓬勃的</p></li><li><p>vigorously<br>adv：地</p></li><li><p>vigorousness</p></li><li><p>viable<br>adj. 能活的，能生存的，能行得通的<br>辅音互换原则：able/ible，能够…的；易…的；able = ability</p></li><li><p>viability<br>n. 生存能力；可行性<br>一个可行的解决方案：a viable solution</p></li></ul><h2><span id="p02-sur">02、sur</span><a href="#p02-sur" class="header-anchor">#</a></h2><blockquote><p>超</p></blockquote><ul><li>surpass<br>vt. 超越；胜过，优于</li><li>surname<br>n. 姓，姓氏</li><li>survive<br>vt. 幸存；生还；幸免于</li><li>surround<br>vt. 围绕；包围</li><li>surprise<br>n. 惊奇，诧异；突然袭击<br>vt. 使惊奇；奇袭<br>surprise me：随便</li><li>surface<br>n. 表面；表层；外观<br>adj. 表面，肤浅<br>vt. 浮出水面；显现</li><li>survey<br>n. 调查；测量<br>vt. 调查；勘测<br>近义词：investigation</li><li>surplus<br>n. 剩余；过剩<br>adj. 剩余的；过剩的</li></ul><h2><span id="p03-super">03、super-</span><a href="#p03-super" class="header-anchor">#</a></h2><blockquote><p>表示超级，超过，过度</p></blockquote><ul><li>superfluous<br>adj. 多余的；过剩的<br>superfluous/surplus<br>flu：流</li><li>superior<br>adj. 上级的；优秀的<br>n. 上级；优胜者</li><li>superiority<br>n. 优越，优势；优越性</li><li>superb<br>adj. 极好的，杰出的；华丽的</li></ul><blockquote><p>表示在…上面：</p></blockquote><ul><li>supervise<br>v. 监督<br>vis：看<br>in/im：里/否定<br>visible：可以看见的<br>invisible：不可见的；隐形的</li><li>supervision</li><li>supervisor<br>n. 监管者，监督者</li><li>superficial<br>adj. 表面的，肤浅的</li><li>superstition<br>n. 迷信</li><li>superstitious<br>adj. 迷信的</li></ul><h2><span id="p04-organ">04、organ</span><a href="#p04-organ" class="header-anchor">#</a></h2><ul><li>organic<br>n. 器官，机构，风琴<br>ic：名词后缀</li></ul><h2><span id="p05-man-mani-manu-main">05、man/mani/manu/main</span><a href="#p05-man-mani-manu-main" class="header-anchor">#</a></h2><blockquote><p>手</p></blockquote><ul><li>maintain</li><li>maintenance</li><li>manipulate</li><li><strong>mani</strong>pulation</li><li><strong>mani</strong>ifest<br>adj. 明显的(obvious，appareent，evident，conspicuous)<br>v. 表明，证实</li><li><strong>mani</strong>festation<br>n. 显示；表现；示威活动</li><li><strong>mani</strong>festo<br>n. 宣言</li><li><strong>manu</strong>al<br>adj. 手工的<br>n. 手册</li><li><strong>manu</strong>script<br>n. 手稿<br>script：写</li></ul><h2><span id="p06-trans">06、trans</span><a href="#p06-trans" class="header-anchor">#</a></h2><blockquote><p>穿梭</p></blockquote><ul><li><strong>transaction</strong><br>n. 交易；处理；事务</li><li><strong>trans</strong>port<br>v. 运输；传播<br>n. 交通运输系统<br>port：港口；airport，export，inport</li><li><strong>trans</strong>portation<br>n. 交通；运输</li><li><strong>trans</strong>fer<br>v/n. 转移；转变<br>fer：运载</li><li><strong>trans</strong>ferable<br>adj. 可转移的；可调动的</li><li><strong>trans</strong>form<br>v. 改变(形态，外在的，形式)<br><strong>trans</strong>former：变形金刚</li><li><strong>trans</strong>ition<br>n. 过度；转型</li><li><strong>trans</strong>late<br>v. 翻译；转化<br>It’s time to translate words into action：是时候把语言转化成行动了。</li><li><strong>trans</strong>plant<br>v. 移植；使迁移；<br>n. 移植；<br>plant：种植</li><li><strong>trans</strong>mit<br>v. 传输，传送<br>mit：message</li><li><strong>trans</strong>mission<br>mit/mis</li><li><strong>trans</strong>misible</li><li><strong>trans</strong>parent<br>adj. 透明的；明显的<br>par：显现出来<br>-ent：形容词<br>和invisible的区别</li><li><strong>trans</strong>parency<br>n. 透明；透明性；显而易见</li><li><strong>trans</strong>ient<br>adj. 短暂的；转瞬即逝的；<br>白驹过隙</li><li><strong>trans</strong>trans<br>n. 晶体管</li></ul><h2><span id="p07-ceed-cede-cess">07、ceed/cede/cess</span><a href="#p07-ceed-cede-cess" class="header-anchor">#</a></h2><blockquote><p>走</p></blockquote><ul><li><strong>access</strong><br>vt. <strong>到达；进入</strong><br>n. 通道，途径；<strong>(使用或见到的)机会</strong><br>axx + cess；axx = abb，acc…；</li><li>accessible<br>adj. 易获得的；容易理解的<br>be accessible to 对于…来说易获得/易理解</li><li><strong>succeed</strong><br>v. 成功；继承，接替</li><li>success<br>n. 成功；成功的人/事</li><li>successful<br>adj. 成功的</li><li>succession<br>n. 继任</li><li>successive<br>adj. 连续的，相继的</li><li><strong>proceed</strong></li><li>process</li></ul><h2><span id="p10-lect-lig">10、lect/lig</span><a href="#p10-lect-lig" class="header-anchor">#</a></h2><blockquote><p>选择，收集</p></blockquote><ul><li><strong>intellect</strong><br>n. 智力，理智(领悟力)，才智非凡的人</li><li>intellectual<br>adj. 智力的，聪明的<br>n. 知识分子</li><li>intelligence<br>n. 智力，理解力；情报，情报工作，情报机构<br>IQ = Intelligence Quotient<br>CIA = Central Intelligence Agency<br>AI = Artificial Intelligence</li><li>intellectualism<br>n. 理智主义</li><li>intelligent<br>adj. 聪明的</li><li><strong>neglect</strong><br>vt. 疏忽，忽视；忽略<br>neg = negative 消极 = not，no，never</li><li>negligible<br>adj. 可以忽略的，无足轻重的</li><li><strong>elect</strong><br>vt. 选举，选出<br>e：出</li><li>election<br>n. 选举</li><li>eligible<br>adj. 合格的，有资格的</li><li><strong>collect</strong><br>vt/vi. 收集/集中<br>collect stamps 系列</li><li>collection<br>n. 集合；收藏</li><li>collective<br>adj 集体的；集中的</li><li>collectivism<br>n. 集体主义<br>consumerrism 消费主义<br>materialism 物质主义<br>idealism 理想主义<br>capitalism 资本主义<br>elitism 精英主义<br>terrorism 恐怖主义<br>-ism 改 -ist 某某主义者</li><li><strong>select</strong><br>vt. 精选；挑选<br>se：分开</li><li>selection<br>n 选集，挑选</li><li><strong>elite</strong><br>n. 精英<br>adj. 精英的</li></ul><h2><span id="p11-muni">11、muni</span><a href="#p11-muni" class="header-anchor">#</a></h2><blockquote><p>muni = public，公共的</p></blockquote><ul><li>com<strong>muni</strong>ty<br>n. 社区，社会<br>com = con 全部<br>国际社会：international community</li><li>communication<br>n. 交流，通讯，传达</li><li>commute<br>vi. 通勤，乘车上下班</li><li>immune<br>adj. 免疫的，免除的；豁免的<br>im- 否定前缀</li><li>im<strong>muni</strong>ty<br>n. 免疫，免疫性，豁免<br>HIV = Human Imunodeficiency Virus</li></ul><h2><span id="p12-para">12、para-</span><a href="#p12-para" class="header-anchor">#</a></h2><blockquote><p>在旁边，平行</p></blockquote><ul><li><strong>para</strong>llel<br>adj. 平行的；类似的</li><li>un<strong>parallel</strong>ed<br>adj. 无与伦比的，无双的，空前的</li><li><strong>para</strong>lyze<br>vt. 使…瘫痪，使目瞪口呆</li><li><strong>paralyze</strong>d<br>adj. 瘫痪的</li><li><strong>para</strong>lysis<br>n. 瘫痪，麻痹</li><li><strong>para</strong>phrase<br>vt. /n. 改写，解述<br>tranquil<br>quiet</li><li><strong>para</strong>dox<br>n. 矛盾的说法</li><li>paradoxical<br>adj. 似是而非的，矛盾的</li><li>com<strong>pare</strong><br>vt. 比较，对比</li><li>com<strong>para</strong>ble<br>adj. 类似的，同类的，相当的</li><li>comparison<br>n. 比较；对比</li><li><strong>pare</strong>chute<br>n. 降落伞</li></ul><h2><span id="p13-volv-e-volu">13、volv(e)/volu</span><a href="#p13-volv-e-volu" class="header-anchor">#</a></h2><blockquote><p>转，卷</p></blockquote><ul><li>in<strong>volve</strong><br>vt. 包含；使卷入，使参与；牵涉</li><li>in<strong>volve</strong>d<br>adj. 卷入的；涉及的；复杂的</li><li>in<strong>volve</strong>ment<br>n. 牵连；包含；参与</li><li>e<strong>volve</strong><br>vi./vt. (使)逐步形成，逐步演变，进化</li><li>e<strong>volu</strong>tion<br>n. 进化，发展；演变</li><li>re<strong>volve</strong><br>vt./vi 旋转</li><li>re<strong>volu</strong>tion<br>n. 革命<br>与reform</li><li>re<strong>volu</strong>tionary<br>adj. 革命性的，创新的</li><li><strong>volu</strong>me<br>n. 卷，册；音量；容量</li></ul><h2><span id="p14-ject">14、ject</span><a href="#p14-ject" class="header-anchor">#</a></h2><blockquote><p>扔，投</p></blockquote><ul><li>sub<u>ject</u><br>n. 主题；主观；主语；实验对象<br>adj. 倾向于…的；易遭受…的<br>vt. 使…隶属；使屈从于…</li><li>pro<strong>ject</strong><br>vt. 设计；计划；发射<br>n. 工程；计划；事业</li><li>projector<br>n. 投影仪</li><li>reject<br>vt. 拒绝；排斥，驳回</li><li>rejection</li><li>object<br>n. 物体；目标<br>vt./vi. 反对<br>ob/op- 反</li><li>objective<br>adj. 客观的；不带偏见的</li><li>objection<br>n. 反对，异议</li><li>inject<br>vt. 注射；注入，引入</li></ul><h2><span id="p15-pose">15、pose</span><a href="#p15-pose" class="header-anchor">#</a></h2><blockquote><p>摆放</p></blockquote><ul><li>pose<br>n. 姿势，姿态<br>vt. 造成，提出</li><li>position<br>n. 姿势，姿态；处境，状况</li><li>propose<br>v. 提议，建议；提名，推荐，求婚</li><li>proposal<br>n. 提议，建议；求婚</li><li>proposition<br>n. 主张，建议；提案，命题</li><li>oppose<br>vt. 反对，抵制</li><li>opposite<br>adj. 对立的，截然相反的<br>prep. 对面</li><li>opposition<br>v. 反对，反抗<br>n. 反对党</li><li>expose<br>v. 使暴露，受到；使曝光</li><li>exposure<br>n. 暴露，揭露；陈列；曝光</li><li>impose<br>v. 征税；把…强加给</li></ul>]]></content>
      
      
      <categories>
          
          <category> 5104：英语 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 英语 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>英语音标</title>
      <link href="/510402/"/>
      <url>/510402/</url>
      
        <content type="html"><![CDATA[<h1><span id="ying-yu-yin-biao">英语音标</span><a href="#ying-yu-yin-biao" class="header-anchor">#</a></h1><p>本文采用<code>DJ</code> 音标。</p><h2><span id="pqian-yuan-yin">前元音</span><a href="#pqian-yuan-yin" class="header-anchor">#</a></h2><h3><span id="p-i">/iː/</span><a href="#p-i" class="header-anchor">#</a></h3><blockquote><p>KK音标为<code>[i]</code></p></blockquote><h4><span id="pfa-yin-zu-he">发音组合</span><a href="#pfa-yin-zu-he" class="header-anchor">#</a></h4><p>字母e在重读开音节中。<br>此外字母组合ee,ea,ie,ei在重读音节中。</p><blockquote><p>通常情况下，元音字母在重读开音节中都发字母本身的音。</p></blockquote><h3><span id="p-i">/ɪ/</span><a href="#p-i" class="header-anchor">#</a></h3><h4><span id="pfa-yin-zu-he">发音组合</span><a href="#pfa-yin-zu-he" class="header-anchor">#</a></h4><p>字母i,y在闭音节和非重读音节中。<br>字母e在非重读音节。</p><h3><span id="p-e">/e/</span><a href="#p-e" class="header-anchor">#</a></h3><blockquote><p>KK音标为<code>[ɛ]</code>。</p></blockquote><h3><span id="p-ae">/æ/</span><a href="#p-ae" class="header-anchor">#</a></h3><h2><span id="pzhong-yuan-yin">中元音</span><a href="#pzhong-yuan-yin" class="header-anchor">#</a></h2>]]></content>
      
      
      <categories>
          
          <category> 5104：英语 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 英语 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Android Debug Bridge</title>
      <link href="/330302/"/>
      <url>/330302/</url>
      
        <content type="html"><![CDATA[<h1><span id="adb">ADB</span><a href="#adb" class="header-anchor">#</a></h1><p>A</p><ul><li><p>adb</p><pre class="line-numbers language-none"><code class="language-none">[-d|-e|-s]<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>如果只有一个设备/模拟器连接时，可以省略掉 [-d|-e|-s ] 这一部分，直接使用adb。</p><blockquote><p>-d 指定当前唯一通过 USB 连接的 Android 设备为命令目标<br>-e 指定当前唯一运行的模拟器为命令目标<br>-s <code>&lt;serialNumber&gt;</code>指定相应 serialNumber 号的设备/模拟器为命令目标</p></blockquote></li></ul><p>B</p><p>C</p><ul><li>adb shell cd <code>&lt;directory&gt;</code><br>切换目录</li><li>adb shell cp <code>[options]</code> <code>&lt;source&gt;</code> <code>&lt;dest&gt;</code><br>拷贝文件</li></ul><p>D</p><ul><li>adb devices<br>打印当前连接的所有设备</li></ul><p>E<br>F<br>G<br>H<br>I</p><ul><li><p>adb install</p><pre class="line-numbers language-none"><code class="language-none">[option]<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><pre class="line-numbers language-none"><code class="language-none">&lt;path&gt;<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>安装程序</p><blockquote><p>adb install test.apk 安装应用<br>adb install -r test.apk 替代存在的应用，不会删除数据，用于更新应用比较方便</p></blockquote></li></ul><p>J<br>K</p><ul><li>adb kill-server<br>终止adb进程</li></ul><p>L</p><ul><li>adb shell ls<br>列出目录内容</li></ul><p>M</p><ul><li>adb shell mkdir <code>[options]</code> <code>&lt;directory name&gt;</code><br>创建文件夹</li><li>adb shell mv<br>移动文件</li></ul><p>N<br>O<br>P</p><ul><li>adb pull <code>&lt;remote&gt;</code> <code>[local]</code><br>从设备下载文件到PC</li><li>adb push <code>&lt;local&gt;</code> <code>&lt;remote&gt;</code><br>从PC下载文件到设备</li><li>adb shell ping</li><li>adb shell pwd<br>打印当前的目录</li><li>adb shell pm list packages<br>打印设备下面所有包名</li><li>adb shell ps<br>打印进程状态</li></ul><p>Q<br>R</p><ul><li>adb root<br>获取root权限</li><li>adb shell rm <code>[options]</code> <code>&lt;file or directory&gt;</code><br>删除文件或目录</li></ul><p>S</p><ul><li>adb shell<br>进入adb模式</li><li>adb start-serve</li></ul><p>T<br>U</p><ul><li><p>adb uninstall <code>[option]</code> <code>&lt;package&gt;</code><br>卸载程序</p><blockquote><p>adb uninstall com.example.application 直接删除应用和所有数据<br>adb uninstall -k com.example.application 删除应用，但会保留应用数据和缓存数据。</p></blockquote></li><li><p>adb unroot<br>恢复root权限</p></li></ul><p>V</p><ul><li>adb version<br>查看adb版本</li></ul><p>W</p><ul><li>adb shell wm size<br>获取屏幕分辨率</li></ul><p>X<br>Y<br>Z</p>]]></content>
      
      
      <categories>
          
          <category> 3303：Android开发 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Android </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Android 开发</title>
      <link href="/330301/"/>
      <url>/330301/</url>
      
        <content type="html"><![CDATA[<h1><span id="android-kai-fa">Android 开发</span><a href="#android-kai-fa" class="header-anchor">#</a></h1><p>开发环境配置<br>使用Android Studio<br><a href="https://developer.android.google.cn/studio">https://developer.android.google.cn/studio</a></p>]]></content>
      
      
      <categories>
          
          <category> 3303：Android开发 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Android </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Microsoft Office</title>
      <link href="/181401/"/>
      <url>/181401/</url>
      
        <content type="html"><![CDATA[<h1><span id="microsoft-office">Microsoft Office</span><a href="#microsoft-office" class="header-anchor">#</a></h1><ul><li>快捷键F4：重复上一步操作。</li><li>快捷键Shift + F3。对指定的英文字母进行大小写切换，有三种模式，如test、Test、TEST。</li><li>双击格式刷可以多次使用格式刷。</li><li>Ctrl+E，这是快速填充的快捷键。</li></ul>]]></content>
      
      
      <categories>
          
          <category> 1814：MS-Office </category>
          
      </categories>
      
      
    </entry>
    
    
    
    <entry>
      <title>Typora emoji</title>
      <link href="/181006/"/>
      <url>/181006/</url>
      
        <content type="html"><![CDATA[<p>基于 <code>Typora</code> 和 <code>Hexo</code> 显示。</p><h1><span id="cheng-xu-yuan">程序员</span><a href="#cheng-xu-yuan" class="header-anchor">#</a></h1><table><thead><tr><th>emoji</th><th>word</th><th>意义</th></tr></thead><tbody><tr><td>🎨</td><td>art</td><td>改进结构和代码格式</td></tr><tr><td>⚡️</td><td>zap</td><td>优化性能</td></tr><tr><td>🔥</td><td>fire</td><td>移除代码或文件</td></tr><tr><td>🐛</td><td>bug</td><td>修复bug</td></tr><tr><td>✨</td><td>sparkles</td><td>引入新功能</td></tr><tr><td>🍎</td><td>apple</td><td>修复 MacOS 下的问题</td></tr><tr><td>📝</td><td>memo</td><td>更新文档</td></tr><tr><td>🚀</td><td>rocket</td><td>部署新功能</td></tr><tr><td>✅</td><td>white_check_mark</td><td>添加测试用例</td></tr><tr><td>🔖</td><td>bookmark</td><td>发布新版本/新版本标签</td></tr><tr><td>🔒</td><td>lock</td><td>修复安全问题</td></tr><tr><td>🐧</td><td>penguin</td><td>Linux</td></tr><tr><td>🚧</td><td>construction</td><td>更新中，工作进行中</td></tr><tr><td>💚</td><td>green_heart</td><td>修复 CI 构建问题</td></tr><tr><td>🏁</td><td>checkered_flag</td><td>修复 window 下的问题</td></tr></tbody></table><h1><span id="ri-chang">日常</span><a href="#ri-chang" class="header-anchor">#</a></h1><ul><li>💡 bulb，灯泡</li><li>🌍 ​earth_africa，地球（面向亚洲）</li></ul><h1><span id="can-kao">参考</span><a href="#can-kao" class="header-anchor">#</a></h1><ul><li><a href="https://www.sohu.com/a/141030276_610464">https://www.sohu.com/a/141030276_610464</a></li></ul>]]></content>
      
      
      <categories>
          
          <category> 1810：Markdown </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Markdown </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Mermaid</title>
      <link href="/181008/"/>
      <url>/181008/</url>
      
        <content type="html"><![CDATA[<p>Mermaid 是一种简单的类似 Markdown 的脚本语言，通过 JavaScript 编程语言，将文本转换为图片。因此，真正实现画图功能的并不是 Typora 本身，它只是内置了对 Mermaid 的支持。<br>本文基于 Typora。</p><h2><span id="pliu-cheng-tu">流程图</span><a href="#pliu-cheng-tu" class="header-anchor">#</a></h2><pre class="line-numbers language-text" data-language="text"><code class="language-text">graph TD;    A--&gt;B;    A--&gt;C;    B--&gt;D;<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span></span></code></pre><pre class="mermaid"> graph TD;    A-->B;    A-->C;    B-->D;</pre><h2><span id="pshi-xu-tu">时序图</span><a href="#pshi-xu-tu" class="header-anchor">#</a></h2><p>语法解释：<code>-&gt;&gt;</code> 代表实线箭头，<code>--&gt;&gt;</code> 则代表虚线。</p><pre class="line-numbers language-text" data-language="text"><code class="language-text">sequenceDiagram    Alice-&gt;&gt;John: Hello John, how are you?    John--&gt;&gt;Alice: Great!<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span></span></code></pre><pre class="mermaid">sequenceDiagram    Alice->>John: Hello John, how are you?    John-->>Alice: Great!</pre><h2><span id="pzhuang-tai-tu">状态图</span><a href="#pzhuang-tai-tu" class="header-anchor">#</a></h2><p>语法解释：<code>[*]</code> 表示开始或者结束，如果在箭头右边则表示结束。</p><pre class="line-numbers language-text" data-language="text"><code class="language-text">stateDiagram    [*] --&gt; s1    s1 --&gt; [*]<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span></span></code></pre><pre class="mermaid">stateDiagram    [*] --> s1    s1 --> [*]</pre><h2><span id="plei-tu">类图</span><a href="#plei-tu" class="header-anchor">#</a></h2><p>语法解释：<code>&lt;|--</code> 表示继承，<code>+</code> 表示 <code>public</code>，<code>-</code> 表示 <code>private</code>。</p><pre class="line-numbers language-text" data-language="text"><code class="language-text">classDiagram      Animal &lt;|-- Duck      Animal &lt;|-- Fish      Animal &lt;|-- Zebra      Animal : +int age      Animal : +String gender      Animal: +isMammal()      Animal: +mate()      class Duck&#123;          +String beakColor          +swim()          +quack()      &#125;      class Fish&#123;          -int sizeInFeet          -canEat()      &#125;      class Zebra&#123;          +bool is_wild          +run()      &#125;<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><pre class="mermaid">classDiagram      Animal <|-- duck animal <|-- fish zebra : +int age +string gender animal: +ismammal() +mate() class duck{ beakcolor +swim() +quack() } fish{ -int sizeinfeet -caneat() zebra{ +bool is_wild +run() }< pre><h2><span id="pgan-te-tu">甘特图</span><a href="#pgan-te-tu" class="header-anchor">#</a></h2><p>甘特图一般用来表示项目的计划排期，目前在工作中经常会用到。</p><pre class="line-numbers language-text" data-language="text"><code class="language-text">gantt    title 工作计划    dateFormat  YYYY-MM-DD    section Section    A task           :a1, 2020-01-01, 30d    Another task     :after a1  , 20d    section Another    Task in sec      :2020-01-12  , 12d    another task      : 24d<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><pre class="mermaid">gantt    title 工作计划    dateFormat  YYYY-MM-DD    section Section    A task           :a1, 2020-01-01, 30d    Another task     :after a1  , 20d    section Another    Task in sec      :2020-01-12  , 12d    another task      : 24d</pre><h2><span id="pbing-tu">饼图</span><a href="#pbing-tu" class="header-anchor">#</a></h2><p>饼图使用 <code>pie</code> 表示，标题下面分别是区域名称及其百分比。</p><pre class="line-numbers language-text" data-language="text"><code class="language-text">pie    title Key elements in Product X    &quot;Calcium&quot; : 42.96    &quot;Potassium&quot; : 50.05    &quot;Magnesium&quot; : 10.01    &quot;Iron&quot; :  5<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><pre class="mermaid">pie    title Key elements in Product X    "Calcium" : 42.96    "Potassium" : 50.05    "Magnesium" : 10.01    "Iron" :  5</pre></|--></pre>]]></content>
      
      
      <categories>
          
          <category> 1810：Markdown </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Markdown </tag>
            
            <tag> mermaid </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>算法基础</title>
      <link href="/130401/"/>
      <url>/130401/</url>
      
        <content type="html"><![CDATA[<h1><span id="suan-fa-ji-chu">算法基础</span><a href="#suan-fa-ji-chu" class="header-anchor">#</a></h1><p>01 算法概述<br>02 排序<br>03 搜索<br>04 递归<br>05 动态规划</p>]]></content>
      
      
      <categories>
          
          <category> 1304：算法基础 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 算法 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>操作系统原理</title>
      <link href="/120301/"/>
      <url>/120301/</url>
      
        <content type="html"><![CDATA[<h1><span id="cao-zuo-xi-tong-yuan-li">操作系统原理</span><a href="#cao-zuo-xi-tong-yuan-li" class="header-anchor">#</a></h1><p>01 CPU调度：进程、线程<br>02 内存管理<br>03 文件系统与I/O<br>04 显示</p>]]></content>
      
      
      <categories>
          
          <category> 1203：操作系统原理 </category>
          
      </categories>
      
      
    </entry>
    
    
    
    <entry>
      <title>微型计算机组成原理</title>
      <link href="/120101/"/>
      <url>/120101/</url>
      
        <content type="html"><![CDATA[<h1><span id="wei-xing-ji-suan-ji-zu-cheng-yuan-li">微型计算机组成原理</span><a href="#wei-xing-ji-suan-ji-zu-cheng-yuan-li" class="header-anchor">#</a></h1><p>01 冯诺依曼结构<br>02 CPU<br>03 存储器：RAM、ROM<br>04 GPU</p>]]></content>
      
      
      <categories>
          
          <category> 1201：微型计算机组成原理 </category>
          
      </categories>
      
      
    </entry>
    
    
    
    <entry>
      <title>线性代数</title>
      <link href="/110401/"/>
      <url>/110401/</url>
      
        <content type="html"><![CDATA[<h1><span id="xian-xing-dai-shu">线性代数</span><a href="#xian-xing-dai-shu" class="header-anchor">#</a></h1><p>01 行列式<br>02 矩阵<br>03 线性向量组和方程组</p>]]></content>
      
      
      <categories>
          
          <category> 1104：线性代数 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 线性代数 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>正则表达式</title>
      <link href="/220701/"/>
      <url>/220701/</url>
      
        <content type="html"><![CDATA[<h1><span id="zheng-ze-biao-da-shi">正则表达式</span><a href="#zheng-ze-biao-da-shi" class="header-anchor">#</a></h1><p>正则表达式（RegExp，Regular Expression），又叫规则表达式，是由一些特殊符号（<strong>元字符</strong>、限定符）组成的式子。</p><p>是搜索和替换字符串一种强大的方法。在 JS 中，正则表达式通过内置的 RegExp 类的对象来实现，并和字符串集成。用来匹配字符串。</p><h1><span id="yi-kai-shi">一、开始</span><a href="#yi-kai-shi" class="header-anchor">#</a></h1><h3><span id="p1-chuang-jian-yi-ge-zheng-ze-biao-da-shi-dui-xiang">1、创建一个正则表达式对象</span><a href="#p1-chuang-jian-yi-ge-zheng-ze-biao-da-shi-dui-xiang" class="header-anchor">#</a></h3><pre class="line-numbers language-js" data-language="js"><code class="language-js"><span class="token comment">// （1）允许从字符串动态构造模式</span>reg <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">RegExp</span><span class="token punctuation">(</span><span class="token string">"pattern"</span><span class="token punctuation">,</span> <span class="token string">"flags"</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment">// （2）常用</span>reg2 <span class="token operator">=</span> <span class="token regex">/pattern/</span><span class="token punctuation">;</span>reg3 <span class="token operator">=</span> <span class="token regex">/pattern/gim</span><span class="token punctuation">;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>如果要在字符串中搜索，可以使用 <code>search()</code> 。这个方法返回匹配项的索引位置，如果没找到返回<code>-1</code>。</p><pre class="line-numbers language-js" data-language="js"><code class="language-js"><span class="token comment">// 例子</span><span class="token keyword">let</span> str <span class="token operator">=</span> <span class="token string">"I love you!"</span><span class="token punctuation">;</span><span class="token keyword">let</span> reg <span class="token operator">=</span> <span class="token regex">/love/</span><span class="token punctuation">;</span>console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>str<span class="token punctuation">.</span><span class="token function">search</span><span class="token punctuation">(</span>reg<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// 2</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p><code>test()</code></p><pre class="line-numbers language-js" data-language="js"><code class="language-js"><span class="token comment">// 匹配就是 true</span><span class="token comment">// 不匹配就是 false</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre><h3><span id="p2-yuan-zi-fu">2、元字符</span><a href="#p2-yuan-zi-fu" class="header-anchor">#</a></h3><table><thead><tr><th>元字符</th><th>表述</th></tr></thead><tbody><tr><td><code>.</code></td><td>除了<code>\n</code>之外任意单个字符</td></tr><tr><td><code>[]</code></td><td>表示一个范围 / 去除元字符串原有的作用<br>- <code>[0-9]</code> 0-9 之间任意的单个数字<br>- <code>[a-zA-Z]</code> 表示任意一个字母<br>- <code>[.]</code> 表示单纯的<code>.</code></td></tr><tr><td><code>          |</code></td><td>或者<br>- <code>[a-z] | [0-9]</code> 小写字母或者数字</td></tr><tr><td><code>()</code></td><td>提升优先级 / 分组（第几组从左开始数<code>(</code>）</td></tr><tr><td><code>\b</code></td><td>单词的边界</td></tr><tr><td><code>\d</code> / <code>\D</code></td><td>数字 / 非数字</td></tr><tr><td><code>\s</code> / <code>\S</code></td><td>空白字符 | 非空白符</td></tr><tr><td><code>\w</code> / <code>\W</code></td><td>非特殊符号 | 特殊符号（下划线不是特殊符号）</td></tr><tr><td><code>^</code></td><td>开头 / 取反（在<code>[]</code> 里面）</td></tr><tr><td><code>$</code></td><td>结尾</td></tr></tbody></table><h3><span id="p3-xian-ding-fu">3、限定符</span><a href="#p3-xian-ding-fu" class="header-anchor">#</a></h3><p>限定符也是一种元字符，限定某些表达式出现的次数。</p><table><thead><tr><th>限定符</th><th>表述</th></tr></thead><tbody><tr><td><code>&#123;&#125;</code></td><td>该限定符前面的表达式出现的次数<br>- <code>[a-z]&#123;5&#125;</code> 出现 5 次 <br>- <code>[a-z]&#123;5,&#125;</code> 出现 5 次或者多次 <br>- <code>[0-9]&#123;0,1&#125;</code> 出现 0 次或者 1 次</td></tr><tr><td><code>*</code></td><td>表示前面的表达式出现 0 次或者多次</td></tr><tr><td><code>+</code></td><td>表示前面的表达式出现 1 次或者多次</td></tr><tr><td><code>?</code></td><td>表示前面的表达式出现 0 次或者 1 次</td></tr></tbody></table><h3><span id="p4-xiu-shi-fu">4、修饰符</span><a href="#p4-xiu-shi-fu" class="header-anchor">#</a></h3><p>正则表达式的修饰符影响搜索结果，在 JS 中有五个修饰符：</p><table><thead><tr><th>修饰符</th><th>描述</th></tr></thead><tbody><tr><td>i</td><td>搜索不区分大小写</td></tr><tr><td>g</td><td>搜索会查找所有的匹配项，而不是第一个</td></tr><tr><td>m</td><td>多行模式</td></tr><tr><td>u</td><td>开启完整的 unicode 支持</td></tr><tr><td>y</td><td>粘滞模式</td></tr></tbody></table><pre class="line-numbers language-js" data-language="js"><code class="language-js"><span class="token keyword">let</span> str <span class="token operator">=</span> <span class="token string">"I love you!"</span><span class="token punctuation">;</span>console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>str<span class="token punctuation">.</span><span class="token function">search</span><span class="token punctuation">(</span><span class="token regex">/LOVE/</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// -1</span>console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>str<span class="token punctuation">.</span><span class="token function">search</span><span class="token punctuation">(</span><span class="token regex">/LOVE/i</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// 2</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span></span></code></pre><p>搜索默认是区分大小写的。</p><h3><span id="p5-zhuan-yi">5、转义</span><a href="#p5-zhuan-yi" class="header-anchor">#</a></h3><pre class="line-numbers language-js" data-language="js"><code class="language-js"><span class="token operator">/</span><span class="token punctuation">.</span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><h1><span id="er-ying-yong">二、应用</span><a href="#er-ying-yong" class="header-anchor">#</a></h1><pre class="line-numbers language-js" data-language="js"><code class="language-js"><span class="token comment">// 邮编</span><span class="token operator">=</span><span class="token regex">/[1-9][0-9]&#123;5&#125;/</span><span class="token comment">// 手机号码</span><span class="token operator">=</span><span class="token regex">/[1][0-9]&#123;10&#125;/</span><span class="token operator">=</span><span class="token operator">/</span><span class="token punctuation">(</span><span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">]</span><span class="token punctuation">[</span><span class="token number">358</span><span class="token punctuation">]</span><span class="token punctuation">[</span><span class="token number">0</span><span class="token operator">-</span><span class="token number">9</span><span class="token punctuation">]</span><span class="token punctuation">&#123;</span><span class="token number">9</span><span class="token punctuation">&#125;</span><span class="token punctuation">)</span><span class="token operator">|</span><span class="token punctuation">(</span><span class="token operator">...</span><span class="token punctuation">)</span><span class="token operator">|</span><span class="token punctuation">(</span><span class="token operator">...</span><span class="token punctuation">)</span><span class="token operator">|</span><span class="token punctuation">(</span><span class="token operator">...</span><span class="token punctuation">)</span><span class="token comment">// 邮箱的正则 重要</span><span class="token comment">// fsdffisdhfuid @ dadjhasdhuyudga   .com.cn</span><span class="token operator">=</span><span class="token regex">/[a-zA-Z0-9_.-]+[@][a-zA-Z0-9_.-]+([.][a-zA-Z]+)&#123;1,2&#125;/</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>]]></content>
      
      
      <categories>
          
          <category> 2207：正则表达式 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> JavaScript </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>JavaScript async/await</title>
      <link href="/220207/"/>
      <url>/220207/</url>
      
        <content type="html"><![CDATA[<h1><span id="async-await">async / await</span><a href="#async-await" class="header-anchor">#</a></h1><p><code>async</code> 是 <code>Promise</code> 和 <code>Generstor</code> 语法糖。</p><h2><span id="p1-async-han-shu">1、async 函数</span><a href="#p1-async-han-shu" class="header-anchor">#</a></h2><pre class="line-numbers language-js" data-language="js"><code class="language-js"><span class="token keyword">async</span> <span class="token keyword">function</span> <span class="token function">fn</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span><span class="token punctuation">&#125;</span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><h2><span id="p2-await-biao-da-shi">2、await 表达式</span><a href="#p2-await-biao-da-shi" class="header-anchor">#</a></h2><p><code>await</code> 表达式必须写在 <code>async</code> 函数中。</p><p><code>await</code> 右侧的表达式一般为 Promise 对象，但也可以是其他值。</p><p>如果表达式是 Promise 对象，返回的是 Promise 成功的值。如果失败的，则会抛出异常，需要通过 <code>try... catch</code> 捕捉。</p><p>如果是其他值，则直接将此值作为 await 的返回值。</p><pre class="line-numbers language-js" data-language="js"><code class="language-js"><span class="token comment">// 例子1</span><span class="token keyword">async</span> <span class="token keyword">function</span> <span class="token function">fn</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>  <span class="token keyword">return</span> <span class="token number">1</span><span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span class="token keyword">const</span> result <span class="token operator">=</span> <span class="token function">fn</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>result<span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// Promise &#123; 1 &#125;</span>result<span class="token punctuation">.</span><span class="token function">then</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token parameter">value</span><span class="token punctuation">)</span> <span class="token operator">=></span> <span class="token punctuation">&#123;</span>  console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>value<span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// 1</span><span class="token punctuation">&#125;</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment">// 例子2</span><span class="token keyword">async</span> <span class="token keyword">function</span> <span class="token function">fn</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>  <span class="token keyword">throw</span> <span class="token string">"异常"</span><span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span class="token keyword">const</span> result <span class="token operator">=</span> <span class="token function">fn</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>result<span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// Promise &#123; &lt;rejected> '异常' &#125;</span>result  <span class="token punctuation">.</span><span class="token function">then</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token parameter">value</span><span class="token punctuation">)</span> <span class="token operator">=></span> <span class="token punctuation">&#123;</span>    console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>value<span class="token punctuation">)</span><span class="token punctuation">;</span>  <span class="token punctuation">&#125;</span><span class="token punctuation">)</span>  <span class="token punctuation">.</span><span class="token function">catch</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token parameter">reason</span><span class="token punctuation">)</span> <span class="token operator">=></span> <span class="token punctuation">&#123;</span>    console<span class="token punctuation">.</span><span class="token function">error</span><span class="token punctuation">(</span>reason<span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// 异常</span>  <span class="token punctuation">&#125;</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment">// 例子3</span><span class="token keyword">async</span> <span class="token keyword">function</span> <span class="token function">fn</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>  <span class="token keyword">return</span> <span class="token keyword">new</span> <span class="token class-name">Promise</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token parameter">resolve<span class="token punctuation">,</span> reject</span><span class="token punctuation">)</span> <span class="token operator">=></span> <span class="token punctuation">&#123;</span>    <span class="token function">reject</span><span class="token punctuation">(</span><span class="token string">"error"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>  <span class="token punctuation">&#125;</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span class="token keyword">const</span> result <span class="token operator">=</span> <span class="token function">fn</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// 失败的Promise</span>result<span class="token punctuation">.</span><span class="token function">catch</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token parameter">reason</span><span class="token punctuation">)</span> <span class="token operator">=></span> <span class="token punctuation">&#123;</span>  console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>reason<span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// error</span><span class="token punctuation">&#125;</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p><code>await</code> 会阻塞函数的运行，需要等后边的异步代码执行完毕才会向下执行。</p>]]></content>
      
      
      <categories>
          
          <category> 2202：ES高级 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> JavaScript </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>WebSocket</title>
      <link href="/150205/"/>
      <url>/150205/</url>
      
        <content type="html"><![CDATA[<h1><span id="websocket">WebSocket</span><a href="#websocket" class="header-anchor">#</a></h1><h2><span id="p1-gai-nian">1、概念</span><a href="#p1-gai-nian" class="header-anchor">#</a></h2><ul><li>它是一种网络通信协议，是 <code>HTML5</code> 开始提供的一种在单个 TCP 连接上进行全双工通讯的协议。</li><li>因为 HTTP 协议有一个缺陷：通信只能由客户端发起</li><li>我们都知道轮询的效率低，非常浪费资源（因为必须不停连接，或者 HTTP 连接始终打开）, 因此 websocket 应运而生。</li><li>WebSocket 用于在 Web 浏览器和服务器之间进行任意的双向数据传输的一种技术。WebSocket 协议基于 TCP 协议实现，包含初始的握手过程，以及后续的多次数据帧双向传输过程。其目的是在 WebSocket 应用和 WebSocket 服务器进行频繁双向通信时，可以使服务器避免打开多个 HTTP 连接进行工作来节约资源，提高了工作效率和资源利用率。</li><li>WebSocket 目前支持两种统一资源标志符<code>ws</code>和<code>wss</code>，类似于 HTTP 和 HTTPS</li><li>浏览器发出 webSocket 的连线请求，服务器发出响应，这个过程称为<code>握手</code>,握手的过程只需要一次，就可以实现持久连接。</li></ul><h2><span id="p2-ji-ben-shi-yong">2、基本使用</span><a href="#p2-ji-ben-shi-yong" class="header-anchor">#</a></h2><p>WS 表示一个 WebSocket 对象。</p><p><code>WS.readyState</code> 检查连接状态</p><ul><li>0 未连接</li><li>1 <code>WS.OPEN</code> 连接已建立</li><li>2 连接正在关闭</li><li>3 连接已经关闭</li></ul><h2><span id="p3-xin-tiao">3、心跳</span><a href="#p3-xin-tiao" class="header-anchor">#</a></h2><p>待补充。</p><h2><span id="p4-socket-io">4、</span><a href="#p4-socket-io" class="header-anchor">#</a></h2><p><a href="http://Socket.io">Socket.io</a> 是一个 NodeJS <code>webSocket</code>库，目标是构建不同浏览器和移动设备上使用的实时应用。它会自动根据浏览器从<code>webSocket</code> <code>ajax长轮询</code> <code>ifrane流</code>等各种方式选择最佳的方式。</p><p>聊天室的实现</p><pre class="line-numbers language-js" data-language="js"><code class="language-js"><span class="token comment">// 服务端</span><span class="token keyword">const</span> fs <span class="token operator">=</span> <span class="token function">require</span><span class="token punctuation">(</span><span class="token string">"fs"</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token keyword">const</span> path <span class="token operator">=</span> <span class="token function">require</span><span class="token punctuation">(</span><span class="token string">"path"</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment">// 创建http server</span><span class="token keyword">const</span> server <span class="token operator">=</span> <span class="token function">require</span><span class="token punctuation">(</span><span class="token string">"http"</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">createServer</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token parameter">req<span class="token punctuation">,</span> res</span><span class="token punctuation">)</span> <span class="token operator">=></span> <span class="token punctuation">&#123;</span>  <span class="token keyword">if</span> <span class="token punctuation">(</span>req<span class="token punctuation">.</span>url <span class="token operator">===</span> <span class="token string">"/socket.io.js"</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>    <span class="token keyword">const</span> filePath <span class="token operator">=</span> path<span class="token punctuation">.</span><span class="token function">resolve</span><span class="token punctuation">(</span>__dirname<span class="token punctuation">,</span> <span class="token string">"./public/socket.io.js"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token keyword">const</span> rs <span class="token operator">=</span> fs<span class="token punctuation">.</span><span class="token function">createReadStream</span><span class="token punctuation">(</span>filePath<span class="token punctuation">)</span><span class="token punctuation">;</span>    res<span class="token punctuation">.</span><span class="token function">setHeader</span><span class="token punctuation">(</span><span class="token string">"Content-Type"</span><span class="token punctuation">,</span> <span class="token string">"application/javascript;charset=utf8"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    rs<span class="token punctuation">.</span><span class="token function">pipe</span><span class="token punctuation">(</span>res<span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token keyword">return</span><span class="token punctuation">;</span>  <span class="token punctuation">&#125;</span>  <span class="token comment">// 响应页面</span>  <span class="token keyword">const</span> filePath <span class="token operator">=</span> path<span class="token punctuation">.</span><span class="token function">resolve</span><span class="token punctuation">(</span>__dirname<span class="token punctuation">,</span> <span class="token string">"./public/chat.html"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>  <span class="token keyword">const</span> rs <span class="token operator">=</span> fs<span class="token punctuation">.</span><span class="token function">createReadStream</span><span class="token punctuation">(</span>filePath<span class="token punctuation">)</span><span class="token punctuation">;</span>  res<span class="token punctuation">.</span><span class="token function">setHeader</span><span class="token punctuation">(</span><span class="token string">"Content-Type"</span><span class="token punctuation">,</span> <span class="token string">"text/html;charset=utf8"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>  rs<span class="token punctuation">.</span><span class="token function">pipe</span><span class="token punctuation">(</span>res<span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment">// 创建WebSocket服务</span><span class="token keyword">const</span> io <span class="token operator">=</span> <span class="token function">require</span><span class="token punctuation">(</span><span class="token string">"socket.io"</span><span class="token punctuation">)</span><span class="token punctuation">(</span>server<span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment">// io可以代表所有客户端连接对象</span>io<span class="token punctuation">.</span><span class="token function">on</span><span class="token punctuation">(</span><span class="token string">"connect"</span><span class="token punctuation">,</span> <span class="token punctuation">(</span><span class="token parameter">socket</span><span class="token punctuation">)</span> <span class="token operator">=></span> <span class="token punctuation">&#123;</span>  <span class="token comment">// socket代表当前连接上服务的客户端对象</span>  socket<span class="token punctuation">.</span><span class="token function">on</span><span class="token punctuation">(</span><span class="token string">"client_to_server"</span><span class="token punctuation">,</span> <span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token parameter">data</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>    console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>data<span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token comment">// 除它以外，通知其他客户端</span>    socket<span class="token punctuation">.</span>broadcast<span class="token punctuation">.</span><span class="token function">emit</span><span class="token punctuation">(</span><span class="token string">"server_to_client"</span><span class="token punctuation">,</span> data<span class="token punctuation">)</span><span class="token punctuation">;</span>  <span class="token punctuation">&#125;</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment">// 启动服务</span>server<span class="token punctuation">.</span><span class="token function">listen</span><span class="token punctuation">(</span><span class="token number">3000</span><span class="token punctuation">,</span> <span class="token string">"localhost"</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><pre class="line-numbers language-js" data-language="js"><code class="language-js"><span class="token comment">// 客户端</span><span class="token keyword">const</span> btn <span class="token operator">=</span> document<span class="token punctuation">.</span><span class="token function">querySelector</span><span class="token punctuation">(</span><span class="token string">".chat-btn"</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token keyword">const</span> content <span class="token operator">=</span> document<span class="token punctuation">.</span><span class="token function">querySelector</span><span class="token punctuation">(</span><span class="token string">"textarea"</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token keyword">const</span> input <span class="token operator">=</span> document<span class="token punctuation">.</span><span class="token function">querySelector</span><span class="token punctuation">(</span><span class="token string">"#chat-name>input"</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token keyword">const</span> chatContent <span class="token operator">=</span> document<span class="token punctuation">.</span><span class="token function">querySelector</span><span class="token punctuation">(</span><span class="token string">".chat-content"</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment">// 客户端连接上服务端</span><span class="token keyword">const</span> socket <span class="token operator">=</span> <span class="token function">io</span><span class="token punctuation">(</span><span class="token string">"ws://192.168.10.2:3000"</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment">// socket代表当前连接客户端对象</span>btn<span class="token punctuation">.</span><span class="token function-variable function">onclick</span> <span class="token operator">=</span> <span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>  <span class="token comment">// 获取当前用户名</span>  <span class="token keyword">const</span> username <span class="token operator">=</span> input<span class="token punctuation">.</span>value<span class="token punctuation">;</span>  <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token operator">!</span>username<span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>    <span class="token function">alert</span><span class="token punctuation">(</span><span class="token string">"请输入用户名！"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token keyword">return</span><span class="token punctuation">;</span>  <span class="token punctuation">&#125;</span>  <span class="token comment">// 获取用户输入的消息</span>  <span class="token keyword">const</span> msg <span class="token operator">=</span> content<span class="token punctuation">.</span>value<span class="token punctuation">;</span>  <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token operator">!</span>msg<span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>    <span class="token function">alert</span><span class="token punctuation">(</span><span class="token string">"请输入聊天内容！"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token keyword">return</span><span class="token punctuation">;</span>  <span class="token punctuation">&#125;</span>  <span class="token keyword">const</span> time <span class="token operator">=</span> Date<span class="token punctuation">.</span><span class="token function">now</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>  <span class="token comment">// 客户端向服务端发送消息</span>  socket<span class="token punctuation">.</span><span class="token function">emit</span><span class="token punctuation">(</span><span class="token string">"client_to_server"</span><span class="token punctuation">,</span> <span class="token punctuation">&#123;</span>    username<span class="token punctuation">,</span>    msg<span class="token punctuation">,</span>    time<span class="token punctuation">,</span>  <span class="token punctuation">&#125;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>  <span class="token comment">// 显示在你的聊天内容</span>  <span class="token keyword">const</span> div <span class="token operator">=</span> document<span class="token punctuation">.</span><span class="token function">createElement</span><span class="token punctuation">(</span><span class="token string">"div"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>  div<span class="token punctuation">.</span>innerHTML <span class="token operator">=</span> <span class="token template-string"><span class="token template-punctuation string">`</span><span class="token string">        &lt;div class="title right-title"></span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">$&#123;</span>username<span class="token interpolation-punctuation punctuation">&#125;</span></span><span class="token string">          </span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">$&#123;</span><span class="token keyword">new</span> <span class="token class-name">Date</span><span class="token punctuation">(</span>time<span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">toLocaleString</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token interpolation-punctuation punctuation">&#125;</span></span><span class="token string">        &lt;/div>        &lt;div class="right-content"></span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">$&#123;</span>msg<span class="token interpolation-punctuation punctuation">&#125;</span></span><span class="token string">&lt;/div></span><span class="token template-punctuation string">`</span></span><span class="token punctuation">;</span>  chatContent<span class="token punctuation">.</span><span class="token function">appendChild</span><span class="token punctuation">(</span>div<span class="token punctuation">)</span><span class="token punctuation">;</span>  <span class="token comment">// 聊天内容清空</span>  content<span class="token punctuation">.</span>value <span class="token operator">=</span> <span class="token string">""</span><span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span class="token punctuation">;</span>socket<span class="token punctuation">.</span><span class="token function">on</span><span class="token punctuation">(</span><span class="token string">"server_to_client"</span><span class="token punctuation">,</span> <span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token parameter">data</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>  <span class="token keyword">const</span> <span class="token punctuation">&#123;</span> username<span class="token punctuation">,</span> msg<span class="token punctuation">,</span> time <span class="token punctuation">&#125;</span> <span class="token operator">=</span> data<span class="token punctuation">;</span>  <span class="token comment">// 显示别人的聊天内容</span>  <span class="token keyword">const</span> div <span class="token operator">=</span> document<span class="token punctuation">.</span><span class="token function">createElement</span><span class="token punctuation">(</span><span class="token string">"div"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>  div<span class="token punctuation">.</span>innerHTML <span class="token operator">=</span> <span class="token template-string"><span class="token template-punctuation string">`</span><span class="token string">        &lt;div class="title left-title"></span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">$&#123;</span>username<span class="token interpolation-punctuation punctuation">&#125;</span></span><span class="token string">          </span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">$&#123;</span><span class="token keyword">new</span> <span class="token class-name">Date</span><span class="token punctuation">(</span>time<span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">toLocaleString</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token interpolation-punctuation punctuation">&#125;</span></span><span class="token string">        &lt;/div>        &lt;div class="left-content"></span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">$&#123;</span>msg<span class="token interpolation-punctuation punctuation">&#125;</span></span><span class="token string">&lt;/div></span><span class="token template-punctuation string">`</span></span><span class="token punctuation">;</span>  chatContent<span class="token punctuation">.</span><span class="token function">appendChild</span><span class="token punctuation">(</span>div<span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>]]></content>
      
      
      <categories>
          
          <category> 1502：通信协议 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> H5 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Webpack</title>
      <link href="/240201/"/>
      <url>/240201/</url>
      
        <content type="html"><![CDATA[<p>自动化构建工具：<strong>开发环境 --&gt; 生产环境</strong></p><ul><li>开发环境（development）注重开发效率和源码的阅读。</li><li>生产环境（production）注重代码的执行效率（压缩）。</li></ul><p>gulp / grunt 属于任务流工具（Task Runner）</p><p>webpack 是模块化打包工具（bundler）</p><p><strong><a href="https://www.webpackjs.com/">webpack</a></strong> 是一个模块打包器（bundler），根据模块的依赖关系进行静态分析，生成对应的静态资源。对 webpack 来说，前端所有资源文件（js/json/css/less/img/…）都会作为模块处理。</p><p>核心概念</p><ul><li><code>Entry</code> 入口起点，指示 webpack 应该使用哪个模块，来作为构建其内部依赖图的开始。</li><li><code>Output</code> 告诉 webpack 在哪里输出它所创建的 bundles，以及如何命名这些文件。</li><li><code>Loader</code> 让 webpack 能够处理那些非 JS 文件。</li><li><code>Plugins</code> 插件，用于执行范围更广的任务，比如打包优化，压缩。</li><li><code>Mode</code> 模式，有生产模式（production）和开发模式（development）。</li></ul><h2><span id="p1-kai-shi">1、开始</span><a href="#p1-kai-shi" class="header-anchor">#</a></h2><p>（1）初始化</p><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash">npm init<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>（2）安装</p><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"># 全局安装npm i webpack webpack-cli -g# 局部安装（建议）npm i webpack webpack-cli -D<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span></span></code></pre><h2><span id="p2-ji-ben-shi-yong">2、基本使用</span><a href="#p2-ji-ben-shi-yong" class="header-anchor">#</a></h2><pre class="line-numbers language-tree" data-language="tree"><code class="language-tree">demo ├── src │   ├── js │   │   ├── app.js │   │   └── mod.js │   └── index.html ├── build ├── package.json └── webpack.config.js<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>（1）打包 JS 文件</p><p>能够编译打包 js 和 json 文件，并且能将 es6 的模块化语法转换成浏览器能识别的语法。</p><p>将 <code>src/js/app.js</code> 打包成开发环境文件 <code>build/js/app.js</code></p><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash">npx webpack src&#x2F;js&#x2F;app.js -o build&#x2F;js&#x2F;app.js --mode&#x3D;develoment#                         -output<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre><p>打包到生产环境（比生产环境多了一个<strong>代码压缩</strong>）</p><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash">npx webpack src&#x2F;js&#x2F;app.js -o build&#x2F;js&#x2F;app.js --mode&#x3D;production<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>缺点就是不能编译打包 CSS img 等文件，不能将 ES6 基本语法转化成 ES5 以下语法。</p><p>可以通过配置文件改善。</p><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"># 对指定文件进行打包npx webpack xxx.js --output xxx.js# 打包多个文件npx webpack x1.js x2.js<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>（2）默认配置文件 <code>webpack.config.js</code> △</p><pre class="line-numbers language-js" data-language="js"><code class="language-js"><span class="token keyword">const</span> <span class="token punctuation">&#123;</span> resolve <span class="token punctuation">&#125;</span> <span class="token operator">=</span> <span class="token function">require</span><span class="token punctuation">(</span><span class="token string">"path"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>module<span class="token punctuation">.</span>exports <span class="token operator">=</span> <span class="token punctuation">&#123;</span>  <span class="token comment">// 指定打包文件的入口</span>  <span class="token comment">// （单入口写法）</span>  <span class="token comment">// entry: ".src/js/app.js",</span>  <span class="token comment">// （多入口写法）</span>  entry<span class="token operator">:</span> <span class="token punctuation">&#123;</span>    app<span class="token operator">:</span> <span class="token string">"./src/js/app.js"</span><span class="token punctuation">,</span>    mod<span class="token operator">:</span> <span class="token string">"./src/js/mod.js"</span><span class="token punctuation">,</span>  <span class="token punctuation">&#125;</span><span class="token punctuation">,</span>  <span class="token comment">// output</span>  output<span class="token operator">:</span> <span class="token punctuation">&#123;</span>    <span class="token comment">// 指定打包之后的名字</span>    <span class="token comment">//               ↓ entry 的属性名</span>    filename<span class="token operator">:</span> <span class="token string">"js/[name].index.js"</span><span class="token punctuation">,</span>    <span class="token comment">// 指定打包的绝对路径</span>    path<span class="token operator">:</span> <span class="token function">resolve</span><span class="token punctuation">(</span>__dirname<span class="token punctuation">,</span> <span class="token string">"./build"</span><span class="token punctuation">)</span><span class="token punctuation">,</span>  <span class="token punctuation">&#125;</span><span class="token punctuation">,</span>  <span class="token comment">// 指定打包模式</span>  <span class="token comment">// - development 开发模式</span>  <span class="token comment">// - production  生产模式</span>  mode<span class="token operator">:</span> <span class="token string">"development"</span><span class="token punctuation">,</span><span class="token punctuation">&#125;</span><span class="token punctuation">;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>运行</p><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"># 这里是局部安装的命令，全局安装直接 webpack 即可npx webpack<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre><p>（3）清空上次打包的内容</p><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash">npm install clean-webpack-plugin -D<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><pre class="line-numbers language-js" data-language="js"><code class="language-js"><span class="token keyword">const</span> <span class="token punctuation">&#123;</span> cleanWebpackPlugin <span class="token punctuation">&#125;</span> <span class="token operator">=</span> <span class="token function">require</span><span class="token punctuation">(</span><span class="token string">"clean-webpack-plugin"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>module<span class="token punctuation">.</span>exports <span class="token operator">=</span> <span class="token punctuation">&#123;</span>  <span class="token comment">// ...</span>  plugins<span class="token operator">:</span> <span class="token punctuation">[</span><span class="token keyword">new</span> <span class="token class-name">cleanWebpackPlugin</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">]</span><span class="token punctuation">,</span><span class="token punctuation">&#125;</span><span class="token punctuation">;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>（4）配置 <code>package.json</code> 编译命令</p><pre class="line-numbers language-js" data-language="js"><code class="language-js"><span class="token comment">// package.json</span><span class="token string">"scripts"</span><span class="token operator">:</span> <span class="token punctuation">&#123;</span>    <span class="token string">"build"</span><span class="token operator">:</span> <span class="token string">"npx webpack"</span>  <span class="token punctuation">&#125;</span><span class="token punctuation">,</span><span class="token comment">// bash</span>npm run build<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h2><span id="p3-da-bao-css-less-sass-zi-yuan">3、打包 CSS/LESS/SASS 资源</span><a href="#p3-da-bao-css-less-sass-zi-yuan" class="header-anchor">#</a></h2><p>（1）打包 CSS</p><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash">npm install style-loader css-loader -D<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><pre class="line-numbers language-js" data-language="js"><code class="language-js"><span class="token comment">// 入口文件 app.js</span><span class="token keyword">import</span> <span class="token string">"../css/app.css"</span><span class="token punctuation">;</span><span class="token comment">// 配置文件 webpack.config.js</span>module<span class="token punctuation">.</span>exports <span class="token operator">=</span> <span class="token punctuation">&#123;</span>  <span class="token comment">// ...</span>  module<span class="token operator">:</span> <span class="token punctuation">&#123;</span>    rules<span class="token operator">:</span> <span class="token punctuation">[</span>      <span class="token punctuation">&#123;</span>        test<span class="token operator">:</span> <span class="token regex">/\.css$/</span><span class="token punctuation">,</span>        loader<span class="token operator">:</span> <span class="token punctuation">[</span><span class="token string">"style-loader"</span><span class="token punctuation">,</span> <span class="token string">"css-loader"</span><span class="token punctuation">]</span><span class="token punctuation">,</span>      <span class="token punctuation">&#125;</span><span class="token punctuation">,</span>    <span class="token punctuation">]</span><span class="token punctuation">,</span>  <span class="token punctuation">&#125;</span><span class="token punctuation">,</span><span class="token punctuation">&#125;</span><span class="token punctuation">;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p><code>index.html</code> 把 <code>build/js/app.js</code> 引入之后就能加载样式了。</p><p>（2）打包 LESS</p><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash">npm install less-loader -D<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><pre class="line-numbers language-js" data-language="js"><code class="language-js"><span class="token comment">// 入口文件 app.js</span><span class="token keyword">import</span> <span class="token string">"../css/style.less"</span><span class="token punctuation">;</span><span class="token comment">// 配置文件 webpack.config.js</span>module<span class="token punctuation">.</span>exports <span class="token operator">=</span> <span class="token punctuation">&#123;</span>  <span class="token comment">// ...</span>  module<span class="token operator">:</span> <span class="token punctuation">&#123;</span>    rules<span class="token operator">:</span> <span class="token punctuation">[</span>      <span class="token punctuation">&#123;</span>        test<span class="token operator">:</span> <span class="token regex">/\.css$/</span><span class="token punctuation">,</span>        loader<span class="token operator">:</span> <span class="token punctuation">[</span><span class="token string">"style-loader"</span><span class="token punctuation">,</span> <span class="token string">"css-loader"</span><span class="token punctuation">]</span><span class="token punctuation">,</span>      <span class="token punctuation">&#125;</span><span class="token punctuation">,</span>      <span class="token punctuation">&#123;</span>        test<span class="token operator">:</span> <span class="token regex">/\.less$/</span><span class="token punctuation">,</span>        use<span class="token operator">:</span> <span class="token punctuation">[</span><span class="token string">"style-loader"</span><span class="token punctuation">,</span> <span class="token string">"css-loader"</span><span class="token punctuation">,</span> <span class="token string">"less-loader"</span><span class="token punctuation">]</span><span class="token punctuation">,</span>      <span class="token punctuation">&#125;</span><span class="token punctuation">,</span>    <span class="token punctuation">]</span><span class="token punctuation">,</span>  <span class="token punctuation">&#125;</span><span class="token punctuation">,</span><span class="token punctuation">&#125;</span><span class="token punctuation">;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>（3）打包 SASS</p><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash">npm install sass-loader -D<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><h2><span id="p4-js-eslint">4、JS eslint</span><a href="#p4-js-eslint" class="header-anchor">#</a></h2><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash">npm install eslint-loader eslint -D<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><pre class="line-numbers language-js" data-language="js"><code class="language-js"><span class="token comment">// webpack.config.js</span>module<span class="token punctuation">.</span>exports <span class="token operator">=</span> <span class="token punctuation">&#123;</span>    <span class="token comment">// ...</span>    module<span class="token operator">:</span><span class="token punctuation">&#123;</span>        rules<span class="token operator">:</span><span class="token punctuation">[</span><span class="token operator">...</span><span class="token punctuation">,</span><span class="token punctuation">&#123;</span>                <span class="token comment">// 只检测 js 文件</span>                test<span class="token operator">:</span><span class="token regex">/\.js$/</span><span class="token punctuation">,</span>                <span class="token comment">// 排除的目录</span>                exclude<span class="token operator">:</span> <span class="token regex">/node_modules/</span><span class="token punctuation">,</span>                <span class="token comment">// 要检查的目录</span>                include<span class="token operator">:</span> <span class="token function">resolve</span><span class="token punctuation">(</span>__dirname<span class="token punctuation">,</span> <span class="token string">"./src"</span><span class="token punctuation">)</span><span class="token punctuation">,</span>                <span class="token comment">// 提前加载使用</span>                enforce<span class="token operator">:</span> <span class="token string">"pre"</span><span class="token punctuation">,</span>                use<span class="token operator">:</span><span class="token punctuation">&#123;</span>                    loader<span class="token operator">:</span><span class="token string">"eslint-loader"</span>        <span class="token punctuation">&#125;</span><span class="token punctuation">]</span>    <span class="token punctuation">&#125;</span><span class="token punctuation">&#125;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><pre class="line-numbers language-js" data-language="js"><code class="language-js"><span class="token comment">// .eslintrc.js（项目根目录）</span>module<span class="token punctuation">.</span>exports <span class="token operator">=</span> <span class="token punctuation">&#123;</span>    <span class="token string">"parserOptions"</span><span class="token operator">:</span><span class="token punctuation">&#123;</span>        <span class="token string">"ecmaVersion"</span><span class="token operator">:</span> <span class="token number">6</span><span class="token punctuation">,</span>  <span class="token comment">// 支持 ES6</span>        <span class="token string">"sourceType"</span><span class="token operator">:</span> <span class="token string">"module"</span>  <span class="token comment">// 使用 ES6 模块化</span>    <span class="token punctuation">&#125;</span><span class="token punctuation">,</span>    <span class="token string">"env"</span><span class="token operator">:</span><span class="token punctuation">&#123;</span>                <span class="token comment">// 设置环境</span>        <span class="token string">"browser"</span><span class="token operator">:</span> <span class="token boolean">true</span><span class="token punctuation">,</span>   <span class="token comment">// 支持浏览器环境</span>        <span class="token string">"node"</span><span class="token operator">:</span> <span class="token boolean">true</span>       <span class="token comment">// 支持服务器环境</span>    <span class="token punctuation">&#125;</span><span class="token punctuation">,</span>    <span class="token comment">// 如果这个地方定义了但是没有用，会过不去</span>    <span class="token comment">// Unexpected top-level property "global"</span>    <span class="token string">"global"</span><span class="token operator">:</span><span class="token punctuation">&#123;</span>             <span class="token comment">// 声明使用的全局变量</span>        <span class="token string">"$"</span><span class="token operator">:</span><span class="token string">"readonly"</span><span class="token punctuation">,</span>    <span class="token comment">// 不允许重写 "writable" 可修改</span><span class="token punctuation">&#125;</span><span class="token punctuation">,</span>    <span class="token string">"rules"</span><span class="token operator">:</span><span class="token punctuation">&#123;</span>              <span class="token comment">// 0/off忽略 1/warn警告 2/error错误</span>        <span class="token string">"eqeqeq"</span><span class="token operator">:</span> <span class="token number">0</span><span class="token punctuation">,</span>       <span class="token comment">// 必须使用全等</span>        <span class="token string">"no-alert"</span><span class="token operator">:</span> <span class="token number">0</span>      <span class="token comment">// 禁止使用 alert confirm prompt</span>        <span class="token string">"no-console"</span><span class="token operator">:</span> <span class="token number">0</span><span class="token punctuation">,</span>   <span class="token comment">// 禁止使用 console</span>        <span class="token string">"no-var"</span><span class="token operator">:</span> <span class="token number">0</span><span class="token punctuation">,</span>       <span class="token comment">// 禁用 var</span>        <span class="token string">"indent"</span><span class="token operator">:</span> <span class="token punctuation">[</span><span class="token string">"error"</span><span class="token punctuation">,</span> <span class="token number">4</span><span class="token punctuation">]</span><span class="token punctuation">,</span>  <span class="token comment">// 缩进风格</span>    <span class="token punctuation">&#125;</span><span class="token punctuation">,</span>    <span class="token comment">// 使用 eslint 推荐的默认规则</span>    <span class="token string">"extends"</span><span class="token operator">:</span> <span class="token string">"eslint:recommended"</span><span class="token punctuation">&#125;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h2><span id="p5-js-yu-fa-zhuan-huan">5、JS 语法转换</span><a href="#p5-js-yu-fa-zhuan-huan" class="header-anchor">#</a></h2><p><code>@babel/preset-env</code> 将新语法转成 ES5。</p><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash">npm install babel-loader @babel&#x2F;core @babel&#x2F;preset-env -D# @babel&#x2F;core  babel 的核心库# @babel&#x2F;preset-env  babel 预设工具包，默认可以将所有最新的语法转为为 ES5<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span></span></code></pre><pre class="line-numbers language-js" data-language="js"><code class="language-js"><span class="token comment">// webpack.config.js</span>module<span class="token punctuation">.</span>exports <span class="token operator">=</span> <span class="token punctuation">&#123;</span>    <span class="token comment">//...</span>    module<span class="token operator">:</span><span class="token punctuation">&#123;</span>        rules<span class="token operator">:</span><span class="token punctuation">[</span><span class="token operator">...</span><span class="token punctuation">,</span><span class="token punctuation">&#123;</span>            test<span class="token operator">:</span><span class="token regex">/\.js$/</span><span class="token punctuation">,</span>            exclude<span class="token operator">:</span> <span class="token regex">/node_modules/</span><span class="token punctuation">,</span>            use<span class="token operator">:</span><span class="token punctuation">&#123;</span>                loader<span class="token operator">:</span><span class="token string">"babel-loader"</span><span class="token punctuation">,</span>                options<span class="token operator">:</span><span class="token punctuation">&#123;</span>                    presets<span class="token operator">:</span> <span class="token punctuation">[</span><span class="token string">'@babel/preset-env'</span><span class="token punctuation">]</span>                <span class="token punctuation">&#125;</span>            <span class="token punctuation">&#125;</span>        <span class="token punctuation">&#125;</span>    <span class="token punctuation">]</span><span class="token punctuation">&#125;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h2><span id="p6-js-jian-rong-xing-chu-li">6、JS 兼容性处理</span><a href="#p6-js-jian-rong-xing-chu-li" class="header-anchor">#</a></h2><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash">npm install @babel&#x2F;polyfill<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><pre class="line-numbers language-js" data-language="js"><code class="language-js"><span class="token comment">// 入口文件 app.js</span><span class="token keyword">import</span> <span class="token string">"@babel/polyfill"</span><span class="token punctuation">;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre><p>解决 <code>babel</code> 只能转换语法的问题，引入 <code>polyfill</code> 可以转换高级语法（如 <code>Promise</code> ）。</p><h2><span id="p7-da-bao-yang-shi-wen-jian-zhong-de-tu-pian-zi-yuan">7、打包样式文件中的图片资源</span><a href="#p7-da-bao-yang-shi-wen-jian-zhong-de-tu-pian-zi-yuan" class="header-anchor">#</a></h2><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash">npm install file-loader url-loader -D<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><pre class="line-numbers language-js" data-language="js"><code class="language-js"><span class="token comment">// webpack.config.js</span>module<span class="token punctuation">.</span>exports <span class="token operator">=</span> <span class="token punctuation">&#123;</span>    <span class="token comment">//...</span>    module<span class="token operator">:</span><span class="token punctuation">&#123;</span>        rules<span class="token operator">:</span><span class="token punctuation">[</span><span class="token operator">...</span><span class="token punctuation">,</span>            <span class="token punctuation">&#123;</span>                test<span class="token operator">:</span> <span class="token regex">/\.(png|jpg|gif)$/</span><span class="token punctuation">,</span>                use<span class="token operator">:</span><span class="token punctuation">&#123;</span>                    loader<span class="token operator">:</span> <span class="token string">"url-loader"</span><span class="token punctuation">,</span>                    options<span class="token operator">:</span><span class="token punctuation">&#123;</span>                        <span class="token comment">// 8KB以下的base64处理</span>                        limit<span class="token operator">:</span> <span class="token number">8192</span><span class="token punctuation">,</span>                        <span class="token comment">// 文件本地输出路径</span>                        outputPath<span class="token operator">:</span> <span class="token string">"images"</span><span class="token punctuation">,</span>                        <span class="token comment">// 图片URL路径</span>                        publicPath<span class="token operator">:</span> <span class="token string">"../build/images"</span><span class="token punctuation">,</span>                        <span class="token comment">// 修改文件名称和后缀</span>                        name<span class="token operator">:</span> <span class="token string">"[hash:8]"</span><span class="token punctuation">.</span><span class="token punctuation">[</span>ext<span class="token punctuation">]</span><span class="token punctuation">,</span>                    <span class="token punctuation">&#125;</span>                <span class="token punctuation">&#125;</span>            <span class="token punctuation">&#125;</span>        <span class="token punctuation">]</span>    <span class="token punctuation">&#125;</span><span class="token punctuation">&#125;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h2><span id="p8-da-bao-html-wen-jian">8、打包 HTML 文件</span><a href="#p8-da-bao-html-wen-jian" class="header-anchor">#</a></h2><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash">npm install html-webpack-plugin -D<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><pre class="line-numbers language-js" data-language="js"><code class="language-js"><span class="token comment">// webpack.config.js</span><span class="token keyword">const</span> HtmlWebpackPlugin <span class="token operator">=</span> <span class="token function">require</span><span class="token punctuation">(</span><span class="token string">"html-webpack-plugin"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>module<span class="token punctuation">.</span>exports <span class="token operator">=</span> <span class="token punctuation">&#123;</span>  <span class="token comment">//...</span>  plugins<span class="token operator">:</span> <span class="token punctuation">[</span>    <span class="token keyword">new</span> <span class="token class-name">HtmlWebpackPlugin</span><span class="token punctuation">(</span><span class="token punctuation">&#123;</span>      <span class="token comment">// 设置要编译的 HTML 源文件路径</span>      template<span class="token operator">:</span> <span class="token string">"./src/index.html"</span><span class="token punctuation">,</span>      <span class="token comment">// 设置打包之后的文件名，默认 index.html</span>      filename<span class="token operator">:</span> <span class="token string">"home.html"</span><span class="token punctuation">,</span>      title<span class="token operator">:</span> <span class="token string">"我是打包之后的文件"</span><span class="token punctuation">,</span>      <span class="token comment">// 传入参数</span>      <span class="token comment">// -- &lt;%=user%></span>      <span class="token comment">// -- &lt;%if(user)%></span>      arr<span class="token operator">:</span> <span class="token punctuation">[</span><span class="token number">1111</span><span class="token punctuation">,</span> <span class="token number">222</span><span class="token punctuation">]</span><span class="token punctuation">,</span>      <span class="token comment">// 加载的JS增加一个后缀</span>      <span class="token comment">// JS内容变化，后缀会重新生成</span>      hash<span class="token operator">:</span> <span class="token boolean">true</span><span class="token punctuation">,</span>      <span class="token comment">// 指定要引入的JS文件</span>      <span class="token comment">// app 是entry对象的属性名不是文件名</span>      chunk<span class="token operator">:</span> <span class="token punctuation">[</span><span class="token string">"app"</span><span class="token punctuation">]</span><span class="token punctuation">,</span>      excludeChunk<span class="token operator">:</span> <span class="token punctuation">[</span><span class="token string">"app"</span><span class="token punctuation">]</span><span class="token punctuation">,</span> <span class="token comment">// 除了...之外</span>      <span class="token comment">// 不引入 JS</span>      <span class="token comment">// - "head", 放到head里</span>      <span class="token comment">// - "body"</span>      inject<span class="token operator">:</span> <span class="token boolean">false</span><span class="token punctuation">,</span>      minify<span class="token operator">:</span> <span class="token punctuation">&#123;</span>        <span class="token comment">// 移除注释</span>        removeComments<span class="token operator">:</span> <span class="token boolean">true</span><span class="token punctuation">,</span>        <span class="token comment">// 移除属性中的引号</span>        removeAttributeQuotes<span class="token operator">:</span> <span class="token boolean">true</span><span class="token punctuation">,</span>        <span class="token comment">// 将代码进行折叠，去除空格</span>        collapseWhitespace<span class="token operator">:</span> <span class="token boolean">true</span><span class="token punctuation">,</span>      <span class="token punctuation">&#125;</span><span class="token punctuation">,</span>    <span class="token punctuation">&#125;</span><span class="token punctuation">)</span><span class="token punctuation">,</span>  <span class="token punctuation">]</span><span class="token punctuation">,</span><span class="token punctuation">&#125;</span><span class="token punctuation">;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h2><span id="p9-da-kai-html-zhong-de-tu-pian-zi-yuan">9、打开 HTML 中的图片资源</span><a href="#p9-da-kai-html-zhong-de-tu-pian-zi-yuan" class="header-anchor">#</a></h2><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash">npm install html-loader -D<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><pre class="line-numbers language-js" data-language="js"><code class="language-js"><span class="token comment">// webpack.config.js</span>module<span class="token punctuation">.</span>exports <span class="token operator">=</span> <span class="token punctuation">&#123;</span>    <span class="token comment">//...</span>    module<span class="token operator">:</span><span class="token punctuation">&#123;</span>        rules<span class="token operator">:</span><span class="token punctuation">[</span><span class="token operator">...</span><span class="token punctuation">,</span>            <span class="token punctuation">&#123;</span>                test<span class="token operator">:</span> <span class="token regex">/\.(html)$/</span><span class="token punctuation">,</span>                use<span class="token operator">:</span><span class="token punctuation">&#123;</span>                    loader<span class="token operator">:</span> <span class="token string">"html-loader"</span><span class="token punctuation">,</span>                <span class="token punctuation">&#125;</span>            <span class="token punctuation">&#125;</span>        <span class="token punctuation">]</span>    <span class="token punctuation">&#125;</span><span class="token punctuation">&#125;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h2><span id="p10-da-bao-zi-ti-zi-yuan">10、打包字体资源</span><a href="#p10-da-bao-zi-ti-zi-yuan" class="header-anchor">#</a></h2><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash">npm install file-loader -D<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><pre class="line-numbers language-js" data-language="js"><code class="language-js"><span class="token comment">// webpack.config.js</span>module<span class="token punctuation">.</span>exports <span class="token operator">=</span> <span class="token punctuation">&#123;</span>    <span class="token comment">//...</span>    module<span class="token operator">:</span><span class="token punctuation">&#123;</span>        rules<span class="token operator">:</span><span class="token punctuation">[</span><span class="token operator">...</span><span class="token punctuation">,</span>        <span class="token punctuation">&#123;</span>                test<span class="token operator">:</span><span class="token regex">/\.(eot|svg|woff|woff2|ttf)$/</span><span class="token punctuation">,</span>                loader<span class="token operator">:</span> <span class="token string">"file-loader"</span><span class="token punctuation">,</span>                options<span class="token operator">:</span><span class="token punctuation">&#123;</span>                    <span class="token comment">// 输出的目录</span>                    outputPath<span class="token operator">:</span> <span class="token string">"fonts"</span><span class="token punctuation">,</span>                    name<span class="token operator">:</span><span class="token string">'[hash:8].[ext]'</span>                <span class="token punctuation">&#125;</span><span class="token punctuation">&#125;</span><span class="token punctuation">]</span>    <span class="token punctuation">&#125;</span><span class="token punctuation">&#125;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h2><span id="p11-zi-dong-bian-yi-da-bao-yun-xing">11、自动编译打包运行</span><a href="#p11-zi-dong-bian-yi-da-bao-yun-xing" class="header-anchor">#</a></h2><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash">npm install webpack-dev-server -D<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><pre class="line-numbers language-js" data-language="js"><code class="language-js"><span class="token comment">// webpack.config.js</span>module<span class="token punctuation">.</span>exports <span class="token operator">=</span> <span class="token punctuation">&#123;</span>  <span class="token comment">// ...</span>  output<span class="token operator">:</span> <span class="token punctuation">&#123;</span>    <span class="token comment">// ...</span>    <span class="token comment">// 添加 devServer 服务后需要调整输出的路径</span>    publicPath<span class="token operator">:</span> <span class="token string">"/"</span><span class="token punctuation">,</span>  <span class="token punctuation">&#125;</span><span class="token punctuation">,</span>  module<span class="token operator">:</span> <span class="token punctuation">&#123;</span>    <span class="token comment">// ...</span>    <span class="token comment">// 删除 publicPath 配置</span>  <span class="token punctuation">&#125;</span><span class="token punctuation">,</span>  <span class="token comment">// 配置服务</span>  devServer<span class="token operator">:</span> <span class="token punctuation">&#123;</span>    <span class="token comment">// 自动打开浏览器</span>    open<span class="token operator">:</span> <span class="token boolean">true</span><span class="token punctuation">,</span>    <span class="token comment">// 启动 gzip 压缩</span>    compress<span class="token operator">:</span> <span class="token boolean">true</span><span class="token punctuation">,</span>    <span class="token comment">// 端口号</span>    port<span class="token operator">:</span> <span class="token number">3000</span><span class="token punctuation">,</span>    <span class="token comment">// 开启热模替换功能</span>    hot<span class="token operator">:</span> <span class="token boolean">true</span><span class="token punctuation">,</span>  <span class="token punctuation">&#125;</span><span class="token punctuation">,</span>  <span class="token comment">// ...</span><span class="token punctuation">&#125;</span><span class="token punctuation">;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"># 启动服务npx webpack-dev-server<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre><p>热模替换</p><p>HMR，Hot Module Replacement，热模替换功能会在应用程序运行过程中替换。添加或删除模块，而无需重新加载整个界面。</p><pre class="line-numbers language-js" data-language="js"><code class="language-js"><span class="token comment">// webpack.config.js</span>module<span class="token punctuation">.</span>exports <span class="token operator">=</span> <span class="token punctuation">&#123;</span>  <span class="token comment">// index.html 不能自动刷新的问题</span>  entry<span class="token operator">:</span> <span class="token punctuation">&#123;</span>    main<span class="token operator">:</span> <span class="token punctuation">[</span><span class="token string">"./src/js/app.js"</span><span class="token punctuation">,</span> <span class="token string">"./src/index.html"</span><span class="token punctuation">]</span><span class="token punctuation">,</span>  <span class="token punctuation">&#125;</span><span class="token punctuation">,</span><span class="token punctuation">&#125;</span><span class="token punctuation">;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h2><span id="p12-devtool">12、devtool</span><a href="#p12-devtool" class="header-anchor">#</a></h2><p>devtools 是 webpack 中的一个配置，可以将压缩/编译文件中的代码映射回源文件中的原始位置，便于调试代码。</p><pre class="line-numbers language-js" data-language="js"><code class="language-js"><span class="token comment">// webpack.config.js</span>module<span class="token punctuation">.</span>exports <span class="token operator">=</span> <span class="token punctuation">&#123;</span>  <span class="token comment">// ...</span>  <span class="token comment">// 设置 devtool 策略（生产环境需改成 none）</span>  devtool<span class="token operator">:</span> <span class="token string">"cheap-module-eval-sourse-map"</span><span class="token punctuation">,</span><span class="token punctuation">&#125;</span><span class="token punctuation">;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h2><span id="p13-zhun-bei-sheng-chan-huan-jing">13、准备生产环境</span><a href="#p13-zhun-bei-sheng-chan-huan-jing" class="header-anchor">#</a></h2><p>webpack.config.js --&gt; webpack.dev.js + webpack.prod.js</p><p>运行非默认的配置文件</p><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash">webpack-dev-server --config .&#x2F;config&#x2F;webpack.dev.jsnpx webpack --config .&#x2F;config&#x2F;webpack.prot.js<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre><p>加到 <code>package.json</code> 快捷命令中 <code>dev</code> / <code>build</code></p><h2><span id="p14-ti-qu-css-cheng-dan-du-wen-jian">14、提取 CSS 成单独文件</span><a href="#p14-ti-qu-css-cheng-dan-du-wen-jian" class="header-anchor">#</a></h2><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash">npm install mini-css-exrtract-plugin -D<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><pre class="line-numbers language-js" data-language="js"><code class="language-js"><span class="token comment">// webpack.prod.js</span><span class="token keyword">const</span> MiniCssExtractPlugin <span class="token operator">=</span> <span class="token function">require</span><span class="token punctuation">(</span><span class="token string">"mini-css-extract-plugin"</span><span class="token punctuation">)</span>module<span class="token punctuation">.</span>exports<span class="token operator">=</span> <span class="token punctuation">&#123;</span>    <span class="token comment">// ...</span>    module<span class="token operator">:</span><span class="token punctuation">&#123;</span>        rules<span class="token operator">:</span><span class="token punctuation">[</span><span class="token operator">...</span><span class="token punctuation">,</span>              <span class="token comment">// 修改</span>              <span class="token punctuation">&#123;</span>               test<span class="token operator">:</span> <span class="token operator">/</span>\<span class="token punctuation">.</span>less$\<span class="token punctuation">,</span>               use<span class="token operator">:</span><span class="token punctuation">[</span>               MiniCssExtractPlugin<span class="token punctuation">.</span>loader<span class="token punctuation">,</span>               <span class="token string">'css-loader'</span><span class="token punctuation">,</span>               <span class="token string">'less-loader'</span>              <span class="token punctuation">]</span><span class="token punctuation">&#125;</span>        <span class="token punctuation">]</span>    <span class="token punctuation">&#125;</span>    plugins<span class="token operator">:</span><span class="token punctuation">[</span>        <span class="token keyword">new</span> <span class="token class-name">MiniCssExtractPlugin</span><span class="token punctuation">(</span><span class="token punctuation">&#123;</span>            filename<span class="token operator">:</span> <span class="token string">"css.[hash:8].css"</span><span class="token punctuation">,</span>        <span class="token punctuation">&#125;</span><span class="token punctuation">)</span>    <span class="token punctuation">]</span><span class="token punctuation">&#125;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h2><span id="p15-tian-jia-css-jian-rong">15、添加 CSS 兼容</span><a href="#p15-tian-jia-css-jian-rong" class="header-anchor">#</a></h2><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash">npm install postcss-loader autoprefixer -D<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><pre class="line-numbers language-js" data-language="js"><code class="language-js"><span class="token comment">// webpack.prod.js</span><span class="token keyword">const</span> MiniCssExtractPlugin <span class="token operator">=</span> <span class="token function">require</span><span class="token punctuation">(</span><span class="token string">"mini-css-extract-plugin"</span><span class="token punctuation">)</span>module<span class="token punctuation">.</span>exports<span class="token operator">=</span> <span class="token punctuation">&#123;</span>    <span class="token comment">// ...</span>    module<span class="token operator">:</span><span class="token punctuation">&#123;</span>        rules<span class="token operator">:</span><span class="token punctuation">[</span><span class="token operator">...</span><span class="token punctuation">,</span>              <span class="token comment">// 修改</span>              <span class="token punctuation">&#123;</span>               test<span class="token operator">:</span> <span class="token operator">/</span>\<span class="token punctuation">.</span>less$\<span class="token punctuation">,</span>               use<span class="token operator">:</span><span class="token punctuation">[</span>               MiniCssExtractPlugin<span class="token punctuation">.</span>loader<span class="token punctuation">,</span>               <span class="token string">'css-loader'</span><span class="token punctuation">,</span>               <span class="token punctuation">&#123;</span>               loader<span class="token operator">:</span> <span class="token string">"postcss-loader"</span><span class="token punctuation">,</span>               options<span class="token operator">:</span><span class="token punctuation">&#123;</span>               plugins<span class="token operator">:</span><span class="token punctuation">[</span><span class="token function">require</span><span class="token punctuation">(</span><span class="token string">"autoprefixer"</span><span class="token punctuation">)</span><span class="token punctuation">]</span>               <span class="token punctuation">&#125;</span>               <span class="token punctuation">&#125;</span><span class="token punctuation">,</span>               <span class="token string">'less-loader'</span>              <span class="token punctuation">]</span><span class="token punctuation">&#125;</span>        <span class="token punctuation">]</span>    <span class="token punctuation">&#125;</span><span class="token punctuation">&#125;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><pre class="line-numbers language-js" data-language="js"><code class="language-js"><span class="token comment">// .browserslistrc (根目录)</span><span class="token comment">// 目标浏览器配置表</span>chrome <span class="token number">50</span>last <span class="token number">1</span> versionsie <span class="token number">10</span>iOS <span class="token number">7</span><span class="token comment">// >1%                 全球超过1%人使用的浏览器</span><span class="token comment">// >1% in US</span><span class="token comment">// last 1 version      所有浏览器兼容到最后1个版本根据CanIUse.com追踪的版本</span><span class="token comment">// Firefox > 20        指定浏览器的版本范围</span><span class="token comment">// since 2013          2013年之后发布的版本</span><span class="token comment">// cover 99%           99%的浏览器都是目标</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h2><span id="p16-ya-suo-css">16、压缩 CSS</span><a href="#p16-ya-suo-css" class="header-anchor">#</a></h2><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash">npm install optimize-css-assets-webpack-plugin -D<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><pre class="line-numbers language-js" data-language="js"><code class="language-js"><span class="token comment">// webpack.prod.js</span><span class="token keyword">const</span> OptimizeCssAssetsPlugin <span class="token operator">=</span> <span class="token function">require</span><span class="token punctuation">(</span><span class="token string">'optimize-css-assets-webpack-plugin'</span><span class="token punctuation">)</span><span class="token punctuation">;</span>module<span class="token punctuation">.</span>exports <span class="token operator">=</span> <span class="token punctuation">&#123;</span>    <span class="token comment">// ...</span>    plugins<span class="token operator">:</span><span class="token punctuation">[</span><span class="token operator">...</span><span class="token punctuation">,</span>        <span class="token keyword">new</span> <span class="token class-name">OptimizeCssAssetsPlugin</span><span class="token punctuation">(</span><span class="token punctuation">&#123;</span>             cssProcessorPluginOptions<span class="token operator">:</span><span class="token punctuation">&#123;</span>             <span class="token comment">// 移除所有注释</span>             preset<span class="token operator">:</span> <span class="token punctuation">[</span><span class="token string">'default'</span><span class="token punctuation">,</span> <span class="token punctuation">&#123;</span>disardComments<span class="token operator">:</span> <span class="token punctuation">&#123;</span>removeAll<span class="token operator">:</span><span class="token boolean">true</span><span class="token punctuation">&#125;</span><span class="token punctuation">&#125;</span><span class="token punctuation">]</span><span class="token punctuation">,</span>             <span class="token punctuation">&#125;</span><span class="token punctuation">,</span>             <span class="token comment">// 解决 无 sourse map 问题</span>             cssProcessorOptions<span class="token operator">:</span><span class="token punctuation">&#123;</span>                 map<span class="token operator">:</span> <span class="token boolean">true</span>             <span class="token punctuation">&#125;</span>        <span class="token punctuation">&#125;</span><span class="token punctuation">)</span>    <span class="token punctuation">]</span><span class="token punctuation">&#125;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>]]></content>
      
      
      <categories>
          
          <category> 2402：Webpack </category>
          
      </categories>
      
      
        <tags>
            
            <tag> webpack </tag>
            
            <tag> 自动化构建工具 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>uuid.js 使用心得</title>
      <link href="/220803/"/>
      <url>/220803/</url>
      
        <content type="html"><![CDATA[<p>生成随机用户 id 字符串的工具模块。</p><pre class="line-numbers language-js" data-language="js"><code class="language-js"><span class="token comment">// 安装</span>npm i uuidjs<span class="token comment">// 引入</span><span class="token keyword">import</span> uuid <span class="token keyword">from</span> <span class="token string">'uuidjs'</span><span class="token comment">// 生成随机的用户id，如</span><span class="token keyword">const</span> uuid <span class="token operator">=</span> <span class="token constant">UUID</span><span class="token punctuation">.</span><span class="token function">generate</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token comment">// uuid: 9b88f18f-7172-41b0-8868-260045692a42</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>]]></content>
      
      
      <categories>
          
          <category> 2208：JS库 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> JavaScript </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>JavaScript 函数库</title>
      <link href="/220801/"/>
      <url>/220801/</url>
      
        <content type="html"><![CDATA[<p>lodash.js<br>day.js</p>]]></content>
      
      
      <categories>
          
          <category> 2208：JS库 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> JavaScript </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Photoshop</title>
      <link href="/181501/"/>
      <url>/181501/</url>
      
        <content type="html"><![CDATA[<h1><span id="adobe-photoshop">Adobe Photoshop</span><a href="#adobe-photoshop" class="header-anchor">#</a></h1><ul><li>关于蒙版：黑色画笔变透明露出背景，白色画笔恢复，使用灰色做为过渡，也可以利用渐变工具做无缝拼贴。优点是可以不破坏原图。</li></ul>]]></content>
      
      
      <categories>
          
          <category> 1815：Photoshop </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Photoshop </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>TypeScript</title>
      <link href="/220601/"/>
      <url>/220601/</url>
      
        <content type="html"><![CDATA[<h2><span id="pjie-kou-interface">接口 <code>interface</code></span><a href="#pjie-kou-interface" class="header-anchor">#</a></h2><p>约束对象</p><pre class="line-numbers language-typescript" data-language="typescript"><code class="language-typescript">interface P &#123;  name: string;  age: number;  like: any[];  sex?: string; &#x2F;&#x2F; 可以有也可以没有&#125;const person: P &#x3D; &#123;  name: &quot;Tom&quot;,  age: 10,  like: [&quot;吃饭&quot;, 123],&#125;;<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>]]></content>
      
      
      <categories>
          
          <category> 2206：TypeScript </category>
          
      </categories>
      
      
        <tags>
            
            <tag> JavaScript </tag>
            
            <tag> TypeScript </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Figma</title>
      <link href="/180602/"/>
      <url>/180602/</url>
      
        <content type="html"><![CDATA[<h1><span id="figma">Figma</span><a href="#figma" class="header-anchor">#</a></h1><p>快捷键</p><ul><li>按住 <code>CTRL + 鼠标滚轮</code> 进行缩放</li><li>按住 <code>空格</code> ，可以用鼠标进行拖动</li></ul>]]></content>
      
      
      <categories>
          
          <category> 1806：网络应用 </category>
          
      </categories>
      
      
    </entry>
    
    
    
    <entry>
      <title>网址导航</title>
      <link href="/180601/"/>
      <url>/180601/</url>
      
        <content type="html"><![CDATA[<h1><span id="qian-duan">前端</span><a href="#qian-duan" class="header-anchor">#</a></h1><p><strong><a href="https://www.iconfont.cn/">iconfont</a></strong></p>]]></content>
      
      
      <categories>
          
          <category> 1806：网络应用 </category>
          
      </categories>
      
      
    </entry>
    
    
    
    <entry>
      <title>Mac 命令行</title>
      <link href="/180202/"/>
      <url>/180202/</url>
      
        <content type="html"><![CDATA[<h1><span id="mac-ming-ling-xing">Mac 命令行</span><a href="#mac-ming-ling-xing" class="header-anchor">#</a></h1><p><code>sudo</code>命令 允许系统管理员让普通用户执行一些或者全部 <code>root</code> 命令的工具。（<code>mac</code> <code>linux</code>）</p>]]></content>
      
      
      <categories>
          
          <category> 1802：Mac </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Mac </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Vim</title>
      <link href="/180301/"/>
      <url>/180301/</url>
      
        <content type="html"><![CDATA[<h1><span id="vim">Vim</span><a href="#vim" class="header-anchor">#</a></h1><p>命令模式（默认）</p><ul><li><code>i</code> 切换到输入模式</li><li><code>:wq</code> 退出</li></ul><p>输入模式</p><ul><li><code>ESC</code> 切换到命令模式</li></ul>]]></content>
      
      
      <categories>
          
          <category> 1803：Linux </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Linux </tag>
            
            <tag> Vim </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Hexo</title>
      <link href="/181801/"/>
      <url>/181801/</url>
      
        <content type="html"><![CDATA[<h1><span id="hexo">Hexo</span><a href="#hexo" class="header-anchor">#</a></h1><p><a href="https://hexo.io/">https://hexo.io/</a></p><h1><span id="yi-kai-shi">一、开始</span><a href="#yi-kai-shi" class="header-anchor">#</a></h1><h2><span id="p1-an-zhuang">1、安装</span><a href="#p1-an-zhuang" class="header-anchor">#</a></h2><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash">npm install hexo-cli -g<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><h2><span id="p2-xin-jian-bo-ke">2、新建博客</span><a href="#p2-xin-jian-bo-ke" class="header-anchor">#</a></h2><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash">hexo init 博客名称cd 博客名称npm i<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span></span></code></pre><h2><span id="p3-chang-yong-ming-ling">3、常用命令</span><a href="#p3-chang-yong-ming-ling" class="header-anchor">#</a></h2><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"># 启动博客（本地服务器）打开 localhost:4000 查看hexo s# 清除缓存hexo clean# 构建hexo g# 把代码推送到远程仓库hexo d<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h2><span id="p4-bo-ke-pei-zhi">4、博客配置</span><a href="#p4-bo-ke-pei-zhi" class="header-anchor">#</a></h2><p>博客根目录下的 <code>_config</code> 为 <strong>博客配置文件</strong><br>主题目录下的 <code>_config</code> 为 <strong>主题配置文件</strong></p><h2><span id="p5-zhu-ti-pei-zhi">5、主题配置</span><a href="#p5-zhu-ti-pei-zhi" class="header-anchor">#</a></h2><p><a href="https://hexo.io/themes/">主题库</a></p><p>这边推荐 NEXT 主题。</p><h3><span id="pan-zhuang-next-zhu-ti">安装NEXT主题</span><a href="#pan-zhuang-next-zhu-ti" class="header-anchor">#</a></h3><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash">git clone https:&#x2F;&#x2F;github.com&#x2F;theme-next&#x2F;hexo-theme-next themes&#x2F;nextcd themes&#x2F;nextnpm i<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span></span></code></pre><p>修改 博客根目录下 <code>_config</code>  文件 里面的主题为 <code>next</code></p><h2><span id="p6-github-page-gitee-page">6、Github Page / Gitee Page</span><a href="#p6-github-page-gitee-page" class="header-anchor">#</a></h2><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash">npm install hexo-deployer-git --save<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><pre class="line-numbers language-yaml" data-language="yaml"><code class="language-yaml"># _config.yml# git 配置deploy:  type: git  repo: https&#x2F;&#x2F; .... .git  branch: master  <span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>推上去</p><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash">hexo d<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><h1><span id="er-xie-zuo">二、写作</span><a href="#er-xie-zuo" class="header-anchor">#</a></h1><h2><span id="p1-yaml-front-matter">1、YAML Front Matter</span><a href="#p1-yaml-front-matter" class="header-anchor">#</a></h2><pre class="line-numbers language-yaml" data-language="yaml"><code class="language-yaml">---title: 这是标题## 这是创建时间、更新时间date: 2020-10-01updated: 2020-12-21## 这是标签tags: 标签tags: [标签一, 标签二]---<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h1><span id="san-cha-jian">三、插件</span><a href="#san-cha-jian" class="header-anchor">#</a></h1><p><a href="https://hexo.io/plugins/">插件库</a></p><h2><span id="pmu-lu-sheng-cheng">目录生成</span><a href="#pmu-lu-sheng-cheng" class="header-anchor">#</a></h2><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash">npm install hexo-toc --save<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><pre class="line-numbers language-yml" data-language="yml"><code class="language-yml"># _config.ymltoc:  # 目录深度，最多生成三级目录  maxDepth: 3<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span></span></code></pre><h2><span id="psou-suo">搜索</span><a href="#psou-suo" class="header-anchor">#</a></h2><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash">npm install hexo-generator-search --save<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><h2><span id="pdai-ma-gao-liang">代码高亮</span><a href="#pdai-ma-gao-liang" class="header-anchor">#</a></h2><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash">npm i -S hexo-prism-plugin<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>然后，修改 Hexo 根目录下 _config.yml 文件中 highlight.enable 的值为 false，并新增 prism 插件相关的配置，主要配置如下：</p><pre class="line-numbers language-YAML" data-language="YAML"><code class="language-YAML">prism_plugin:  mode: &#39;preprocess&#39;    # realtime&#x2F;preprocess  theme: &#39;tomorrow&#39;     #主题选项  line_number: false    # default false  custom_css:<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>可用的主题有</p><blockquote><p>coy,dark,funky,okaidia,solarizedlight,tomorrow,twilight,a11y-dark,atom-dark,base16-ateliersulphurpool.light,cb,darcula,dracula,duotone-dark,duotone-earth,duotone-forest,duotone-light,duotone-sea,duotone-space,ghcolors,hopscotch,material-dark,material-light,material-oceanic,pojoaque,shades-of-purple,synthwave84,vs,xonokai,default,</p></blockquote><h2><span id="pping-lun">评论</span><a href="#pping-lun" class="header-anchor">#</a></h2><h2><span id="pyuan-cheng-bian-ji">远程编辑</span><a href="#pyuan-cheng-bian-ji" class="header-anchor">#</a></h2>]]></content>
      
      
      <categories>
          
          <category> 1818：Hexo </category>
          
      </categories>
      
      
    </entry>
    
    
    
    <entry>
      <title>CSS 居中布局</title>
      <link href="/210305/"/>
      <url>/210305/</url>
      
        <content type="html"><![CDATA[<h1><span id="ju-zhong-bu-ju">居中布局</span><a href="#ju-zhong-bu-ju" class="header-anchor">#</a></h1><h2><span id="pshui-ping-ju-zhong">水平居中</span><a href="#pshui-ping-ju-zhong" class="header-anchor">#</a></h2><ul><li>行元素 <code>text-align: center</code></li><li>块元素 <code>margin: 0 auto</code></li><li><code>absolute + transform</code></li><li><code>flex + justify-content: center</code></li></ul><h2><span id="pchui-zhi-ju-zhong">垂直居中</span><a href="#pchui-zhi-ju-zhong" class="header-anchor">#</a></h2><ul><li><code>line-height: height</code></li><li><code>absolute + transform</code></li><li><code>flex + align-items: center</code></li><li><code>table</code></li></ul><h2><span id="pshui-ping-chui-zhi-ju-zhong">水平垂直居中</span><a href="#pshui-ping-chui-zhi-ju-zhong" class="header-anchor">#</a></h2><ul><li>line-height</li><li>absolute + margin auto</li><li>absolute + 负 margin</li><li>absolute + calc</li><li>absolute + transform: translate</li><li>flex</li></ul><pre class="line-numbers language-css" data-language="css"><code class="language-css"><span class="token selector">.box</span> <span class="token punctuation">&#123;</span>  <span class="token property">display</span><span class="token punctuation">:</span> flex<span class="token punctuation">;</span>  <span class="token property">justify-content</span><span class="token punctuation">:</span> center<span class="token punctuation">;</span>  <span class="token property">align-items</span><span class="token punctuation">:</span> center<span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span></span></code></pre><ul><li>writing-mode</li><li>table</li><li>css-table</li><li>grid</li></ul>]]></content>
      
      
      <categories>
          
          <category> 2103：CSS布局 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> CSS </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>函数柯里化</title>
      <link href="/220206/"/>
      <url>/220206/</url>
      
        <content type="html"><![CDATA[<h1><span id="han-shu-ke-li-hua">函数柯里化</span><a href="#han-shu-ke-li-hua" class="header-anchor">#</a></h1><p><strong>柯里化</strong>（Currying），是一种函数的转换，它是指将一个函数从可调用的 <code>f(a, b, c)</code> 转换为可调用的 <code>f(a)(b)(c)</code>。柯里化不会调用函数。它只是对函数进行转换。</p>]]></content>
      
      
      <categories>
          
          <category> 2202：ES高级 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> JavaScript </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>CSS 弹性布局</title>
      <link href="/210304/"/>
      <url>/210304/</url>
      
        <content type="html"><![CDATA[<h1><span id="dan-xing-bu-ju">弹性布局</span><a href="#dan-xing-bu-ju" class="header-anchor">#</a></h1><p><code>flex</code> ，即弹性布局。</p><h2><span id="p1-kai-qi-dan-xing-bu-ju">1、开启弹性布局</span><a href="#p1-kai-qi-dan-xing-bu-ju" class="header-anchor">#</a></h2><pre class="line-numbers language-css" data-language="css"><code class="language-css"><span class="token property">display</span><span class="token punctuation">:</span> flex<span class="token punctuation">;</span><span class="token property">display</span><span class="token punctuation">:</span> -webkit-flex<span class="token punctuation">;</span> <span class="token comment">/* Safari */</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre><p>开启 <code>flex</code> 的元素自身不受影响，只会影响子元素，子元素的<code>float</code>、<code>clear</code>和<code>vertical-align</code>属性将失效。对子元素的子元素不会影响。<br>a<br>开启<code>flex</code>的盒子称为 <strong>容器</strong>（container），子元素称为 <strong>项目</strong>（item）。横向默认是 <strong>主轴</strong>（main axis）。纵向默认是 <strong>侧轴</strong>（交叉轴，cross axis）。默认情况下，项目沿着主轴从左到右依次排列。项目的高度撑满容器（侧轴撑满）。</p><p>当项目的总宽度超出，并不会换行，而是压缩项目的宽度。</p><p>涉及到 12 个 CSS 属性，父容器，子容器各 6 个。</p><h2><span id="p2-chang-yong-shu-xing">2、常用属性</span><a href="#p2-chang-yong-shu-xing" class="header-anchor">#</a></h2><h3><span id="pflex-direction">flex-direction</span><a href="#pflex-direction" class="header-anchor">#</a></h3><p>默认情况下，<strong>主轴</strong>的方向是从左向右的，<strong>交叉轴</strong>垂直于主轴。</p><p>交叉轴是由主轴决定的，主轴又是由 <code>flex-direction</code> 决定的，这个属性设置在父容器上，才可以生效。</p><pre class="line-numbers language-css" data-language="css"><code class="language-css"><span class="token property">flex-direction</span><span class="token punctuation">:</span> row | row-reverse | column | column-reverse<span class="token punctuation">;</span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>参考</p><ul><li><a href="https://www.juejin.im/post/6866914148387651592">「一劳永逸」48 张小图带你领略 flex 布局之美</a></li><li><a href="http://flexboxfroggy.com/#zh-cn">青蛙 FLEX</a></li></ul>]]></content>
      
      
      <categories>
          
          <category> 2103：CSS布局 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> CSS </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>摘抄</title>
      <link href="/730101/"/>
      <url>/730101/</url>
      
        <content type="html"><![CDATA[<a id="more"></a>]]></content>
      
      
      <categories>
          
          <category> 7301：摘抄 </category>
          
      </categories>
      
      
    </entry>
    
    
    
    <entry>
      <title>恋爱</title>
      <link href="/630202/"/>
      <url>/630202/</url>
      
        <content type="html"><![CDATA[<h1><span id="lian-ai">恋爱</span><a href="#lian-ai" class="header-anchor">#</a></h1><ol><li>可以说，男人追不到心仪的女人，90% 的原因是缺乏勇气，勇气是男性魅力得到展现的最关键要素，是男性荷尔蒙得以释放的开关。</li><li>如何和程序员谈一场没有bug的恋爱？恋爱关系上线前，做好压力测试和边界测试。原则上，测试对双方是等同的，为了尽可能减少bug，应该彼此都达到百分百覆盖率。但在实践上，更常用的方法是，女方主要对男方做压力测试，检测承压能力、可靠性、稳定性，对边界测试则尽可能放宽；男方主要对女方做边界测试，搞清楚各种场景下女方的应对和反应，明确情绪阈值的上下边界，尽量少做压力测试。</li></ol>]]></content>
      
      
      <categories>
          
          <category> 6302：亲密关系 </category>
          
      </categories>
      
      
    </entry>
    
    
    
    <entry>
      <title>CSS 定位</title>
      <link href="/210303/"/>
      <url>/210303/</url>
      
        <content type="html"><![CDATA[<h1><span id="ding-wei">定位</span><a href="#ding-wei" class="header-anchor">#</a></h1><p><strong>定位</strong>（<strong>position</strong>） 允许你定义元素框相对于其正常位置应该出现的位置，或者相对于父元素，以及浏览器窗口本身的位置。</p><table><thead><tr><th>属性</th><th>描述</th></tr></thead><tbody><tr><td>static</td><td>默认，没有定位</td></tr><tr><td>relative</td><td>相对定位</td></tr><tr><td>absolute</td><td>绝对定位</td></tr><tr><td>fixed</td><td>固定定位</td></tr></tbody></table><p>布局一般用在大布局的小范围中。</p><h2><span id="p1-xiang-dui-ding-wei-relative">1、相对定位 - relative</span><a href="#p1-xiang-dui-ding-wei-relative" class="header-anchor">#</a></h2><p><strong>相对定位</strong>（relative），让元素相对定位，元素先放置在未添加定位时候的区域，然后在不改变页面布局的情况下（其他元素没有受到任何影响；自身原来的位置也保留；和浮动可以一起使用）进行移动。不会脱离文档流。</p><h2><span id="p2-jue-dui-ding-wei-absolute">2、绝对定位 - absolute</span><a href="#p2-jue-dui-ding-wei-absolute" class="header-anchor">#</a></h2><p><strong>绝对定位</strong>（absolute），相对于它的 <strong>包含块</strong> 定位。绝对定位是相对于它的包含块定位的（和自身原有位置无关）。如果没有任何一个父级元素是非 static 属性，则会相对于文档（html）定位。如果它的父级元素和爷爷级元素都是非 position:static 属性，则它会选择距离最近的父元素。脱离正常文档流，原有位置不保留。定位的原点以包含块的 padding-box 的左上角为原点。right 和 bottom 是距离包含块右下角的距离。</p><h3><span id="pbao-han-kuai">包含块</span><a href="#pbao-han-kuai" class="header-anchor">#</a></h3><p><strong>包含块</strong> 是视觉格式化模型的一个概念，简单来说就是一个定位参考框。</p><p>如何确定一个元素的包含块，完全取决于它自身的 position 属性：</p><ul><li>如果一个元素自身的 position 属性是 static 或者是 relative ，它的包含块就是离他最近的祖先元素或者是格式化上下文。</li><li><strong>如果一个元素自身的 position 属性是 absolute ，它的包含块就是离他最近的拥有定位属性（值不为 static ）的元素。</strong></li><li>如果一个元素自身的 position 属性是 fixed，它的包含块就是 viewport。</li></ul><blockquote><p>补充：<br>如果一个元素的 position 属性是 absolute 或者是 fixed 在下边几种情况下，包含块会发生改变。</p><ul><li>当祖先元素拥有 transform 或 perspective 属性并且值不为 none 的时候，它也是被当做包含块。</li><li>当祖先元素 拥有 filter 属性的时候（值不为 none） 它也可以被当做包含块</li></ul></blockquote><p>注：如果由内向外找不到包含块条件的元素，那么 html（根元素）被称作为初始包含块。</p><h3><span id="pzi-jue-fu-xiang">子绝父相</span><a href="#pzi-jue-fu-xiang" class="header-anchor">#</a></h3><p>父元素相对定位并不设置位移，子元素绝对定位，设置位移。</p><h2><span id="p3-gu-ding-ding-wei-fixed">3、固定定位 - fixed</span><a href="#p3-gu-ding-ding-wei-fixed" class="header-anchor">#</a></h2><p>固定定位（fixed），相对于浏览器窗口定位。</p><h2><span id="p4-nian-xing-ding-wei-sticky">4、粘性定位 - sticky</span><a href="#p4-nian-xing-ding-wei-sticky" class="header-anchor">#</a></h2><p>sticky 的意思是“粘性的”，<code>position:sticky</code> 表现也符合这个粘性的表现。基本上，可以看出是<code>position:relative</code>和<code>position:fixed</code>的结合体——当元素在屏幕内，表现为<code>relative</code>，就要滚出显示器屏幕的时候，表现为<code>fixed</code>。</p><pre class="line-numbers language-css" data-language="css"><code class="language-css"><span class="token selector">nav</span> <span class="token punctuation">&#123;</span>  <span class="token property">position</span><span class="token punctuation">:</span> -webkit-sticky<span class="token punctuation">;</span>  <span class="token property">position</span><span class="token punctuation">:</span> sticky<span class="token punctuation">;</span>  <span class="token property">top</span><span class="token punctuation">:</span> 0<span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span></span></code></pre><p><a href="https://www.zhangxinxu.com/wordpress/2018/12/css-position-sticky/">杀了个回马枪，还是说说 position:sticky 吧</a></p>]]></content>
      
      
      <categories>
          
          <category> 2103：CSS布局 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> CSS </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>浮动</title>
      <link href="/210302/"/>
      <url>/210302/</url>
      
        <content type="html"><![CDATA[<h1><span id="fu-dong">浮动</span><a href="#fu-dong" class="header-anchor">#</a></h1><p><strong>浮动</strong>（<strong>float</strong>）可以让多个块元素横向排列，共行。</p><table><thead><tr><th>属性</th><th>说明</th></tr></thead><tbody><tr><td>none</td><td>默认，不浮动</td></tr><tr><td>left</td><td>左浮动</td></tr><tr><td>right</td><td>右浮动</td></tr></tbody></table><h2><span id="p1-gai-nian">1、概念</span><a href="#p1-gai-nian" class="header-anchor">#</a></h2><p><strong>正常页面流/正常文档流</strong> 是行元素从左至右，块元素从上到下布局。<strong>浮动</strong> 是破坏流（脱离文档流）的一种方式。在目前开发中，很多的元素都是一个个 float 堆叠起来，但是这种布局很容易崩溃。只要宽度和高度发生一点变化，页面就会发生错乱。</p><h2><span id="p2-fu-dong-de-shi-yong">2、浮动的使用</span><a href="#p2-fu-dong-de-shi-yong" class="header-anchor">#</a></h2><p><strong>左浮动</strong> 就是让容器沿着容器左侧排序。</p><p><strong>右浮动</strong> 让容器沿着容器右侧排序。</p><h2><span id="p3-gao-du-ta-xian">3、高度塌陷</span><a href="#p3-gao-du-ta-xian" class="header-anchor">#</a></h2><p>浮动元素以后，脱离父级内容区域，父级没有内容撑开自身的高度，而且父级的兄弟元素是按照父级的位置进行布局的，所以页面会乱。</p><h2><span id="p4-qing-chu-fu-dong-chang-yong">4、清除浮动 <code>常用</code></span><a href="#p4-qing-chu-fu-dong-chang-yong" class="header-anchor">#</a></h2><p>清除浮动不是不让元素浮动，是清除浮动对父级高度塌陷的影响。</p><p>清除浮动的方法</p><ul><li>给浮动元素的父级设置高度。</li><li>给浮动元素的父级设置浮动，以浮制浮。</li><li>overflow 设置不为 visible 的属性。</li><li>在最后一个浮动元素的后边添加一个空的块级元素，添加一个块级元素，添加属性和值为 <code>clear: both</code>。</li><li>after 伪元素清浮动，给所有浮动元素父级一个 clearFix 的类名。<code>推荐</code></li></ul><pre class="line-numbers language-css" data-language="css"><code class="language-css"><span class="token selector">.clearFix:after</span> <span class="token punctuation">&#123;</span>  <span class="token property">content</span><span class="token punctuation">:</span> <span class="token string">"/200B"</span><span class="token punctuation">;</span>  <span class="token property">display</span><span class="token punctuation">:</span> block<span class="token punctuation">;</span>  <span class="token property">height</span><span class="token punctuation">:</span> 0<span class="token punctuation">;</span>  <span class="token property">clear</span><span class="token punctuation">:</span> both<span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>]]></content>
      
      
      <categories>
          
          <category> 2103：CSS布局 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> CSS </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>CSS 布局</title>
      <link href="/210301/"/>
      <url>/210301/</url>
      
        <content type="html"><![CDATA[<h1><span id="css-bu-ju">CSS 布局</span><a href="#css-bu-ju" class="header-anchor">#</a></h1>]]></content>
      
      
      <categories>
          
          <category> 2103：CSS布局 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> CSS </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>回调函数</title>
      <link href="/220205/"/>
      <url>/220205/</url>
      
        <content type="html"><![CDATA[<h1><span id="hui-diao-han-shu">回调函数</span><a href="#hui-diao-han-shu" class="header-anchor">#</a></h1><p>回调函数（Callback）分为同步回调函数，异步回调函数。</p><p>什么函数才是回调函数?</p><ul><li>你定义的</li><li>你没有直接调用</li><li>但最终它执行了（在特定条件或时刻）</li></ul><p>常见的回调函数:</p><ul><li>DOM 事件函数</li><li>定时器函数</li><li>AJAX 回调函数</li><li>生命周期回调函数</li></ul><p>回调函数的特性导致其层层嵌套，形成<strong>回调地狱</strong>。</p><p>涉及面试题：什么是回调函数？回调函数有什么缺点？如何解决回调地狱问题？</p><p><strong>回调函数</strong>（Callback）分为同步回调（数组遍历）和异步回调。</p><p>使用回调函数容易导致回调地狱问题。回调地狱的根本问题就是：</p><ol><li>嵌套函数存在耦合性，一旦有所改动，就会牵一发而动全身</li><li>嵌套函数一多，就很难处理错误。</li></ol><p>当然，回调函数还存在着别的几个缺点，比如不能使用 <code>try catch</code> 捕获错误，不能直接 <code>return</code>。</p><pre class="line-numbers language-js" data-language="js"><code class="language-js"><span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">var</span> i <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span> i <span class="token operator">&lt;</span> <span class="token number">3</span><span class="token punctuation">;</span> i<span class="token operator">++</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>  <span class="token function">setTimeout</span><span class="token punctuation">(</span><span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>    console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>i<span class="token punctuation">)</span><span class="token punctuation">;</span>  <span class="token punctuation">&#125;</span><span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span class="token comment">// 输出 3 3 3</span><span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">var</span> i <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span> i <span class="token operator">&lt;</span> <span class="token number">3</span><span class="token punctuation">;</span> i<span class="token operator">++</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>  <span class="token punctuation">(</span><span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token parameter">i</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>    <span class="token function">setTimeout</span><span class="token punctuation">(</span><span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>      console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>i<span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">&#125;</span><span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">)</span><span class="token punctuation">;</span>  <span class="token punctuation">&#125;</span><span class="token punctuation">)</span><span class="token punctuation">(</span>i<span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span class="token comment">// 输出 0 1 2</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p><code>面试题</code> 简述同步和异步的区别，如何避免回调地狱？</p><p>同步：方法调用一旦开始，调用者必须等到方法调用返回后，才能继续后续的行为</p><p>异步：方法调用一旦开始，方法调用就会立刻返回，调用者就可以继续后续的操作，而异步方法通常会在另外一个线程中，整个过程畅通无阻。</p><p>避免回调地狱：</p><ul><li>Promise</li><li>async / await</li><li>generator</li><li>事件发布/监听模式</li></ul>]]></content>
      
      
      <categories>
          
          <category> 2202：ES高级 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> JavaScript </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>ajax</title>
      <link href="/230501/"/>
      <url>/230501/</url>
      
        <content type="html"><![CDATA[<h1><span id="ajax">Ajax</span><a href="#ajax" class="header-anchor">#</a></h1><p><strong>AJAX</strong> 即 Asynchronous Javascript And XML，异步 JavaScript 和 XML。是指一种无需重新加载整个网页的情况下，能够更新部分网页的技术。通过 Ajax 可以在浏览器中向服务器发起异步请求。</p><p>XML 称为可扩展标记语言，被设计用来传输和存储数据，和 HTML 类似，不同的是 HTML 日常使用大部分都是预定义标签，XML 全部都是自定义标签，用来表示一些数据。</p><h2><span id="p1-gong-zuo-yuan-li">1、工作原理</span><a href="#p1-gong-zuo-yuan-li" class="header-anchor">#</a></h2><p>相当于在用户和服务器之间加了一个中间层（Ajax 引擎），使用户操作与服务器响应异步化。</p><h2><span id="p2-te-dian">2、特点</span><a href="#p2-te-dian" class="header-anchor">#</a></h2><p>优点</p><ul><li>无需刷新页面来和服务器通信。</li><li>允许你根据用户事件来更新部分页面内容。</li></ul><p>缺点</p><ul><li>没有浏览历史，无法回退。</li><li>存在跨域问题。</li><li>对 SEO 不友好。</li></ul><h2><span id="p3-xhr-xmlhttprequest">3、XHR - XMLHttpRequest</span><a href="#p3-xhr-xmlhttprequest" class="header-anchor">#</a></h2><p>Ajax 的所有操作都是通过 <strong><code>XMLHttpRequest</code></strong> 对象进行的。</p><h2><span id="p4-shi-yong-bu-zou-kao">4、使用步骤 <code>考</code></span><a href="#p4-shi-yong-bu-zou-kao" class="header-anchor">#</a></h2><h3><span id="p-1-chuang-jian-yi-bu-diao-yong-dui-xiang">（1）创建异步调用对象</span><a href="#p-1-chuang-jian-yi-bu-diao-yong-dui-xiang" class="header-anchor">#</a></h3><p>创建 <code>XMLHttpRequest</code> 核心对象。</p><pre class="line-numbers language-js" data-language="js"><code class="language-js"><span class="token keyword">const</span> xhr <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">XMLHttpRequest</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><h3><span id="p-2-chuang-jian-http-qing-qiu">（2）创建 HTTP 请求</span><a href="#p-2-chuang-jian-http-qing-qiu" class="header-anchor">#</a></h3><p>通过 <code>open(method, URL)</code> 打开接口。</p><ul><li><code>method</code> 请求方法，<code>POST</code> 或者 <code>GET</code>。</li><li><code>URL</code> 接口地址。</li></ul><p><code>POST</code> 方式要设置请求头</p><ul><li><code>application/json</code></li><li><code>application/x-www-form-urlencoded</code></li><li><code>formdata</code></li></ul><p><code>xhr.setRequestHeader('Content-Type', 'application/x-www-form-urlencoded')</code></p><pre class="line-numbers language-js" data-language="js"><code class="language-js">xhr<span class="token punctuation">.</span><span class="token function">open</span><span class="token punctuation">(</span><span class="token string">"POST"</span><span class="token punctuation">,</span> <span class="token string">"http://127.0.0.1/weibo"</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><h3><span id="p-3-fa-song-qing-qiu">（3）发送请求</span><a href="#p-3-fa-song-qing-qiu" class="header-anchor">#</a></h3><p>发送请求 <code>send(body)</code></p><pre class="line-numbers language-js" data-language="js"><code class="language-js">xhr<span class="token punctuation">.</span><span class="token function">send</span><span class="token punctuation">(</span><span class="token constant">JSON</span><span class="token punctuation">.</span><span class="token function">stringifly</span><span class="token punctuation">(</span>content<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// 只能传字符串</span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p><code>GET</code> 请求不需要参数， <code>POST</code> 请求需要。</p><h3><span id="p-4-tong-guo-zhi-ding-hui-diao-han-shu-jie-shou-shu-ju">（4）通过指定回调函数接收数据</span><a href="#p-4-tong-guo-zhi-ding-hui-diao-han-shu-jie-shou-shu-ju" class="header-anchor">#</a></h3><p><code>xhr.responseXML</code> 接收 XML 格式的响应数据。</p><p><code>xhr.responseText</code> 接收文本格式的响应数据。</p><p>a. 通过 <code>onreadystatechange</code> 事件接收数据，xhr 对象有 <code>readyState</code> 表示当前的请求状态，状态改变就会触发这个事件。</p><pre class="line-numbers language-js" data-language="js"><code class="language-js">xhr<span class="token punctuation">.</span><span class="token function-variable function">onreadystatechange</span> <span class="token operator">=</span> <span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>  <span class="token keyword">if</span> <span class="token punctuation">(</span>xhr<span class="token punctuation">.</span>readyState <span class="token operator">==</span> <span class="token number">4</span> <span class="token operator">&amp;&amp;</span> xhr<span class="token punctuation">.</span>status <span class="token operator">>=</span> <span class="token number">200</span> <span class="token operator">&amp;&amp;</span> xhr<span class="token punctuation">.</span>status <span class="token operator">&lt;</span> <span class="token number">300</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>    <span class="token keyword">let</span> text <span class="token operator">=</span> xhr<span class="token punctuation">.</span>responseText<span class="token punctuation">;</span>    console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>text<span class="token punctuation">)</span><span class="token punctuation">;</span>  <span class="token punctuation">&#125;</span><span class="token punctuation">&#125;</span><span class="token punctuation">;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>b. 通过 <code>onload</code> 事件</p><pre class="line-numbers language-js" data-language="js"><code class="language-js">xhr<span class="token punctuation">.</span><span class="token function-variable function">onload</span> <span class="token operator">=</span> <span class="token keyword">function</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">&#123;</span><span class="token operator">...</span>xhr<span class="token punctuation">.</span>responseText<span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span></span></code></pre><h2><span id="p5-xhr-api">5、XHR API △</span><a href="#p5-xhr-api" class="header-anchor">#</a></h2><p>（01）<code>XMLHttpRequest()</code> 创建 XHR 对象的构造函数</p><p>（02）<code>readyState</code> 当前的请求状态</p><pre class="line-numbers language-js" data-language="js"><code class="language-js"><span class="token keyword">const</span> xhr <span class="token operator">=</span> <span class="token function">XMLHttpRequest</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment">// 0</span>xhr<span class="token punctuation">.</span><span class="token function-variable function">onreadystatechange</span> <span class="token operator">=</span> <span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>  <span class="token comment">// 3</span>  <span class="token comment">// 4</span><span class="token punctuation">&#125;</span><span class="token punctuation">;</span>xhr<span class="token punctuation">.</span><span class="token function">open</span><span class="token punctuation">(</span><span class="token string">"get"</span><span class="token punctuation">,</span> <span class="token string">"http://..."</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment">// 1</span>xhr<span class="token punctuation">.</span><span class="token function">send</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment">// 2</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><table><thead><tr><th>状态</th><th>常量</th><th>描述</th></tr></thead><tbody><tr><td>0</td><td>UNSENT</td><td>表示 <code>XMLHttpRequest</code> 实例已经生成，但是 <code>open()</code> 方法还没有被调用。</td></tr><tr><td>1</td><td>OPENED</td><td>表示 <code>send()</code>方法还没有被调用，仍然可以使用<code>setRequestHeader()</code>，设定 HTTP 请求的头信息。</td></tr><tr><td>2</td><td>HEADERS_RECEIVED</td><td>表示 <code>send()</code> 方法已经执行，并且头信息和状态码已经收到。</td></tr><tr><td>3</td><td>LOADING</td><td>表示正在接收服务器传来的 body 部分的数据，如果 responseType 属性是 text 或者空字符串，responseText 就会包含已经收到的部分信息。</td></tr><tr><td>4</td><td>DONE</td><td>表示服务器数据已经接收完成，或者本次接收已经失败了。</td></tr></tbody></table><p>（03）<code>status</code> 响应状态码</p><p>（04）<code>statusText</code> 响应状态文本</p><p>（05）<code>onreadystatechange</code> 当<code>readyState</code>发生变化就会触发这个事件</p><p>（06）<code>responseType</code> 指定响应数据类型，如果是 json，得到响应后自动解析响应体数据</p><p>（07）<code>response</code> 响应体数据，类型取决于 <code>responseType</code> 的指定</p><ul><li><code>responseXML</code> 接收 XML 格式的响应数据</li><li><code>responseText</code> 接收文本格式的响应数据</li></ul><p>（08）<code>timeout</code> 指定请求超时时间（毫秒），默认是 0，代表没有限制</p><p>（09）<code>ontimeout</code> 超时之后触发的事件</p><p>（10）<code>onerror</code> 请求网络错误触发的事件</p><p>（11）<code>open(method, URL[, async])</code> 初始化一个请求</p><p>（12）<code>send(data)</code> 发送请求</p><p>（13）<code>abort()</code> 中断请求</p><p>（14）<code>getResponseHeader(name)</code> 获取指定名称的响应头值</p><p>（15）<code>getAllResponseHeaders()</code> 获取所有响应头组成的字符串</p><p>（16）<code>setRequestHeader(name, value)</code> 设置请求头</p>]]></content>
      
      
      <categories>
          
          <category> 2305：网络请求 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> JavaScript </tag>
            
            <tag> Ajax </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>BOM</title>
      <link href="/230201/"/>
      <url>/230201/</url>
      
        <content type="html"><![CDATA[<h1><span id="javascript-bom">JavaScript BOM</span><a href="#javascript-bom" class="header-anchor">#</a></h1><p>Browser Object Model，浏览器对象模型。</p><h1><span id="yi-window-dui-xiang">一、window 对象</span><a href="#yi-window-dui-xiang" class="header-anchor">#</a></h1><p><code>window</code> 是 BOM 的核心对象。表示浏览器的一个实例，是客户端浏览器对象模型的基类。在浏览器中，该对象具有双重角色，既是通过 JS 访问浏览器窗口的一个接口，也是 ES 规定中的 <strong>Global</strong> 对象。这意味着在网页中定义的任何一个对象、变量和函数，都以 <code>window</code> 作为其 <code>Global</code> 对象。<strong>所有在全局作用域中声明的变量、函数都会变成该对象的属性和方法。</strong></p><h2><span id="p1-ke-hu-duan-dui-xiang">1、客户端对象</span><a href="#p1-ke-hu-duan-dui-xiang" class="header-anchor">#</a></h2><p>可以访问客户端其他对象，这种关系构成浏览器对象模型。</p><table><thead><tr><th>对象</th><th>描述</th></tr></thead><tbody><tr><td><code>document</code></td><td>包含整个 HTML 文档，可以用来访问文档内容及其所有页面元素。</td></tr><tr><td><code>navigator</code></td><td>包含客户端有关浏览器的信息。</td></tr><tr><td><code>screen</code></td><td>包含客户端屏幕的信息</td></tr><tr><td><code>history</code></td><td>包含浏览历史记录信息</td></tr><tr><td><code>location</code></td><td>包含当前网页文档的 URL 信息</td></tr></tbody></table><h2><span id="p2-xi-tong-dui-hua-kuang">2、系统对话框</span><a href="#p2-xi-tong-dui-hua-kuang" class="header-anchor">#</a></h2><p>浏览器通过 <code>alert()</code>、<code>confirm()</code> 和 <code>prompt()</code> 方法可以调用系统对话框向用户显示消息。</p><p>系统对话框与在浏览器中显示的网页没有关系，也不包含 HTML。它们的外观由操作系统及（或）浏览器设置决定，而不是由 CSS 决定（无法设置）。通过这几个方法打开的对话框都是同步和模态的。也就是说，显示这些对话框的时候代码会停止执行，而关掉这些对话框后代码又会恢复执行。</p><p><code>confirm</code>和<code>prompt</code>有返回值。生产环境下不用，调试使用。</p><h2><span id="p3-da-kai-he-guan-bi-chuang-kou">3、打开和关闭窗口</span><a href="#p3-da-kai-he-guan-bi-chuang-kou" class="header-anchor">#</a></h2><p><code>window.open()</code> 方法既可以导航到一个特定的 URL，也可以打开一个新的浏览器窗口。</p><p>参数</p><ul><li>要加载的 URL</li><li>新窗口打开方式：<code>_self</code> <code>_blank</code>（默认新标签页打开）</li><li>窗口大小、位置。</li></ul><p>返回值 就是新建的窗口名称。</p><p><code>窗口名.close()</code>可以关闭窗口，如果关闭自身那就使用 <code>window.close()</code>。</p><pre class="line-numbers language-js" data-language="js"><code class="language-js"><span class="token comment">// 1. 打开窗口</span><span class="token keyword">var</span> newWin <span class="token operator">=</span> window<span class="token punctuation">.</span><span class="token function">open</span><span class="token punctuation">(</span>  <span class="token string">"http://www.jd.com"</span><span class="token punctuation">,</span>  <span class="token string">"_blank"</span><span class="token punctuation">,</span>  <span class="token string">"width=300,height=300,left=200,top=100"</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment">// 2. 关闭窗口</span>newWin<span class="token punctuation">.</span><span class="token function">close</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p><code>close()</code> 方法仅适用于通过 <code>window.open()</code> 打开的弹出窗口。</p><h2><span id="p4-liu-lan-qi-kuan-gao">4、浏览器宽高</span><a href="#p4-liu-lan-qi-kuan-gao" class="header-anchor">#</a></h2><p><code>window</code>对象有<code>innerWidth</code>和<code>innerHeight</code>属性，可以获取浏览器窗口的内部宽度和高度。内部宽高是指除去菜单栏、工具栏、边框等占位元素后，用于显示网页的净宽高。</p><p>对应的，还有一个<code>outerWidth</code>和<code>outerHeight</code>属性，可以获取浏览器窗口的整个宽高。</p><h1><span id="er-navigator-dui-xiang">二、navigator 对象</span><a href="#er-navigator-dui-xiang" class="header-anchor">#</a></h1><p>navigator 对象储存了浏览器信息。通过 <code>navigator</code> 可以引用该对象，并利用它的属性来读取客户端基本信息。</p><p>常见属性：</p><ul><li><code>onLine</code> 表示浏览器是否连接到因特网</li><li><code>platform</code> 浏览器所在的操作系统</li><li><code>userAgent</code> 浏览器识别码</li><li><code>appName</code> 浏览器名称</li><li><code>labguage</code> 浏览器设置的语言</li></ul><h2><span id="p1-liu-lan-qi-jian-ce-fang-fa">1、浏览器检测方法</span><a href="#p1-liu-lan-qi-jian-ce-fang-fa" class="header-anchor">#</a></h2><p>检测浏览器类型的方法有多种，常用的方法包括两种:<strong>特征检测法</strong>和<strong>字符串检测法</strong>，这两种方法都存在各自的优点与缺点，用户可以根据需要进行选择。</p><p>（1）特征检测法</p><ul><li>特征检测法就是根据浏览器是否支持特定功能来决定相应操作的方式。这是一种非精确判断法。但却是最安全的检测方法</li><li>因为准确检测浏览器的类型和型号是一件很困难的事情,而且很容易存在误差，如果不关心浏览器的身份，仅仅在意浏览器的执行能力，那么使用特征检测法就完全可以满足需要。</li><li>当使用一个对象、方法或属性时，先判断它是否存在，如果存在，则说明浏览器支持该对象、方法属性，那么就可以放心使用</li></ul><p>（2）字符串检测法</p><ul><li>客户端浏览器每次发送 HTTP 请求时，都会附带有一个 user-agent(用户代理)字符串，对于 Web 开发人员来说，可以使用用户代理字符串检测浏览器类型。</li><li>userAgent 字符串包含了 web 浏览器的大量信息，如浏览器的名称和版本。</li></ul><h2><span id="p2-cao-zuo-xi-tong-jian-ce-fang-fa">2、操作系统检测方法</span><a href="#p2-cao-zuo-xi-tong-jian-ce-fang-fa" class="header-anchor">#</a></h2><p>navigator.userAgent 返回值一般都会包含操作系统的基本信息，不过这些信息比较散乱，没有统一的规则。</p><p>用户可以检测一些更为通用的信息，如检测是否为 Windows 系统，或者为 Macintosh 系统，而不去分辨操作系统的版本号。</p><p>例如，如果仅检测通用信息，那么所有 Windows 版本的操作系统都会包含&quot;Win”字符串，所有 Macintosh 版本的操作系统都包含有&quot;Mac”字符串，所有 Umix 版本的操作系统都包含有&quot;X11”，而 Linux 操作系统会同时包含&quot;X11”和&quot; Linux。</p><pre class="line-numbers language-js" data-language="js"><code class="language-js"><span class="token keyword">var</span> isWin <span class="token operator">=</span> navigator<span class="token punctuation">.</span>userAgent<span class="token punctuation">.</span><span class="token function">indexOf</span><span class="token punctuation">(</span><span class="token string">"Win"</span><span class="token punctuation">)</span> <span class="token operator">!=</span> <span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">;</span><span class="token comment">// 如果是Windows系统，则返回true</span><span class="token keyword">var</span> isMac <span class="token operator">=</span> navigator<span class="token punctuation">.</span>userAgent<span class="token punctuation">.</span><span class="token function">indexOf</span><span class="token punctuation">(</span><span class="token string">"Mac"</span><span class="token punctuation">)</span> <span class="token operator">!=</span> <span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">;</span><span class="token comment">// 如果是Macintosh系统，则返回true</span><span class="token keyword">var</span> isUnix <span class="token operator">=</span> navigator<span class="token punctuation">.</span>userAgent<span class="token punctuation">.</span><span class="token function">indexOf</span><span class="token punctuation">(</span><span class="token string">"X11"</span><span class="token punctuation">)</span> <span class="token operator">!=</span> <span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">;</span><span class="token comment">// 如果是UNIX系统，则返回true</span><span class="token keyword">var</span> isLinux <span class="token operator">=</span> navigator<span class="token punctuation">.</span>userAgent<span class="token punctuation">.</span><span class="token function">indexOf</span><span class="token punctuation">(</span><span class="token string">"Linux"</span><span class="token punctuation">)</span> <span class="token operator">!=</span> <span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">;</span><span class="token comment">// 如果是Linux系统，则返回true</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>！请注意，<code>navigator</code>的信息可以很容易地被用户修改，所以 JavaScript 读取的值不一定是正确的。但这样既可能判断不准确，也很难维护代码。正确的方法是充分利用 JavaScript 对不存在属性返回<code>undefined</code>的特性，直接用短路运算符<code>||</code>计算：</p><pre class="line-numbers language-none"><code class="language-none">var width &#x3D; window.innerWidth || document.body.clientWidth;<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><h1><span id="san-location-dui-xiang">三、location 对象</span><a href="#san-location-dui-xiang" class="header-anchor">#</a></h1><p><code>location</code> 对象存储了与当前文档位置（URL）信息。</p><table><thead><tr><th>字段</th><th>描述</th></tr></thead><tbody><tr><td><code>href</code></td><td>声明或获取当前文档完整的 URL</td></tr><tr><td><code>protocol</code></td><td>协议部分 <code>http:</code></td></tr><tr><td><code>host</code></td><td>主机和端口名称 <code>localhost:8080</code></td></tr><tr><td><code>hostname</code></td><td>主机名称 <code>localhost</code></td></tr><tr><td><code>port</code></td><td>端口号 <code>8080</code></td></tr><tr><td><code>pathname</code></td><td>路径部分</td></tr><tr><td><code>search</code></td><td>URL 查询部分</td></tr><tr><td><code>hash</code></td><td>锚部分包括前导 <code>#</code></td></tr></tbody></table><p><code>location.href</code> 可以设置和获取 url 地址</p><pre class="line-numbers language-js" data-language="js"><code class="language-js">location<span class="token punctuation">.</span>href <span class="token operator">=</span> <span class="token string">"demo.html"</span><span class="token punctuation">;</span> <span class="token comment">//重定向</span>location<span class="token punctuation">.</span><span class="token function">assign</span><span class="token punctuation">(</span><span class="token string">"demo.html"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>location<span class="token punctuation">.</span><span class="token function">reload</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">//刷新</span>location<span class="token punctuation">.</span><span class="token function">replace</span><span class="token punctuation">(</span><span class="token string">"demo.html"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>hostname<span class="token punctuation">;</span> <span class="token comment">// http://127.0.0.1:5500/0717/12.location.html</span>protocol<span class="token punctuation">;</span> <span class="token comment">// 127.0.0.1</span>host<span class="token punctuation">;</span> <span class="token comment">// http:</span>port<span class="token punctuation">;</span> <span class="token comment">// 127.0.0.1:5500</span>pathname<span class="token punctuation">;</span> <span class="token comment">// 5500</span>search<span class="token punctuation">;</span> <span class="token comment">/// 0717/12.location.html</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p><code>reload()</code> 重新加载文档</p><p><code>replace()</code> 重新加载一个新文档，无需为它创建一个新的历史记录，替换当前文档的历史记录</p><p><code>assign()</code> 和<code>href</code>差不多，要加载一个新页面，可以调用 <code>location.assign()</code> 。如果要重新加载当前页面，调用 <code>location.reload()</code> 方法非常方便。</p><h1><span id="si-history-dui-xiang-ji-chu">四、history 对象 <code>基础</code></span><a href="#si-history-dui-xiang-ji-chu" class="header-anchor">#</a></h1><p><code>history</code>对象保存了浏览器的历史记录，JS 可以调用<code>history</code>对象的<code>back()</code>或<code>forward ()</code>，相当于用户点击了浏览器的后退或前进按钮。</p><p>这个对象属于历史遗留对象，对于现代 Web 页面来说，由于大量使用 AJAX 和页面交互，简单粗暴地调用<code>history.back()</code>可能会让用户体验非常不好。</p><p>新手开始设计 Web 页面时喜欢在登录页登录成功时调用<code>history.back()</code>，试图回到登录前的页面。这是一种错误的方法。</p><p>前端框架路由原理中使用了 <code>history</code> 库。</p><p><code>https://github.com/ReactTraining/history</code></p><h1><span id="wu-screen-dui-xiang">五、screen 对象</span><a href="#wu-screen-dui-xiang" class="header-anchor">#</a></h1><p><code>screen</code> 对象表示屏幕的信息，常用的属性有：</p><ul><li>screen.width：屏幕宽度，以像素为单位；</li><li>screen.height：屏幕高度，以像素为单位；</li><li>screen.colorDepth：返回颜色位数，如 8、16、24。</li></ul>]]></content>
      
      
      <categories>
          
          <category> 2302：BOM </category>
          
      </categories>
      
      
        <tags>
            
            <tag> JavaScript </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>CSS 动画</title>
      <link href="/210801/"/>
      <url>/210801/</url>
      
        <content type="html"><![CDATA[<h1><span id="css-dong-hua">CSS 动画</span><a href="#css-dong-hua" class="header-anchor">#</a></h1><p>transition: 过渡动画</p><p>transition-property: 属性<br>transition-duration: 间隔<br>transition-timing-function: 曲线<br>transition-delay: 延迟</p><h2><span id="p1-guo-du-dong-hua-transition">1、过渡动画 transition</span><a href="#p1-guo-du-dong-hua-transition" class="header-anchor">#</a></h2><p>允许 CSS 的属性在一定的时间区间内平滑过渡。在鼠标点击，鼠标滑过或对元素任何改变中触发，并平滑地以动画改变 CSS 的属性值。</p><p>transition</p><ul><li>property 参与过渡的属性</li><li>duration 持续时间</li><li>timing-function 动画类型 linear 线性匀速</li><li>delay 延迟时间</li></ul><pre class="line-numbers language-css" data-language="css"><code class="language-css"><span class="token property">transition</span><span class="token punctuation">:</span> height 3s linear 2s<span class="token punctuation">;</span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>animation / keyframes</p><p>animation-name: 动画名称，对应@keyframes<br>animation-duration: 间隔<br>animation-timing-function: 曲线<br>animation-delay: 延迟<br>animation-iteration-count: 次数</p><p>infinite: 循环动画</p><p>animation-direction: 方向</p><p>alternate: 反向播放</p><p>animation-fill-mode: 静止模式</p><p>forwards: 停止时，保留最后一帧<br>backwards: 停止时，回到第一帧<br>both: 同时运用 forwards / backwards</p><p>动画分为 <strong>过渡动画</strong> 和 <strong>关键帧动画</strong>。</p><h2><span id="p2-guan-jian-zheng-dong-hua-animation">2、关键帧动画 animation</span><a href="#p2-guan-jian-zheng-dong-hua-animation" class="header-anchor">#</a></h2><p>关键帧动画是控制关键位置，而不是所有位置。</p><h3><span id="p1-keyframes-ding-yi-xin-guan-jian-zheng">1、@keyframes 定义新关键帧</span><a href="#p1-keyframes-ding-yi-xin-guan-jian-zheng" class="header-anchor">#</a></h3><pre class="line-numbers language-css" data-language="css"><code class="language-css"><span class="token atrule"><span class="token rule">@keyframes</span> &lt;name></span> <span class="token punctuation">&#123;</span>  <span class="token selector">from/0%</span> <span class="token punctuation">&#123;</span>    // ...  <span class="token punctuation">&#125;</span>  <span class="token selector">to/100%</span> <span class="token punctuation">&#123;</span>    // ...  <span class="token punctuation">&#125;</span><span class="token punctuation">&#125;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h3><span id="p2-animation">2、animation</span><a href="#p2-animation" class="header-anchor">#</a></h3><ul><li>name 动画属性名</li><li>duration 关键帧持续时间</li><li>timing-function 动画执行方式（针对于每一个关键帧之间的动画）</li><li>delay 动画延迟时间</li><li>iteration-count 动画循环次数，次数或者 infinite（无穷次）</li><li>direction 控制动画循环反向播放，默认正常播放，alternate，轮流反向播放</li></ul><h3><span id="p3-dong-hua-de-zan-ting-he-bo-fang">3、动画的暂停和播放</span><a href="#p3-dong-hua-de-zan-ting-he-bo-fang" class="header-anchor">#</a></h3><ul><li>animation-play-state</li><li>paused</li></ul><h3><span id="p4-dong-hua-de-qi-shi-he-jie-shu-zhuang-tai">4、动画的起始和结束状态</span><a href="#p4-dong-hua-de-qi-shi-he-jie-shu-zhuang-tai" class="header-anchor">#</a></h3><h3><span id="p5-zhu-zheng-dong-hua">5、逐帧动画</span><a href="#p5-zhu-zheng-dong-hua" class="header-anchor">#</a></h3><p>timing-function: steps()</p>]]></content>
      
      
      <categories>
          
          <category> 2108：CSS动画 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> JavaScript </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>CSS 预处理器</title>
      <link href="/210401/"/>
      <url>/210401/</url>
      
        <content type="html"><![CDATA[<h1><span id="css-yu-chu-li-qi">CSS 预处理器</span><a href="#css-yu-chu-li-qi" class="header-anchor">#</a></h1><h2><span id="pyuan-li">原理</span><a href="#pyuan-li" class="header-anchor">#</a></h2><p>是将类 CSS 语言通过 Webpack 编译转成浏览器可读的真正 CSS。<br>在这层编译之上，便可以赋予 CSS 更多更强大的功能。</p><h2><span id="pchang-yong-gong-neng">常用功能</span><a href="#pchang-yong-gong-neng" class="header-anchor">#</a></h2><ul><li>嵌套</li><li>变量</li><li>循环语句</li><li>条件语句</li><li>自动前缀</li><li>单位转换</li><li>mixin 复用</li></ul><p>面试中一般不会重点考察该点，一般介绍下自己在实战项目中的经验即可~</p><h2><span id="pyou-na-xie">有哪些</span><a href="#pyou-na-xie" class="header-anchor">#</a></h2><ul><li>Less</li><li>Sass</li><li>Stylus</li></ul>]]></content>
      
      
      <categories>
          
          <category> 2104：CSS+ </category>
          
      </categories>
      
      
        <tags>
            
            <tag> CSS </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>ES Generstor</title>
      <link href="/220204/"/>
      <url>/220204/</url>
      
        <content type="html"><![CDATA[<h1><span id="generstor">Generstor</span><a href="#generstor" class="header-anchor">#</a></h1><p>状态机，异步生成器。</p><pre class="line-numbers language-js" data-language="js"><code class="language-js"><span class="token keyword">function</span><span class="token operator">*</span> <span class="token function">gen</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">&#123;</span>    <span class="token keyword">yield</span> <span class="token operator">...</span>    <span class="token keyword">yield</span> <span class="token operator">...</span><span class="token punctuation">&#125;</span>    gen<span class="token punctuation">.</span><span class="token function">next</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p><code>Generstor</code> 是可迭代的（<code>for.. of</code>）。</p><p>例子：</p><pre class="line-numbers language-js" data-language="js"><code class="language-js"><span class="token comment">// 使用计时器模拟依次请求 a数据 b数据</span><span class="token keyword">function</span><span class="token operator">*</span> <span class="token function">gen</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">&#123;</span>    <span class="token keyword">yield</span> <span class="token function">setTimeout</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=></span> <span class="token punctuation">&#123;</span>        console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">"a数据请求成功"</span><span class="token punctuation">)</span>        it<span class="token punctuation">.</span><span class="token function">next</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">&#125;</span><span class="token punctuation">,</span> <span class="token number">1000</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token keyword">yield</span> <span class="token function">setTimeout</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=></span> <span class="token punctuation">&#123;</span>        console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">"b数据请求成功"</span><span class="token punctuation">)</span>    <span class="token punctuation">&#125;</span><span class="token punctuation">,</span> <span class="token number">1000</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span class="token comment">// 开始请求</span><span class="token keyword">const</span> it <span class="token operator">=</span> <span class="token function">gen</span><span class="token punctuation">(</span><span class="token punctuation">)</span>it<span class="token punctuation">.</span><span class="token function">next</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>]]></content>
      
      
      <categories>
          
          <category> 2202：ES高级 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> JavaScript </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>DOM</title>
      <link href="/230301/"/>
      <url>/230301/</url>
      
        <content type="html"><![CDATA[<h1><span id="javascript-dom">JavaScript DOM</span><a href="#javascript-dom" class="header-anchor">#</a></h1><p><strong>Document Object Model</strong>， <strong>文档对象模型</strong>。是 W3C 制订的一套技术规范，用来描述 JS 如何与 HTML 或 XML 文档进行交互的 Web 标准。DOM 规定了一系列标准 API，允许开发人员通过标准方式访问文档结构、操作网页内容、控制样式和行为等。</p><p>加载 HTML 页面时，Web 浏览器生成一个树型结构，用来表示页面内部结构。DOM 将这种树型结构理解为由节点组成的 DOM 树。</p><h2><span id="p1-dom-ban-ben">1、DOM 版本</span><a href="#p1-dom-ban-ben" class="header-anchor">#</a></h2><p>主要分为 <code>DOM 0级</code> 和 <code>DOM 2级</code>。</p><h2><span id="p2-document-dui-xiang">2、document 对象</span><a href="#p2-document-dui-xiang" class="header-anchor">#</a></h2><p><strong><code>document</code> 对象</strong> 是<code>window</code>对象的一个属性，因此可以将<code>document</code>对象作为一个全局对象来访问。当浏览器载入 html 文档, 它就会成为<code>document</code>对象。</p><p>JS 顶层对象是<code>global</code>，<code>window</code>是<code>global</code>在浏览器的实现。</p><h1><span id="dom-jie-dian">DOM 节点</span><a href="#dom-jie-dian" class="header-anchor">#</a></h1><p>在网页中所有的对象和内容称为<strong>节点</strong>（Node），如文档、元素、文本、属性、注释等，节点是 DOM 最基本的单元，并派生出不同类型的节点，它们共同的构成了文档的树形结构。</p><h2><span id="p1-jie-dian-guan-xi">1、节点关系</span><a href="#p1-jie-dian-guan-xi" class="header-anchor">#</a></h2><p>节点之间的关系包括：</p><ul><li>父子关系</li><li>兄弟关系。</li></ul><p>在节点树中，最顶端节点为<strong>根节点</strong>。</p><p>除了根节点之外，每个节点都有一个父节点。</p><p>节点可以包含任何数量的子节点。</p><p>叶子是没有子节点的节点。</p><p>同级节点是拥有相同父节点的节点。</p><h2><span id="p2-jie-dian-shu-xing">2、节点属性</span><a href="#p2-jie-dian-shu-xing" class="header-anchor">#</a></h2><p><code>childNodes</code> 属性获取元素所有的子节点，保存到一个<code>NodeList</code>伪数组对象中。</p><table><thead><tr><th>属性</th><th>描述</th></tr></thead><tbody><tr><td><code>nodeType</code></td><td>节点类型</td></tr><tr><td><code>nodeName</code></td><td>节点名称</td></tr><tr><td><code>nodeValue</code></td><td>节点值</td></tr></tbody></table><table><thead><tr><th>nodeType</th><th></th><th>nodeName</th><th>nodeValue</th><th>描述</th></tr></thead><tbody><tr><td>1</td><td>Element</td><td>元素名</td><td>null</td><td>元素</td></tr><tr><td>2</td><td>Attr</td><td>属性名</td><td>属性值</td><td>属性</td></tr><tr><td>3</td><td>Text</td><td>#text</td><td>节点内容</td><td>文本</td></tr><tr><td>8</td><td>Comment</td><td>#comment</td><td>注释文本</td><td>注释</td></tr><tr><td>9</td><td>Document</td><td>#document</td><td>null</td><td>根节点</td></tr><tr><td>11</td><td>DocumentFragment</td><td>#document 片段</td><td>null</td><td>文档碎片</td></tr></tbody></table><h1><span id="huo-qu-jie-dian">获取节点</span><a href="#huo-qu-jie-dian" class="header-anchor">#</a></h1><h2><span id="p1-getelement-s-xi-lie">1、getElement(s) 系列</span><a href="#p1-getelement-s-xi-lie" class="header-anchor">#</a></h2><p>（1） <code>getElementsByTagName()</code> 通过标签名获取</p><pre class="line-numbers language-js" data-language="js"><code class="language-js"><span class="token comment">// 获得一个 HTMLCollection 对象（伪数组）</span><span class="token comment">// 拥有 length 属性</span><span class="token keyword">var</span> oLis <span class="token operator">=</span> document<span class="token punctuation">.</span><span class="token function">getElementsByTagName</span><span class="token punctuation">(</span><span class="token string">"li"</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment">// 控制背景并变色</span>oLis<span class="token punctuation">.</span>style<span class="token punctuation">.</span>background <span class="token operator">=</span> <span class="token string">"red"</span><span class="token punctuation">;</span> <span class="token comment">// 报错了！</span>oLis<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token punctuation">.</span>style<span class="token punctuation">.</span>background <span class="token operator">=</span> <span class="token string">"red"</span><span class="token punctuation">;</span> <span class="token comment">// 注意要加下标获取</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>（2）<code>getElementsByClassName()</code> 通过类名</p><p>（3）<code>getElementsByName()</code> 通过 name 属性获取（几乎不用）</p><ul><li>IE6-9 不兼容。</li></ul><p>（4）<code>getElementByID()</code> 通过 id 获取</p><p>和上面三个的区别是，这个可以直接获取到元素，不需要下标。</p><pre class="line-numbers language-js" data-language="js"><code class="language-js"><span class="token comment">// 获取某个元素中元素的方法</span><span class="token comment">// （1）先获取到ul</span><span class="token keyword">var</span> oBox <span class="token operator">=</span> document<span class="token punctuation">.</span><span class="token function">getElementById</span><span class="token punctuation">(</span><span class="token string">"box"</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token keyword">var</span> oBox2 <span class="token operator">=</span> document<span class="token punctuation">.</span><span class="token function">getElementsByTagName</span><span class="token punctuation">(</span><span class="token string">"ul"</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment">// （2）通过ul获取到其中的li</span><span class="token keyword">var</span> oBoxLis <span class="token operator">=</span> oBox<span class="token punctuation">.</span><span class="token function">getElementsByTagName</span><span class="token punctuation">(</span><span class="token string">"li"</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token keyword">var</span> oBoxLis2 <span class="token operator">=</span> oBox2<span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">]</span><span class="token punctuation">.</span><span class="token function">getElementsByTagName</span><span class="token punctuation">(</span><span class="token string">"li"</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment">//   注意下标</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>（1）（2）（3）获取到的是 <code>HTMLCollection</code> 伪数组对象。</p><h2><span id="p2-selectors-api">2、selectors API</span><a href="#p2-selectors-api" class="header-anchor">#</a></h2><p>直接使用 CSS 选择器作为参数传递。</p><p>核心方法 <code>querySelector()</code> 和 <code>querySelectorAll()</code>。</p><p><code>querySelectorAll()</code> 获取的是一个<code>NodeList</code>对象。</p><pre class="line-numbers language-js" data-language="js"><code class="language-js"><span class="token comment">// 获取单个节点（如果选择多个，默认选第一个）</span><span class="token keyword">var</span> oRed <span class="token operator">=</span> document<span class="token punctuation">.</span><span class="token function">querySelector</span><span class="token punctuation">(</span><span class="token string">"#box>.red"</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment">// 获取多个节点（NodeList），使用的时候注意加下标</span><span class="token keyword">var</span> oRed2 <span class="token operator">=</span> document<span class="token punctuation">.</span><span class="token function">querySelectorAll</span><span class="token punctuation">(</span><span class="token string">"#box>.red"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>oRed2<span class="token punctuation">.</span><span class="token function">forEach</span><span class="token punctuation">(</span><span class="token parameter">item<span class="token punctuation">,</span> index<span class="token punctuation">,</span> array</span><span class="token punctuation">)</span><span class="token punctuation">&#123;</span>  item<span class="token punctuation">.</span>style<span class="token punctuation">.</span>background <span class="token operator">=</span> <span class="token string">"red"</span><span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>注意：低版本的 IE&lt;8 不支持<code>querySelector</code>和<code>querySelectorAll</code>。IE8 仅有限支持。</p><h2><span id="p3-fang-fa-bi-jiao">3、方法比较</span><a href="#p3-fang-fa-bi-jiao" class="header-anchor">#</a></h2><p><code>getElementsByXX</code> 获取的元素集合是 <strong>动态</strong> 的，也就是 DOM 节点改变时，当前获取的集合内容也会改变。（选出来的元素会随着文档的改变而改变）</p><p><code>selector API</code> 是 <strong>静态</strong> 的集合。（只要取出来，就和页面有没有任何关系；未来元素改变，不影响获取的结果。）</p><h2><span id="p4-jie-dian-guan-xi-zhong-fang-wen-jie-dian-fang-fa">4、节点关系中访问节点方法</span><a href="#p4-jie-dian-guan-xi-zhong-fang-wen-jie-dian-fang-fa" class="header-anchor">#</a></h2><table><thead><tr><th>方法</th><th>描述</th></tr></thead><tbody><tr><td>parentNode</td><td>获取元素的父元素节点</td></tr><tr><td>children</td><td>获取元素的所有子元素节点<br>（IE6-8 会获取到注释节点）</td></tr><tr><td>firstChild</td><td>获取第一个子元素节点</td></tr><tr><td>firstElementChild</td><td>获取第一个子元素节点</td></tr><tr><td>lastChild</td><td>获取最后一个子元素节点</td></tr><tr><td>lastElementChild</td><td>获取最后一个子元素节点</td></tr><tr><td>nextSibling</td><td>获取下一个兄弟节点</td></tr><tr><td>nextElementSibing</td><td>获取下一个兄弟节点</td></tr><tr><td>previousSibling</td><td>获取上一个兄弟节点</td></tr><tr><td>previosElementSibing</td><td>获取上一个兄弟节点</td></tr></tbody></table><p>在 IE678 中获取上一个元素节点，在其他浏览器中获取的是是一个节点（可能是文本节点等）。后者在浏览器中获取上一个兄弟元素节点，IE678 不兼容。</p><pre class="line-numbers language-js" data-language="js"><code class="language-js"><span class="token comment">// (1) parentNode</span><span class="token operator">...</span>parentNode <span class="token comment">// ul</span><span class="token operator">...</span>parentNode<span class="token punctuation">.</span>parentNode<span class="token comment">// body</span><span class="token operator">...</span>parentNode<span class="token punctuation">.</span>parentNode<span class="token punctuation">.</span>parentNode <span class="token comment">// html</span><span class="token operator">...</span>parentNode<span class="token punctuation">.</span>parentNode<span class="token punctuation">.</span>parentNode<span class="token punctuation">.</span>parentNode <span class="token comment">// document</span><span class="token operator">...</span>parentNode<span class="token punctuation">.</span>parentNode<span class="token punctuation">.</span>parentNode<span class="token punctuation">.</span>parentNode<span class="token punctuation">.</span>parentNode <span class="token comment">// null</span><span class="token operator">...</span>parentNode<span class="token punctuation">.</span>parentNode<span class="token punctuation">.</span>parentNode<span class="token punctuation">.</span>parentNode<span class="token punctuation">.</span>parentNode<span class="token punctuation">.</span>parentNode <span class="token comment">// 报错</span><span class="token comment">// (2) 获取上一个兄弟元素节点的兼容性封装</span><span class="token keyword">function</span> <span class="token function">getPrevSibling</span><span class="token punctuation">(</span><span class="token parameter">ele</span><span class="token punctuation">)</span><span class="token punctuation">&#123;</span>  <span class="token keyword">if</span><span class="token punctuation">(</span>ele<span class="token punctuation">.</span>previousElementSibing<span class="token punctuation">)</span><span class="token punctuation">&#123;</span>        <span class="token keyword">return</span> ele<span class="token punctuation">.</span>previousElementSibing<span class="token punctuation">;</span>    <span class="token punctuation">&#125;</span> <span class="token keyword">else</span> <span class="token punctuation">&#123;</span>        <span class="token keyword">return</span> ele<span class="token punctuation">.</span>previousSibing<span class="token punctuation">;</span>    <span class="token punctuation">&#125;</span><span class="token punctuation">&#125;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h2><span id="p5-qi-ta-huo-qu-jie-dian-fang-fa">5、其他获取节点方法</span><a href="#p5-qi-ta-huo-qu-jie-dian-fang-fa" class="header-anchor">#</a></h2><pre class="line-numbers language-js" data-language="js"><code class="language-js"><span class="token comment">// (1)获取body元素</span>document<span class="token punctuation">.</span>body <span class="token operator">==</span> document<span class="token punctuation">.</span><span class="token function">getElementsByTagName</span><span class="token punctuation">(</span><span class="token string">"body"</span><span class="token punctuation">)</span><span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token punctuation">;</span><span class="token comment">// (2)获取head元素</span>document<span class="token punctuation">.</span>head <span class="token operator">==</span> document<span class="token punctuation">.</span><span class="token function">getElementsByTagName</span><span class="token punctuation">(</span><span class="token string">"head"</span><span class="token punctuation">)</span><span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token punctuation">;</span><span class="token comment">// (3)获取html元素</span>document<span class="token punctuation">.</span>documentElement <span class="token operator">==</span> document<span class="token punctuation">.</span><span class="token function">getElementsByTagName</span><span class="token punctuation">(</span><span class="token string">"html"</span><span class="token punctuation">)</span><span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token punctuation">;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h1><span id="cao-zuo-jie-dian">操作节点</span><a href="#cao-zuo-jie-dian" class="header-anchor">#</a></h1><p>原生 DOM 操作。</p><h2><span id="p1-chuang-jian-jie-dian">1、创建节点</span><a href="#p1-chuang-jian-jie-dian" class="header-anchor">#</a></h2><p><code>createElement()</code></p><pre class="line-numbers language-js" data-language="js"><code class="language-js">document<span class="token punctuation">.</span><span class="token function">createElement</span><span class="token punctuation">(</span>tag<span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment">/*参数：标签名字返回值：新元素的引用*/</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>使用 document 对象的 createElement 方法能够根据参数指定的标签名创建一个新的元素。并返回对新元素的引用。</p><p>使用 creatElement 方法创建的新元素不会被自动添加到文档里，需要使用 appendChild 等方法。</p><p><code>createTextNode</code> 用于创建文本节点。</p><pre class="line-numbers language-js" data-language="js"><code class="language-js">document<span class="token punctuation">.</span><span class="token function">createTextNode</span><span class="token punctuation">(</span>String<span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment">//                    参数是字符串</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre><h2><span id="p2-cha-ru-jie-dian">2、插入节点</span><a href="#p2-cha-ru-jie-dian" class="header-anchor">#</a></h2><p><code>appendChild()</code></p><pre class="line-numbers language-js" data-language="js"><code class="language-js"><span class="token function">appendChild</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>可以向当前节点的字节点列表的==末尾==添加新的节点。如果文档树中已经存在参数节点，则将从文档树中删除，然后重新插入新的位置。</p><p><code>insertBefore()</code></p><p>使用 <code>insertBefore(newChild,oldChild)</code> 方法可以在已有的子节点前插入一个新的子节点。</p><p>newChild 表示新插入的节点，oldChild 用于指定插入节点的后边的相邻位置。插入成功以后，该方法返回新插入的节点。insertBefore 可以把指定元素及其所包含的所有子节点都一起插入到指定位置中。同时会先删除移动的元素，再重新插入。</p><p>appendChild 和 insertBefore 可以操作已经存在的元素。</p><h2><span id="p3-fu-zhi-jie-dian">3、复制节点</span><a href="#p3-fu-zhi-jie-dian" class="header-anchor">#</a></h2><p><code>cloneNode()</code></p><pre class="line-numbers language-js" data-language="js"><code class="language-js"><span class="token function">cloneNode</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment">//      参数 true 深复制 复制整个节点和里面的内容</span><span class="token comment">//           false 浅复制 只复制节点（不要里面的内容）</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span></span></code></pre><p>可以创建一个节点的副本。复制后的新节点，也不会被自动插入到文档，需要用到之前的方法去插入。</p><p>注意改<code>id</code>，复制的节点会包含原节点的所有特性，如果原节点中包含 id 属性，就会出现 id 属性值重叠的情况。为了避免潜在的冲突，应修改其中某个节点的 id 属性值。</p><h2><span id="p4-shan-chu-jie-dian">4、删除节点</span><a href="#p4-shan-chu-jie-dian" class="header-anchor">#</a></h2><p><code>removeChild()</code></p><pre class="line-numbers language-js" data-language="js"><code class="language-js"><span class="token function">removeChild</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment">// 返回值：</span><span class="token comment">// - 删除成功 ==> 返回被删除的节点</span><span class="token comment">// - 删除失败 ==> 返回 null</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span></span></code></pre><p>可以从子节点列表中删除某个节点，该节点所包含的所有子节点将同时被删除。</p><h2><span id="p5-ti-huan-jie-dian">5、替换节点</span><a href="#p5-ti-huan-jie-dian" class="header-anchor">#</a></h2><p><code>replaceChild(new, old)</code> 方法可以将某个子节点替换为另一个。替换节点替换的是所有子节点以及包含的所有内容。</p><pre class="line-numbers language-js" data-language="js"><code class="language-js"><span class="token function">replaceChild</span><span class="token punctuation">(</span>newNode<span class="token punctuation">,</span> oldNode<span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment">// 参数</span><span class="token comment">// - newNode 指定的新节点</span><span class="token comment">// - oldNode 被替换的节点</span><span class="token comment">// 返回值</span><span class="token comment">// - 替换成功 ==> 返回替换的节点</span><span class="token comment">// - 替换失败 ==>  null</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h2><span id="p6-nei-rong-cao-zuo">6、内容操作</span><a href="#p6-nei-rong-cao-zuo" class="header-anchor">#</a></h2><h3><span id="pinnerhtml-innertext-outerhtml-outertext">innerHTML、innerText、outerHTML、outerText</span><a href="#pinnerhtml-innertext-outerhtml-outertext" class="header-anchor">#</a></h3><p>（1）获取标签</p><pre class="line-numbers language-html" data-language="html"><code class="language-html"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>p</span> <span class="token attr-name">id</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>abc<span class="token punctuation">"</span></span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>span</span><span class="token punctuation">></span></span>破晓<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>span</span><span class="token punctuation">></span></span>是猪<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>p</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>script</span><span class="token punctuation">></span></span><span class="token script"><span class="token language-javascript">  oT <span class="token operator">=</span> document<span class="token punctuation">.</span><span class="token function">getElementById</span><span class="token punctuation">(</span><span class="token string">"abc"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>  console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>oT<span class="token punctuation">.</span>innerHTML<span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">//&lt;span>破晓&lt;/span>是猪</span>  console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>oT<span class="token punctuation">.</span>innerText<span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">//破晓是猪</span>  console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>oT<span class="token punctuation">.</span>outerText<span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">//破晓是猪</span>  console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>oT<span class="token punctuation">.</span>outerHTML<span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">//&lt;p id="abc">&lt;span>破晓&lt;/span>是猪&lt;/p></span></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>script</span><span class="token punctuation">></span></span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p><code>innerHTML</code> 和 <code>innerText</code> 前者可以解析并输出标签，后者是纯文本。</p><p><code>innerHTML</code> 和 <code>outerHTML</code> 前者不包括自身，后者包括自身。</p><p>（2）设置标签（直接覆盖原来的内容）</p><p>innerText 和 outerText 在获取的时候是相同效果，但在设置时，innerText 仅设置标签所包含的文本，而 outerText 设置包含包括标签<strong>自身在内</strong>的文本。</p><pre class="line-numbers language-js" data-language="js"><code class="language-js">oTest<span class="token punctuation">.</span>innerHTML <span class="token operator">=</span> <span class="token string">"这是内容"</span>oTest<span class="token punctuation">.</span>innerHTML <span class="token operator">=</span> <span class="token string">"&lt;a href = "</span>##<span class="token string">"> 这是内容 &lt;/a>"</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre><h3><span id="ptextcontent">textContent</span><a href="#ptextcontent" class="header-anchor">#</a></h3><p>设置或者返回固定节点的文本内容。</p><pre class="line-numbers language-js" data-language="js"><code class="language-js">document<span class="token punctuation">.</span><span class="token function">getElementById</span><span class="token punctuation">(</span><span class="token string">"myList"</span><span class="token punctuation">)</span><span class="token punctuation">.</span>textContent<span class="token punctuation">;</span>document<span class="token punctuation">.</span><span class="token function">getElementById</span><span class="token punctuation">(</span><span class="token string">"myList"</span><span class="token punctuation">)</span><span class="token punctuation">.</span>textContent <span class="token operator">=</span> <span class="token string">"你好"</span>；<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre><p>（1）textContent 和 innerHTML 的区别</p><ul><li>textContent 会获取 style= “display:none” 中的文本，而 innerText 不会。</li><li>innerText 不会理会 html 格式，直接输出不换行的文本，textContent 会根据标签里面的元素独立一行。</li><li>innerText 对 IE 的兼容性较好 ，textContent 虽然作为标准方法但是只支持 IE8+以上的浏览器 。</li></ul><p>（2）兼容性处理</p><pre class="line-numbers language-js" data-language="js"><code class="language-js"><span class="token keyword">function</span> <span class="token function">setOrGetContent</span><span class="token punctuation">(</span><span class="token parameter">node<span class="token punctuation">,</span> content</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>  <span class="token keyword">if</span> <span class="token punctuation">(</span>arguments<span class="token punctuation">.</span>length <span class="token operator">===</span> <span class="token number">1</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>    <span class="token comment">//代表当前是读取操作</span>    <span class="token keyword">if</span> <span class="token punctuation">(</span>node<span class="token punctuation">.</span>textContent<span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>      <span class="token comment">//只要能拿到这个dom对象的textContent属性值，代表当前用户是高级浏览器</span>      <span class="token keyword">return</span> node<span class="token punctuation">.</span>textContent<span class="token punctuation">;</span>    <span class="token punctuation">&#125;</span> <span class="token keyword">else</span> <span class="token punctuation">&#123;</span>      <span class="token comment">//代表拿不到  那就是低级浏览器</span>      <span class="token keyword">return</span> node<span class="token punctuation">.</span>innerText<span class="token punctuation">;</span>    <span class="token punctuation">&#125;</span>  <span class="token punctuation">&#125;</span> <span class="token keyword">else</span> <span class="token keyword">if</span> <span class="token punctuation">(</span>arguments<span class="token punctuation">.</span>length <span class="token operator">===</span> <span class="token number">2</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>    <span class="token comment">//代表写入操作</span>    <span class="token keyword">if</span> <span class="token punctuation">(</span>node<span class="token punctuation">.</span>textContent<span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>      <span class="token comment">//代表高级</span>      node<span class="token punctuation">.</span>textContent <span class="token operator">=</span> content<span class="token punctuation">;</span>    <span class="token punctuation">&#125;</span> <span class="token keyword">else</span> <span class="token punctuation">&#123;</span>      <span class="token comment">//代表低级</span>      node<span class="token punctuation">.</span>innerText <span class="token operator">=</span> content<span class="token punctuation">;</span>    <span class="token punctuation">&#125;</span>  <span class="token punctuation">&#125;</span><span class="token punctuation">&#125;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h2><span id="p7-wen-dang-pian-duan-jie-dian-xu-ni-dom">7、文档片段节点（虚拟 DOM） △</span><a href="#p7-wen-dang-pian-duan-jie-dian-xu-ni-dom" class="header-anchor">#</a></h2><p><strong>DocumentFragment</strong> 是一个==虚拟的==节点类型，仅仅存在于内存中，没有添加到文档树中，看不到渲染效果。当文档片段设计完善后，再使用 JS 一次性添加到文档树中显示出来，提高效率，==减少页面重绘的次数==。避免浏览器渲染和资源占用，解决大量添加节点时候的性能问题。</p><p><strong>createDocumentFragment()</strong> 创建虚拟节点，使用 appendChild 等方法插入。</p><h1><span id="shu-xing-jie-dian-cao-zuo">属性节点操作</span><a href="#shu-xing-jie-dian-cao-zuo" class="header-anchor">#</a></h1><h2><span id="p1-chuang-jian-shu-xing-jie-dian">1、创建属性节点</span><a href="#p1-chuang-jian-shu-xing-jie-dian" class="header-anchor">#</a></h2><p><code>createAttribute()</code> 可以创建属性节点。</p><ul><li>使用属性节点的 name 属性，可以得到属性的名称。</li><li>使用属性节点的 value 属性，可以设置和属性的值。</li><li>创建的属性可以通过 setAttributeNode 来插入到元素中。</li></ul><h2><span id="p2-du-qu-shu-xing">2、读取属性</span><a href="#p2-du-qu-shu-xing" class="header-anchor">#</a></h2><p>（1） 常用点语法通过元素直接访问 HTML 属性，如 src、href 等。</p><p>（2） <code>getAttribute()</code> 可以读取指定属性的值（非自有属性）。</p><p>对于 class 属性，必须使用 className 属性名。对于 for 属性，则必须使用 htmlFor 属性名。</p><p>在脚本化 css 中设置 float 属性和 text 属性，要改为 cssFloat 和 cssText（一次设置多个样式）使用。</p><h2><span id="p3-she-zhi-shu-xing">3、设置属性</span><a href="#p3-she-zhi-shu-xing" class="header-anchor">#</a></h2><p><code>setAttribute(name,value)</code> 可以设置元素的属性值。</p><p>参数 name 和 value 分别代表属性名称和属性值，并且必须是字符串，如果存在相同属性，则值被刷新，如果不存在则创建属性并添加。</p><p>通过 <code>ele.value</code> 获取或设置表单的值（string）。</p><h2><span id="p4-shan-chu-shu-xing">4、删除属性</span><a href="#p4-shan-chu-shu-xing" class="header-anchor">#</a></h2><p><code>removeAttribute()</code> 使用元素的方法可以删除指定的属性</p><p>参数是要删除的属性名。</p><h2><span id="p5-zi-ding-yi-shu-xing">5、自定义属性 △</span><a href="#p5-zi-ding-yi-shu-xing" class="header-anchor">#</a></h2><p>HTML5 允许用户为元素自定义属性，但是要求添加前缀<code>data-</code>。</p><p><code>.dataset</code> 设置和获取自定义属性</p><p><code>.delete</code> 删除自定义属性</p><h2><span id="pinnre-outer-html-text-xi-lie">innre / outer | HTML / text 系列</span><a href="#pinnre-outer-html-text-xi-lie" class="header-anchor">#</a></h2><p>inner 不包括自身 outer 包括自身</p><p>HTML 解析 html 标签 Text 不解析</p><h2><span id="ptextcontent">textContent</span><a href="#ptextcontent" class="header-anchor">#</a></h2><p>textContent 和 innerHTML 的区别</p><ul><li>textContent 会获取 style= “display:none” 中的文本，而 innerText 不会</li><li>innerText 不会理会 html 格式，直接输出不换行的文本 ，textContent 会根据标签里面的元素独立一行</li><li>innerText 对 IE 的兼容性较好 ，textContent 虽然作为标准方法但是只支持 IE8+以上的浏览器</li></ul><h1><span id="jiao-ben-hua-css">脚本化 CSS</span><a href="#jiao-ben-hua-css" class="header-anchor">#</a></h1><h3><span id="p1-huo-qu-chi-cun">1、获取尺寸</span><a href="#p1-huo-qu-chi-cun" class="header-anchor">#</a></h3><p><code>offsetWidth</code>和<code>offsetHeight</code> 可以获取元素的<code>border-box</code>尺寸。</p><p><code>clientWidth</code>和<code>clientHeight</code> 可以获取元素的<code>padding-box</code>尺寸。</p><p><code>scrollWidth</code>和<code>scrollHeight</code> 可以获取元素完全内容尺寸和<code>padding</code>。（几乎不用）</p><p><code>innerWidth</code>和<code>innerHeight</code> 可以获取浏览器窗口的尺寸。</p><p><code>outerWidth</code>和<code>outerHeight</code> 可以获取取加上工具条与滚动条窗口的尺寸。</p><p><code>style.width/height</code> <strong>只能获取行内样式的尺寸</strong>（字符串，“10px”）。</p><p>常见应用: 大盒子里面小盒子，大盒子用<code>clientX</code>，小盒子用<code>offsetX</code>。</p><h3><span id="p2-huo-qu-wei-zhi">2、获取位置</span><a href="#p2-huo-qu-wei-zhi" class="header-anchor">#</a></h3><p><code>getBoundingClientRect()</code> 返回一个对象，对象中包含元素距离视口的距离信息。</p><p>getBoundingClientRect。</p><p>获取某个元素相对于视口的位置集合</p><ul><li>top 元素上边到视窗上的距离</li><li>right 元素右边到视窗左的距离</li><li>bottom 元素下边到视窗上的距离</li><li>left 元素左边到视窗左的距离</li><li>width</li><li>height</li></ul><p>offsetParent</p><p>==offsetLeft / Top==</p><p>返回当前元素的相对包含块的偏移位置。</p><p>JS 默认把它当成绝对定位属性来寻找包含块，不管是什么属性，都是寻找最近定位父级，如果没找到就是 HTML。</p><p>clientLeft / Top</p><p>clientLeft 等于 border-left。</p><p>==scrollLeft / Top==</p><p>==设置或者获取==当前元素滚动条已经滚动过的距离。（值增大，内容左滚）</p><h3><span id="p3-huo-qu-wen-dang-da-xiao-shi-kou-da-xiao">3、获取文档大小、视口大小</span><a href="#p3-huo-qu-wen-dang-da-xiao-shi-kou-da-xiao" class="header-anchor">#</a></h3><pre class="line-numbers language-js" data-language="js"><code class="language-js"><span class="token comment">// 获取文档大小</span><span class="token keyword">function</span> <span class="token function">getDocSize</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>  <span class="token keyword">var</span> h <span class="token operator">=</span> document<span class="token punctuation">.</span>documentElement<span class="token punctuation">;</span>  <span class="token keyword">var</span> b <span class="token operator">=</span> document<span class="token punctuation">.</span>body<span class="token punctuation">;</span>  <span class="token keyword">return</span> <span class="token punctuation">&#123;</span>    y<span class="token operator">:</span> h<span class="token punctuation">.</span>offsetHeight <span class="token operator">||</span> b<span class="token punctuation">.</span>offsetHeight<span class="token punctuation">,</span>    x<span class="token operator">:</span> h<span class="token punctuation">.</span>offsetWidth <span class="token operator">||</span> b<span class="token punctuation">.</span>offsetWidth<span class="token punctuation">,</span>  <span class="token punctuation">&#125;</span><span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span class="token comment">// 获取视口大小</span><span class="token keyword">function</span> <span class="token function">getWinSize</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>  <span class="token keyword">var</span> h <span class="token operator">=</span> document<span class="token punctuation">.</span>documentElement<span class="token punctuation">;</span>  <span class="token keyword">var</span> b <span class="token operator">=</span> document<span class="token punctuation">.</span>body<span class="token punctuation">;</span>  <span class="token keyword">return</span> <span class="token punctuation">&#123;</span>    y<span class="token operator">:</span> h<span class="token punctuation">.</span>clientHeight <span class="token operator">||</span> b<span class="token punctuation">.</span>clientHeight<span class="token punctuation">,</span>    x<span class="token operator">:</span> h<span class="token punctuation">.</span>clientWidth <span class="token operator">||</span> b<span class="token punctuation">.</span>clientWidth<span class="token punctuation">,</span>  <span class="token punctuation">&#125;</span><span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h3><span id="p4-huo-qu-he-she-zhi-xi-tong-gun-dong-tiao">4、获取和设置系统滚动条</span><a href="#p4-huo-qu-he-she-zhi-xi-tong-gun-dong-tiao" class="header-anchor">#</a></h3><pre class="line-numbers language-js" data-language="js"><code class="language-js"><span class="token comment">// 获取系统滚动条</span><span class="token keyword">function</span> <span class="token function">getDocScroll</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>  <span class="token keyword">var</span> h <span class="token operator">=</span> document<span class="token punctuation">.</span>documentElement<span class="token punctuation">;</span>  <span class="token keyword">var</span> b <span class="token operator">=</span> document<span class="token punctuation">.</span>body<span class="token punctuation">;</span>  <span class="token keyword">var</span> y <span class="token operator">=</span> self<span class="token punctuation">.</span>pageYOffset <span class="token operator">||</span> h<span class="token punctuation">.</span>scrollTop <span class="token operator">||</span> b<span class="token punctuation">.</span>scrollTop<span class="token punctuation">;</span>  <span class="token keyword">var</span> x <span class="token operator">=</span> self<span class="token punctuation">.</span>pageXOffset <span class="token operator">||</span> h<span class="token punctuation">.</span>scrollLeft <span class="token operator">||</span> b<span class="token punctuation">.</span>scrollLeft<span class="token punctuation">;</span>  <span class="token keyword">return</span> <span class="token punctuation">&#123;</span>    x<span class="token operator">:</span> x<span class="token punctuation">,</span>    y<span class="token operator">:</span> y<span class="token punctuation">,</span>  <span class="token punctuation">&#125;</span><span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span class="token comment">// 设置系统滚动条</span><span class="token keyword">function</span> <span class="token function">setDocScroll</span><span class="token punctuation">(</span><span class="token parameter">x<span class="token punctuation">,</span> y</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>  <span class="token keyword">if</span> <span class="token punctuation">(</span>arguments<span class="token punctuation">.</span>length <span class="token operator">===</span> <span class="token number">1</span> <span class="token operator">&amp;&amp;</span> <span class="token keyword">typeof</span> x <span class="token operator">===</span> <span class="token string">"number"</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>    window<span class="token punctuation">.</span><span class="token function">scrollTo</span><span class="token punctuation">(</span>x<span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    document<span class="token punctuation">.</span>documentElement<span class="token punctuation">.</span>scrollLeft <span class="token operator">=</span> x<span class="token punctuation">;</span>    document<span class="token punctuation">.</span>body<span class="token punctuation">.</span>scrollLeft <span class="token operator">=</span> x<span class="token punctuation">;</span>  <span class="token punctuation">&#125;</span>  <span class="token keyword">if</span> <span class="token punctuation">(</span>    arguments<span class="token punctuation">.</span>length <span class="token operator">===</span> <span class="token number">2</span> <span class="token operator">&amp;&amp;</span>    <span class="token keyword">typeof</span> x <span class="token operator">===</span> <span class="token string">"number"</span> <span class="token operator">&amp;&amp;</span>    <span class="token keyword">typeof</span> y <span class="token operator">===</span> <span class="token string">"number"</span>  <span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>    window<span class="token punctuation">.</span><span class="token function">scrollTo</span><span class="token punctuation">(</span>x<span class="token punctuation">,</span> y<span class="token punctuation">)</span><span class="token punctuation">;</span>    document<span class="token punctuation">.</span>documentElement<span class="token punctuation">.</span>scrollLeft <span class="token operator">=</span> x<span class="token punctuation">;</span>    document<span class="token punctuation">.</span>documentElement<span class="token punctuation">.</span>scrollTop <span class="token operator">=</span> y<span class="token punctuation">;</span>    document<span class="token punctuation">.</span>body<span class="token punctuation">.</span>scrollLeft <span class="token operator">=</span> x<span class="token punctuation">;</span>    document<span class="token punctuation">.</span>body<span class="token punctuation">.</span>scrollTop <span class="token operator">=</span> y<span class="token punctuation">;</span>  <span class="token punctuation">&#125;</span><span class="token punctuation">&#125;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>]]></content>
      
      
      <categories>
          
          <category> 2303：DOM </category>
          
      </categories>
      
      
        <tags>
            
            <tag> JavaScript </tag>
            
            <tag> DOMs </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>TCP &amp; UDP</title>
      <link href="/150202/"/>
      <url>/150202/</url>
      
        <content type="html"><![CDATA[<h1><span id="tcp-amp-udp">TCP &amp; UDP</span><a href="#tcp-amp-udp" class="header-anchor">#</a></h1><p>TCP，Transmission Control Protool，传输控制协议是一种面向连接的、可靠的、基于字节流的传输层通信协议，由 IETF 的 RFC-793 定义。是一种面向广域网的通信协议，目的是在跨越多个网络通信时，为两个通信端点之间提供一条具有下列特点的通信方式：</p><ul><li>基于流的方式</li><li>面向连接</li><li>可靠通信方式</li><li>在网络状况不佳的时候尽量降低系统由于重传带来的带宽开销</li><li>通信连接维护是面向通信的两个端点的，而不考虑中间网段和节点</li></ul><p>首先 UDP 协议是<strong>面向无连接</strong>的，也就是说不需要在正式传递数据之前先连接起双方。然后 UDP 协议只是数据报文的搬运工，不保证有序且不丢失的传递到对端，并且 UDP 协议也没有任何控制流量的算法，总的来说 UDP 相较于 TCP 更加的轻便。</p><p>UDP 相比 TCP 简单的多，不需要建立连接，不需要验证数据报文，不需要流量控制，只会把想发的数据报文一股脑的丢给对端。虽然 UDP 并没有 TCP 传输来的准确，但是也能在很多实时性要求高的地方有所作为。</p><p>TCP 建立连接需要三次握手，断开连接需要四次握手。滑动窗口解决了数据的丢包、顺序不对和流量控制问题拥塞窗口实现了对流量的控制，保证在全天候环境下最优的传递数据。</p>]]></content>
      
      
      <categories>
          
          <category> 1502：通信协议 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> TCP </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>通信协议</title>
      <link href="/150201/"/>
      <url>/150201/</url>
      
        <content type="html"><![CDATA[<h1><span id="tong-xin-xie-yi">通信协议</span><a href="#tong-xin-xie-yi" class="header-anchor">#</a></h1>]]></content>
      
      
      <categories>
          
          <category> 1502：通信协议 </category>
          
      </categories>
      
      
    </entry>
    
    
    
    <entry>
      <title>ES this</title>
      <link href="/220203/"/>
      <url>/220203/</url>
      
        <content type="html"><![CDATA[<h1><span id="es-this">ES this</span><a href="#es-this" class="header-anchor">#</a></h1><p>JS 的作用域是静态的，但是函数的调用却是动态的，由于函数可以在不同的运行环境内执行，因此 JS 在函数体内定义了<code>this</code>关键字来获取当前的运行环境。<strong>this</strong> 最终代表的是函数的<strong>执行者，使用者，调用者</strong>。它是一个指针型变量。</p><h2><span id="p1-ru-he-pan-duan-this-zhi-xiang">1、如何判断 this 指向</span><a href="#p1-ru-he-pan-duan-this-zhi-xiang" class="header-anchor">#</a></h2><ul><li>函数是否在<code>new</code>中调用，如果是的话，<code>this</code>绑定的是新创建的对象</li><li>函数是否通过<code>call</code>、<code>apply</code> 显示绑定，如果是，则<code>this</code>绑定的是执行的对象</li><li>函数是否在某个上下文中调用，如果有，则<code>this</code>绑定在这个上下文对象上</li><li>如果都不是，默认绑定<code>window</code></li></ul><h3><span id="p1-1-mo-ren-bang-ding">1.1 默认绑定</span><a href="#p1-1-mo-ren-bang-ding" class="header-anchor">#</a></h3><p><code>this</code> 默认指向 <code>window</code>，在无法应用其他规则的时候使用</p><pre class="line-numbers language-js" data-language="js"><code class="language-js"><span class="token keyword">function</span> <span class="token function">foo</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>  console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span class="token function">foo</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">//window</span><span class="token keyword">var</span> obj <span class="token operator">=</span> <span class="token punctuation">&#123;</span>  <span class="token function-variable function">do</span><span class="token operator">:</span> <span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>    <span class="token function">foo</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>  <span class="token punctuation">&#125;</span><span class="token punctuation">,</span><span class="token punctuation">&#125;</span><span class="token punctuation">;</span><span class="token comment">// foo是直接使用不带任何修饰的函数引用进行调用，因此只能使用默认绑定规则</span>obj<span class="token punctuation">.</span><span class="token function">do</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// window</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h3><span id="p1-2-yin-shi-bang-ding">1.2 隐式绑定</span><a href="#p1-2-yin-shi-bang-ding" class="header-anchor">#</a></h3><p>当函数引用有上下文对象的时候（obj），隐式绑定规则会把函数中的 this 绑定到这个上下文对象上。</p><pre class="line-numbers language-js" data-language="js"><code class="language-js"><span class="token keyword">function</span> <span class="token function">foo</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>  console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">.</span>a<span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span class="token keyword">var</span> obj <span class="token operator">=</span> <span class="token punctuation">&#123;</span> a<span class="token operator">:</span> <span class="token number">2</span><span class="token punctuation">,</span> foo<span class="token operator">:</span> foo <span class="token punctuation">&#125;</span><span class="token punctuation">;</span>obj<span class="token punctuation">.</span><span class="token function">foo</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// 2</span><span class="token comment">// 当foo调用的时候，它的落脚点确实是指向的obj对象，当函数引用有上下文对象的时候（obj），隐式绑定规则会把函数中的this绑定到这个上下文对象上。</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>隐式绑定可能会出现隐式丢失问题。被隐式绑定的函数，丢失了绑定对象</p><pre class="line-numbers language-js" data-language="js"><code class="language-js"><span class="token keyword">function</span> <span class="token function">foo</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>  console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">.</span>a<span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span class="token keyword">var</span> obj <span class="token operator">=</span> <span class="token punctuation">&#123;</span>  a<span class="token operator">:</span> <span class="token number">2</span><span class="token punctuation">,</span>  foo<span class="token operator">:</span> foo<span class="token punctuation">,</span><span class="token punctuation">&#125;</span><span class="token punctuation">;</span><span class="token keyword">var</span> fn1 <span class="token operator">=</span> obj<span class="token punctuation">.</span>foo<span class="token punctuation">;</span><span class="token keyword">var</span> a <span class="token operator">=</span> <span class="token string">"hello"</span><span class="token punctuation">;</span><span class="token function">fn1</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// hello</span><span class="token comment">// 虽然fn1是obj.foo的一个引用，但是实际上它的引用是foo函数本身，因此fn1其实是一个不带任何修饰的函数调用，属于默认绑定</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>每个函数对象都有 call 和 apply 方法，本质是设置函数体内 this 对象的值。</p><h2><span id="p2-call-apply-bind">2、call、apply、bind</span><a href="#p2-call-apply-bind" class="header-anchor">#</a></h2><p><code>call</code>、<code>apply</code>、<code>bind</code> 是 <a href>Function</a> 对象自带的方法。</p><p>这三个函数的存在意义是<strong>改变函数执行时的上下文</strong>，再具体一点就是<strong>改变函数运行时的 this 指向</strong>。</p><h3><span id="p2-1-call">2.1 call</span><a href="#p2-1-call" class="header-anchor">#</a></h3><p><strong>call()</strong> 方法在使用一个指定的 this 值和若干个指定的参数值的前提下调用某个函数或方法。当调用一个函数时，可以赋值一个不同的 <code>this</code> 对象。<code>this</code> 引用当前对象，即 <code>call</code> 方法的第一个参数。</p><p>通过 <code>call</code> 方法，你可以在一个对象上借用另一个对象上的方法</p><pre class="line-numbers language-js" data-language="js"><code class="language-js"><span class="token comment">// 语法</span><span class="token function">fun</span><span class="token punctuation">.</span><span class="token function">call</span><span class="token punctuation">(</span> thisArg<span class="token punctuation">[</span><span class="token punctuation">,</span> arg1<span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token comment">// 参数列表</span><span class="token comment">// - thisArg 指定函数运行时的 this值</span><span class="token comment">//   - 不传，或者传 null，undefined， 函数中的this指向window对象</span><span class="token comment">//   - 传递另一个函数的函数名，函数中的this指向这个函数的引用，并不一定是该函数执行时真正的this值</span><span class="token comment">//   - 值为原始值(数字，字符串，布尔值)的this会指向该原始值的自动包装对象，如 String Number Boolean</span><span class="token comment">//   - 传递一个对象，函数中的this指向这个对象</span><span class="token comment">// - arg 函数所需要的参数，逗号间隔</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><pre class="line-numbers language-js" data-language="js"><code class="language-js"><span class="token keyword">function</span> <span class="token function">a</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>  <span class="token comment">//输出函数a中的this对象</span>  console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span class="token comment">//定义函数b</span><span class="token keyword">function</span> <span class="token function">b</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span><span class="token punctuation">&#125;</span><span class="token keyword">var</span> obj <span class="token operator">=</span> <span class="token punctuation">&#123;</span> name<span class="token operator">:</span> <span class="token string">"我是obj"</span> <span class="token punctuation">&#125;</span><span class="token punctuation">;</span> <span class="token comment">//定义对象obj</span><span class="token function">a</span><span class="token punctuation">.</span><span class="token function">call</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">//window</span><span class="token function">a</span><span class="token punctuation">.</span><span class="token function">call</span><span class="token punctuation">(</span><span class="token keyword">null</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">//window</span><span class="token function">a</span><span class="token punctuation">.</span><span class="token function">call</span><span class="token punctuation">(</span><span class="token keyword">undefined</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">//window</span><span class="token function">a</span><span class="token punctuation">.</span><span class="token function">call</span><span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">//Number</span><span class="token function">a</span><span class="token punctuation">.</span><span class="token function">call</span><span class="token punctuation">(</span><span class="token string">""</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">//String</span><span class="token function">a</span><span class="token punctuation">.</span><span class="token function">call</span><span class="token punctuation">(</span><span class="token boolean">true</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">//Boolean</span><span class="token function">a</span><span class="token punctuation">.</span><span class="token function">call</span><span class="token punctuation">(</span>b<span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// function b()&#123;&#125;</span><span class="token function">a</span><span class="token punctuation">.</span><span class="token function">call</span><span class="token punctuation">(</span>obj<span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">//Object</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h3><span id="p2-2-apply">2.2 apply</span><a href="#p2-2-apply" class="header-anchor">#</a></h3><p><strong>apply</strong>() 语法与 <code>call()</code> 方法的语法几乎完全相同，唯一的区别在于，apply 的第二个参数必须是一个包含多个参数的数组（或类数组对象）。</p><h3><span id="p2-3-bind">2.3 bind</span><a href="#p2-3-bind" class="header-anchor">#</a></h3><p><code>bind</code> 函数会创建一个新函数（称为绑定函数）</p><ul><li>传参和 call 或 apply 类似</li><li>不会执行对应的函数，call 或 apply 会自动执行对应的函数</li><li>返回对函数的引用</li><li>语法 <code>fun.bind(thisArg[, arg1[, arg2[, ...]]])</code>。</li></ul><h3><span id="p2-4-call-de-shi-xian">2.4 call 的实现</span><a href="#p2-4-call-de-shi-xian" class="header-anchor">#</a></h3><pre class="line-numbers language-js" data-language="js"><code class="language-js"><span class="token keyword">function</span> <span class="token function">call</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>  <span class="token comment">// 1. 把调用call方法的对象this指向call方法的第一个参数</span>  <span class="token comment">// 2. 调用call方法的自己的this</span><span class="token punctuation">&#125;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span></span></code></pre>]]></content>
      
      
      <categories>
          
          <category> 2202：ES高级 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> JavaScript </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>NodeJS 核心模块</title>
      <link href="/220504/"/>
      <url>/220504/</url>
      
        <content type="html"><![CDATA[<h1><span id="node-he-xin-mo-kuai">Node 核心模块</span><a href="#node-he-xin-mo-kuai" class="header-anchor">#</a></h1><h1><span id="process">process</span><a href="#process" class="header-anchor">#</a></h1><p>进程模块，无需<code>require</code>。</p><p><code>.MODE_ENV</code> 设置是开发环境还是生产环境</p><p><code>cwd()</code> 返回当前进程的绝对路径</p><p><code>exit()</code></p><h1><span id="buffer-mo-kuai">buffer 模块</span><a href="#buffer-mo-kuai" class="header-anchor">#</a></h1><p><code>Buffer</code> 是一个和数组类似的对象，是专门用来保存二进制数据的（数据储存为二进制数据，性能是最好的）。</p><p>在全局作用域上，不需要引用直接使用。</p><p>1 Byte = 8 bit</p><p>一个字母 1 字节</p><p>一个汉字或者全角 3 字节</p><h1><span id="path-mo-kuai-chang-yong">path 模块 <code>常用</code></span><a href="#path-mo-kuai-chang-yong" class="header-anchor">#</a></h1><p><code>path</code> 是专门用于处理文件路径、目录的核心模块。</p><pre class="line-numbers language-js" data-language="js"><code class="language-js"><span class="token keyword">const</span> path <span class="token operator">=</span> <span class="token function">require</span><span class="token punctuation">(</span><span class="token string">"path"</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><h2><span id="presolve">resolve</span><a href="#presolve" class="header-anchor">#</a></h2><p><code>resolve</code> 方法将目录或者路径片段的序列解析成绝对路径。</p><pre class="line-numbers language-js" data-language="js"><code class="language-js">path<span class="token punctuation">.</span><span class="token function">resolve</span><span class="token punctuation">(</span><span class="token string">"./index.html"</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><h2><span id="phuo-qu-dang-qian-wen-jian-jia">获取当前文件夹</span><a href="#phuo-qu-dang-qian-wen-jian-jia" class="header-anchor">#</a></h2><p><code>__dirname</code> 表示当前目录。</p><p>常用 <code>path.resolve(__dirname, &quot;xxxx&quot;)</code></p><h1><span id="fs-mo-kuai-chong-dian">fs 模块 <code>重点</code></span><a href="#fs-mo-kuai-chong-dian" class="header-anchor">#</a></h1><p><code>fs</code> 就是 <code>file system</code> 是 NodeJS 核心的文件系统。</p><pre class="line-numbers language-js" data-language="js"><code class="language-js"><span class="token keyword">const</span> fs <span class="token operator">=</span> <span class="token function">require</span><span class="token punctuation">(</span><span class="token string">"fs"</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>该模块大部分方法提供了两个版本的方法，同步和异步。</p><ul><li><p>同步方法 带<code>sync</code>的方法</p><p>同步方法会阻塞程序的执行</p><p>同步方法通过返回值返回结果</p></li><li><p>异步方法 不带 sync 的方法</p><p>异步方法不会阻塞程序的执行</p><p>异步方法都是通过回调函数来返回结果的</p></li></ul><h2><span id="pwen-jian-de-du-qu">文件的读取</span><a href="#pwen-jian-de-du-qu" class="header-anchor">#</a></h2><h3><span id="p-1-jian-dan-du-qu-wen-jian">（1）简单读取文件</span><a href="#p-1-jian-dan-du-qu-wen-jian" class="header-anchor">#</a></h3><p><code>fs.readFileSync(path[, options])</code><br><code>fs.readFile(path[, options], callback)</code></p><ul><li><p>path 读取文件的路径</p></li><li><p>options 配置对象 默认如下： <code>&#123;encoding:&quot;utf8&quot;,flag:&quot;w&quot;,mode:0666&#125;</code></p></li><li><p>callback 回调函数，通过回调函数返回读取到的数据</p><p>err 错误对象</p><p>data 返回的数据（Buffer）</p></li></ul><h3><span id="p-2-shi-yong-promisify-jie-jue-yi-bu-wen-ti">（2）使用 promisify 解决异步问题</span><a href="#p-2-shi-yong-promisify-jie-jue-yi-bu-wen-ti" class="header-anchor">#</a></h3><pre class="line-numbers language-js" data-language="js"><code class="language-js"><span class="token comment">//案例1</span><span class="token keyword">const</span> <span class="token punctuation">&#123;</span> promisify <span class="token punctuation">&#125;</span> <span class="token operator">=</span> <span class="token function">require</span><span class="token punctuation">(</span><span class="token string">"util"</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token keyword">const</span> readFile <span class="token operator">=</span> <span class="token function">promisify</span><span class="token punctuation">(</span>fs<span class="token punctuation">.</span>readFile<span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token function">readFile</span><span class="token punctuation">(</span><span class="token string">"./conf.js"</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">then</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token parameter">data</span><span class="token punctuation">)</span> <span class="token operator">=></span> console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>data<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">(</span>  <span class="token comment">//案例2</span>  <span class="token keyword">async</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=></span> <span class="token punctuation">&#123;</span>    <span class="token keyword">const</span> fs <span class="token operator">=</span> <span class="token function">require</span><span class="token punctuation">(</span><span class="token string">"fs"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token keyword">const</span> <span class="token punctuation">&#123;</span> promisify <span class="token punctuation">&#125;</span> <span class="token operator">=</span> <span class="token function">require</span><span class="token punctuation">(</span><span class="token string">"util"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token keyword">const</span> readFile <span class="token operator">=</span> <span class="token function">promisify</span><span class="token punctuation">(</span>fs<span class="token punctuation">.</span>readFile<span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token keyword">const</span> data <span class="token operator">=</span> <span class="token keyword">await</span> <span class="token function">readFile</span><span class="token punctuation">(</span><span class="token string">"./index.html"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">"data"</span><span class="token punctuation">,</span> data<span class="token punctuation">)</span><span class="token punctuation">;</span>  <span class="token punctuation">&#125;</span><span class="token punctuation">)</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h3><span id="p-3-liu-shi-du-qu-wen-jian">（3）流式读取文件</span><a href="#p-3-liu-shi-du-qu-wen-jian" class="header-anchor">#</a></h3><p>适用于较大的文件。</p><h2><span id="pwen-jian-de-xie-ru">文件的写入</span><a href="#pwen-jian-de-xie-ru" class="header-anchor">#</a></h2><h3><span id="p-1-tong-bu-xie">（1）同步写</span><a href="#p-1-tong-bu-xie" class="header-anchor">#</a></h3><p>打开，写入，==关闭==。</p><p><code>fs.openSync(path[, flags, mode])</code></p><ul><li><p><code>path</code> 文件路径</p></li><li><p><code>flag</code> 文件系统标志<br><code>a</code> 追加，如果不存在就创建<br><code>w</code> 用于写，如果不存在就创建，存在覆盖<br><code>r</code> 用于读，如果不存在就异常（默认）</p></li><li><p><code>mode</code> 设置下一次打开文件时候的权限。<br><code>0o666</code> <code>110110110</code> 可读可写<br><code>0o111</code> <code>001001001</code> 可执行<br><code>0o222</code> <code>010010010</code> 可写<br><code>0o333</code> <code>100100100</code> 可读</p></li><li><p>返回文件描述符</p></li></ul><p><code>fs.writeSync(fd, buffer[, offset, length, position, encoding])</code></p><ul><li><code>fd</code> 文件描述符</li><li><code>buffer</code> 要写入的内容</li><li><code>offset</code></li><li><code>length</code></li><li><code>position</code></li><li><code>encoding</code> 写人文件的编码，默认<code>utf-8</code></li></ul><p><code>fs.closeSync(fd)</code></p><h3><span id="p-2-yi-bu-xie">（2）异步写</span><a href="#p-2-yi-bu-xie" class="header-anchor">#</a></h3><p><code>fs.open( path, flags[, ], (err, data)=&gt;&#123;&#125;)</code></p><ul><li>回调函数<code>err</code>在前是因为 NodeJS 是==错误优先处理机制==。如果有错误返回错误对象，否则返回<code>null</code>。<code>data</code> 就是文件描述符。</li><li>异步得到结果在回调函数中。</li></ul><p><code>fs.write(fd, string, call, (err, data)=&gt;&#123;&#125;)</code></p><p><code>fs.close(fd)</code></p><p>无论写入成功或者失败都要关闭文件。</p><h2><span id="pliu-shi-wen-jian-cao-zuo">流式文件操作</span><a href="#pliu-shi-wen-jian-cao-zuo" class="header-anchor">#</a></h2><ul><li>fs 模块处理文件的缺点：将文件的数据全读到内存中，在把数据写到文件内，会大量占用内存</li><li>流（stream）是 Node.js 中处理流式数据的抽象接口，是一组有序的，有起点和终点的字节数据传输手段。可以实现将数据从一个地方流动到另一个地方，其边读取边写入的特点有别于 fs 模块的文件处理，并且可以做到控制读取文件和写入文件的速度，从而减少内存的占用</li><li>流是基于事件的，所有的流对象都用 on(once)绑定事件，并触发</li><li>流式文件写入适用于一些比较大的文件，可以分多次向文件中写入内容，有效避免内存溢出的问题。</li></ul><pre class="line-numbers language-none"><code class="language-none">fs.createWriteStream(path[, options])<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><pre class="line-numbers language-js" data-language="js"><code class="language-js"><span class="token keyword">const</span> fs <span class="token operator">=</span> <span class="token function">require</span><span class="token punctuation">(</span><span class="token string">"fs"</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token keyword">const</span> path <span class="token operator">=</span> <span class="token function">require</span><span class="token punctuation">(</span><span class="token string">"path"</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token keyword">const</span> inputFilePath <span class="token operator">=</span> <span class="token string">"//Users//lipeihua//Desktop//nodeJS//08.简单文件写入.mp4"</span><span class="token punctuation">;</span><span class="token keyword">const</span> outputFilePath <span class="token operator">=</span> path<span class="token punctuation">.</span><span class="token function">resolve</span><span class="token punctuation">(</span>__dirname<span class="token punctuation">,</span> <span class="token string">"d.mp4"</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment">// 创建可读流 会自动关闭</span><span class="token keyword">const</span> rs <span class="token operator">=</span> fs<span class="token punctuation">.</span><span class="token function">createReadStream</span><span class="token punctuation">(</span>inputFilePath<span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment">// 创建可写流 不会自动关闭，需要手动关闭</span><span class="token keyword">const</span> ws <span class="token operator">=</span> fs<span class="token punctuation">.</span><span class="token function">createWriteStream</span><span class="token punctuation">(</span>outputFilePath<span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment">/* rs.on('data', (chunk) => &#123;  // 当数据读取出来，要写入成另外一个文件  ws.write(chunk);&#125;).once('end', () => &#123;  // 可读流全部读取完毕了，关闭可写流  ws.end();&#125;) */</span><span class="token comment">// pipe会持续性消费可读流数据</span><span class="token comment">// 将可读流数据写入到可写流中</span><span class="token comment">// 会自动关闭可写流</span>rs<span class="token punctuation">.</span><span class="token function">pipe</span><span class="token punctuation">(</span>ws<span class="token punctuation">)</span><span class="token punctuation">;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h1><span id="events-mo-kuai">events 模块</span><a href="#events-mo-kuai" class="header-anchor">#</a></h1><p>事件触发器。</p><p><code>once()</code> 函数可注册最多只监听一次的函数。</p>]]></content>
      
      
      <categories>
          
          <category> 2205：NodeJS </category>
          
      </categories>
      
      
        <tags>
            
            <tag> JavaScript </tag>
            
            <tag> Node </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>nginx</title>
      <link href="/310501/"/>
      <url>/310501/</url>
      
        <content type="html"><![CDATA[<h1><span id="nginx">nginx</span><a href="#nginx" class="header-anchor">#</a></h1><p>反向代理</p>]]></content>
      
      
      <categories>
          
          <category> 3105：nginx </category>
          
      </categories>
      
      
        <tags>
            
            <tag> nginx </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>json-server</title>
      <link href="/310203/"/>
      <url>/310203/</url>
      
        <content type="html"><![CDATA[<h1><span id="json-server">json-server</span><a href="#json-server" class="header-anchor">#</a></h1><p>用来快速搭建模拟的 REST API 的工具包。</p><h2><span id="p1-kai-shi">1、开始</span><a href="#p1-kai-shi" class="header-anchor">#</a></h2><p>（1）安装</p><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash">npm i json-server -g<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>（2）查看版本</p><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash">json-server -v<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>（3）准备一个 db.json</p><pre class="line-numbers language-json" data-language="json"><code class="language-json">&#x2F;&#x2F; db.json&#123;    &quot;sword&quot;: [&#123;        &quot;id&quot;: 0,        &quot;name&quot;: &quot;木剑&quot;,        &quot;attr&quot;: &#123;            &quot;atk&quot;: 1,            &quot;parry&quot;: 1        &#125;    &#125;,&#123;        &quot;id&quot;: 1,        &quot;name&quot;: &quot;铜剑&quot;,        &quot;attr&quot;: &#123;            &quot;atk&quot;: 5,            &quot;parry&quot;: 3        &#125;    &#125;,&#123;        &quot;id&quot;: 2,        &quot;name&quot;: &quot;铁剑&quot;,        &quot;attr&quot;: &#123;            &quot;atk&quot;: 8,            &quot;parry&quot;: 6        &#125;    &#125;&#123;        &quot;id&quot;: 3,        &quot;name&quot;: &quot;钢剑&quot;,        &quot;attr&quot;: &#123;            &quot;atk&quot;: 12,            &quot;parry&quot;: 10        &#125;    &#125;],    &quot;shield&quot;: [&#123;        &quot;id&quot;: 0,        &quot;name&quot;: &quot;木盾&quot;,        &quot;def&quot;: 5    &#125;]&#125;<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>（4）配置服务器</p><pre class="line-numbers language-json" data-language="json"><code class="language-json">&#x2F;&#x2F; package.json&#x2F;&#x2F; &gt; npm run server&#123;  &quot;scripts&quot;: &#123;    &quot;s&quot;: &quot;json-server -w db.json -H 127.0.0.1 -p 8888&quot;  &#125;,  &quot;name&quot;: &quot;server&quot;,  &quot;version&quot;: &quot;1.0.0&quot;,  &quot;dependencies&quot;: &#123;&#125;&#125;<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><pre class="line-numbers language-json" data-language="json"><code class="language-json">&#x2F;&#x2F; json-server.json&#123;  &quot;port&quot;: 80,  &quot;watch&quot;: true,  &quot;host&quot;: &quot;127.0.0.1&quot;,  &#x2F;&#x2F; 设置静态目录  &quot;static&quot;: &quot;.&#x2F;public&quot;,  &quot;read-only&quot;: false,  &#x2F;&#x2F; 允许跨域  &quot;no-cors&quot;: false,  &quot;no-gzip&quot;: false,  &quot;delay&quot;: 0&#125;<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>（5）开启服务器</p><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash">json-server --watch db.json<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash">json-server --watch db.json --host 127.0.0.1 --port 8888<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash">npm run server<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre>]]></content>
      
      
      <categories>
          
          <category> 3102：接口 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> JavaScript </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>RESTful API</title>
      <link href="/310202/"/>
      <url>/310202/</url>
      
        <content type="html"><![CDATA[<h1><span id="restful-api">RESTful API</span><a href="#restful-api" class="header-anchor">#</a></h1><p>REST，Representational State Transfer，表现层状态转移的缩写，它是由罗伊·菲尔丁（Roy Fielding）提出的，是用来描述创建 HTTP API 的标准方法的，他发现这四种常用的行为（查看（view），创建（create），编辑（edit）和删除（delete））都可以直接映射到 HTTP 中已实现的 GET，POST，PUT 和 DELETE 方法。</p><h2><span id="pcao-zuo">操作</span><a href="#pcao-zuo" class="header-anchor">#</a></h2><p>查询 - get</p><p>（1）get <code>books</code></p><pre class="line-numbers language-none"><code class="language-none">..&#x2F;sword<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>（2）get id 为 1</p><pre class="line-numbers language-none"><code class="language-none">..&#x2F;sword&#x2F;1<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><pre class="line-numbers language-none"><code class="language-none">..&#x2F;sword?id&#x3D;1<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>（3）单条件查找</p><pre class="line-numbers language-none"><code class="language-none">..&#x2F;sword?name&#x3D;铁剑<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>（4）多条件查找</p><pre class="line-numbers language-none"><code class="language-none">..&#x2F;sword?name&#x3D;铁剑&amp;atk&#x3D;10<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>（5）全局模糊搜索</p><pre class="line-numbers language-none"><code class="language-none">..&#x2F;sword?q&#x3D;剑<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>（6）分页</p><pre class="line-numbers language-none"><code class="language-none">..&#x2F;sword?_limit&#x3D;1&amp;_page&#x3D;1<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>（7）排序（asc/desc）</p><pre class="line-numbers language-none"><code class="language-none">..&#x2F;sword?sort&#x3D;id&amp;_order&#x3D;desc<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>添加数据 - post</p><p>postman 中测试，设置主体 x-www-form-urlencoded</p><p>删除数据 - delete</p><p>postman 中测试</p><pre class="line-numbers language-none"><code class="language-none">..&#x2F;sword&#x2F;6<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>整体更新数据 - put</p><p>postman 中测试，设置主体 x-www-form-urlencoded</p><p>局部更新数据 - fatch</p><p>postman 中测试，设置主体 x-www-form-urlencoded</p><p><a href="https://blog.csdn.net/u012149969/article/details/108394159">参考文档</a></p>]]></content>
      
      
      <categories>
          
          <category> 3102：接口 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> JavaScript </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>接口</title>
      <link href="/310201/"/>
      <url>/310201/</url>
      
        <content type="html"><![CDATA[<p>使用 MockJS 拦截接口请求，模拟数据。<br>接口联调。</p>]]></content>
      
      
      <categories>
          
          <category> 3102：接口 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> JavaScript </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Express</title>
      <link href="/310301/"/>
      <url>/310301/</url>
      
        <content type="html"><![CDATA[<h1><span id="express">Express</span><a href="#express" class="header-anchor">#</a></h1><p>Express 是一个保持最小规模的灵活的 Node.js Web 应用程序开发框架，为 Web 和移动应用程序提供一组强大的功能。</p><h2><span id="p1-an-zhuang">1、安装</span><a href="#p1-an-zhuang" class="header-anchor">#</a></h2><p>安装模块</p><p><code>npm install express --save</code></p><p>创建一个 express 项目</p><p><code>express 项目名字</code></p><p>安装 express 的中间件 express-static</p><p><code>npm install express-static --save</code></p><p>安装 express 项目生成器</p><p><code>npm install express-generator -g</code></p><h2><span id="p2-kai-qi-fu-wu-qi">2、开启服务器</span><a href="#p2-kai-qi-fu-wu-qi" class="header-anchor">#</a></h2><pre class="line-numbers language-js" data-language="js"><code class="language-js"><span class="token keyword">const</span> express <span class="token operator">=</span> <span class="token function">require</span><span class="token punctuation">(</span><span class="token string">"express"</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token keyword">const</span> app <span class="token operator">=</span> <span class="token function">express</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token comment">//port</span>app<span class="token punctuation">.</span><span class="token function">listen</span><span class="token punctuation">(</span><span class="token number">80</span><span class="token punctuation">,</span> <span class="token keyword">function</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">&#123;</span>    <span class="token operator">...</span><span class="token punctuation">&#125;</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>http 默认 80 端口，https 默认 443 端口。</p><h2><span id="p3-she-zhi-jing-tai-zi-yuan-mu-lu">3、设置静态资源目录</span><a href="#p3-she-zhi-jing-tai-zi-yuan-mu-lu" class="header-anchor">#</a></h2><pre class="line-numbers language-js" data-language="js"><code class="language-js">app<span class="token punctuation">.</span><span class="token function">use</span><span class="token punctuation">(</span>express<span class="token punctuation">.</span><span class="token function">static</span><span class="token punctuation">(</span>path<span class="token punctuation">.</span><span class="token function">resolve</span><span class="token punctuation">(</span>__dirname<span class="token punctuation">,</span> <span class="token string">"../xxx"</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>！明确到一个文件夹。</p><p>！可以指定多个。</p><h2><span id="p4-she-zhi-lu-you">4、设置路由</span><a href="#p4-she-zhi-lu-you" class="header-anchor">#</a></h2><pre class="line-numbers language-js" data-language="js"><code class="language-js">app<span class="token punctuation">.</span>allapp<span class="token punctuation">.</span><span class="token function">get</span><span class="token punctuation">(</span> <span class="token constant">URL</span><span class="token punctuation">,</span> <span class="token punctuation">(</span><span class="token parameter">req<span class="token punctuation">,</span> res</span><span class="token punctuation">)</span><span class="token operator">=></span><span class="token punctuation">&#123;</span><span class="token punctuation">&#125;</span><span class="token punctuation">)</span>app<span class="token punctuation">.</span><span class="token function">post</span><span class="token punctuation">(</span> <span class="token constant">URL</span><span class="token punctuation">,</span> <span class="token punctuation">(</span><span class="token parameter">req<span class="token punctuation">,</span> res</span><span class="token punctuation">)</span><span class="token operator">=></span><span class="token punctuation">&#123;</span><span class="token punctuation">&#125;</span><span class="token punctuation">)</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span></span></code></pre><p>如果指定多个，当遇到访问方法和地址相同时，遇到第一个，默认不会向下执行 – <strong>只会匹配第一个</strong></p><p>只能响应一次。</p><blockquote><p>也可以用 <code>next()</code> 继续向下查找是否有满足条件的路由。</p><p>第二次响应没有意义。</p></blockquote><pre class="line-numbers language-js" data-language="js"><code class="language-js"><span class="token comment">// 允许所有站点跨域</span>app<span class="token punctuation">.</span><span class="token function">all</span><span class="token punctuation">(</span><span class="token string">"*"</span><span class="token punctuation">,</span> <span class="token punctuation">(</span><span class="token parameter">req<span class="token punctuation">,</span>res</span><span class="token punctuation">)</span><span class="token operator">=></span><span class="token punctuation">&#123;</span>    res<span class="token punctuation">.</span><span class="token function">header</span><span class="token punctuation">(</span><span class="token string">"Access-Control-Allow-Origin"</span><span class="token punctuation">)</span><span class="token punctuation">,</span><span class="token string">"*"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token function">next</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span class="token punctuation">)</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span></span></code></pre><h2><span id="p5-jie-shou-shu-ju">5、接收数据</span><a href="#p5-jie-shou-shu-ju" class="header-anchor">#</a></h2><h3><span id="pbody-parser">body-parser</span><a href="#pbody-parser" class="header-anchor">#</a></h3><p>接收 post 方式传来的数据。</p><pre class="line-numbers language-js" data-language="js"><code class="language-js"><span class="token keyword">const</span> bodyParser <span class="token operator">=</span> <span class="token function">require</span><span class="token punctuation">(</span><span class="token string">"body-parser"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>app<span class="token punctuation">.</span><span class="token function">user</span><span class="token punctuation">(</span>bodyParser<span class="token punctuation">.</span><span class="token function">json</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token keyword">const</span> <span class="token punctuation">&#123;</span> context <span class="token punctuation">&#125;</span> <span class="token operator">=</span> req<span class="token punctuation">.</span>body<span class="token punctuation">;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span></span></code></pre><h3><span id="pquery-params">query / params</span><a href="#pquery-params" class="header-anchor">#</a></h3><p>接收 get 方式传来的数据。</p><pre class="line-numbers language-js" data-language="js"><code class="language-js"><span class="token comment">// "?age=123"</span><span class="token keyword">const</span> age <span class="token operator">=</span> req<span class="token punctuation">.</span>query<span class="token punctuation">.</span>age <span class="token operator">/</span> <span class="token number">1</span><span class="token punctuation">;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre>]]></content>
      
      
      <categories>
          
          <category> 3103：Express </category>
          
      </categories>
      
      
        <tags>
            
            <tag> JavaScript </tag>
            
            <tag> Node </tag>
            
            <tag> Express </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>静态资源服务器</title>
      <link href="/310103/"/>
      <url>/310103/</url>
      
        <content type="html"><![CDATA[<h1><span id="jing-tai-zi-yuan-fu-wu-qi">静态资源服务器</span><a href="#jing-tai-zi-yuan-fu-wu-qi" class="header-anchor">#</a></h1><pre class="line-numbers language-js" data-language="js"><code class="language-js"><span class="token comment">// 引入相关模块</span><span class="token keyword">const</span> http <span class="token operator">=</span> <span class="token function">require</span><span class="token punctuation">(</span><span class="token string">"http"</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token keyword">const</span> fs <span class="token operator">=</span> <span class="token function">require</span><span class="token punctuation">(</span><span class="token string">"fs"</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token keyword">const</span> path <span class="token operator">=</span> <span class="token function">require</span><span class="token punctuation">(</span><span class="token string">"path"</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment">// 手动封装 Promise，解决回调问题</span><span class="token keyword">function</span> <span class="token function">readFile</span><span class="token punctuation">(</span><span class="token parameter">filePath</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>  <span class="token keyword">return</span> <span class="token keyword">new</span> <span class="token class-name">Promise</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token parameter">resolve<span class="token punctuation">,</span> reject</span><span class="token punctuation">)</span> <span class="token operator">=></span> <span class="token punctuation">&#123;</span>    fs<span class="token punctuation">.</span><span class="token function">readFile</span><span class="token punctuation">(</span>filePath<span class="token punctuation">,</span> <span class="token punctuation">(</span><span class="token parameter">err<span class="token punctuation">,</span> data</span><span class="token punctuation">)</span> <span class="token operator">=></span> <span class="token punctuation">&#123;</span>      <span class="token keyword">if</span> <span class="token punctuation">(</span>err<span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>        <span class="token function">reject</span><span class="token punctuation">(</span>err<span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token keyword">return</span><span class="token punctuation">;</span>      <span class="token punctuation">&#125;</span>      <span class="token keyword">const</span> fileContent <span class="token operator">=</span> data<span class="token punctuation">.</span><span class="token function">toString</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>      <span class="token function">resolve</span><span class="token punctuation">(</span>fileContent<span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">&#125;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>  <span class="token punctuation">&#125;</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span class="token comment">// 创建一个服务器</span><span class="token keyword">const</span> server <span class="token operator">=</span> http<span class="token punctuation">.</span><span class="token function">createServer</span><span class="token punctuation">(</span><span class="token keyword">async</span> <span class="token punctuation">(</span><span class="token parameter">req<span class="token punctuation">,</span> res</span><span class="token punctuation">)</span> <span class="token operator">=></span> <span class="token punctuation">&#123;</span>  <span class="token keyword">try</span> <span class="token punctuation">&#123;</span>    <span class="token comment">// 获取读取文件的路径</span>    <span class="token keyword">const</span> filePath <span class="token operator">=</span> path<span class="token punctuation">.</span><span class="token function">resolve</span><span class="token punctuation">(</span>__dirname<span class="token punctuation">,</span> <span class="token string">"./server.js"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token keyword">const</span> data <span class="token operator">=</span> <span class="token keyword">await</span> <span class="token function">readFile</span><span class="token punctuation">(</span>filePath<span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token comment">// 设置响应头类型</span>    res<span class="token punctuation">.</span><span class="token function">setHeader</span><span class="token punctuation">(</span><span class="token string">"Content-Type"</span><span class="token punctuation">,</span> <span class="token string">"application/javascript;charset=utf-8"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token comment">// 设置响应状态码</span>    res<span class="token punctuation">.</span>statusCode <span class="token operator">=</span> <span class="token number">200</span><span class="token punctuation">;</span>    <span class="token comment">// 响应内容</span>    res<span class="token punctuation">.</span><span class="token function">end</span><span class="token punctuation">(</span>data<span class="token punctuation">)</span><span class="token punctuation">;</span>  <span class="token punctuation">&#125;</span> <span class="token keyword">catch</span> <span class="token punctuation">(</span>err<span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>    console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">"读取文件失败"</span><span class="token punctuation">,</span> err<span class="token punctuation">)</span><span class="token punctuation">;</span>    res<span class="token punctuation">.</span><span class="token function">setHeader</span><span class="token punctuation">(</span><span class="token string">"Content-Type"</span><span class="token punctuation">,</span> <span class="token string">"application/javascript;charset=utf-8"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    res<span class="token punctuation">.</span>statusCode <span class="token operator">=</span> <span class="token number">404</span><span class="token punctuation">;</span>    res<span class="token punctuation">.</span><span class="token function">end</span><span class="token punctuation">(</span><span class="token string">"文件资源加载失败"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>  <span class="token punctuation">&#125;</span><span class="token punctuation">&#125;</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment">// 配置服务器</span><span class="token keyword">const</span> port <span class="token operator">=</span> <span class="token string">"8080"</span><span class="token punctuation">;</span><span class="token keyword">const</span> host <span class="token operator">=</span> <span class="token string">"127.0.0.1"</span><span class="token punctuation">;</span><span class="token comment">// 启动服务器</span>server<span class="token punctuation">.</span><span class="token function">listen</span><span class="token punctuation">(</span>port<span class="token punctuation">,</span> host<span class="token punctuation">,</span> <span class="token punctuation">(</span><span class="token parameter">err</span><span class="token punctuation">)</span> <span class="token operator">=></span> <span class="token punctuation">&#123;</span>  <span class="token keyword">if</span> <span class="token punctuation">(</span>err<span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>    console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">"服务器创建失败"</span> <span class="token operator">+</span> err<span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token keyword">return</span><span class="token punctuation">;</span>  <span class="token punctuation">&#125;</span>  <span class="token keyword">const</span> url <span class="token operator">=</span> <span class="token template-string"><span class="token template-punctuation string">`</span><span class="token string">http://</span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">$&#123;</span>host<span class="token interpolation-punctuation punctuation">&#125;</span></span><span class="token string">:</span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">$&#123;</span>port<span class="token interpolation-punctuation punctuation">&#125;</span></span><span class="token template-punctuation string">`</span></span><span class="token punctuation">;</span>  console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token template-string"><span class="token template-punctuation string">`</span><span class="token string">服务器已启动，请访问</span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">$&#123;</span>url<span class="token interpolation-punctuation punctuation">&#125;</span></span><span class="token template-punctuation string">`</span></span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>]]></content>
      
      
      <categories>
          
          <category> 3101：服务器基础 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> JavaScript </tag>
            
            <tag> Node </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Node 服务器基础</title>
      <link href="/310102/"/>
      <url>/310102/</url>
      
        <content type="html"><![CDATA[<h1><span id="node-fu-wu-qi-ji-chu">Node 服务器基础</span><a href="#node-fu-wu-qi-ji-chu" class="header-anchor">#</a></h1><h2><span id="p1-da-jian-fu-wu-qi">1、搭建服务器</span><a href="#p1-da-jian-fu-wu-qi" class="header-anchor">#</a></h2><pre class="line-numbers language-js" data-language="js"><code class="language-js"><span class="token keyword">const</span> http <span class="token operator">=</span> <span class="token function">require</span><span class="token punctuation">(</span><span class="token string">"http"</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment">// 创建服务</span><span class="token keyword">const</span> server <span class="token operator">=</span> http<span class="token punctuation">.</span><span class="token function">createServer</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token parameter">request<span class="token punctuation">,</span> response</span><span class="token punctuation">)</span> <span class="token operator">=></span> <span class="token punctuation">&#123;</span>  <span class="token comment">// 设置响应头(文件格式，字符编码)</span>  response<span class="token punctuation">.</span><span class="token function">setHeader</span><span class="token punctuation">(</span><span class="token string">"Content-Type"</span><span class="token punctuation">,</span> <span class="token string">"text/plain;charset=utf-8"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>  <span class="token comment">// 返回响应内容</span>  response<span class="token punctuation">.</span><span class="token function">end</span><span class="token punctuation">(</span><span class="token string">"hello world"</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment">// 确定域名和端口并启动服务器</span><span class="token keyword">const</span> host <span class="token operator">=</span> <span class="token string">"localhost"</span><span class="token punctuation">;</span><span class="token keyword">const</span> port <span class="token operator">=</span> <span class="token number">8888</span><span class="token punctuation">;</span>server<span class="token punctuation">.</span><span class="token function">listen</span><span class="token punctuation">(</span>port<span class="token punctuation">,</span> host<span class="token punctuation">,</span> <span class="token punctuation">(</span><span class="token parameter">err</span><span class="token punctuation">)</span> <span class="token operator">=></span> <span class="token punctuation">&#123;</span>  <span class="token keyword">if</span> <span class="token punctuation">(</span>err<span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>    console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">"服务器打开失败"</span> <span class="token operator">+</span> err<span class="token punctuation">)</span><span class="token punctuation">;</span>  <span class="token punctuation">&#125;</span>  console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">"服务器启动成功"</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h2><span id="p2-da-jian-ke-hu-duan">2、搭建客户端</span><a href="#p2-da-jian-ke-hu-duan" class="header-anchor">#</a></h2><pre class="line-numbers language-js" data-language="js"><code class="language-js"><span class="token keyword">const</span> http <span class="token operator">=</span> <span class="token function">require</span><span class="token punctuation">(</span><span class="token string">"http"</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment">// 请求</span><span class="token keyword">const</span> url <span class="token operator">=</span> <span class="token string">"http://localhost:3838"</span><span class="token punctuation">;</span><span class="token keyword">const</span> request <span class="token operator">=</span> http<span class="token punctuation">.</span><span class="token function">request</span><span class="token punctuation">(</span>url<span class="token punctuation">,</span> <span class="token parameter">res</span><span class="token operator">=></span><span class="token punctuation">&#123;</span>    <span class="token comment">// 响应状态码</span>    console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>res<span class="token punctuation">.</span>statusCode<span class="token punctuation">)</span>    res<span class="token punctuation">.</span><span class="token function">on</span><span class="token punctuation">(</span>"data“<span class="token punctuation">,</span><span class="token parameter">chunk</span> <span class="token operator">=></span><span class="token punctuation">&#123;</span> console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>chunk<span class="token punctuation">.</span><span class="token function">toString</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">&#125;</span><span class="token punctuation">&#125;</span><span class="token punctuation">)</span><span class="token comment">// 发送请求</span>request<span class="token punctuation">.</span><span class="token function">end</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h2><span id="p3-chang-yong-dai-ma-pian-duan">3、常用代码片段</span><a href="#p3-chang-yong-dai-ma-pian-duan" class="header-anchor">#</a></h2><p>设置响应解析类型 <code>res.setHeader(&quot;Content-Type&quot;, &quot;text/html;charset=utf-8&quot;)</code></p><p>设置状态码 <code>res.statusCode = 200</code></p><p>获取当前 URL <code>req.url</code> 去掉绝对路径 <code>req.url.slice(1)</code></p><p>中文 URL 转码 <code>decodeURL(req.url)</code></p><p><code>req.query</code></p>]]></content>
      
      
      <categories>
          
          <category> 3101：服务器基础 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> JavaScript </tag>
            
            <tag> Node </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>服务器基础</title>
      <link href="/310101/"/>
      <url>/310101/</url>
      
        <content type="html"><![CDATA[<h1><span id="fu-wu-qi-ji-chu">服务器基础</span><a href="#fu-wu-qi-ji-chu" class="header-anchor">#</a></h1>]]></content>
      
      
      <categories>
          
          <category> 3101：服务器基础 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> JavaScript </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>jQuery</title>
      <link href="/220901/"/>
      <url>/220901/</url>
      
        <content type="html"><![CDATA[<h1><span id="jquery-ji-chu">jQuery 基础</span><a href="#jquery-ji-chu" class="header-anchor">#</a></h1><h2><span id="pyi-kai-shi">一、开始</span><a href="#pyi-kai-shi" class="header-anchor">#</a></h2><p><strong>jQuery</strong> 是一个 JS 开源类库，它通过封装原生的 JavaScript 函数得到。</p><h2><span id="p1-kai-shi">1、开始</span><a href="#p1-kai-shi" class="header-anchor">#</a></h2><p>引入</p><ul><li><p>本地</p></li><li><p>CDN 在线</p><pre class="line-numbers language-html" data-language="html"><code class="language-html"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>script</span> <span class="token attr-name">src</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>https://cdn.bootcdn.net/ajax/libs/jquery/1.12.4/jquery.min.js<span class="token punctuation">"</span></span><span class="token punctuation">></span></span><span class="token script"></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>script</span><span class="token punctuation">></span></span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre></li></ul><p>版本</p><ul><li>版本格式 <code>大版本.小版本.bugfix</code></li><li><code>1.x.x</code> 完全兼容 IE678</li><li><code>2.x.x</code> 不再兼容 IE678</li><li><code>3.x.x</code> 源码使用 ES6 语法</li></ul><p><code>jquery.js</code> / <code>jquery.min.js</code> 压缩版，正式上线使用压缩版本。</p><h3><span id="p2-dai-ma-feng-ge">2、代码风格</span><a href="#p2-dai-ma-feng-ge" class="header-anchor">#</a></h3><p>（1）全局函数 <code>jQuery()</code> ，快捷别名 <code>$</code>。</p><pre class="line-numbers language-js" data-language="js"><code class="language-js">window<span class="token punctuation">.</span>jQuery <span class="token operator">=</span> windows<span class="token punctuation">.</span>$ <span class="token operator">=</span> jQuery<span class="token punctuation">;</span><span class="token comment">// 选择器选中 box 元素，获取了 jQuery 对象</span><span class="token function">$</span><span class="token punctuation">(</span><span class="token string">"#box"</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment">// CSS方法设置样式</span><span class="token function">$</span><span class="token punctuation">(</span><span class="token string">"#box"</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">css</span><span class="token punctuation">(</span><span class="token string">"color"</span><span class="token punctuation">,</span> <span class="token string">"red"</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>（2）链式调用</p><p>jQuery 的<strong>每个方法返回的都是 jQuery 对象</strong>，所以可以链式调用。</p><pre class="line-numbers language-js" data-language="js"><code class="language-js"><span class="token function">$</span><span class="token punctuation">(</span><span class="token string">"#box"</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">css</span><span class="token punctuation">(</span><span class="token string">"color"</span><span class="token punctuation">,</span> <span class="token string">"red"</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">css</span><span class="token punctuation">(</span><span class="token string">"font-size"</span><span class="token punctuation">,</span> <span class="token string">"40px"</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><h3><span id="p3-jquery-dui-xiang-yu-js-dui-xiang">3、jQuery 对象与 JS 对象</span><a href="#p3-jquery-dui-xiang-yu-js-dui-xiang" class="header-anchor">#</a></h3><p><strong>JS 对象</strong> 即 DOM 对象，即是我们用传统的方法获得的对象。</p><p><strong>jQuery 对象</strong> 即是用 jQuery 类库的选择器获得的类数组对象，就是通过 jQuery 包装 DOM 对象后产生的对象，它是 jQuery 独有的。如果一个对象是 jQuery 对象，那么就可以使用 jQuery 里的方法。</p><p>对象的转换</p><pre class="line-numbers language-js" data-language="js"><code class="language-js"><span class="token comment">// jQuery对象 转 DOM对象</span><span class="token function">$</span><span class="token punctuation">(</span><span class="token operator">...</span><span class="token punctuation">)</span><span class="token punctuation">[</span>index<span class="token punctuation">]</span><span class="token punctuation">;</span><span class="token function">$</span><span class="token punctuation">(</span><span class="token operator">...</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">get</span><span class="token punctuation">(</span>index<span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment">// DOM对象 转 jQuery 对象</span><span class="token function">$</span><span class="token punctuation">(</span><span class="token constant">BOM</span>对象<span class="token punctuation">)</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h3><span id="p4-zhi-xing-shi-ji">4、执行时机 △</span><a href="#p4-zhi-xing-shi-ji" class="header-anchor">#</a></h3><table><thead><tr><th></th><th>window.onload</th><th>$(document).ready()</th></tr></thead><tbody><tr><td>执行时机</td><td>等待网页全部加载完成然后才会执行</td><td>等待 DOM 结构加载完成就执行</td></tr><tr><td>执行次数</td><td>只会执行一次<br>写第二次会覆盖第一次</td><td>可以执行多次<br>不会覆盖</td></tr><tr><td>简写方案</td><td>无</td><td>$(function (){});</td></tr></tbody></table><h2><span id="per-chang-gui-cao-zuo">二、常规操作</span><a href="#per-chang-gui-cao-zuo" class="header-anchor">#</a></h2><h3><span id="p1-lei-shu-zu-cao-zuo">1、类数组操作</span><a href="#p1-lei-shu-zu-cao-zuo" class="header-anchor">#</a></h3><ul><li><code>children()</code> 获取选择器元素的<strong>子元素</strong>节点集合，如果指定了参数，那么该参数也是筛选表达式</li><li><code>parent()</code> 获取选择器元素的<strong>父元素</strong>节点集合（只有一个），，如果指定了参数，那么该参数也是筛选表达式</li><li><code>siblings()</code> 获取选择器元素的<strong>兄弟元素</strong>节点集合，如果指定了参数，那么该参数也是筛选表达式</li><li><code>find()</code> 寻找后代元素，参数直接写选择器</li><li><code>end</code> 返回上一次破坏性操作之前的伪数组</li><li>对于类数组的常用方法还有很多，比如 <code>prev()</code>、<code>next()</code>等等。</li></ul><h3><span id="p2-xuan-ze-qi-cao-zuo">2、选择器操作</span><a href="#p2-xuan-ze-qi-cao-zuo" class="header-anchor">#</a></h3><p>直接参数传递选择器。</p><ul><li>基础选择器 <code>#id</code>、<code>.class</code></li><li>层次选择器 <code>A B</code>、<code>A+B</code>、<code>A~B</code></li><li>过滤选择器 <code>:first</code>、<code>first-child</code>、<code>not()</code>、<code>even</code>、<code>odd</code><ul><li><code>:first</code> / <code>:last</code> 选取第一个元素/最后一个元素</li><li><code>:first-child</code> / <code>:last-child</code> 选取第一个子元素/最后一个子元素。</li><li><code>:only-child</code> 选取只有一个子元素的节点。</li><li><code>nth-child(index/even/odd/equation)</code> 选取序列特定的元素</li><li><code>:even</code> / <code>:odd</code> 选取索引是单数、双数的元素</li><li><code>:eq(index)</code> 选取指定 index 值的元素</li><li><code>:gt(index)</code> / <code>:lt(index)</code> 选取索引大于/小于指定的元素</li><li><code>:not(seletor)</code> 排除选定的元素</li><li><code>:contains(text)</code> 选取包含指定文本 text 的元素。</li><li><code>:empty</code> 选取空元素</li><li><code>:has(seletor)</code> 选取含有指定选择器的元素。</li><li><code>:parent</code> 选取含有子元素或文本的元素。</li></ul></li><li>属性过滤选择器 <code>[attr]</code></li><li>表单选择器 <code>:input</code></li></ul><h2><span id="psan-jquery-dong-hua">三、jQuery 动画</span><a href="#psan-jquery-dong-hua" class="header-anchor">#</a></h2><h3><span id="p1-xian-shi-yin-cang">1. 显示、隐藏</span><a href="#p1-xian-shi-yin-cang" class="header-anchor">#</a></h3><p><code>.show()</code> 显示 | <code>.hide()</code> 隐藏</p><ul><li>第一个参数 控制速度 600ms <code>slow</code> | 默认 400ms <code>normal</code> | 200ms <code>fast</code></li><li>第二个参数 控制动画形式 <code>linear</code> | <code>swing</code></li><li>第三个参数 书写回调函数</li></ul><p><code>.tiggle()</code> 开关（显示的时候隐藏，隐藏的时候显示）</p><h3><span id="p2-hua-dong-juan-dong">2. 滑动、卷动</span><a href="#p2-hua-dong-juan-dong" class="header-anchor">#</a></h3><p><code>.slideUp()</code> 向上收缩| <code>.slideDown()</code> 向上展开 | <code>.sildeToggle()</code></p><h3><span id="p3-dan-ru-dan-chu">3. 淡入、淡出</span><a href="#p3-dan-ru-dan-chu" class="header-anchor">#</a></h3><p><code>.fadeIn()</code> | <code>.fadeOut()</code> | <code>.fadeToggle()</code></p><h3><span id="p4-zi-ding-yi-dong-hua">4. 自定义动画</span><a href="#p4-zi-ding-yi-dong-hua" class="header-anchor">#</a></h3><p>（1）基础使用</p><p><code>animate( params, speed, callback)</code></p><ul><li>第 1 个参数 包含样式属性和值的映射速度</li><li>第 2 个参数 可选</li><li>第 3 个参数 在动画完成时执行的回调函数</li></ul><pre class="line-numbers language-js" data-language="js"><code class="language-js"><span class="token function">$</span><span class="token punctuation">(</span><span class="token string">".box"</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">animate</span><span class="token punctuation">(</span>  <span class="token punctuation">&#123;</span>    left<span class="token operator">:</span> <span class="token string">"1000px"</span><span class="token punctuation">,</span>  <span class="token punctuation">&#125;</span><span class="token punctuation">,</span>  <span class="token number">2000</span><span class="token punctuation">,</span>  <span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>    <span class="token comment">// 回调函数</span>  <span class="token punctuation">&#125;</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>（2）动画队列</p><p>如果要按照顺序执行动画，只需要按照代码顺序就可以。（只有动画会放在队列中，其他方法会立即执行 ）</p><h3><span id="p5-ting-zhi-dong-hua">5. 停止动画</span><a href="#p5-ting-zhi-dong-hua" class="header-anchor">#</a></h3><p>（1） 停止方法</p><p><code>stop( clearQueue, gotoEnd )</code></p><ul><li>第 1 个参数 可选 布尔值 是否需要清空未执行完的动画队列</li><li>第 2 个参数 可选 布尔值 是否直接将正在执行的动画跳转到末状态</li></ul><p>这个方法会结束当前正在进行的动画，并立即执行队列中的下一个动画。</p><p>（2）判断元素是否处于动画状态</p><p>当用户在某个元素上执行 <code>animate()</code> 动画时，就会出现动画积累，</p><p>使用 <code>is(&quot;:animated&quot;)</code> 来判断是否处于动画状态，如果不处于动画状态，才会给元素添加新动画。</p><h3><span id="p6-yan-chi-dong-hua">6. 延迟动画</span><a href="#p6-yan-chi-dong-hua" class="header-anchor">#</a></h3><p><code>delay()</code></p><p>参数是延迟的毫秒数。</p><h2><span id="psi-jquery-yuan-su-yang-shi-cao-zuo">四、jQuery 元素样式操作</span><a href="#psi-jquery-yuan-su-yang-shi-cao-zuo" class="header-anchor">#</a></h2><table><thead><tr><th>方法</th><th>描述</th></tr></thead><tbody><tr><td><code>css( name )</code></td><td>获取元素的样式</td></tr><tr><td><code>css( name, value)</code></td><td>设置元素的样式</td></tr><tr><td><code>css( name:value, name2:value2,..)</code></td><td>设置元素的样式（多个）</td></tr><tr><td><code>addClass(Class)</code>/<code>removeClass(Class)</code></td><td>添加类/ 移除类</td></tr><tr><td><code>toggleClass(Class)</code></td><td>来回切换默认样式和指定样式</td></tr><tr><td><code>width()</code>/<code>height()</code></td><td>获取和设置宽高</td></tr><tr><td><code>innerWidth()</code> / <code>innerHeight()</code></td><td>获取包含内边距的宽高</td></tr><tr><td><code>outerWidth()</code> / <code>outerHeight()</code></td><td>获取包含边框和内边距的宽高<br>如果参数是<code>true</code>则包含外边距</td></tr><tr><td><code>offset()</code></td><td>获取元素相对文档的偏移位置</td></tr><tr><td><code>position()</code></td><td>获取元素相对父元素的偏移位置</td></tr><tr><td><code>scrollTop()</code> / <code>scrollLeft</code></td><td>获取和设置水平/垂直滚动条</td></tr></tbody></table><h2><span id="pwu-jquery-dom-cao-zuo">五、jQuery DOM 操作</span><a href="#pwu-jquery-dom-cao-zuo" class="header-anchor">#</a></h2><h3><span id="p1-she-zhi-nei-rong-he-shu-xing">1、设置内容和属性</span><a href="#p1-she-zhi-nei-rong-he-shu-xing" class="header-anchor">#</a></h3><table><thead><tr><th>方法</th><th>描述</th></tr></thead><tbody><tr><td><code>html()</code></td><td>获取和设置元素中的内容</td></tr><tr><td><code>text()</code></td><td>获取和设置元素中的文本内容</td></tr><tr><td><code>val()</code></td><td>获取和设置表单元素的文本内容</td></tr><tr><td><code>prop/attr(key[, value])</code> <br><code>prop/attr(key:value, key2:value2, )</code></td><td>获取和设置元素 key 属性值<br>处理自带属性使用 <code>prop</code><br>处理自定义属性使用 <code>attr</code></td></tr><tr><td><code>removeattr(key)</code></td><td>删除指定的属性</td></tr></tbody></table><h3><span id="p2-jie-dian-cao-zuo">2、节点操作</span><a href="#p2-jie-dian-cao-zuo" class="header-anchor">#</a></h3><table><thead><tr><th>方法</th><th>描述</th></tr></thead><tbody><tr><td><code>$(&quot;&lt;标签名&gt;&lt;/标签名&quot;)</code></td><td><code>createElement()</code></td></tr><tr><td><code>$(&quot;&lt;标签名&gt;文本&lt;/标签名&gt;&quot;)</code></td><td><code>createTextNode()</code></td></tr><tr><td>直接写在创建的标签中 | <code>setAttribute( name, value)</code></td><td>创建属性节点</td></tr><tr><td><code>append(Content)</code> 元素内部后面插入 <br><code>appendTo(Content)</code> <br><code>prepend(Content)</code> 元素内部前面插入 <br><code>prepentTo(Content)</code> <br><code>after()</code> 元素外部后面 <br><code>insertAfter()</code> <br><code>before()</code> 元素外部前面 <br><code>insertBefore()</code></td><td>插入节点</td></tr><tr><td><code>remove()</code></td><td><code>removeChild()</code></td></tr><tr><td><code>replaceAll()</code></td><td><code>replaceChild()</code><br>节点被替换后，所包含的事件行为就全部消失了。</td></tr><tr><td><code>clone()</code></td><td><code>cloneNode()</code><br>参数可以为空，只复制元素和内容，<br>加上 <code>true</code> 参数的话，会复制这个元素的事件处理行为。</td></tr></tbody></table><h2><span id="pliu-jquery-shi-jian">六、jQuery 事件</span><a href="#pliu-jquery-shi-jian" class="header-anchor">#</a></h2><h3><span id="p1-jian-xie-shi-jian">1、简写事件</span><a href="#p1-jian-xie-shi-jian" class="header-anchor">#</a></h3><p>jQuery 封装了常用的事件以节约更多的代码，称为<strong>简写事件</strong>。</p><table><thead><tr><th>方法</th><th>触发</th></tr></thead><tbody><tr><td><code>click(fn)</code></td><td>鼠标单击</td></tr><tr><td><code>dblclick(fn)</code></td><td>鼠标双击</td></tr><tr><td><code>mousedown(fn)</code></td><td>鼠标点击后</td></tr><tr><td><code>mouseup(fn)</code></td><td>鼠标点击后弹起</td></tr><tr><td><code>mouseover(fn)</code></td><td>鼠标移入</td></tr><tr><td><code>mouseout(fn)</code></td><td>鼠标移出</td></tr><tr><td><code>mousemove(fn)</code></td><td>鼠标移动</td></tr><tr><td><code>mouseeenter(fn)</code></td><td>鼠标穿过</td></tr><tr><td><code>mouselevave(fn)</code></td><td>鼠标穿出</td></tr><tr><td><code>keydown(fn)</code></td><td>键盘按下</td></tr><tr><td><code>keyup(fn)</code></td><td>键盘弹起</td></tr><tr><td><code>resize(fn)</code></td><td>文档改变大小</td></tr><tr><td><code>scroll(fn)</code></td><td>滚动条滚动</td></tr><tr><td><code>focus(fn)</code></td><td>表单交单激活</td></tr><tr><td><code>blur(fn)</code></td><td>表单交单丢失</td></tr><tr><td><code>focusin(fn)</code></td><td>表单焦点激活</td></tr><tr><td><code>select(fn)</code></td><td>表单文本选定</td></tr><tr><td><code>change(fn)</code></td><td>表单元素值改变</td></tr><tr><td><code>submit(fn)</code></td><td>表单提交</td></tr></tbody></table><h3><span id="p2-shi-jian-dui-xiang">2、事件对象</span><a href="#p2-shi-jian-dui-xiang" class="header-anchor">#</a></h3><p>对于原生的事件对象，由于浏览器差异，开发者总是需要做兼容性处理。jQuery 解决了原生事件对象的兼容性问题，还提供了很多新的属性和方法。</p><p><code>stopPropagation()</code> 阻止事件冒泡</p><p><code>preventDefault()</code> 阻止默认行为</p><h3><span id="p3-jquery-bang-ding-shi-jian">3、jQuery 绑定事件</span><a href="#p3-jquery-bang-ding-shi-jian" class="header-anchor">#</a></h3><p><code>bind()</code> 方法无法动态绑定尚未存在的元素。此外还有 <code>live()</code> <code>delegate</code> 等已经被废弃，底层实际使用 <code>on()</code>。</p><p><strong><code>on( events, selector, data, fn)</code></strong> 绑定事件 jQuery 1.7+</p><ul><li><code>events</code> 事件类型</li><li><code>selector</code> 触发事件选择器元素的后代</li><li><code>data</code> 当一个事件被触发要传递 event.data 给事件处理函数</li><li><code>fn</code> 该事件被触发时的执行函数</li></ul><p>还可以<strong>绑定多个事件绑定同一个函数、多个事件绑定不同函数</strong>。</p><p><code>unbind()</code> 解除绑定事件。</p><p><strong><code>off( events, selector, fn)</code></strong> 解除绑定事件。</p><p><code>one( type, data, fn )</code> 绑定元素执行完毕后自动移除事件，方法仅触发一次。</p><ul><li><code>type</code> 添加到元素的一个或者多个事件。</li><li><code>data</code> 将要传递给事件处理函数的数据映射。</li><li><code>fn</code> 每当事件触发时执行的函数。</li></ul><h2><span id="pqi-jquery-kuo-zhan">七、jQuery 扩展</span><a href="#pqi-jquery-kuo-zhan" class="header-anchor">#</a></h2><p>自定义了<code>extent()</code>和 <code>fn.extent()</code> 方法，扩展 jQuery 类本身，为类添加新的方法。</p><pre class="line-numbers language-js" data-language="js"><code class="language-js"><span class="token keyword">var</span> arr <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">;</span>$<span class="token punctuation">.</span><span class="token function">each</span><span class="token punctuation">(</span><span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">2</span><span class="token punctuation">,</span> <span class="token number">3</span><span class="token punctuation">]</span><span class="token punctuation">,</span> <span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token parameter">index<span class="token punctuation">,</span> item</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>  arr<span class="token punctuation">.</span><span class="token function">push</span><span class="token punctuation">(</span>item<span class="token punctuation">,</span> <span class="token number">10</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span></span></code></pre>]]></content>
      
      
      <categories>
          
          <category> 2209：jQuery </category>
          
      </categories>
      
      
        <tags>
            
            <tag> JavaScript </tag>
            
            <tag> jQuery </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>VSCode 拼写检查</title>
      <link href="/181205/"/>
      <url>/181205/</url>
      
        <content type="html"><![CDATA[<h2><span id="pcode-spell-checker-si-xing-tui-jian">Code Spell Checker  - 四星推荐</span><a href="#pcode-spell-checker-si-xing-tui-jian" class="header-anchor">#</a></h2><p>代码拼写检查。</p><p>配置忽略词 <code>Ignore Words</code></p><pre class="line-numbers language-json" data-language="json"><code class="language-json">&quot;cSpell.ignoreWords&quot;: [    &quot;vuex&quot;,    &quot;stylesheet&quot;,    &quot;Nprogress&quot;,    &quot;swiper&quot;,    &quot;mockjs&quot;,    &quot;rgba&quot;,    &quot;tahoma&quot;,    &quot;nowrap&quot;,    &quot;clearfix&quot;,    &quot;nbsp&quot;],<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>]]></content>
      
      
      <categories>
          
          <category> 1812：VSCode </category>
          
      </categories>
      
      
        <tags>
            
            <tag> VSCode </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>VSCode Prettier &amp; 代码格式化</title>
      <link href="/181204/"/>
      <url>/181204/</url>
      
        <content type="html"><![CDATA[<h1><span id="prettier-amp-dai-ma-ge-shi-hua">Prettier &amp; 代码格式化</span><a href="#prettier-amp-dai-ma-ge-shi-hua" class="header-anchor">#</a></h1><p>项目根目录 新建 <code>.prettierrc</code> 配置文件</p><pre class="line-numbers language-json" data-language="json"><code class="language-json">&#123;  &quot;semi&quot;: false, &#x2F;&#x2F; 句末是否加分号  &quot;singleQuote&quot;: true &#x2F;&#x2F; 用单引号&#125;<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span></span></code></pre><h2><span id="pbeautify-wu-xing-tui-jian">Beautify - 五星推荐</span><a href="#pbeautify-wu-xing-tui-jian" class="header-anchor">#</a></h2><p>代码格式美化。<br>对象不会自动换行</p><pre class="line-numbers language-json" data-language="json"><code class="language-json">&quot;beautify.config&quot;: &#123;    &quot;brace_style&quot;: &quot;collapse,preserve-inline&quot;&#125;<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span></span></code></pre>]]></content>
      
      
      <categories>
          
          <category> 1812：VSCode </category>
          
      </categories>
      
      
        <tags>
            
            <tag> VSCode </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>VSCode 插件</title>
      <link href="/181203/"/>
      <url>/181203/</url>
      
        <content type="html"><![CDATA[<h1><span id="vscode-cha-jian">VSCode 插件</span><a href="#vscode-cha-jian" class="header-anchor">#</a></h1><h2><span id="pyi-cha-jian-yi-lan">一、插件一览</span><a href="#pyi-cha-jian-yi-lan" class="header-anchor">#</a></h2><ol><li>Chinese (Simplified) Language Pack for Visual Studio Code - 中文语言包</li><li>Markdown All in One</li><li>Markdown Perview Eehanced</li><li>HTML CSS Support：智能提示CSS类名以及id</li><li>Python</li><li>Python for VSCode</li><li>Beautify 代码格式化 --&gt; Prettier</li><li>Prettier</li><li>Code Spell Checker（推荐） - 代码拼写检查</li><li>TabNine</li><li>Better Comments - 更好的注释</li><li>Rainbow Brackets</li><li>Auto Rename Tag：自动完成另一侧标签的同步修改</li><li>Easy LESS - 自动编译LESS</li><li>Live Server - HTML 服务器</li><li>Path Autocomplete</li><li>Path Intellisense：自动提示文件路径，支持各种快速引入文件</li><li><a href="http://Draw.io">Draw.io</a> Integration：画图</li><li>A-super-comprehensive：代码补全合集</li><li>Reactjs code snippets</li><li>React Redux ES6 Snippets</li><li>ES7 React/Redux/React-Native/JS snippets</li><li>Auto Close Tag：自动闭合HTML/XML标签</li><li>Bracket Pair Colorizer：给括号加上不同的颜色，便于区分不同的区块，使用者可以定义不同括号类型和不同颜色</li><li>Debugger for Chrome：映射vscode上的断点到chrome上，方便调试</li><li>GitLens：方便查看git日志，git重度使用者必备</li><li>HTML Snippets：智能提示HTML标签，以及标签含义</li><li>JavaScript(ES6) code snippets：ES6语法智能提示，以及快速输入，不仅仅支持.js，还支持.ts，.jsx，.tsx，.html，.vue，省去了配置其支持各种包含js代码文件的时间</li><li>open in browser：vscode不像IDE一样能够直接在浏览器中打开html，而该插件支持快捷键与鼠标右键快速在浏览器中打开html文件，支持自定义打开指定的浏览器，包括：Firefox，Chrome，Opera，IE以及Safari</li><li>React/Redux/react-router Snippets：React/Redux/react-router语法智能提示</li><li>Vetur：Vue多功能集成插件，包括：语法高亮，智能提示，emmet，错误提示，格式化，自动补全，debugger。vscode官方钦定Vue插件，Vue开发者必备。</li><li>vscode-icon：让 vscode 资源树目录加图标</li><li>CSS Peek：使用此插件，你可以追踪至样式表中 CSS 类和 ids 定义的地方。当你在 HTML 文件中右键单击选择器时，选择“ Go to Definition 和 Peek definition ”选项，它便会给你发送样式设置的 CSS 代码。</li><li>Color Info：提供你在 CSS中使用颜色的相关信息。你只需在颜色上悬停光标，就可以预览色块中色彩模型的（HEX、 RGB、HSL 和 CMYK）相关信息了。</li><li>Window Colors：每个VSCode窗口都可以独特地自动着色。</li><li>live server：开启本地服务器</li></ol><h2><span id="peslint-si-xing-tui-jian">ESLint - 四星推荐</span><a href="#peslint-si-xing-tui-jian" class="header-anchor">#</a></h2><p>代码检查。</p><h2><span id="ptabnine-si-xing-tui-jian">TabNine - 四星推荐</span><a href="#ptabnine-si-xing-tui-jian" class="header-anchor">#</a></h2><p>神奇的扩展，根据Github中超过两百万个文件的训练。可以根据你输入的文本预测你接下来的输入。</p><h2><span id="ppower-mode-san-xing-tui-jian">Power Mode - 三星推荐</span><a href="#ppower-mode-san-xing-tui-jian" class="header-anchor">#</a></h2><p>趣味性插件。</p><p>然后我们点击安装，安装后我们按下键盘组合键 Ctrl + Shift + P，然后输入 setting，打开 JSON 配置文件</p><p>在最后添加下面三行配置：</p><pre class="line-numbers language-json" data-language="json"><code class="language-json">&quot;powermode.enabled&quot;: true, &#x2F;&#x2F; 开启 Power Mode&quot;powermode.shakeIntensity&quot;: 0, &#x2F;&#x2F; 关闭抖动（喜欢的也可以选择不关闭）&quot;powermode.presets&quot;: &quot;particles&quot;, &#x2F;&#x2F; 特效预设，还有 &quot;fireworks&quot;, &quot;flames&quot;, &quot;magic&quot;, &quot;clippy&quot;, &quot;simple-<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h2><span id="pbracket-pair-colorizer-si-xing-tui-jian">Bracket Pair Colorizer - 四星推荐</span><a href="#pbracket-pair-colorizer-si-xing-tui-jian" class="header-anchor">#</a></h2><p>快速区分括号位置和类型。</p><p><a href="https://www.juejin.im/post/6862510480397697038">https://www.juejin.im/post/6862510480397697038</a></p>]]></content>
      
      
      <categories>
          
          <category> 1812：VSCode </category>
          
      </categories>
      
      
        <tags>
            
            <tag> VSCode </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>VSCode 快捷</title>
      <link href="/181202/"/>
      <url>/181202/</url>
      
        <content type="html"><![CDATA[<h1><span id="vscode-kuai-jie">VSCode 快捷</span><a href="#vscode-kuai-jie" class="header-anchor">#</a></h1><p><a href="https://blog.csdn.net/ycx60rzvvbj/article/details/105775469">https://blog.csdn.net/ycx60rzvvbj/article/details/105775469</a></p><p>F11 全屏/退出全屏</p><p>Home/End 行头/行尾</p><table><thead><tr><th>字符</th><th>CTRL</th><th>CTRL + SHIFT</th><th>CTRL + ALT</th></tr></thead><tbody><tr><td>A</td><td>==编辑器 - 全选==</td><td></td><td></td></tr><tr><td>B</td><td>侧边栏隐藏/显示</td><td></td><td></td></tr><tr><td>C</td><td>==编辑器 - 复制==</td><td></td><td></td></tr><tr><td>D</td><td></td><td>显示 debug</td><td></td></tr><tr><td>K</td><td>==编辑器 - 全部折叠==</td><td></td><td>编辑器 - 全部展开</td></tr><tr><td>N</td><td>新建文件</td><td>新建编辑器</td><td></td></tr><tr><td>O</td><td></td><td>显示 output</td><td></td></tr><tr><td>W</td><td>关闭当前文件</td><td>关闭当前编辑器</td><td></td></tr><tr><td>X</td><td>编辑器 - 剪切</td><td></td><td></td></tr><tr><td>/?</td><td>==编辑器 - 注释==</td><td>==编辑器 - 注释多行==</td><td></td></tr><tr><td>\ |</td><td>切出去分栏</td><td></td><td></td></tr><tr><td>[ / ]</td><td>代码缩进</td><td></td><td></td></tr><tr><td>TAB</td><td>切换文件</td><td></td><td></td></tr><tr><td>enter</td><td>行下插入</td><td>行上插入</td><td></td></tr><tr><td></td><td></td><td></td><td></td></tr><tr><td>+ / -</td><td>放大 / 缩小</td><td></td><td></td></tr></tbody></table><p>滚轮拖 书写多行</p><p>shift + alt + F 格式化</p><p>shift + end/home 选择从光标到行尾、行首的内容</p><p>ctrl + delete 删除当前</p>]]></content>
      
      
      <categories>
          
          <category> 1812：VSCode </category>
          
      </categories>
      
      
        <tags>
            
            <tag> VSCode </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>VSCode</title>
      <link href="/181201/"/>
      <url>/181201/</url>
      
        <content type="html"><![CDATA[<h1><span id="vscode">VSCode</span><a href="#vscode" class="header-anchor">#</a></h1>]]></content>
      
      
      <categories>
          
          <category> 1812：VSCode </category>
          
      </categories>
      
      
        <tags>
            
            <tag> VSCode </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Window 命令行</title>
      <link href="/180104/"/>
      <url>/180104/</url>
      
        <content type="html"><![CDATA[<h1><span id="window-ming-ling-xing">Window 命令行</span><a href="#window-ming-ling-xing" class="header-anchor">#</a></h1><h2><span id="pyi-chang-yong">一、常用</span><a href="#pyi-chang-yong" class="header-anchor">#</a></h2><ul><li>清屏 <code>CLS</code></li><li>运行可执行文件 <code>Start xxx.exe</code></li></ul><h2><span id="per-shutdown">二、<code>shutdown</code></span><a href="#per-shutdown" class="header-anchor">#</a></h2><ul><li>设置 3600秒 后关机 <code>shutdown -s -t 3600</code></li><li>取消关机 <code>shutdown -a</code></li><li>重启 <code>shutdown -r</code></li><li>立即重启 <code>shutdown -r -t 0</code></li></ul>]]></content>
      
      
      <categories>
          
          <category> 1801：Windows </category>
          
      </categories>
      
      
        <tags>
            
            <tag> OS </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>快捷操作</title>
      <link href="/180103/"/>
      <url>/180103/</url>
      
        <content type="html"><![CDATA[<h1><span id="windows-kuai-jie-cao-zuo">Windows 快捷操作</span><a href="#windows-kuai-jie-cao-zuo" class="header-anchor">#</a></h1><blockquote><p>主要是对于 Windows 10 而言</p></blockquote><h2><span id="pyi-wei-gui-lei">一、未归类</span><a href="#pyi-wei-gui-lei" class="header-anchor">#</a></h2><ul><li><code>Win + V</code>  可以查看剪贴板</li><li><code>Shift</code> 按住右键 可以在当前目录打开 <code>powershell</code></li><li>直接在地址栏输入 <code>cmd</code> 或者 <code>powershell</code> 在当前目录打开命令窗口</li></ul><h2><span id="per-tong-yong-kuai-jie-jian">二、通用快捷键</span><a href="#per-tong-yong-kuai-jie-jian" class="header-anchor">#</a></h2><ul><li><code>CTRL + SHIFT + V</code> 无格式黏贴</li></ul>]]></content>
      
      
      <categories>
          
          <category> 1801：Windows </category>
          
      </categories>
      
      
        <tags>
            
            <tag> OS </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>使用技巧</title>
      <link href="/180102/"/>
      <url>/180102/</url>
      
        <content type="html"><![CDATA[<h1><span id="windows-shi-yong-ji-qiao">Windows 使用技巧</span><a href="#windows-shi-yong-ji-qiao" class="header-anchor">#</a></h1><h2><span id="p1-host-wei-zhi">1、<code>host</code> 位置</span><a href="#p1-host-wei-zhi" class="header-anchor">#</a></h2><p><code>C --&gt; Windows --&gt; System32 --&gt; drivers --&gt; etc --&gt; host</code></p><h2><span id="p2-you-jian-xin-jian-md-wen-jian">2、右键新建 <code>.md</code> 文件</span><a href="#p2-you-jian-xin-jian-md-wen-jian" class="header-anchor">#</a></h2><ol><li>打开注册表</li><li><code>HKEY_CLASSES_ROOT</code> 添加<code>.md</code> ，<strong>修改默认值为 <code>Markdown.File</code></strong></li><li>添加子项 <code>ShellNew</code> ，在该子项中新建字符串值 <code>NullFile</code> ，内容不需要设置</li><li>绑定打开方式（ md文件–&gt;右键属性–&gt;打开方式 ）</li><li><code>HKEY_CLASSES_ROOT</code> 下新建 <code>Markdown.File</code>， 默认值为<code>Markdown File</code> ，可以自定义</li></ol><h2><span id="p3-pi-liang-xin-jian-wen-jian-jia">3、批量新建文件夹</span><a href="#p3-pi-liang-xin-jian-wen-jian-jia" class="header-anchor">#</a></h2><p>记事本：<code>md 文件夹名1 文件夹名2 ..</code> 修改文件后缀为bat，双击执行。</p>]]></content>
      
      
      <categories>
          
          <category> 1801：Windows </category>
          
      </categories>
      
      
        <tags>
            
            <tag> OS </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Windows</title>
      <link href="/180101/"/>
      <url>/180101/</url>
      
        <content type="html"><![CDATA[<h1><span id="windows">Windows</span><a href="#windows" class="header-anchor">#</a></h1>]]></content>
      
      
      <categories>
          
          <category> 1801：Windows </category>
          
      </categories>
      
      
        <tags>
            
            <tag> OS </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Git 常用命令</title>
      <link href="/181104/"/>
      <url>/181104/</url>
      
        <content type="html"><![CDATA[<h1><span id="git-chang-yong-ming-ling">Git 常用命令</span><a href="#git-chang-yong-ming-ling" class="header-anchor">#</a></h1>]]></content>
      
      
      <categories>
          
          <category> 1811：版本管理 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Git </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Git</title>
      <link href="/181103/"/>
      <url>/181103/</url>
      
        <content type="html"><![CDATA[<h1><span id="git-kai-shi">Git 开始</span><a href="#git-kai-shi" class="header-anchor">#</a></h1>]]></content>
      
      
      <categories>
          
          <category> 1811：版本管理 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Git </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>SVN</title>
      <link href="/181102/"/>
      <url>/181102/</url>
      
        <content type="html"><![CDATA[<h1><span id="svn">SVN</span><a href="#svn" class="header-anchor">#</a></h1><h2><span id="pyi-an-zhuang">一、安装</span><a href="#pyi-an-zhuang" class="header-anchor">#</a></h2><p><a href="https://tortoisesvn.net/downloads.html">下载</a></p><p>安装</p><ul><li>喜欢用命令行操作，请务必记得勾选<code>command line client tool</code>为<code>will be install on local hard driver</code></li></ul><p>下载语言包并汉化（可选）</p><h2><span id="per-shi-yong">二、使用</span><a href="#per-shi-yong" class="header-anchor">#</a></h2><h3><span id="p1-jian-chu-xiang-mu">1、检出项目</span><a href="#p1-jian-chu-xiang-mu" class="header-anchor">#</a></h3><h3><span id="p2-dao-ru-xiang-mu">2、导入项目</span><a href="#p2-dao-ru-xiang-mu" class="header-anchor">#</a></h3><p>参考 <a href="https://blog.csdn.net/maplejaw_/article/details/52874348">https://blog.csdn.net/maplejaw_/article/details/52874348</a></p>]]></content>
      
      
      <categories>
          
          <category> 1811：版本管理 </category>
          
      </categories>
      
      
    </entry>
    
    
    
    <entry>
      <title>版本管理</title>
      <link href="/181101/"/>
      <url>/181101/</url>
      
        <content type="html"><![CDATA[<h1><span id="ban-ben-guan-li">版本管理</span><a href="#ban-ben-guan-li" class="header-anchor">#</a></h1><p>本部分主要内容：</p><ul><li>SVN</li><li>Git</li><li>Git + Github</li><li>Github Pages</li></ul>]]></content>
      
      
      <categories>
          
          <category> 1811：版本管理 </category>
          
      </categories>
      
      
    </entry>
    
    
    
    <entry>
      <title>Electron 使用心得</title>
      <link href="/270104/"/>
      <url>/270104/</url>
      
        <content type="html"><![CDATA[<h1><span id="electron">Electron</span><a href="#electron" class="header-anchor">#</a></h1><h2><span id="pyi-xiang-mu-gou-jian-he-da-bao">一、项目构建和打包</span><a href="#pyi-xiang-mu-gou-jian-he-da-bao" class="header-anchor">#</a></h2><p>项目搭建：<br><code>electron-vue</code></p><p>项目打包：<br><code>electron-builder</code></p><ul><li>可以支持 Windows/Mac/Linux 平台</li><li>支持自动更新，打包更轻量</li><li>可以打包出不暴露源码的安装程序<br><code>electron-packager</code></li><li>配置 <code>nsis</code> 自定义安装目录以及安装个性化</li></ul><h2><span id="per-electron-zhi-shi-dian">二、Electron 知识点</span><a href="#per-electron-zhi-shi-dian" class="header-anchor">#</a></h2><h3><span id="p1-zhu-jin-cheng-he-xuan-ran-jin-cheng">1、主进程和渲染进程</span><a href="#p1-zhu-jin-cheng-he-xuan-ran-jin-cheng" class="header-anchor">#</a></h3><p>主进程：package.json 中的 main.js<br>Electron 内核是 Chromium<br>在主进程中通过 <code>new BrowserWindow</code> 创建页面，每个 <code>BrowserWindow</code> 就是渲染进程，当某个页面被销毁后，对应的渲染进程就会终止。</p><h3><span id="p2-you-hua-chuang-kou">2、优化窗口</span><a href="#p2-you-hua-chuang-kou" class="header-anchor">#</a></h3><p>（1）无边框窗口</p><pre class="line-numbers language-js" data-language="js"><code class="language-js">mainWindow <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">BrowserWindow</span><span class="token punctuation">(</span><span class="token punctuation">&#123;</span>width<span class="token operator">:</span> <span class="token number">800</span><span class="token punctuation">,</span> height<span class="token operator">:</span> <span class="token number">600</span><span class="token punctuation">,</span> frame<span class="token operator">:</span> <span class="token boolean">false</span><span class="token punctuation">,</span> resizable<span class="token operator">:</span> <span class="token boolean">false</span><span class="token punctuation">&#125;</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>（2）窗口拖动<br>现在窗口已经没有标题栏和菜单栏了，所以窗口没办法拖动了，给拖动区域增加 <code>-webkit-app-region: drag</code> 的 CSS 代码。<br><code>&lt;body style=&quot;-webkit-app-region: drag&quot;&gt;&lt;/body&gt;</code><br>需要注意的是，如果在拖动区域里有按钮等需要点击的元素，需要增加 <code>-webkit-app-region: no-drag</code> 设置，否则会无法点击。</p><h3><span id="p3-jin-cheng-jian-tong-xin">3、进程间通信</span><a href="#p3-jin-cheng-jian-tong-xin" class="header-anchor">#</a></h3><p>因为安全限制，页面不能直接访问原生 GUI 资源，在 Electron 中也是一样。<br>渲染进程要进行原生的 GUI 操作，比如和主进程进行通信，请求相应的操作，在 Electron 中提供了几种通信方式：</p><p>（1）<code>ipcMain</code> 和 <code>ipcRenderer</code><br>在渲染进程中使用 <code>ipcRenderer</code> 模块来向主进程发送消息，主进程中使用 <code>ipcMain</code> 模块接受消息，进行操作。如果还需要进行反馈，则通知渲染进程，渲染进程根据接收的内容执行对应的操作。</p><pre class="line-numbers language-js" data-language="js"><code class="language-js"><span class="token comment">// 渲染进程中</span><span class="token keyword">const</span> <span class="token punctuation">&#123;</span> ipcRenderer <span class="token punctuation">&#125;</span> <span class="token operator">=</span> <span class="token function">require</span><span class="token punctuation">(</span><span class="token string">"electron"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>ipcRender<span class="token punctuation">.</span><span class="token function">send</span><span class="token punctuation">(</span><span class="token string">"somemsg"</span><span class="token punctuation">,</span> data<span class="token punctuation">)</span><span class="token punctuation">;</span>ipcRender<span class="token punctuation">.</span><span class="token function">on</span><span class="token punctuation">(</span><span class="token string">"replaymsg"</span><span class="token punctuation">,</span> <span class="token punctuation">(</span><span class="token parameter">evt<span class="token punctuation">,</span> otherData</span><span class="token punctuation">)</span> <span class="token operator">=></span> <span class="token punctuation">&#123;</span>  console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>otherData<span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment">// 主进程中</span><span class="token keyword">const</span> <span class="token punctuation">&#123;</span> ipcMain <span class="token punctuation">&#125;</span> <span class="token operator">=</span> <span class="token function">require</span><span class="token punctuation">(</span><span class="token string">"electron"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>ipcMain<span class="token punctuation">.</span><span class="token function">on</span><span class="token punctuation">(</span><span class="token string">"somemsg"</span><span class="token punctuation">,</span> <span class="token punctuation">(</span><span class="token parameter">evt<span class="token punctuation">,</span> data</span><span class="token punctuation">)</span> <span class="token operator">=></span> <span class="token punctuation">&#123;</span>  console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>data<span class="token punctuation">)</span><span class="token punctuation">;</span>  evt<span class="token punctuation">.</span>sender<span class="token punctuation">.</span><span class="token function">send</span><span class="token punctuation">(</span><span class="token string">"replymsg"</span><span class="token punctuation">,</span> otherData<span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>（2）remote<br><code>remote</code> 模块为渲染进程和主进程通信提供了一种简单方法</p><p>（3）webContents</p><pre class="line-numbers language-js" data-language="js"><code class="language-js"><span class="token comment">// 主进程中</span>win<span class="token punctuation">.</span>webContents<span class="token punctuation">.</span><span class="token function">on</span><span class="token punctuation">(</span><span class="token string">"did-finish-load"</span><span class="token punctuation">,</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=></span> <span class="token punctuation">&#123;</span>  win<span class="token punctuation">.</span>webContents<span class="token punctuation">.</span><span class="token function">send</span><span class="token punctuation">(</span><span class="token string">"ping"</span><span class="token punctuation">,</span> <span class="token string">"23333333333"</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment">// 渲染进程中</span><span class="token function">require</span><span class="token punctuation">(</span><span class="token string">"electron"</span><span class="token punctuation">)</span><span class="token punctuation">.</span>ipcRenderer<span class="token punctuation">.</span><span class="token function">on</span><span class="token punctuation">(</span><span class="token string">"ping"</span><span class="token punctuation">,</span> <span class="token punctuation">(</span><span class="token parameter">event<span class="token punctuation">,</span> message</span><span class="token punctuation">)</span> <span class="token operator">=></span> <span class="token punctuation">&#123;</span>  console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>message<span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>（4）渲染进程之间通信<br>使用 Vuex 和 router<br>但如果对数据实时性要求高，那就要结合上面的方法来实现：</p><pre class="line-numbers language-js" data-language="js"><code class="language-js"><span class="token comment">// 主进程中，将两个窗口的 id 分别发送到对方的渲染进程里</span>mainWindow<span class="token punctuation">.</span>webContents<span class="token punctuation">.</span><span class="token function">on</span><span class="token punctuation">(</span><span class="token string">"did-finish-load"</span><span class="token punctuation">,</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=></span> <span class="token punctuation">&#123;</span>  mainWindow<span class="token punctuation">.</span>webContents<span class="token punctuation">.</span><span class="token function">send</span><span class="token punctuation">(</span><span class="token string">"getChild"</span><span class="token punctuation">,</span> <span class="token punctuation">&#123;</span>    childId<span class="token operator">:</span> childWindow<span class="token punctuation">.</span>id<span class="token punctuation">,</span>  <span class="token punctuation">&#125;</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>childWindow<span class="token punctuation">.</span>webContents<span class="token punctuation">.</span><span class="token function">on</span><span class="token punctuation">(</span><span class="token string">"did-finish-load"</span><span class="token punctuation">,</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=></span> <span class="token punctuation">&#123;</span>  childWindow<span class="token punctuation">.</span>webContents<span class="token punctuation">.</span><span class="token function">send</span><span class="token punctuation">(</span><span class="token string">"getMain"</span><span class="token punctuation">,</span> <span class="token punctuation">&#123;</span>    mainId<span class="token operator">:</span> mainWindow<span class="token punctuation">.</span>id<span class="token punctuation">,</span>  <span class="token punctuation">&#125;</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment">// 渲染进程 mainWindow，通过 id 得到 childWindow 并发送一条消息</span>ipcRenderer<span class="token punctuation">.</span><span class="token function">on</span><span class="token punctuation">(</span><span class="token string">"getChild"</span><span class="token punctuation">,</span> <span class="token punctuation">(</span><span class="token parameter">event<span class="token punctuation">,</span> arg</span><span class="token punctuation">)</span> <span class="token operator">=></span> <span class="token punctuation">&#123;</span>  remote<span class="token punctuation">.</span>BrowserWindow<span class="token punctuation">.</span><span class="token function">fromId</span><span class="token punctuation">(</span>arg<span class="token punctuation">.</span>childId<span class="token punctuation">)</span><span class="token punctuation">.</span>webContents<span class="token punctuation">.</span><span class="token function">send</span><span class="token punctuation">(</span>    <span class="token string">"say"</span><span class="token punctuation">,</span>    <span class="token string">"Hello World!"</span>  <span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment">// 渲染进程 childWindow，接收 mainWindow 的消息</span>ipcRenderer<span class="token punctuation">.</span><span class="token function">on</span><span class="token punctuation">(</span><span class="token string">"say"</span><span class="token punctuation">,</span> <span class="token punctuation">(</span><span class="token parameter">event<span class="token punctuation">,</span> arg</span><span class="token punctuation">)</span> <span class="token operator">=></span> <span class="token punctuation">&#123;</span>  console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>arg<span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// 输出：Hello World!</span><span class="token punctuation">&#125;</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment">// 同理 childWindow 也可以通过 id 给 mainWindow 发送消息</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h3><span id="p4-cai-keng">4、踩坑</span><a href="#p4-cai-keng" class="header-anchor">#</a></h3><p>electron-vue 里使用 elementUI 等，需要在 webpack.renderer.config.js 的白名单里配置：<code>let whiteListedModules = ['vue', 'element-ui']</code></p><h3><span id="p5-nan-dian">5、难点</span><a href="#p5-nan-dian" class="header-anchor">#</a></h3><p>多窗口的管理，每个窗口使用 <code>remote.getCurrentWindow().id</code> 命名，在主进程中采用单个实例 <code>app.makeSingleInstance</code> 管理</p>]]></content>
      
      
      <categories>
          
          <category> 2701：Electron </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Electron </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>开始使用 Electron</title>
      <link href="/270102/"/>
      <url>/270102/</url>
      
        <content type="html"><![CDATA[<h1><span id="kai-shi-shi-yong-electron">开始使用 Electron</span><a href="#kai-shi-shi-yong-electron" class="header-anchor">#</a></h1><h2><span id="pyi-kai-shi">一、开始</span><a href="#pyi-kai-shi" class="header-anchor">#</a></h2><h3><span id="p1-chuang-jian-wo-de-di-yi-ge-ying-yong">1、创建我的第一个应用</span><a href="#p1-chuang-jian-wo-de-di-yi-ge-ying-yong" class="header-anchor">#</a></h3><p>01、需要先安装 <code>Node.js</code><br>本质是一种 <code>Node.js</code> 应用，所以应用程序的起点是 <code>package.json</code></p><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash">app├── package.json├── main.js└── index.html<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span></span></code></pre><p>02、创建项目并安装 Electron</p><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash">mkdir my-electron-appcd my-electron-appnpm init -ynpm i --save-dev electron  # 安装到开发依赖中<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span></span></code></pre><p>03、创建主脚本文件 <code>main.js</code></p><pre class="line-numbers language-js" data-language="js"><code class="language-js"><span class="token keyword">const</span> <span class="token punctuation">&#123;</span> app<span class="token punctuation">,</span> BrowserWindow <span class="token punctuation">&#125;</span> <span class="token operator">=</span> <span class="token function">require</span><span class="token punctuation">(</span><span class="token string">"electron"</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment">// 创建一个新的窗口</span><span class="token keyword">function</span> <span class="token function">createWindow</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>  <span class="token keyword">const</span> win <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">BrowserWindow</span><span class="token punctuation">(</span><span class="token punctuation">&#123;</span>    width<span class="token operator">:</span> <span class="token number">800</span><span class="token punctuation">,</span>    height<span class="token operator">:</span> <span class="token number">600</span><span class="token punctuation">,</span>    webPreferences<span class="token operator">:</span> <span class="token punctuation">&#123;</span>      nodeIntegration<span class="token operator">:</span> <span class="token boolean">true</span><span class="token punctuation">,</span>    <span class="token punctuation">&#125;</span><span class="token punctuation">,</span>  <span class="token punctuation">&#125;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>  win<span class="token punctuation">.</span><span class="token function">loadFile</span><span class="token punctuation">(</span><span class="token string">"index.html"</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token punctuation">&#125;</span>app<span class="token punctuation">.</span><span class="token function">whenReady</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">then</span><span class="token punctuation">(</span>createWindow<span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment">// 当程序不再有任何打开窗口时试图退出</span>app<span class="token punctuation">.</span><span class="token function">on</span><span class="token punctuation">(</span><span class="token string">"windows-all-closed"</span><span class="token punctuation">,</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=></span> <span class="token punctuation">&#123;</span>  <span class="token keyword">if</span> <span class="token punctuation">(</span>process<span class="token punctuation">.</span>platform <span class="token operator">!==</span> <span class="token string">"darwin"</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>    app<span class="token punctuation">.</span><span class="token function">quit</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>  <span class="token punctuation">&#125;</span><span class="token punctuation">&#125;</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment">// 只有当应用程序激活后没有可见窗口才能创建新的窗口</span>app<span class="token punctuation">.</span><span class="token function">on</span><span class="token punctuation">(</span><span class="token string">'activate'</span><span class="token punctuation">,</span> <span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token operator">=></span><span class="token punctuation">&#123;</span>  <span class="token keyword">if</span><span class="token punctuation">(</span>BrowserWindow<span class="token punctuation">.</span><span class="token function">getAllWindows</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span>length <span class="token operator">===</span> <span class="token number">0</span><span class="token punctuation">)</span><span class="token punctuation">&#123;</span>    <span class="token function">createWindow</span><span class="token punctuation">(</span><span class="token punctuation">)</span>  <span class="token punctuation">&#125;</span><span class="token punctuation">&#125;</span><span class="token punctuation">)</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>04、创建页面 <code>index.html</code></p><pre class="line-numbers language-html" data-language="html"><code class="language-html"><span class="token doctype"><span class="token punctuation">&lt;!</span><span class="token doctype-tag">DOCTYPE</span> <span class="token name">html</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>html</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>head</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>meta</span> <span class="token attr-name">charset</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>UTF-8<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>title</span><span class="token punctuation">></span></span>Hello World!<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>title</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>meta</span> <span class="token attr-name">http-equiv</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>Content-Security-Policy<span class="token punctuation">"</span></span> <span class="token attr-name">content</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>script-src <span class="token punctuation">'</span>self<span class="token punctuation">'</span> <span class="token punctuation">'</span>unsafe-inline<span class="token punctuation">'</span>;<span class="token punctuation">"</span></span> <span class="token punctuation">/></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>head</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>body</span><span class="token style-attr language-css"><span class="token attr-name"> <span class="token attr-name">style</span></span><span class="token punctuation">="</span><span class="token attr-value"><span class="token property">background</span><span class="token punctuation">:</span> white<span class="token punctuation">;</span></span><span class="token punctuation">"</span></span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>h1</span><span class="token punctuation">></span></span>Hello World!<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>h1</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>p</span><span class="token punctuation">></span></span>        We are using node <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>script</span><span class="token punctuation">></span></span><span class="token script"><span class="token language-javascript">document<span class="token punctuation">.</span><span class="token function">write</span><span class="token punctuation">(</span>process<span class="token punctuation">.</span>versions<span class="token punctuation">.</span>node<span class="token punctuation">)</span></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>script</span><span class="token punctuation">></span></span>,        Chrome <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>script</span><span class="token punctuation">></span></span><span class="token script"><span class="token language-javascript">document<span class="token punctuation">.</span><span class="token function">write</span><span class="token punctuation">(</span>process<span class="token punctuation">.</span>versions<span class="token punctuation">.</span>chrome<span class="token punctuation">)</span></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>script</span><span class="token punctuation">></span></span>,        and Electron <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>script</span><span class="token punctuation">></span></span><span class="token script"><span class="token language-javascript">document<span class="token punctuation">.</span><span class="token function">write</span><span class="token punctuation">(</span>process<span class="token punctuation">.</span>versions<span class="token punctuation">.</span>electron<span class="token punctuation">)</span></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>script</span><span class="token punctuation">></span></span>.    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>p</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>body</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>html</span><span class="token punctuation">></span></span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>05、修改 <code>package.json</code></p><pre class="line-numbers language-json" data-language="json"><code class="language-json">&#123;  &quot;name&quot;: &quot;electron-demo&quot;,  &quot;version&quot;: &quot;1.0.0&quot;,  &quot;description&quot;: &quot;&quot;,  &quot;main&quot;: &quot;main.js&quot;,  &quot;scripts&quot;: &#123;    &quot;start&quot;: &quot;electron .&quot;  &#125;,  &quot;keywords&quot;: [],  &quot;author&quot;: &quot;&quot;,  &quot;license&quot;: &quot;ISC&quot;,  &quot;devDependencies&quot;: &#123;    &quot;electron&quot;: &quot;^11.1.0&quot;  &#125;&#125;<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>06、运行：<code>npm start</code></p><h3><span id="p2-da-bao-bing-fen-fa-cheng-xu">2、打包并分发程序</span><a href="#p2-da-bao-bing-fen-fa-cheng-xu" class="header-anchor">#</a></h3><p>导入 Electron Forge 到你的应用文件夹</p><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash">npx @electron-forge&#x2F;cli import<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>创建一个分发版本</p><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash">npm run make<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>（🐛 如果打包出错，大概率是因为你的 <code>package.json</code> 文件里面的 <code>author</code> 和 <code>description</code> 为空）</p><h3><span id="p3-ying-yong-cheng-xu-jie-gou">3、应用程序结构</span><a href="#p3-ying-yong-cheng-xu-jie-gou" class="header-anchor">#</a></h3><p>Electron 由三个主要部分组成：</p><ul><li>Chromium</li><li>Node.js</li><li>自定义 APIs</li></ul><p>进程有两个：主进程和渲染进程。<br>进程之间的通信可以通过 <code>ipcMain</code> 和 <code>ipcRenderer</code> 来进行<br>APIs 分为 Electron API、Node.js API</p><h2><span id="pcan-kao">参考</span><a href="#pcan-kao" class="header-anchor">#</a></h2><ul><li>Electron + vue-cli3 <a href="https://zhuanlan.zhihu.com/p/75764907">https://zhuanlan.zhihu.com/p/75764907</a></li><li>中文文档（最后更新于2017年5月）<a href="https://github.com/amhoho/electron-cn-docs">https://github.com/amhoho/electron-cn-docs</a></li></ul>]]></content>
      
      
      <categories>
          
          <category> 2701：Electron </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Electron </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>ES Module</title>
      <link href="/220406/"/>
      <url>/220406/</url>
      
        <content type="html"><![CDATA[<h1><span id="es-module">ES Module</span><a href="#es-module" class="header-anchor">#</a></h1><p><code>require</code> 是运行时调用，<code>import</code> 是编译时调用。</p>]]></content>
      
      
      <categories>
          
          <category> 2204：ES6 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> JavaScript </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Vue 路由</title>
      <link href="/250201/"/>
      <url>/250201/</url>
      
        <content type="html"><![CDATA[<h1><span id="vue-lu-you">Vue 路由</span><a href="#vue-lu-you" class="header-anchor">#</a></h1><p>路由组件懒加载<br><code>require.ensure</code> 也是用来实现按需加载的。和 <code>import</code> 差不多。<br>在commonJS中有一个规范，里面定义了 <code>require.ensure</code> 语法，webpack 实现了它，作用是可以在打包的时候进行代码分片，并且异步加载分片后的代码。</p>]]></content>
      
      
      <categories>
          
          <category> 2502：Vue路由 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> JavaScript </tag>
            
            <tag> Vue </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>伊洛纳</title>
      <link href="/720201/"/>
      <url>/720201/</url>
      
        <content type="html"><![CDATA[<h1><span id="yi-luo-na">伊洛纳</span><a href="#yi-luo-na" class="header-anchor">#</a></h1>]]></content>
      
      
      <categories>
          
          <category> 7202：伊洛纳 </category>
          
      </categories>
      
      
    </entry>
    
    
    
    <entry>
      <title>人际关系</title>
      <link href="/630101/"/>
      <url>/630101/</url>
      
        <content type="html"><![CDATA[<h1><span id="ren-ji-guan-xi">人际关系</span><a href="#ren-ji-guan-xi" class="header-anchor">#</a></h1><h2><span id="pwei-gui-lei">未归类</span><a href="#pwei-gui-lei" class="header-anchor">#</a></h2><ul><li>不要卷入八卦<br>卷入八卦就是因为一个假定的错误去诽谤他人。不要随意评论人或事，因为很多状况是你不了解的，就算了解也往往无法感同身受。你以为指出了别人的问题，其实恰恰暴露了自己的问题；你以为显示了自己的学识，其实往往忽略了自己的无知。凡事三思而后行，不论在现实生活中还是虚拟的网络上同样适用。</li><li>使用第二语言来探讨情感性和道德性的话题会使人们对这类话题产生距离感。</li><li>建立信任的关键是言行一致。</li><li>女人最在意的两件事分别为尊重与诚意。</li><li>哪些技能，经较短时间的学习，就可以给人的生活带来巨大帮助？<br>夸奖他人。</li><li>给足别人空间和时间。不要在冲突中追着对方要答案，对方往往没有你要的答案。</li><li>讲话语速不过快<br>有些人讲话过快，往往使他人无法理解你想要表达的东西。也让你重复讲一段话感到烦躁，所以语速正常让人能更好的理解你。</li><li>感情的基础是理解，理解的基础是表达。<br>当你装作无所谓时，别人会以为你真的无所谓。如果不能表达自己，就不要寄希望于别人的理解。感情的基础是理解，理解的基础是表达。不懂如何表达，就坦诚、诚恳的表达。告诉对方你觉得不合理，说出你的原因和想法。不用担心对方如何反应，该来的总会来，顺其自然。他们喜欢与否，是他们的事，但自己要先能喜欢自己。</li><li>别把焦虑写在脸上。焦虑是情绪，情绪会传染。</li><li>不要过度承诺，要量力而行。</li><li>你的时间和精力都是极其有限的，千万别高估自己。</li><li>保持对他人的耐心和尊重，即使是对你这辈子只会见一次的人。</li><li>倾听不同的观点，但辨证地接纳。君子和而不同。</li><li>用自己的心意去推想别人的心意。<br>指设身处地替别人着想。人们之间许多的矛盾争吵的根源恰恰在于不懂得换位思考。我们在赶公交时讨厌身边的人挤来挤去，舍友说梦话把自己吵醒，我们会不断抱怨他人，但我们自己做得怎么样呢？在与人相处的推己及人，许多的矛盾都会迎刃而解。你也会慢慢成为大家眼中明达宽厚之人。</li><li>我一直觉得与人相处的最好的方式，不是证明自己有多对，而是接受别人和你的不合。多给别人台阶下，不要处处为难人。</li><li>如何分辨“套路”和“真心”？<br>在追求的过程中，是否还保有自我。他赞美你，迎合你，小心翼翼的了解你的喜好，给你各种惊喜，但你却看不出他的好恶，不知道什么让他无聊，什么让他反感。只知道他包容你的一切，却不知道他的底线是什么；只知道他对你特别好，却说不出他是什么样的人。<br>这就是套路。了解和尊重，是恋爱关系的基础，那些一味迎合对方，紧紧隐藏自己的人，不是套路太多，就是情商较低。</li><li>仔细聆听别人的世界的模型，然后，在你答复他们之前，在你自己的脑海里建立起他们的模型。</li><li>任何感到紧张的场合，记住一句话：忘掉你自己。<br>把重心过多放在自己身上就会紧张，如果你更多关注的是别人，那紧张就消失了。</li><li>不要试图改变一个人。</li><li>简单来说，总是说别人好的人，往往自己也是个好人。</li><li>为什么我能和谁都聊得来呢？<br>因为我能在对方身上找到和自己身上相同素质的地方，产生一种“合流”之感，从彼此找到归属，再到接纳彼此不同。这种能力的根本就叫&quot;我乐意&quot;。我乐意将我的知识经验与人分享（关键自己的姿态是低姿态地分享，而非高姿态地灌输，后面会讲到。）也因我乐意去相信我脑海里的一些东西能通过语言交流和对方的一些东西迸发产生一些闪亮的暖流，产生出&quot;哇，ta好懂我！&quot;或者&quot;ta现在懂我了！&quot;这两种结果。</li><li>将心比心：</li><li>当你聊天之前是不是希望我们有个愉快的谈话？对方能懂自己？<br>是不是希望对方风趣幽默，就算再无聊的话也能分分钟让你捧腹大笑。<br>是不是想有什么埋怨就一吐为快，但碰到只会吐槽负能量的人就想逃？<br>只要好好做自己，温柔对待他人。</li><li>聊天四大常见错误：连续提问、不说自己、情感过度、随意评价。<br>针对聊天的四大常见错误，我又总结了四个对应原则：少问多说，多说自己、客观陈述事实、适当表达感受、谨慎评价对方。</li><li>不卑不亢。—— 聊天过程中，更重要的是气场和态度，而非答案。</li><li>很多人在说话时会不自觉地抖腿、眨眼、甩头发、皱眉、或者手上搞一些奇怪的动作，都会让别人看着很不舒服，这其实是一种不自信和心虚的潜在表现。同时，自己犯错是不容易自我察觉的，最好的方式就是问身边接触比较多的朋友，自己在聊天过程中有哪些多余的肢体动作，然后下意识地去改正。还有一点，在聊天话题深入的时候，要敢于和对方对视，无论是商业谈判亦或和异性约会，这能够表露出你对话题的重视以及对ta的真诚。</li><li>在所有的聊天中，要仔细聆听对方话语中的情感波动，你需要对里面蕴含的情感进行回应，而不是对内容进行回应。况且大部分的聊天，不一定有内容。</li><li>虚假同感偏差（false consensus bias）<br>认为别人“应该”会有与自己相同的感受和立场。不能理解每个人除中立旁观外，都只是简单地趋利避害和利己主义。例如在美国每个选民都觉得媒体偏向其他候选人，在意大利每个球迷都觉得裁判偏向对手球队，学渣觉得考试太难学霸认为考试不能测试出自己水平的天花板。</li><li>眼睛长时间地盯视对话者还有一种威胁的功能。警察在审讯犯罪者的时候通常对他怒目而视，这种目光对于拒不交代罪行的犯罪者来说是一种无声的压力和威胁。礼貌的做法是盯着对方的鼻子会感觉眼光柔和很多。</li><li>最好的照片状态是不看着照相机而且不笑。不看着照相机，但是摆出调情的神态是最差劲的。男性照片中比较受欢迎的场景是和动物在一起，炫耀肌肉，正在做有意义的事，和朋友一起玩；不受欢迎的内容为户外，喝酒，旅游。</li><li>人际关系里边有一个关键要害，但凡一个人，敢在公众场合撕，则在他的价值理念里边，这个公众场合的人一定是站他的。他觉得自己有理，才敢公开对立。</li></ul>]]></content>
      
      
      <categories>
          
          <category> 6301：人际关系 </category>
          
      </categories>
      
      
    </entry>
    
    
    
    <entry>
      <title>Anaconda</title>
      <link href="/340102/"/>
      <url>/340102/</url>
      
        <content type="html"><![CDATA[<h1><span id="anaconda">Anaconda</span><a href="#anaconda" class="header-anchor">#</a></h1><h2><span id="pyi-an-zhuang-he-pei-zhi-huan-jing-bian-liang">一、安装和配置环境变量</span><a href="#pyi-an-zhuang-he-pei-zhi-huan-jing-bian-liang" class="header-anchor">#</a></h2><p>1、参考：<a href="https://blog.csdn.net/ITLearnHall/article/details/81708148">Anaconda详细安装及使用教程</a><br>2、查看版本 <code>conda --version</code><br>3、升级工具包 <code>conda upgrade --all</code></p><h2><span id="per-guan-li-xu-ni-huan-jing">二、管理虚拟环境</span><a href="#per-guan-li-xu-ni-huan-jing" class="header-anchor">#</a></h2><h3><span id="p1-chuang-jian-xu-ni-huan-jing">1、创建虚拟环境</span><a href="#p1-chuang-jian-xu-ni-huan-jing" class="header-anchor">#</a></h3><p>创建一个名称为test的虚拟环境并指定 Python 版本为3.7。</p><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash">conda  create -n test python&#x3D;3.7<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><h3><span id="p2-qie-huan-huan-jing">2、切换环境</span><a href="#p2-qie-huan-huan-jing" class="header-anchor">#</a></h3><p>切换到<code>base</code>环境</p><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash">activate<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>切换到名叫<code>test</code>的环境。</p><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash">activate test<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>查看所有环境</p><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash">conda env list<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><h3><span id="p3-xie-zai-huan-jing">3、卸载环境</span><a href="#p3-xie-zai-huan-jing" class="header-anchor">#</a></h3><p>卸载名叫<code>test</code>的环境。</p><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash">conda remove --name test --all<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><h3><span id="p4-an-zhuang-he-xie-zai-di-san-fang-bao">4、安装和卸载第三方包</span><a href="#p4-an-zhuang-he-xie-zai-di-san-fang-bao" class="header-anchor">#</a></h3><p>安装第三方名叫<code>test</code>的包。</p><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash">conda install test<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>或者</p><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash">pip install test<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>卸载第三方名叫<code>test</code>的包。</p><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash">conda remove test<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>或者</p><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash">pip uninstall test<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>查看所有包列表</p><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash">conda list<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><h2><span id="psan-wen-ti">三、问题</span><a href="#psan-wen-ti" class="header-anchor">#</a></h2><p>1、<a href="https://www.cnblogs.com/dereen/p/ps_conda_env.html">解决Win10 PowerShell无法激活Anaconda环境的问题</a></p><p>2、更改PowerShell执行策略</p><pre class="line-numbers language-none"><code class="language-none">1. 以管理员身份运行PowerShell;2. 执行：get-ExecutionPolicy，显示Restricted，表示状态是禁止的;3. 执行：set-ExecutionPolicy RemoteSigned;4. 这时再执行get-ExecutionPolicy，就显示RemoteSigned;<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span></span></code></pre>]]></content>
      
      
      <categories>
          
          <category> 3401：Python基础 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Python </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Python 库</title>
      <link href="/340201/"/>
      <url>/340201/</url>
      
        <content type="html"><![CDATA[<h1><span id="python-ku">Python 库</span><a href="#python-ku" class="header-anchor">#</a></h1><p>分为系统库和第三方库。</p>]]></content>
      
      
      <categories>
          
          <category> 3402：Python库 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Python </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Python sqlite</title>
      <link href="/340207/"/>
      <url>/340207/</url>
      
        <content type="html"><![CDATA[<h1><span id="sqlite">sqlite</span><a href="#sqlite" class="header-anchor">#</a></h1><p>with Python</p><p>1、引用</p><pre class="line-numbers language-python" data-language="python"><code class="language-python">import sqlite3<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>2、连接或者创建数据库，如果数据库不存在将在工作目录创建数据库</p><pre class="line-numbers language-python" data-language="python"><code class="language-python">conn &#x3D; sqlite3.connect(&#39;数据库名称.db&#39;)<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>3、获取游标</p><pre class="line-numbers language-python" data-language="python"><code class="language-python">c &#x3D; conn.cursor()<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>4、新建表</p><pre class="line-numbers language-python" data-language="python"><code class="language-python">c.execute(&#39;&#39;&#39;       CREATE TABLE 表名(       ID INT PRIMARY KEY NOT NULL,       NAME TEXT NOT NULL,       AGE INT NOT NULL,       ADDRESS CHAR(50),       SALARY REAL       );&#39;&#39;&#39;)<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>5、插入操作</p><pre class="line-numbers language-python" data-language="python"><code class="language-python">c.execute(&quot;INSERT INTO 表名 (key1,key2) VALUES(value1,value2);&quot;)<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>6、查询操作</p><p>7、更新操作</p><p>8、删除操作</p><p>9、提交事务</p><p>Python 的 SQLite 数据库 API 默认是开启了事务的，因此需提交事务；否则程序对数据库所做的修改（包括插入数据、修改数据、删除数据）不会生效。</p><pre class="line-numbers language-python" data-language="python"><code class="language-python">conn.commit()<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>10、关闭游标和连接</p><pre class="line-numbers language-python" data-language="python"><code class="language-python">c.close()conn.close()<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre><h1><span id="can-kao">参考</span><a href="#can-kao" class="header-anchor">#</a></h1><p>&quot; <a href="https://www.runoob.com/sqlite/sqlite-python.html">https://www.runoob.com/sqlite/sqlite-python.html</a> &quot;<br>&quot; <a href="http://c.biancheng.net/view/2571.html">http://c.biancheng.net/view/2571.html</a> &quot;</p>]]></content>
      
      
      <categories>
          
          <category> 3402：Python库 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Python </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Python colorama</title>
      <link href="/340206/"/>
      <url>/340206/</url>
      
        <content type="html"><![CDATA[<h1><span id="python-colorama">Python colorama</span><a href="#python-colorama" class="header-anchor">#</a></h1><h1><span id="1-an-zhuang-mo-kuai-shell">1. 安装模块（shell）</span><a href="#1-an-zhuang-mo-kuai-shell" class="header-anchor">#</a></h1><p>pip install colorama</p><h1><span id="2-yin-yong-mo-kuai">2. 引用模块</span><a href="#2-yin-yong-mo-kuai" class="header-anchor">#</a></h1><p>from colorama import init, Fore, Back, Style</p><h1><span id="3-chu-shi-hua">3. 初始化</span><a href="#3-chu-shi-hua" class="header-anchor">#</a></h1><p>init(autoreset=True)</p><h1><span id="4-ke-yong-can-shu-lie-biao">4. 可用参数列表</span><a href="#4-ke-yong-can-shu-lie-biao" class="header-anchor">#</a></h1><p>#Fore: BLACK, RED, GREEN, YELLOW, BLUE, MAGENTA, CYAN, WHITE, RESET.<br>#Back: BLACK, RED, GREEN, YELLOW, BLUE, MAGENTA, CYAN, WHITE, RESET.<br>#Style: DIM, NORMAL, BRIGHT, RESET_ALL</p><h1><span id="can-kao">参考</span><a href="#can-kao" class="header-anchor">#</a></h1><h1><span id="1-https-www-cnblogs-com-xieshengsen-p-6932233-html">1. </span><a href="#1-https-www-cnblogs-com-xieshengsen-p-6932233-html" class="header-anchor">#</a></h1>]]></content>
      
      
      <categories>
          
          <category> 3402：Python库 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Python </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Python time</title>
      <link href="/340203/"/>
      <url>/340203/</url>
      
        <content type="html"><![CDATA[<h1><span id="python-time">Python Time</span><a href="#python-time" class="header-anchor">#</a></h1><p>import time</p><h1><span id="yan-shi-dan-wei-miao">延时,单位秒</span><a href="#yan-shi-dan-wei-miao" class="header-anchor">#</a></h1><p>time.sleep(t)</p>]]></content>
      
      
      <categories>
          
          <category> 3402：Python库 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Python </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Python Random</title>
      <link href="/340204/"/>
      <url>/340204/</url>
      
        <content type="html"><![CDATA[<h1><span id="python-random">Python Random</span><a href="#python-random" class="header-anchor">#</a></h1><blockquote><p>随机数库</p></blockquote><p>1、引入</p><pre class="line-numbers language-python" data-language="python"><code class="language-python">import random<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>2、生成一个指定范围内的随机浮点数</p><pre class="line-numbers language-python" data-language="python"><code class="language-python">random.uniform(n1,n2)<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>3、生成一个指定范围内的整数</p><pre class="line-numbers language-python" data-language="python"><code class="language-python">random.randint(n1,n2)<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>4、从指定范围内，按指定的基数递增的集合中获取一个随机数</p><pre class="line-numbers language-python" data-language="python"><code class="language-python">random.randrange([start],stop[,step]) <span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>5、从序列中获取一个随机元素</p><pre class="line-numbers language-python" data-language="python"><code class="language-python">random.choice(序列)<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>6、打乱列表元素</p><pre class="line-numbers language-python" data-language="python"><code class="language-python">random.shuffle(x[,random]) <span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>7、从序列中随机获取指定长度的片段</p><pre class="line-numbers language-python" data-language="python"><code class="language-python">random.sample(n1,n2)<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre>]]></content>
      
      
      <categories>
          
          <category> 3402：Python库 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Python </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Python os &amp; sys</title>
      <link href="/340202/"/>
      <url>/340202/</url>
      
        <content type="html"><![CDATA[<h1><span id="python-os-amp-sys">Python os &amp; sys</span><a href="#python-os-amp-sys" class="header-anchor">#</a></h1><h1><span id="os">os</span><a href="#os" class="header-anchor">#</a></h1><pre class="line-numbers language-python" data-language="python"><code class="language-python">import os<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><h2><span id="psystem">system</span><a href="#psystem" class="header-anchor">#</a></h2><pre class="line-numbers language-python" data-language="python"><code class="language-python"># 清屏os.system(&#39;cls&#39;)<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre><h1><span id="sys">sys</span><a href="#sys" class="header-anchor">#</a></h1><pre class="line-numbers language-python" data-language="python"><code class="language-python">import sys<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><h2><span id="pargv">argv</span><a href="#pargv" class="header-anchor">#</a></h2><pre class="line-numbers language-python" data-language="python"><code class="language-python">if __name__ &#x3D;&#x3D; &quot;__main__&quot;:    q &#x3D; &#39;&#39;    b &#x3D; &#39;&#39;    c &#x3D; &#39;&#39;    if len(sys.argv) &#x3D;&#x3D; 4:        a &#x3D; sys.argv[1]        b &#x3D; sys.argv[2]        c &#x3D; sys.argv[3]    print(a,b,c)# 输入 python test1.py 1 2 3# 输出 1 2 3<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>]]></content>
      
      
      <categories>
          
          <category> 3402：Python库 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Python </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Python Calendar</title>
      <link href="/340405/"/>
      <url>/340405/</url>
      
        <content type="html"><![CDATA[<h1><span id="python-calendar">Python Calendar</span><a href="#python-calendar" class="header-anchor">#</a></h1><p>import calendar</p><h1><span id="xian-shi-ri-li">显示日历</span><a href="#xian-shi-ri-li" class="header-anchor">#</a></h1><p>print(calendar.month(2020,10))</p>]]></content>
      
      
      <categories>
          
          <category> 3402：Python库 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Python </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Python 基础</title>
      <link href="/340101/"/>
      <url>/340101/</url>
      
        <content type="html"><![CDATA[<h1><span id="python-ji-chu">Python 基础</span><a href="#python-ji-chu" class="header-anchor">#</a></h1><p>待更新。</p>]]></content>
      
      
      <categories>
          
          <category> 3401：Python基础 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Python </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>fetch</title>
      <link href="/230503/"/>
      <url>/230503/</url>
      
        <content type="html"><![CDATA[<h1><span id="fetch">fetch</span><a href="#fetch" class="header-anchor">#</a></h1><p><code>fetch</code> 是新型 ajax 请求方式，返回的是一个 Promise 对象。<br>兼容性不好。</p><p>1、get</p><pre class="line-numbers language-js" data-language="js"><code class="language-js"><span class="token function">fetch</span><span class="token punctuation">(</span><span class="token string">"http://127.0.0.1/sword/1"</span><span class="token punctuation">)</span>  <span class="token punctuation">.</span><span class="token function">then</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token parameter">response</span><span class="token punctuation">)</span> <span class="token operator">=></span> response<span class="token punctuation">.</span><span class="token function">json</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span>  <span class="token punctuation">.</span><span class="token function">then</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token parameter">res</span><span class="token punctuation">)</span> <span class="token operator">=></span> <span class="token punctuation">&#123;</span>    console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>res<span class="token punctuation">)</span><span class="token punctuation">;</span>  <span class="token punctuation">&#125;</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>2、post</p><pre class="line-numbers language-js" data-language="js"><code class="language-js"><span class="token comment">// application/json</span><span class="token function">fetch</span><span class="token punctuation">(</span><span class="token string">"http://127.0.0.1/sword"</span><span class="token punctuation">,</span> <span class="token punctuation">&#123;</span>  method<span class="token operator">:</span> <span class="token string">"post"</span><span class="token punctuation">,</span> <span class="token comment">// 默认是 get</span>  headers<span class="token operator">:</span> <span class="token punctuation">&#123;</span>    <span class="token string">"content-type"</span><span class="token operator">:</span> <span class="token string">"application/json"</span><span class="token punctuation">,</span>  <span class="token punctuation">&#125;</span><span class="token punctuation">,</span>  body<span class="token operator">:</span> <span class="token constant">JSON</span><span class="token punctuation">.</span><span class="token function">stringify</span><span class="token punctuation">(</span><span class="token punctuation">&#123;</span>    name<span class="token operator">:</span> <span class="token string">"绒布球之剑"</span><span class="token punctuation">,</span>    attr<span class="token operator">:</span> <span class="token punctuation">&#123;</span>      atk<span class="token operator">:</span> <span class="token number">999</span><span class="token punctuation">,</span>      parry<span class="token operator">:</span> <span class="token number">999</span>    <span class="token punctuation">&#125;</span><span class="token punctuation">,</span>  <span class="token punctuation">&#125;</span><span class="token punctuation">)</span><span class="token punctuation">,</span><span class="token punctuation">&#125;</span><span class="token punctuation">)</span>  <span class="token punctuation">.</span><span class="token function">then</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token parameter">response</span><span class="token punctuation">)</span> <span class="token operator">=></span> response<span class="token punctuation">.</span><span class="token function">json</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span>  <span class="token punctuation">.</span><span class="token function">then</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token parameter">res</span><span class="token punctuation">)</span> <span class="token operator">=></span> <span class="token punctuation">&#123;</span>    console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>res<span class="token punctuation">)</span><span class="token punctuation">;</span>  <span class="token punctuation">&#125;</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment">// application/x-www-form-urlencoded</span><span class="token function">fetch</span><span class="token punctuation">(</span><span class="token string">"http://127.0.0.1/sword"</span><span class="token punctuation">,</span> <span class="token punctuation">&#123;</span>  method<span class="token operator">:</span> <span class="token string">"post"</span><span class="token punctuation">,</span>  headers<span class="token operator">:</span> <span class="token punctuation">&#123;</span>    <span class="token string">"content-type"</span><span class="token operator">:</span> <span class="token string">"application/x-www-form-urlencoded"</span><span class="token punctuation">,</span>  <span class="token punctuation">&#125;</span><span class="token punctuation">,</span>  body<span class="token operator">:</span> <span class="token string">"name=大绒布球之剑&amp;text=绒布球之剑"</span><span class="token punctuation">,</span><span class="token punctuation">&#125;</span><span class="token punctuation">)</span>  <span class="token punctuation">.</span><span class="token function">then</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token parameter">response</span><span class="token punctuation">)</span> <span class="token operator">=></span> response<span class="token punctuation">.</span><span class="token function">json</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span>  <span class="token punctuation">.</span><span class="token function">then</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token parameter">res</span><span class="token punctuation">)</span> <span class="token operator">=></span> <span class="token punctuation">&#123;</span>    console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>res<span class="token punctuation">)</span><span class="token punctuation">;</span>  <span class="token punctuation">&#125;</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>3、delete</p><pre class="line-numbers language-js" data-language="js"><code class="language-js"><span class="token function">fetch</span><span class="token punctuation">(</span><span class="token string">"http://127.0.0.1/sword/9"</span><span class="token punctuation">,</span> <span class="token punctuation">&#123;</span>  method<span class="token operator">:</span> <span class="token string">"delete"</span><span class="token punctuation">,</span><span class="token punctuation">&#125;</span><span class="token punctuation">)</span>  <span class="token punctuation">.</span><span class="token function">then</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token parameter">response</span><span class="token punctuation">)</span> <span class="token operator">=></span> response<span class="token punctuation">.</span><span class="token function">json</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span>  <span class="token punctuation">.</span><span class="token function">then</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token parameter">res</span><span class="token punctuation">)</span> <span class="token operator">=></span> <span class="token punctuation">&#123;</span>    console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>res<span class="token punctuation">)</span><span class="token punctuation">;</span>  <span class="token punctuation">&#125;</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>4、put</p><pre class="line-numbers language-js" data-language="js"><code class="language-js"><span class="token function">fetch</span><span class="token punctuation">(</span><span class="token string">"http://127.0.0.1/sword/9"</span><span class="token punctuation">,</span> <span class="token punctuation">&#123;</span>  method<span class="token operator">:</span> <span class="token string">"put"</span><span class="token punctuation">,</span>  headers<span class="token operator">:</span> <span class="token punctuation">&#123;</span>    <span class="token string">"content-type"</span><span class="token operator">:</span> <span class="token string">"application/json"</span><span class="token punctuation">,</span>  <span class="token punctuation">&#125;</span><span class="token punctuation">,</span>  body<span class="token operator">:</span> <span class="token constant">JSON</span><span class="token punctuation">.</span><span class="token function">stringify</span><span class="token punctuation">(</span><span class="token punctuation">&#123;</span>    name<span class="token operator">:</span> <span class="token string">"绒布球之大剑"</span><span class="token punctuation">,</span>    attr<span class="token operator">:</span> <span class="token punctuation">&#123;</span>      atk<span class="token operator">:</span> <span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">,</span>      parry<span class="token operator">:</span> <span class="token operator">-</span><span class="token number">999</span>    <span class="token punctuation">&#125;</span>  <span class="token punctuation">&#125;</span><span class="token punctuation">)</span><span class="token punctuation">,</span><span class="token punctuation">&#125;</span><span class="token punctuation">)</span>  <span class="token punctuation">.</span><span class="token function">then</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token parameter">response</span><span class="token punctuation">)</span> <span class="token operator">=></span> response<span class="token punctuation">.</span><span class="token function">json</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span>  <span class="token punctuation">.</span><span class="token function">then</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token parameter">res</span><span class="token punctuation">)</span> <span class="token operator">=></span> <span class="token punctuation">&#123;</span>    console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>res<span class="token punctuation">)</span><span class="token punctuation">;</span>  <span class="token punctuation">&#125;</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>5、patch</p><pre class="line-numbers language-js" data-language="js"><code class="language-js"><span class="token function">fetch</span><span class="token punctuation">(</span><span class="token string">"http://127.0.0.1/sword/9"</span><span class="token punctuation">,</span> <span class="token punctuation">&#123;</span>  method<span class="token operator">:</span> <span class="token string">"patch"</span><span class="token punctuation">,</span>  headers<span class="token operator">:</span> <span class="token punctuation">&#123;</span>    <span class="token string">"content-type"</span><span class="token operator">:</span> <span class="token string">"application/json"</span><span class="token punctuation">,</span>  <span class="token punctuation">&#125;</span><span class="token punctuation">,</span>  body<span class="token operator">:</span> <span class="token constant">JSON</span><span class="token punctuation">.</span><span class="token function">stringify</span><span class="token punctuation">(</span><span class="token punctuation">&#123;</span>    name<span class="token operator">:</span> <span class="token string">"绒布球快乐剑"</span>  <span class="token punctuation">&#125;</span><span class="token punctuation">)</span><span class="token punctuation">,</span><span class="token punctuation">&#125;</span><span class="token punctuation">)</span>  <span class="token punctuation">.</span><span class="token function">then</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token parameter">response</span><span class="token punctuation">)</span> <span class="token operator">=></span> response<span class="token punctuation">.</span><span class="token function">json</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span>  <span class="token punctuation">.</span><span class="token function">then</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token parameter">res</span><span class="token punctuation">)</span> <span class="token operator">=></span> <span class="token punctuation">&#123;</span>    console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>res<span class="token punctuation">)</span><span class="token punctuation">;</span>  <span class="token punctuation">&#125;</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>]]></content>
      
      
      <categories>
          
          <category> 2305：网络请求 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> JavaScript </tag>
            
            <tag> Ajax </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Vuex</title>
      <link href="/250301/"/>
      <url>/250301/</url>
      
        <content type="html"><![CDATA[<h1><span id="vuex">Vuex</span><a href="#vuex" class="header-anchor">#</a></h1><p>管理多组件共享的状态数据。<br>核心概念：</p><ul><li><code>store</code></li><li><code>state</code><br>用于存储多组件共享状态</li><li><code>mutation</code><br>函数<br>直接修改 <code>state</code> 的数据<br>必须写同步代码（为什么？ 官方代码规范 / Vue devTool 记录触发过的 mutation，如果写入异步代码，会导致 mutation 的执行顺序和更新顺序不统一，调试工具就报废了）</li><li><code>action</code><br>函数<br>通过 <code>mutation</code> 来间接修改状态数据。<br>可以是异步函数</li><li><code>getter</code><br>函数（用的是它的返回值）<br>相当于计算属性（当需要一个数据，但是没有，然而这个数据和 data 或者 props 相关，最终可以通过他们获得）</li><li><code>dispatch</code><br>用于分发 action</li><li><code>commit</code></li></ul>]]></content>
      
      
      <categories>
          
          <category> 2503：Vue组件通信 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> JavaScript </tag>
            
            <tag> Vue </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>CSS BFC</title>
      <link href="/210209/"/>
      <url>/210209/</url>
      
        <content type="html"><![CDATA[<h1><span id="css-bfc">CSS BFC</span><a href="#css-bfc" class="header-anchor">#</a></h1><p>BFC，块级格式化上下文。 是一个独立的渲染区域，让处于 BFC 内部的元素与外部的元素相互隔离，使内外元素的定位不会相互影响。</p><h2><span id="p1-chuang-jian-bfc">1、创建 BFC</span><a href="#p1-chuang-jian-bfc" class="header-anchor">#</a></h2><ul><li><strong>根元素</strong></li><li><strong>浮动</strong> <code>float: right / left</code></li><li><strong>定位（仅 absolute 和 fixed）</strong></li><li><strong>行内块元素和表格元素</strong> <code>display: inline-block / table</code></li><li><strong>overflow 的值不为 visible</strong></li></ul><h2><span id="p2-fan-wei">2、范围</span><a href="#p2-fan-wei" class="header-anchor">#</a></h2><blockquote><p>A block formatting context contains everything inside of the element creating it, that is not also inside a descendant element that creates a new block formatting context.</p></blockquote><p>直译过来就是, BFC 包含创建它的元素的所有子元素, 但不包括创建了新 BFC 的子元素的内部元素。简单来说，子元素如果又创建了一个新的 BFC，那么它里面的内容就不属于上一个 BFC 了，这体现了 BFC 隔离 的思想。<br>也就是所说，<strong>一个元素不能同时存在于两个 BFC 中</strong>。</p><h2><span id="p3-gui-ze">3、规则</span><a href="#p3-gui-ze" class="header-anchor">#</a></h2><p>BFC 除了会创建一个隔离的空间外，还具有以下特性：</p><ul><li>BFC 内部的块级盒会在垂直方向上一个接一个排列。</li><li>同一 BFC 下的相邻块级元素可能发生外边距折叠，创建新的 BFC 可以避免外边距折叠。（解决塌陷）</li><li>浮动盒的区域不会和 BFC 重叠 （BFC 的区域不会与 float 的元素区域重叠）</li><li>计算 BFC 的高度时，浮动元素也会参与计算</li><li>文字层不会被浮动层覆盖，环绕于周围</li></ul><h2><span id="p4-ying-yong">4、应用</span><a href="#p4-ying-yong" class="header-anchor">#</a></h2><ul><li><p>自适应多栏布局<br>中间栏创建 BFC，左右栏宽度固定后浮动。由于盒子的 margin box 的左边和包含块 border box 的左边相接触，同时浮动盒的区域不会和 BFC 重叠，所以中间栏的宽度会自适应。</p></li><li><p>防止外边距折叠<br>创建新的 BFC ，让相邻的块级盒位于不同 BFC 下可以防止外边距折叠</p></li><li><p>清除浮动<br>BFC 内部的浮动元素也会参与高度计算，可以清除 BFC 内部的浮动</p><p>清除浮动的原理是两个<code>div</code>都位于同一个 BFC 区域之中</p></li></ul>]]></content>
      
      
      <categories>
          
          <category> 2102：CSS </category>
          
      </categories>
      
      
        <tags>
            
            <tag> CSS </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Axios</title>
      <link href="/230502/"/>
      <url>/230502/</url>
      
        <content type="html"><![CDATA[<p><strong>axios</strong> 是目前最受欢迎的 ajax 封装库， 基于 Promise。</p><p><a href="http://www.axios-js.com/zh-cn">文档</a></p><h2><span id="pyi-kai-shi">一、开始</span><a href="#pyi-kai-shi" class="header-anchor">#</a></h2><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash">npm install axios<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><h2><span id="per-ji-ben-shi-yong">二、基本使用</span><a href="#per-ji-ben-shi-yong" class="header-anchor">#</a></h2><p><code>axios</code> 相当于 <code>axios.request</code> ，返回的是一个 Promise 对象</p><h3><span id="p1-get">1、GET</span><a href="#p1-get" class="header-anchor">#</a></h3><pre class="line-numbers language-js" data-language="js"><code class="language-js">axios<span class="token punctuation">.</span><span class="token function">get</span><span class="token punctuation">(</span><span class="token string">"http://127.0.0.1/sword/9"</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><pre class="line-numbers language-js" data-language="js"><code class="language-js"><span class="token function">axios</span><span class="token punctuation">(</span><span class="token string">"http://127.0.0.1/sword/9"</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><h3><span id="p2-post">2、POST</span><a href="#p2-post" class="header-anchor">#</a></h3><pre class="line-numbers language-js" data-language="js"><code class="language-js"><span class="token comment">// application/json</span>axios<span class="token punctuation">.</span><span class="token function">post</span><span class="token punctuation">(</span><span class="token string">"http://127.0.0.1/sword"</span><span class="token punctuation">,</span> <span class="token punctuation">&#123;</span>  id<span class="token operator">:</span> <span class="token number">1</span><span class="token punctuation">,</span>  name<span class="token operator">:</span> <span class="token string">"破剑"</span><span class="token punctuation">,</span><span class="token punctuation">&#125;</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment">// application/x-www-form-urlencoded</span>axios<span class="token punctuation">.</span><span class="token function">post</span><span class="token punctuation">(</span><span class="token string">"http://127.0.0.1/sword"</span><span class="token punctuation">,</span> <span class="token string">"name=破晓快乐剑"</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><pre class="line-numbers language-js" data-language="js"><code class="language-js"><span class="token function">axios</span><span class="token punctuation">(</span><span class="token punctuation">&#123;</span>  method<span class="token operator">:</span> <span class="token string">"post"</span><span class="token punctuation">,</span>  url<span class="token operator">:</span> <span class="token string">"http://127.0.0.1/sword"</span><span class="token punctuation">,</span>  data<span class="token operator">:</span> <span class="token punctuation">&#123;</span>    name<span class="token operator">:</span> <span class="token string">"破铁剑"</span><span class="token punctuation">,</span>  <span class="token punctuation">&#125;</span><span class="token punctuation">,</span><span class="token punctuation">&#125;</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h3><span id="p3-delete">3、DELETE</span><a href="#p3-delete" class="header-anchor">#</a></h3><pre class="line-numbers language-js" data-language="js"><code class="language-js">axios<span class="token punctuation">.</span><span class="token function">delete</span><span class="token punctuation">(</span><span class="token string">"http://127.0.0.1/sword/9"</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><pre class="line-numbers language-js" data-language="js"><code class="language-js"><span class="token function">axios</span><span class="token punctuation">(</span><span class="token punctuation">&#123;</span>  method<span class="token operator">:</span> <span class="token string">"delete"</span><span class="token punctuation">,</span>  url<span class="token operator">:</span> <span class="token string">"http://127.0.0.1/sword/9"</span><span class="token punctuation">,</span><span class="token punctuation">&#125;</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span></span></code></pre><h3><span id="p4-put">4、PUT</span><a href="#p4-put" class="header-anchor">#</a></h3><pre class="line-numbers language-js" data-language="js"><code class="language-js">axios<span class="token punctuation">.</span><span class="token function">put</span><span class="token punctuation">(</span><span class="token string">"http://127.0.0.1/sword/9"</span><span class="token punctuation">,</span> <span class="token punctuation">&#123;</span>  name<span class="token operator">:</span> <span class="token string">"七色破晓剑"</span><span class="token punctuation">,</span><span class="token punctuation">&#125;</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span></span></code></pre><pre class="line-numbers language-js" data-language="js"><code class="language-js"><span class="token function">axios</span><span class="token punctuation">(</span><span class="token punctuation">&#123;</span>  method<span class="token operator">:</span> <span class="token string">"put"</span><span class="token punctuation">,</span>  url<span class="token operator">:</span> <span class="token string">"http://127.0.0.1/sword/9"</span><span class="token punctuation">,</span>  data<span class="token operator">:</span> <span class="token punctuation">&#123;</span>    name<span class="token operator">:</span> <span class="token string">"七色破晓剑"</span><span class="token punctuation">,</span>  <span class="token punctuation">&#125;</span><span class="token punctuation">,</span><span class="token punctuation">&#125;</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h3><span id="p5-patch">5、PATCH</span><a href="#p5-patch" class="header-anchor">#</a></h3><pre class="line-numbers language-js" data-language="js"><code class="language-js">axios<span class="token punctuation">.</span><span class="token function">patch</span><span class="token punctuation">(</span><span class="token string">"http://127.0.0.1/sword/9"</span><span class="token punctuation">,</span> <span class="token punctuation">&#123;</span>  name<span class="token operator">:</span> <span class="token string">"轩辕剑"</span><span class="token punctuation">,</span><span class="token punctuation">&#125;</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span></span></code></pre><pre class="line-numbers language-js" data-language="js"><code class="language-js"><span class="token function">axios</span><span class="token punctuation">(</span><span class="token punctuation">&#123;</span>  method<span class="token operator">:</span> <span class="token string">"patch"</span><span class="token punctuation">,</span>  url<span class="token operator">:</span> <span class="token string">"http://127.0.0.1/sword/9"</span><span class="token punctuation">,</span>  data<span class="token operator">:</span> <span class="token punctuation">&#123;</span>    name<span class="token operator">:</span> <span class="token string">"轩辕剑"</span><span class="token punctuation">,</span>  <span class="token punctuation">&#125;</span><span class="token punctuation">,</span><span class="token punctuation">&#125;</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h3><span id="p6-lian-zhui-xie-fa">6、连缀写法</span><a href="#p6-lian-zhui-xie-fa" class="header-anchor">#</a></h3><pre class="line-numbers language-js" data-language="js"><code class="language-js">axios<span class="token punctuation">.</span><span class="token function">get</span><span class="token punctuation">(</span><span class="token string">"http://127.0.0.1/sword/9"</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">then</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token parameter">data</span><span class="token punctuation">)</span> <span class="token operator">=></span> <span class="token punctuation">&#123;</span><span class="token punctuation">&#125;</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><h3><span id="p7-await-xie-fa">7、await 写法</span><a href="#p7-await-xie-fa" class="header-anchor">#</a></h3><pre class="line-numbers language-js" data-language="js"><code class="language-js"><span class="token keyword">async</span> <span class="token keyword">function</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">&#123;</span>    <span class="token keyword">const</span> data <span class="token operator">=</span> <span class="token keyword">await</span> axios<span class="token punctuation">.</span><span class="token function">get</span><span class="token punctuation">(</span><span class="token string">"http://127.0.0.1/sword/9"</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span></span></code></pre><h3><span id="p8-quan-ju-she-zhi">8、全局设置</span><a href="#p8-quan-ju-she-zhi" class="header-anchor">#</a></h3><pre class="line-numbers language-js" data-language="js"><code class="language-js"><span class="token comment">// 指定根路径</span>axios<span class="token punctuation">.</span>default<span class="token punctuation">.</span>baseURL <span class="token operator">=</span> <span class="token string">"http://127.0.0.1"</span><span class="token punctuation">;</span><span class="token comment">// 指定超时时间（毫秒）</span>axios<span class="token punctuation">.</span>default<span class="token punctuation">.</span>timeout <span class="token operator">=</span> <span class="token number">1000</span><span class="token punctuation">;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>或者</p><pre class="line-numbers language-js" data-language="js"><code class="language-js"><span class="token keyword">const</span> ajax <span class="token operator">=</span> axios<span class="token punctuation">.</span><span class="token function">create</span><span class="token punctuation">(</span><span class="token punctuation">&#123;</span>  baseURL<span class="token operator">:</span> <span class="token string">"/api"</span><span class="token punctuation">,</span> <span class="token comment">// 设置根路径</span>  timeOut<span class="token operator">:</span> <span class="token number">20000</span><span class="token punctuation">,</span> <span class="token comment">// 设置超时时间</span><span class="token punctuation">&#125;</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span></span></code></pre><h2><span id="plan-jie-qi-chang-yong">拦截器 <code>常用</code></span><a href="#plan-jie-qi-chang-yong" class="header-anchor">#</a></h2><pre class="line-numbers language-js" data-language="js"><code class="language-js"><span class="token comment">// 请求拦截</span>axios<span class="token punctuation">.</span>interceptors<span class="token punctuation">.</span>request<span class="token punctuation">.</span><span class="token function">use</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token parameter">config</span><span class="token punctuation">)</span> <span class="token operator">=></span> <span class="token punctuation">&#123;</span>  config<span class="token punctuation">.</span>url <span class="token operator">=</span> <span class="token string">"url"</span> <span class="token operator">+</span> config<span class="token punctuation">.</span>url<span class="token punctuation">;</span>  <span class="token keyword">return</span> config<span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment">// 响应拦截</span>axios<span class="token punctuation">.</span>intercertors<span class="token punctuation">.</span>response<span class="token punctuation">.</span><span class="token function">use</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token parameter">res</span><span class="token punctuation">)</span> <span class="token operator">=></span> <span class="token punctuation">&#123;</span>  <span class="token keyword">return</span> res<span class="token punctuation">.</span>data<span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>]]></content>
      
      
      <categories>
          
          <category> 2305：网络请求 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> JavaScript </tag>
            
            <tag> Ajax </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>媒体查询</title>
      <link href="/210502/"/>
      <url>/210502/</url>
      
        <content type="html"><![CDATA[<h1><span id="mei-ti-cha-xun">媒体查询</span><a href="#mei-ti-cha-xun" class="header-anchor">#</a></h1><p>媒体查询（media query)，CSS2 推出，CSS3 优化。</p><p><code>navigator.userAgent</code> 获取浏览器的识别码</p><pre class="line-numbers language-html" data-language="html"><code class="language-html"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>style</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>style</span> <span class="token attr-name">media</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>tv<span class="token punctuation">"</span></span><span class="token punctuation">></span></span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre><h2><span id="pmei-ti-lei-xing">媒体类型</span><a href="#pmei-ti-lei-xing" class="header-anchor">#</a></h2><p><code>all</code> 所有设备</p><p><code>screen</code> 屏幕，默认值</p><p><code>tv</code> 电视</p><h2><span id="pshe-bei-te-zheng">设备特征</span><a href="#pshe-bei-te-zheng" class="header-anchor">#</a></h2><p><code>width</code> <code>height</code> <code>min/max-width/height</code></p><p><code>orientation</code> 横屏竖屏判断</p><p><code>resolution</code> 分辨率</p><p><code>devicePixelRatio</code> 像素比</p><p>检测横屏、竖屏</p><pre class="line-numbers language-html" data-language="html"><code class="language-html"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>style</span> <span class="token attr-name">media</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>screen and (orientation: portrait)<span class="token punctuation">"</span></span><span class="token punctuation">></span></span><span class="token style"></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>style</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>style</span> <span class="token attr-name">media</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>screen and (orientation: landscape)<span class="token punctuation">"</span></span><span class="token punctuation">></span></span><span class="token style"></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>style</span><span class="token punctuation">></span></span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre><h2><span id="pluo-ji-tiao-jian">逻辑条件</span><a href="#pluo-ji-tiao-jian" class="header-anchor">#</a></h2><ul><li><code>and</code> 与</li><li><code>not </code> 是对后边所有逻辑语句的否定，not 只能写第一位</li><li><code>,</code> 或</li><li><code>only</code></li></ul><h2><span id="pshe-zhi-duan-dian">设置断点</span><a href="#pshe-zhi-duan-dian" class="header-anchor">#</a></h2><h2><span id="pc3-mei-ti-cha-xun">C3 媒体查询</span><a href="#pc3-mei-ti-cha-xun" class="header-anchor">#</a></h2><p><code>@media</code></p>]]></content>
      
      
      <categories>
          
          <category> 2105：响应式布局 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> CSS </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>响应式布局</title>
      <link href="/210501/"/>
      <url>/210501/</url>
      
        <content type="html"><![CDATA[<h1><span id="xiang-ying-shi-bu-ju">响应式布局</span><a href="#xiang-ying-shi-bu-ju" class="header-anchor">#</a></h1><p>响应式布局是在 2010 年提出的一个概念，简而言之，<strong>就是一个网站能够兼容多个终端，而不是为每个终端做一个特定的版本</strong>。用户会使用不同的终端，由于屏幕分辨率不同，想要用户体验更好，就有必要让你的网页兼容多个终端。响应式布局设计可以让一个网站适配多种设备和多个屏幕，可以让网站的布局和功能随用户的使用环境（屏幕大小，输入方式，设备/浏览器能力）而变化。</p><p>三个特征</p><ul><li>媒体查询：检查设备在渲染我们作品时的物理特性</li><li>流动布局</li><li>灵活的视觉效果</li></ul>]]></content>
      
      
      <categories>
          
          <category> 2105：响应式布局 </category>
          
      </categories>
      
      
    </entry>
    
    
    
    <entry>
      <title>ES 面向对象</title>
      <link href="/220201/"/>
      <url>/220201/</url>
      
        <content type="html"><![CDATA[<h1><span id="es-mian-xiang-dui-xiang">ES 面向对象</span><a href="#es-mian-xiang-dui-xiang" class="header-anchor">#</a></h1><p>面向对象和面向过程是两种不同的编程思想和方法。<br>面向过程是以过程为中心，就像流水线一样设计程序的思想。面向对象是以对象为中心的编程思想。更符合人类的思维习惯。<br>在面向对象的概念中，<strong>类</strong>是一类相似事物的统称，对象是类的实例化，类是对象的模版。（JS 中没有具体类的概念，ES6 引入的类实际上是函数。）<br>面向对象的三个基本特性: <strong>封装、继承、多态</strong>。<br><strong>对象（Object）</strong> 可以是一个变量，一个函数，一种数据结构。在 JS 中，一切皆为对象。JS 允许自定义对象，从狭义的概念来分析，对象是最基本的数据类型，是复合型的结构、引用型的数据，它是无序数据集合。对象中每个成员被称为<strong>属性</strong>。对象是无序的键值对，数组是有序的键值对，函数是一种可执行的特殊对象。</p><p><strong>实例对象</strong>与<strong>函数对象</strong>。</p>]]></content>
      
      
      <categories>
          
          <category> 2202：ES高级 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> JavaScript </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>跨域解决方案</title>
      <link href="/230504/"/>
      <url>/230504/</url>
      
        <content type="html"><![CDATA[<h1><span id="kua-yu-jie-jue-fang-an">跨域解决方案</span><a href="#kua-yu-jie-jue-fang-an" class="header-anchor">#</a></h1><h2><span id="pyi-tong-yuan-ce-lue">一、同源策略</span><a href="#pyi-tong-yuan-ce-lue" class="header-anchor">#</a></h2><p>Same-Origin Policy，<a href><strong>同源策略</strong></a> 最早由 Netscape 公司提出，是浏览器的一种安全策略。该策略表示<strong>协议</strong>、<strong>域名</strong>、<strong>端口号</strong>必须完全相同。</p><p>违背同源策略就是<a href><strong>跨域</strong></a>，主要是针对 ajax 而言。</p><h2><span id="per-jsonp">二、JSONP</span><a href="#per-jsonp" class="header-anchor">#</a></h2><p>JSON with Padding，<strong>JSONP</strong> 是一个非官方的跨域解决方案，只支持 get 请求，而且需要服务器的配合。</p><h3><span id="p1-gong-zuo-yuan-li">1、工作原理</span><a href="#p1-gong-zuo-yuan-li" class="header-anchor">#</a></h3><p>在网页有一些标签天生具有跨域能力，比如 <code>img</code> <code>link</code> <code>iframe</code> <code>script</code>。JSONP 就是利用 <code>script</code> 标签的跨域能力来发送请求的。</p><h3><span id="p2-ying-yong-shi-li">2、应用示例</span><a href="#p2-ying-yong-shi-li" class="header-anchor">#</a></h3><p>客户端</p><pre class="line-numbers language-html" data-language="html"><code class="language-html"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>script</span><span class="token punctuation">></span></span><span class="token script"><span class="token language-javascript">  <span class="token keyword">const</span> script <span class="token operator">=</span> <span class="token keyword">null</span><span class="token punctuation">;</span>  <span class="token comment">// 这是一个事件触发</span>  <span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">&#123;</span>      <span class="token comment">// 新建一个 script 标签</span>      script <span class="token operator">=</span> document<span class="token punctuation">.</span><span class="token function">createElement</span><span class="token punctuation">(</span><span class="token string">"script"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>      <span class="token comment">// 设置需要跨域的URL</span>      script<span class="token punctuation">.</span>src <span class="token operator">=</span> <span class="token string">"http://.../test?a=1&amp;cb=jp"</span><span class="token punctuation">;</span>      <span class="token comment">// 插入到页面</span>      document<span class="token punctuation">.</span>body<span class="token punctuation">.</span><span class="token function">appendChild</span><span class="token punctuation">(</span>script<span class="token punctuation">)</span><span class="token punctuation">;</span>  <span class="token punctuation">&#125;</span>  <span class="token comment">// 回调函数</span>  <span class="token keyword">function</span> <span class="token function">jp</span><span class="token punctuation">(</span><span class="token parameter">n</span><span class="token punctuation">)</span><span class="token punctuation">&#123;</span>      <span class="token comment">// 这边要移除script 标签</span>      document<span class="token punctuation">.</span>body<span class="token punctuation">.</span><span class="token function">removeChild</span><span class="token punctuation">(</span>script<span class="token punctuation">)</span><span class="token punctuation">;</span>      <span class="token comment">// 后续操作</span>  <span class="token punctuation">&#125;</span></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>script</span><span class="token punctuation">></span></span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>服务器</p><pre class="line-numbers language-js" data-language="js"><code class="language-js">res<span class="token punctuation">.</span><span class="token function">end</span><span class="token punctuation">(</span><span class="token function">cb</span><span class="token punctuation">(</span>xxx<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><h2><span id="psan-cors">三、CORS</span><a href="#psan-cors" class="header-anchor">#</a></h2><p>Cross-Origin Resource Sharing，CORS，<strong>跨域资源共享</strong>是官方的跨域解决方案，它的特点是不需要在客户端做任何特殊的操作，完全在服务器中进行处理，支持 GET 和 POST 请求。是通过设置一个响应头来告诉浏览器，该请求允许跨域，浏览器收到该响应以后就会对响应放行。</p><pre class="line-numbers language-js" data-language="js"><code class="language-js"><span class="token comment">// 服务端</span>app<span class="token punctuation">.</span><span class="token function">all</span><span class="token punctuation">(</span><span class="token string">"*"</span><span class="token punctuation">,</span> <span class="token punctuation">(</span><span class="token parameter">req<span class="token punctuation">,</span>res</span><span class="token punctuation">)</span><span class="token operator">=></span><span class="token punctuation">&#123;</span>    <span class="token comment">// 设置白名单</span>    <span class="token keyword">const</span> arrOrigin <span class="token operator">=</span> <span class="token punctuation">[</span>        <span class="token string">"http://xxxxx"</span><span class="token punctuation">,</span>        <span class="token string">"xxxx"</span>    <span class="token punctuation">]</span>    <span class="token comment">// 如果访问的URL在白名单中</span>    <span class="token keyword">if</span><span class="token punctuation">(</span>arrOrigin<span class="token punctuation">.</span><span class="token function">oncludes</span><span class="token punctuation">(</span>req<span class="token punctuation">.</span>header<span class="token punctuation">.</span>origin<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">&#123;</span>        <span class="token comment">// 允许跨域</span>        res<span class="token punctuation">.</span><span class="token function">header</span><span class="token punctuation">(</span><span class="token string">"Access-Control-Allow-Origin"</span><span class="token punctuation">)</span><span class="token punctuation">,</span>req<span class="token punctuation">.</span>header<span class="token punctuation">.</span>origin<span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token comment">// 允许携带内容</span>        res<span class="token punctuation">.</span><span class="token function">header</span><span class="token punctuation">(</span><span class="token string">"Access-Control-Allow-Headers"</span><span class="token punctuation">,</span> <span class="token string">"content-type"</span><span class="token punctuation">)</span>    <span class="token punctuation">&#125;</span>    <span class="token function">next</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span class="token punctuation">)</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h2><span id="psi-fu-wu-qi-dai-li">四、服务器代理</span><a href="#psi-fu-wu-qi-dai-li" class="header-anchor">#</a></h2><p>服务器和服务器之间没有同源策略限制，所以可以通过代理的方式进行跨域。</p>]]></content>
      
      
      <categories>
          
          <category> 2305：网络请求 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> JavaScript </tag>
            
            <tag> Ajax </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Stylus</title>
      <link href="/210403/"/>
      <url>/210403/</url>
      
        <content type="html"><![CDATA[<h1><span id="stylus">Stylus</span><a href="#stylus" class="header-anchor">#</a></h1><p>向下兼容 <code>Less</code><br>可以省略括号和分号，靠缩进区分层级</p>]]></content>
      
      
      <categories>
          
          <category> 2104：CSS+ </category>
          
      </categories>
      
      
        <tags>
            
            <tag> CSS </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Less</title>
      <link href="/210402/"/>
      <url>/210402/</url>
      
        <content type="html"><![CDATA[<h1><span id="less">LESS</span><a href="#less" class="header-anchor">#</a></h1><p>less 是一种动态样式语言，属于 CSS 预处理器，扩展了 CSS 语言，增加了变量、混合、函数等特性，使 CSS 更易维护和扩展。LESS 既可以在客户端浏览器上运行，也能借助 node.js 在服务器端运行。</p><blockquote><p>CSS 自诞生以来，基本语法和核心机制一直没有本质上的变化，它的发展几乎全是表现力层面上的提升。最开始 CSS 在网页中的作用只是辅助性的装饰，轻便易学是最大的需求；然而如今网站的复杂度已经不可同日而语，原生 CSS 已经让开发者力不从心。当一门语言的能力不足而用户的运行环境又不支持其它选择的时候，这门语言就会沦为 “编译目标” 语言。开发者将选择另一门更高级的语言来进行开发，然后编译到底层语言以便实际运行。于是，在前端领域，CSS 预处理器应运而生。而 CSS 这门古老的语言以另一种方式 “重新适应” 了网页开发的需求。</p></blockquote><h2><span id="p1-an-zhuang">1、安装</span><a href="#p1-an-zhuang" class="header-anchor">#</a></h2><p><a href="http://lesscss.cn/">中文</a> | <a href="http://lesscss.org/">英文</a> | <strong><a href="http://www.lesscss.net/">源码</a></strong></p><ol><li>安装 Node.JS</li><li>通过命令行程序，<code>node -v</code> 和 <code>npm -v</code> 检查是否安装成功。</li><li>使用<code>npm i -g less</code> 进行全局安装 less, 并输入 <code>lessc -V</code> 检查版本</li></ol><h2><span id="p2-te-xing">2、特性</span><a href="#p2-te-xing" class="header-anchor">#</a></h2><ul><li>动态样式 CSS 是非程式式语言，需要书写大量没有逻辑的代码，不方便维护和扩展、复用。</li><li>预处理器 生成 CSS 前某一语法的处理程序。</li></ul><h2><span id="p3-shi-yong">3、使用</span><a href="#p3-shi-yong" class="header-anchor">#</a></h2><p>(1) <code>style</code>标签类型改成<code>less</code></p><pre class="line-numbers language-js" data-language="js"><code class="language-js"><span class="token operator">&lt;</span>link rel<span class="token operator">=</span><span class="token string">"stylesheet/less"</span> type<span class="token operator">=</span><span class="token string">"text/css"</span> href<span class="token operator">=</span><span class="token string">"styles.less"</span> <span class="token operator">/</span><span class="token operator">></span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>还需要一个编译相关的 js 文件</p><pre class="line-numbers language-html" data-language="html"><code class="language-html"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>script</span> <span class="token attr-name">src</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>//cdnjs.cloudflare.com/ajax/libs/less.js/3.11.1/less.min.js<span class="token punctuation">"</span></span><span class="token punctuation">></span></span><span class="token script"></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>script</span><span class="token punctuation">></span></span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>(2) 在命令行编译 less 文件</p><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash">lessc styles.less styles.css<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>(3) 通过 VSCode 的<code>Easy LESS</code>插件，在文件夹新建 less 文件，保存，即可在当前文件夹编译出相应的 css 文件。</p><h2><span id="per-yu-fa">二、语法</span><a href="#per-yu-fa" class="header-anchor">#</a></h2><h2><span id="p1-zhu-shi">1、注释</span><a href="#p1-zhu-shi" class="header-anchor">#</a></h2><p><code>//注释</code> 和 <code>/*注释*/</code></p><p>后者可以注释到 CSS 文件中。</p><h2><span id="p2-bian-liang">2、变量</span><a href="#p2-bian-liang" class="header-anchor">#</a></h2><p>LESS 允许我们定义一些变量来管理 CSS，变量需以<code>@</code>开头。</p><pre class="line-numbers language-less" data-language="less"><code class="language-less">&#x2F;&#x2F; 定义@test: 10px;&#x2F;&#x2F; 使用width: @test;<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span></span></code></pre><p>注意作用域。</p><p>作为选择器名字、声明一个属性的名称 <code>@&#123;a&#125;</code></p><h2><span id="p3-qian-tao-gui-ze">3、嵌套规则</span><a href="#p3-qian-tao-gui-ze" class="header-anchor">#</a></h2><p><code>&amp;:</code> 父级引用</p><h2><span id="p4-yun-suan">4、运算</span><a href="#p4-yun-suan" class="header-anchor">#</a></h2><h2><span id="p5-hun-he">5、混合</span><a href="#p5-hun-he" class="header-anchor">#</a></h2><p>类似函数。</p><h2><span id="p6-mo-shi-pi-pei-he-shou-wei">6、模式匹配和守卫</span><a href="#p6-mo-shi-pi-pei-he-shou-wei" class="header-anchor">#</a></h2><p>重载，根据参数的个数来选择混合。</p><h2><span id="p7-zi-fu-chuan-cha-zhi">7、字符串插值</span><a href="#p7-zi-fu-chuan-cha-zhi" class="header-anchor">#</a></h2><h2><span id="p8-han-shu">8、函数</span><a href="#p8-han-shu" class="header-anchor">#</a></h2><h2><span id="p9-wen-jian-dao-ru">9、文件导入</span><a href="#p9-wen-jian-dao-ru" class="header-anchor">#</a></h2><h2><span id="p10-zhuan-yi">10、转义</span><a href="#p10-zhuan-yi" class="header-anchor">#</a></h2><p>有时候，当需要引入无效的 CSS 语法或 Less 不能识别的字符，就需要使用转义字符。此时，就可以在字符串前面加一个<code>~</code>，并将需要转义的字符串放在<code>&quot; &quot;</code>中。</p>]]></content>
      
      
      <categories>
          
          <category> 2104：CSS+ </category>
          
      </categories>
      
      
        <tags>
            
            <tag> CSS </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>CSS 样式</title>
      <link href="/210204/"/>
      <url>/210204/</url>
      
        <content type="html"><![CDATA[<h1><span id="css-yang-shi">CSS 样式</span><a href="#css-yang-shi" class="header-anchor">#</a></h1><p>[TOC]</p><h1><span id="yi-xian-shi">一、显示</span><a href="#yi-xian-shi" class="header-anchor">#</a></h1><h2><span id="p1-display-kong-zhi-yuan-su-de-xian-shi-mo-shi-chang">1、display - 控制元素的显示模式 <code>常</code></span><a href="#p1-display-kong-zhi-yuan-su-de-xian-shi-mo-shi-chang" class="header-anchor">#</a></h2><p>控制元素的显示状态。</p><table><thead><tr><th><code>display</code></th><th>描述说明</th></tr></thead><tbody><tr><td><code>inline</code></td><td>让元素以行属性显示</td></tr><tr><td><code>block</code></td><td>让元素以块属性显示</td></tr><tr><td><code>inline-block</code></td><td>让元素以行内块属性显示</td></tr><tr><td><code>none</code></td><td>带着所有子元素隐藏，直接消失</td></tr><tr><td><code>flex</code></td><td>开启弹性布局</td></tr></tbody></table><p><code>display:none</code> 隐藏的元素，不可以被 js 获取 DOM 节点及相关的样式属性。让隐藏的元素显示，只需要修改 display 属性的值不为 none 即可。</p><h2><span id="p2-visibility-kong-zhi-yuan-su-xian-shi-huo-zhe-yin-cang">2、visibility - 控制元素显示或者隐藏</span><a href="#p2-visibility-kong-zhi-yuan-su-xian-shi-huo-zhe-yin-cang" class="header-anchor">#</a></h2><p><code>visible</code>: 元素显示<br><code>hidden</code>: 元素隐藏<br>元素依然占用空间，和隐身一样，带着子元素一起隐身了。<br>子元素的隐藏是因为继承了父级的 hidden 值，所以单独给子元素设置，覆盖 hidden，即可显示。<br>使用 visiblity 隐藏的元素是可以用 js 获取的 DOM 节点及相应的宽高等属性。</p><p><strong>visbility:hidden 和 display:none 隐藏的区别</strong></p><blockquote><p>①visibility 可以继承，子元素是因为继承了才隐藏（可覆盖）。display 不能被继承，直接带着所有内置元素直接隐藏。<br>②visbility 隐藏，保留原先占用空间。display 隐藏使原来的空间被占用。<br>③js 可以获取到 visibility 隐藏元素的可视化宽高，而获取不到 display 隐藏元素的可视化宽高。</p></blockquote><h2><span id="p3-overflow-yi-chu-she-zhi-chang">3、overflow - 溢出设置 <code>常</code></span><a href="#p3-overflow-yi-chu-she-zhi-chang" class="header-anchor">#</a></h2><p>内容溢出设置。</p><table><thead><tr><th><code>overflow</code></th><th>描述</th></tr></thead><tbody><tr><td><code>visible</code></td><td>默认值<br>超出正常显示，但是不会影响其他元素的位置</td></tr><tr><td><code>hidden</code></td><td>超出部分隐藏</td></tr><tr><td><code>scroll</code></td><td>无论是否超出都生成滚动条</td></tr><tr><td><code>auto</code></td><td>自动生成滚动条，当内容溢出生成滚动条，否则不生成</td></tr></tbody></table><p><strong><code>overflow-x</code></strong> 和 <strong><code>overflow-y</code></strong> 可以单独控制一个方向的内容溢出设置。</p><p>隐藏横向滚动条：<code>overflow-x: hidden</code></p><h2><span id="p4-opacity-tou-ming-du-she-zhi">4、opacity - 透明度设置</span><a href="#p4-opacity-tou-ming-du-she-zhi" class="header-anchor">#</a></h2><p>控制元素不透明度<br>值是 1-0<br>1 是完全不透明<br>0 是完全透明<br>opacity 直接控制所有的内部元素的不透明度，无论是什么元素都会改变</p><h1><span id="er-wen-ben-he-zi-ti-yang-shi">二、文本和字体样式</span><a href="#er-wen-ben-he-zi-ti-yang-shi" class="header-anchor">#</a></h1><h2><span id="p01-color-she-zhi-wen-ben-yan-se">01、color - 设置文本颜色</span><a href="#p01-color-she-zhi-wen-ben-yan-se" class="header-anchor">#</a></h2><p>（1）可设置颜色的类型</p><table><thead><tr><th>类型</th><th>示例</th><th>说明</th></tr></thead><tbody><tr><td>英文名</td><td>red</td><td>开发中很少出现</td></tr><tr><td><code>RGB</code> <code>RGBA</code></td><td>rgb(255,255,255)</td><td></td></tr><tr><td>十六进制</td><td>#112233</td><td>常用</td></tr><tr><td><code>HSL</code> <code>HSLA</code></td><td>hsl(0,0,0)</td><td>H 色调：0-360<br>S 饱和度 0-100%<br>L 亮度 0-100%</td></tr><tr><td>inherit</td><td></td><td>继承（默认值）</td></tr><tr><td>transparent</td><td></td><td>透明</td></tr></tbody></table><p>（2）a 标签的 color 属性默认不是继承，需要的时候需直接控制。</p><h2><span id="p02-font-family-zi-ti-kong-zhi">02、font-family - 字体控制</span><a href="#p02-font-family-zi-ti-kong-zhi" class="header-anchor">#</a></h2><pre class="line-numbers language-css" data-language="css"><code class="language-css"><span class="token property">font-family</span><span class="token punctuation">:</span> <span class="token string">"微软雅黑"</span><span class="token punctuation">,</span> <span class="token string">"SimSun"</span><span class="token punctuation">;</span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>浏览器根据 font-family 解析渲染不同图形的过程 <code>了解</code></p><ol><li><p>读取文字内容转换成对应的 Unicode 码</p></li><li><p>根据 HTML 设置的 font-family （如果没设置使用浏览器默认设置）去查找到哪里对应的字体文件（如果有自定义字体 @font-face，则加载对应字体文件）</p></li><li><p>找到文件后根据 Unicode 码去查找绘制外形，找到后绘制到页面上</p></li><li><p>参考： <a href="https://www.jianshu.com/p/0ac221c759e1">字体图标生成原理</a></p></li></ol><h2><span id="p03-font-face-zi-ding-yi-zi-ti-chang-yong">03、@font-face - 自定义字体 <code>常用</code></span><a href="#p03-font-face-zi-ding-yi-zi-ti-chang-yong" class="header-anchor">#</a></h2><pre class="line-numbers language-css" data-language="css"><code class="language-css"><span class="token atrule"><span class="token rule">@font-face</span></span> <span class="token punctuation">&#123;</span>  <span class="token property">font-family</span><span class="token punctuation">:</span> <span class="token string">"自定义字体名称"</span><span class="token punctuation">;</span>  <span class="token property">src</span><span class="token punctuation">:</span> <span class="token url"><span class="token function">url</span><span class="token punctuation">(</span><span class="token string url">"自定义字体路径"</span><span class="token punctuation">)</span></span><span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span></span></code></pre><h2><span id="p04-font-size-zi-ti-da-xiao">04、font-size - 字体大小</span><a href="#p04-font-size-zi-ti-da-xiao" class="header-anchor">#</a></h2><p>常用单位</p><ul><li><code>px</code></li><li><code>em</code> 参考父级的字号大小 前边的数字是倍数</li><li><code>rem</code> 参考根元素的字号大小（谷歌浏览器默认字号大小 16px）</li></ul><p>注：谷歌浏览器默认 16px，默认最小字号支持是 12px。</p><h2><span id="p05-font-style-zi-ti-feng-ge">05、font-style - 字体风格</span><a href="#p05-font-style-zi-ti-feng-ge" class="header-anchor">#</a></h2><ul><li>normal 正常</li><li>italic 斜体</li><li>oblique 倾斜（火狐不支持）</li></ul><h2><span id="p06-font-weight-zi-ti-cu-xi">06、font-weight - 字体粗细</span><a href="#p06-font-weight-zi-ti-cu-xi" class="header-anchor">#</a></h2><p>控制文字粗细。（可继承）</p><table><thead><tr><th>值</th><th>描述</th></tr></thead><tbody><tr><td>normal</td><td>正常</td></tr><tr><td>bold</td><td>加粗</td></tr><tr><td>lighter</td><td>相对父级细一级</td></tr><tr><td>bolder</td><td>相对父级粗一级</td></tr><tr><td>100~300</td><td>细</td></tr><tr><td>400~500</td><td>正常</td></tr><tr><td>600~900</td><td>粗</td></tr></tbody></table><h2><span id="p07-font-he-xie">07、font 合写</span><a href="#p07-font-he-xie" class="header-anchor">#</a></h2><p><code>font-style</code> <code>-weight</code> <code>-size</code>/<code>line-height</code> <code>-family</code><br>字号大小和字体必写，隐藏一个 line-height 属性，所以不继承的时候，需要检查 font 合写。</p><h2><span id="p08-line-height-xing-gao-kong-zhi-chang-yong">08、line-height - 行高控制 <code>常用</code></span><a href="#p08-line-height-xing-gao-kong-zhi-chang-yong" class="header-anchor">#</a></h2><p>其实是控制两行文字基线的距离，<strong>决定了内联元素的占用的高度</strong>。默认会继承。</p><ul><li>固定值 px 不能是负</li><li>比例：比如 1.5 就是当前文字大小的 1.5 倍</li><li>百分比：80%</li><li>浏览器默认值：normal</li></ul><p>让单行文本垂直居中：行高 = 高度。</p><h2><span id="p09-vertical-align-chui-zhi-dui-qi-fang-shi">09、vertical-align - 垂直对齐方式</span><a href="#p09-vertical-align-chui-zhi-dui-qi-fang-shi" class="header-anchor">#</a></h2><p>控制某个<strong>行内元素</strong>在<strong>垂直方向</strong>的对齐方式。</p><table><thead><tr><th>baseline</th><th>基线（默认）</th></tr></thead><tbody><tr><td>middle</td><td>中线</td></tr><tr><td>top</td><td>顶线</td></tr><tr><td>bottom</td><td>底线</td></tr></tbody></table><p>图片垂直居中</p><pre class="line-numbers language-css" data-language="css"><code class="language-css"><span class="token comment">/* 1.首先控制父级内的元素的行高，让元素基线上下平分 */</span><span class="token selector">outer</span> <span class="token punctuation">&#123;</span>  <span class="token property">background-color</span><span class="token punctuation">:</span> red<span class="token punctuation">;</span>  <span class="token property">height</span><span class="token punctuation">:</span> 600px<span class="token punctuation">;</span>  <span class="token property">line-height</span><span class="token punctuation">:</span> 600px<span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span class="token comment">/*2.因为图片的基线是图片的底部，平分以后，不会居中 所以让图片改变成由自身的中间对齐方式对齐*/</span><span class="token selector">img</span> <span class="token punctuation">&#123;</span>  <span class="token property">vertical-align</span><span class="token punctuation">:</span> middle<span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h2><span id="p10-text-align-wen-ben-dui-qi-she-zhi">10、text-align - 文本对齐设置</span><a href="#p10-text-align-wen-ben-dui-qi-she-zhi" class="header-anchor">#</a></h2><p><code>text-align</code> 文本对齐设置。控制当前元素内容。</p><p>属性值</p><ul><li><code>left</code> 默认值，左对齐</li><li><code>right</code> 右对齐</li><li><code>center</code> 居中对齐</li><li><code>justify</code> 两端对齐</li></ul><p>控制范围 无法让块元素居中</p><ul><li>元素内的文本</li><li>行内块元素</li><li>行元素</li></ul><h2><span id="p11-text-decoration-wen-ben-xiu-shi-she-zhi">11、text-decoration - 文本修饰设置</span><a href="#p11-text-decoration-wen-ben-xiu-shi-she-zhi" class="header-anchor">#</a></h2><table><thead><tr><th>none</th><th>去掉下划线</th></tr></thead><tbody><tr><td>underline</td><td>下划线</td></tr><tr><td>line-through</td><td>删除线</td></tr><tr><td>overline</td><td>上划线</td></tr></tbody></table><p>线条的颜色是默认跟随文字颜色改变的。text-decoration 是间写属性，后边可以跟三个值：线的位置 线的颜色 线的类型。</p><h2><span id="p12-text-indent-wen-ben-suo-jin-she-zhi">12、text-indent - 文本缩进设置</span><a href="#p12-text-indent-wen-ben-suo-jin-she-zhi" class="header-anchor">#</a></h2><p><code>text-indent</code> 文本缩进设置</p><p>属性值</p><ul><li>推荐单位为<code>em</code>， <code>px</code>不方便控制。</li><li>可以为负，实现悬挂缩进的效果。</li></ul><p>控制范围</p><ul><li>只针对块元素生效</li></ul><h2><span id="p13-letter-spacing-word-spacing-jian-ju-kong-zhi">13、letter-spacing、word-spacing - 间距控制</span><a href="#p13-letter-spacing-word-spacing-jian-ju-kong-zhi" class="header-anchor">#</a></h2><p>letter-spacing<br>控制字符间距<br>控制所有字符和字符之间的间距</p><p>word-spacing<br>控制词间距<br>改变词和词之间的间距<br>以空格来分割两个词 值都可以为负</p><h2><span id="p14-white-space-kong-bai-chu-li">14、white-space - 空白处理</span><a href="#p14-white-space-kong-bai-chu-li" class="header-anchor">#</a></h2><table><thead><tr><th>值</th><th>描述</th></tr></thead><tbody><tr><td>normal</td><td>默认。空白会被浏览器忽略。</td></tr><tr><td>pre</td><td>空白会被浏览器保留。<br>其行为方式类似 HTML 中的 <code>&lt;pre&gt;</code> 标签。</td></tr><tr><td>nowrap</td><td>文本不会换行，文本会在在同一行上继续，直到遇到 <code>&lt;br&gt;</code> 标签为止。</td></tr><tr><td>pre-wrap</td><td>保留空白符序列，但是正常地进行换行。</td></tr><tr><td>pre-line</td><td>合并空白符序列，但是保留换行符。</td></tr><tr><td>inherit</td><td>继承</td></tr></tbody></table><p><a href="https://www.jianshu.com/p/8ddbe4016778">white-space 详解</a></p><h1><span id="san-bei-jing-yang-shi">三、背景样式</span><a href="#san-bei-jing-yang-shi" class="header-anchor">#</a></h1><p>任何背景是撑不开元素的宽高。</p><h2><span id="p1-background-color-bei-jing-yan-se">1、background-color - 背景颜色</span><a href="#p1-background-color-bei-jing-yan-se" class="header-anchor">#</a></h2><p>背景颜色是从边框下开始显示的。</p><p>设置值同 <code>color</code>。</p><h2><span id="p2-backgroud-image-bei-jing-tu-pian">2、backgroud-image - 背景图片</span><a href="#p2-backgroud-image-bei-jing-tu-pian" class="header-anchor">#</a></h2><p><code>background-image: url(路径)</code><br>边框下也显示图片，但是是平铺出来的。<br>背景图片的左上角原点，是以 padding 区域的左上角开始显示的。</p><h3><span id="pduo-chong-bei-jing-css3">多重背景 <code>CSS3</code></span><a href="#pduo-chong-bei-jing-css3" class="header-anchor">#</a></h3><p>CSS3 允许为元素使用多个背景图片。</p><pre class="line-numbers language-css" data-language="css"><code class="language-css"><span class="token property">background-image</span><span class="token punctuation">:</span> <span class="token function">url</span><span class="token punctuation">(</span><span class="token string">'1.jpg),url('</span>2.jpg'<span class="token punctuation">)</span><span class="token punctuation">;</span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>元素引入多个背景图片，前面图片会覆盖后面的图片。</p><h2><span id="p3-background-position-bei-jing-tu-ding-wei">3、background-position - 背景图定位</span><a href="#p3-background-position-bei-jing-tu-ding-wei" class="header-anchor">#</a></h2><p>由两个值构成（<code>background-position-x</code> <code>background-position-y</code>），值可以是 （坐标轴是以 padding 区域的左上角原点的坐标）</p><ol><li>px</li><li>关键字<br>在 x 轴上有 left right center<br>在 y 轴上有 top bottom center</li><li>百分比<br>当百分百的时候，和 right bottom 效果一致</li></ol><h2><span id="p4-background-repeat-bei-jing-tu-ping-pu">4、background-repeat - 背景图平铺</span><a href="#p4-background-repeat-bei-jing-tu-ping-pu" class="header-anchor">#</a></h2><p><code>repeat</code> 默认 x 和 y 都平铺<br><code>repeat-x</code> 只沿着 x 轴平铺<br><code>repeat-y</code> 只沿着 y 轴平铺<br><code>no-repeat</code> 不平铺</p><h2><span id="p5-background-he-xie">5、background 合写</span><a href="#p5-background-he-xie" class="header-anchor">#</a></h2><p><code>background: color image position-x position-y repeat</code><br>如果有 background 合写属性，那么当此元素还有关于 background 属性的时候，请书写在合写的下边。</p><h2><span id="p6-background-origin-bei-jing-tu-yuan-dian">6、background-origin - 背景图原点</span><a href="#p6-background-origin-bei-jing-tu-yuan-dian" class="header-anchor">#</a></h2><p><code>background-origin: padding-box</code> (默认)</p><ul><li>border-box | padding-box | content-box</li><li>background-origin 是用来决定图片的原始起始位置。</li><li>它有三个可选值 content-box,padding- box,border-box，即可以选择背景图片是从内容区域或者内边距或者边框开始显示。</li></ul><h2><span id="p7-background-clip-bei-jing-tu-cai-jian">7、background-clip - 背景图裁剪</span><a href="#p7-background-clip-bei-jing-tu-cai-jian" class="header-anchor">#</a></h2><p><code>background-clip</code></p><ul><li>border-box | padding-box | content-box</li><li>background-clip 的作用为将背景图片做适当的裁剪，以适应需要。</li><li>background-clip 有 content- box,padding-box,border-box，text 几个值剪裁方法：根据设置的盒子部位，那么图片在这个部位的外边缘以外的部分都会不可见。</li></ul><h2><span id="p8-background-size-bei-jing-tu-da-xiao">8、background-size - 背景图大小</span><a href="#p8-background-size-bei-jing-tu-da-xiao" class="header-anchor">#</a></h2><p><code>background-size</code></p><ul><li>length： 长度值—第一个值设置宽度，第二个值设置高度</li><li>percentage： 百分比—第一个值设置宽度，第二个值设置高度</li><li>cover：充满容器，比例不发生变化，但是有可能超出。</li><li>contain： 将背景图像等比缩放到宽度或高度与容器的宽度或高度相等，背景图像始终被包含在容器内</li></ul><h2><span id="p9-jing-ling-tu">9、精灵图</span><a href="#p9-jing-ling-tu" class="header-anchor">#</a></h2><p>CSS Sprites，精灵图，是网页图片的常用处理方式。</p><p>允许将一个页面中很多零星的小图片包含到一张大图中去，当访问页面的时候，就不会一张张的去请求显示图片。对网络来说，小于 200k 的文件加载速度是一样的。通过 <code>background-position</code> 属性，将图片定位到需要的位置即可。</p><p>优点：</p><ul><li>减少图片大小</li><li>减少服务器请求次数</li></ul><p><a href="http://www.spritecow.com/">定位辅助工具</a></p><h1><span id="si-qi-ta-she-zhi">四、其他设置</span><a href="#si-qi-ta-she-zhi" class="header-anchor">#</a></h1><h2><span id="p1-wen-zi-yin-ying-text-shadow">1、文字阴影 text-shadow</span><a href="#p1-wen-zi-yin-ying-text-shadow" class="header-anchor">#</a></h2><pre class="line-numbers language-css" data-language="css"><code class="language-css"><span class="token comment">/*  第1个值：阴影水平偏移值。可为负值  第2个值：阴影垂直偏移值。可为负值  第3个值：可选，阴影模糊值。不允许负值*/</span><span class="token property">text</span><span class="token punctuation">:</span><span class="token property">shadow</span><span class="token punctuation">:</span> 0px 0px 0px red<span class="token punctuation">;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h2><span id="p2-he-zi-yin-ying-box-shadow">2、盒子阴影 box-shadow</span><a href="#p2-he-zi-yin-ying-box-shadow" class="header-anchor">#</a></h2><p>比文字阴影多一个阴影外延值。</p><h2><span id="p3-dao-ying-box-reflect">3、倒影 box-reflect</span><a href="#p3-dao-ying-box-reflect" class="header-anchor">#</a></h2><h2><span id="p4-lu-jing-filter">4、滤镜 filter</span><a href="#p4-lu-jing-filter" class="header-anchor">#</a></h2><table><thead><tr><th>属性</th><th>单位</th><th>说明</th></tr></thead><tbody><tr><td>blur</td><td>px</td><td>模糊</td></tr><tr><td>brightness</td><td>%</td><td>亮度</td></tr><tr><td>contrast</td><td>%</td><td>对比度</td></tr><tr><td>opacity</td><td>%</td><td>透明度</td></tr><tr><td>saturate</td><td>%</td><td>饱和度</td></tr></tbody></table><h2><span id="p5-duo-lan">5、多栏</span><a href="#p5-duo-lan" class="header-anchor">#</a></h2><p>很少用，略。具体参考 <a href="http://doc.lipeihua.vip:8800/#/./CSS3/02.CSS3%E5%85%B6%E4%BB%96?id=css3%e5%a4%9a%e5%88%97">链接</a>。</p><h2><span id="p6-jian-bian">6、渐变</span><a href="#p6-jian-bian" class="header-anchor">#</a></h2><h3><span id="pxian-xing-jian-bian-linear-gradient">线性渐变 linear-gradient</span><a href="#pxian-xing-jian-bian-linear-gradient" class="header-anchor">#</a></h3><ul><li>从上到下（默认）：background: linear-gradient(red,blue);</li><li>从左到右：background: linear-gradient(to right,red,blue);</li><li>对角：background: linear-gradient(to right bottom,red,blue);</li><li>角度：background: linear-gradient(45deg,red,blue);</li></ul><h3><span id="pjing-xiang-jian-bian-radial-gradient">径向渐变 radial-gradient</span><a href="#pjing-xiang-jian-bian-radial-gradient" class="header-anchor">#</a></h3><ul><li>第一个参数：圆的类型</li><li>ellipse：根据元素形状渐变，元素为正方形是显示效果与 circle 无异</li><li>circle：渐变为最大的圆形</li><li>第二个参数：执行径向渐变的大小</li><li>farthest-corner:圆心到最远角</li><li>closest-side：圆心到最近的边</li><li>closest-corner：圆心到最近的角</li><li>farthest-side：圆心到最远的边</li><li>第三个参数：圆心的位置</li><li>第四个参数：渐变的颜色点</li></ul><h1><span id="wu-za-xiang">五、杂项</span><a href="#wu-za-xiang" class="header-anchor">#</a></h1><h2><span id="p1-yang-shi-cao-zuo">1、样式操作</span><a href="#p1-yang-shi-cao-zuo" class="header-anchor">#</a></h2><p><strong>样式重置</strong>（CSS reset），将 html 的默认样式全部去掉，需要的时候我们自行添加。统一页面风格。</p><p>为什么要用样式重置</p><ul><li>多数元素拥有自己的默认样式，并且我们很多都不需要。</li><li>默认样式在不同浏览器中呈现的也不一定相同，就会导致浏览器展示页面不相同的现象。</li><li>整个页面中固定的风格代码，可以在样式重置中直接书写，不用每一个都设置。</li></ul><p>为什么不用通配符重置</p><ul><li>重置简单，不够完整，一些 demo 可以使用，真正项目不推荐使用，请使用 CSS reset</li><li>通配符，匹配所有的标签，影响很大，效率很低。</li></ul><h2><span id="p2-calc-fang-fa">2、calc 方法</span><a href="#p2-calc-fang-fa" class="header-anchor">#</a></h2><p>用来计算长度。</p><p>注意<br>使用+ - _ /进行运算<br>可以使用百分比 px em rem 等单位，可以单位混合计算<br>在使用的时候，尽量在 + - _ / 前后添加一个空格</p>]]></content>
      
      
      <categories>
          
          <category> 2102：CSS </category>
          
      </categories>
      
      
        <tags>
            
            <tag> CSS </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>CSS 盒模型</title>
      <link href="/210203/"/>
      <url>/210203/</url>
      
        <content type="html"><![CDATA[<h1><span id="css-he-mo-xing">CSS 盒模型</span><a href="#css-he-mo-xing" class="header-anchor">#</a></h1><p>在 HTML 中把每个元素当成一个盒子，拥有盒子的平面外形和空间。</p><h2><span id="p1-he-mo-xing-biao-zhun">1、盒模型标准</span><a href="#p1-he-mo-xing-biao-zhun" class="header-anchor">#</a></h2><p>通过 <code>box-sizing</code> 设置盒子模型的标准，分为</p><ul><li><code>content-box</code> 默认，W3C 标准盒模型</li><li><code>border-box</code> IE 盒模型，也称为怪异盒模型</li></ul><p>注，理论上还有 <code>padding-box</code> 和 <code>margin-box</code> ，但是现在 W3C 和 MDN 规范均不支持。</p><p><strong>怪异盒模型的 width / height 是 border 的 尺寸。</strong></p><h2><span id="p2-nei-rong-ceng-content">2、内容层 content</span><a href="#p2-nei-rong-ceng-content" class="header-anchor">#</a></h2><h3><span id="pwidth-height">width/height</span><a href="#pwidth-height" class="header-anchor">#</a></h3><p>width 设置的坑</p><ul><li>如果设置宽度为 100%，并且有 border margin padding 等属性值的时候，宽度可能超出。因为 width 内容区域已经和父级一样了，所以可以不设置宽度或者设置宽度为 auto 那么内容的宽度就是可以充分利用可使用空间。</li></ul><p>height 设置的坑</p><ul><li>如果高度设置百分比，必须父级有一个显性的设置一个 height 属性，并且不能是 auto。</li></ul><h3><span id="pmin-max-width-height">min/max-width/height</span><a href="#pmin-max-width-height" class="header-anchor">#</a></h3><table><thead><tr><th></th><th>正常</th><th>最小</th><th>最大</th></tr></thead><tbody><tr><td>宽度</td><td>width</td><td>min-width</td><td>max-width</td></tr><tr><td>高度</td><td>height</td><td>min-height</td><td>max-height</td></tr></tbody></table><p>当 min-width 和 max-width 冲突的时候，min-width 是优先的。当 width 和 min 或 max 冲突以后，min 或者 max 直接无视 width 的存在（无论是否添加 ！important）。</p><h2><span id="p3-nei-bian-ju-ceng-padding">3、内边距层 padding</span><a href="#p3-nei-bian-ju-ceng-padding" class="header-anchor">#</a></h2><p>padding 的写法和 margin 一致</p><p>padding 主要撑开内容和边框之间的距离</p><p>padding 不支持负值</p><p>padding 对所有属性的元素都支持，但是对于行内元素撑不开上下的距离</p><p>padding 可以用于扩大点击范围</p><h2><span id="p4-bian-kuang-ceng-border">4、边框层 border</span><a href="#p4-bian-kuang-ceng-border" class="header-anchor">#</a></h2><h3><span id="pbian-kuang-shu-xing">边框属性</span><a href="#pbian-kuang-shu-xing" class="header-anchor">#</a></h3><p>border</p><ul><li>border-width 线的宽度</li><li>border-style 线的类型<ul><li>solid 实线</li><li>dashed 虚线</li><li>dotted 点状线</li></ul></li><li>border-color 线的颜色</li><li>border:none 不设置边框</li></ul><blockquote><p>边框还分为 4 个方向 要么直接设置 4 个方向，要么一个个方向单独设置</p></blockquote><p>练习：边框画三角形</p><pre class="line-numbers language-css" data-language="css"><code class="language-css"><span class="token selector">.box</span> <span class="token punctuation">&#123;</span>  <span class="token property">width</span><span class="token punctuation">:</span> 0<span class="token punctuation">;</span>  <span class="token property">height</span><span class="token punctuation">:</span> 0<span class="token punctuation">;</span>  <span class="token property">border</span><span class="token punctuation">:</span> 100px solid #000<span class="token punctuation">;</span>  <span class="token property">border-left-color</span><span class="token punctuation">:</span> transparent<span class="token punctuation">;</span>  <span class="token property">border-right-color</span><span class="token punctuation">:</span> transparent<span class="token punctuation">;</span>  <span class="token property">border-bottom-color</span><span class="token punctuation">:</span> transparent<span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h3><span id="pyuan-jiao-bian-kuang-border-radius">圆角边框 border-radius</span><a href="#pyuan-jiao-bian-kuang-border-radius" class="header-anchor">#</a></h3><p>CSS3。</p><table><thead><tr><th>border-radius</th><th>描述</th></tr></thead><tbody><tr><td>A1 B1 C1 D1/A2 B2 C2 D2</td><td>水平/垂直，左上角开始顺时针</td></tr><tr><td>A B C D</td><td></td></tr><tr><td>M/N</td><td>水平/垂直</td></tr><tr><td>50px 100px</td><td>AC BD</td></tr><tr><td>50%</td><td>八个值一样</td></tr></tbody></table><h2><span id="p5-wai-bian-ju-ceng-margin">5、外边距层 margin</span><a href="#p5-wai-bian-ju-ceng-margin" class="header-anchor">#</a></h2><p>margin 的作用是撑开当前元素和其他元素的距离。margin 有四个方向，可以分别设置<code>margin-left</code> <code>margin-right</code> <code>margin-top</code> <code>margin-bottom</code>，margin 的 left 和 top 是让当前元素向右向下移动，margin 的 right 和 bottom 是让元素的兄弟元素向右向下移动，不影响自身。</p><h3><span id="phe-xie">合写</span><a href="#phe-xie" class="header-anchor">#</a></h3><ul><li>4 个值：<strong>上 右 下 左</strong>（从上开始顺时针）</li><li>3 个值：上 左右 下</li><li>2 个值：上下 左右</li><li>1 个值：上下左右</li></ul><h3><span id="pshui-ping-fang-xiang-shang-de-auto">水平方向上的 auto</span><a href="#pshui-ping-fang-xiang-shang-de-auto" class="header-anchor">#</a></h3><p>因为块标签拥有满行属性，但是设置宽度以后，剩余的空间就是默认的 margin，设置左右的 margin 值为 auto，那么剩余的 margin 就会平分到左右两边。</p><h3><span id="pshu-zhi-fang-xiang-de-auto">竖直方向的 auto</span><a href="#pshu-zhi-fang-xiang-de-auto" class="header-anchor">#</a></h3><p>相对于水平方向来说，块元素在垂直方向上并没有满屏的属性，margin 默认在上下的值都是 0，并没有剩余空间去平分。</p><h3><span id="pta-xian-he-bian-kuang-he-bing-wen-ti">塌陷和边框合并问题</span><a href="#pta-xian-he-bian-kuang-he-bing-wen-ti" class="header-anchor">#</a></h3><ul><li>父级塌陷：父级的第一个子元素的上 margin 和最后一个子元素的下 margin 会进行塌陷给父级，这样的设计是为了方便父级和他的兄弟进行垂直 margin 的合并，避免缝隙过大。</li><li>解决塌陷：给父级开启 BFC，给父级设置边框。</li><li>兄弟的 margin 垂直方向会进行折叠，取最大值 。</li></ul><h3><span id="pmargin-fu-zhi">margin 负值</span><a href="#pmargin-fu-zhi" class="header-anchor">#</a></h3><ul><li>margin-top 为负值：元素向上走，不会影响上边的元素的位置（会出现重叠），并且下边的兄弟元素会跟着一起向上走。</li><li>margin-left 为负值：元素向左走，不会影响前边的元素位置(会出现重叠)，右边兄弟元素会跟随移动。</li><li>margin-right 为负值：元素不会移动，形态大小也不会发生改变，但是所占用的位置会减少（负 margin 的值），所以，后边的兄弟元素会自动向左走。</li><li>margin-bottom 为负值：元素不会移动，形态大小也不会发生改变，但是所占用的位置会减少（负 margin 的值），所以，后边的兄弟元素会自动向上走。</li></ul><h3><span id="pzhi-chi-xing">支持性</span><a href="#pzhi-chi-xing" class="header-anchor">#</a></h3><p><code>margin</code> 完美支持块元素和行内块元素，不支持行元素的垂直方向。</p><h2><span id="p6-lun-kuo-ceng-outline">6、轮廓层 outline</span><a href="#p6-lun-kuo-ceng-outline" class="header-anchor">#</a></h2><p><code>outline</code> 轮廓层。</p><pre class="line-numbers language-css" data-language="css"><code class="language-css"><span class="token comment">/* 去掉轮廓 */</span><span class="token property">outline</span><span class="token punctuation">:</span> none<span class="token punctuation">;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre>]]></content>
      
      
      <categories>
          
          <category> 2102：CSS </category>
          
      </categories>
      
      
        <tags>
            
            <tag> CSS </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>HTML 多媒体</title>
      <link href="/210105/"/>
      <url>/210105/</url>
      
        <content type="html"><![CDATA[<h1><span id="html-duo-mei-ti">HTML 多媒体</span><a href="#html-duo-mei-ti" class="header-anchor">#</a></h1><p>多媒体<br>图片<br>格式<br>jpg<br>png<br>gif<br>webp<br>音频<br>格式<br>mp3<br>webm<br><code>&lt;audio&gt;</code><br>视频<br>格式<br><code>&lt;video&gt;</code><br>src 引入的资源路径<br>width / height<br>controls 显示控制和进度条<br>autoplay 自动播放<br>muted 静音（想要自动播放生效，需要开启静音）<br>loop 循环<br>poster 视频播放前的一帧，图片路径<br>preload 加载设置<br>none：不提前加载视频 metadata：抓取元数据 auto：预加载<br>音视频兼容性处理</p>]]></content>
      
      
      <categories>
          
          <category> 2101：HTML </category>
          
      </categories>
      
      
        <tags>
            
            <tag> HTML </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>HTML 5</title>
      <link href="/200104/"/>
      <url>/200104/</url>
      
        <content type="html"><![CDATA[<h1><span id="html-5">HTML 5</span><a href="#html-5" class="header-anchor">#</a></h1><p>新增标签<br>header<br>footer<br>表单增强<br>画布 Canvas<br>地理 Geolocation<br>音视频<br>自定义属性<br>本地存储 localStorage/seesionStorege<br>拖拽释放<br>WebWorker<br>WebSocket</p>]]></content>
      
      
      <categories>
          
          <category> 2101：HTML </category>
          
      </categories>
      
      
        <tags>
            
            <tag> HTML </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>HTML 表单</title>
      <link href="/210103/"/>
      <url>/210103/</url>
      
        <content type="html"><![CDATA[<h1><span id="biao-dan">表单</span><a href="#biao-dan" class="header-anchor">#</a></h1><h2><span id="p1-form">1、form</span><a href="#p1-form" class="header-anchor">#</a></h2><pre class="line-numbers language-html" data-language="html"><code class="language-html"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>form</span> <span class="token attr-name">action</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span><span class="token punctuation">"</span></span> <span class="token attr-name">method</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>POST<span class="token punctuation">"</span></span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>form</span><span class="token punctuation">></span></span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>action：表单提交接口。如果省略，则设置为当前页面。</p><p>method：表单提交的方式。一般为 <strong>POST</strong> 或者 <strong>GET</strong> 。</p><ul><li>GET 通过 URL 提交</li><li>POST 通过请求报文</li></ul><h2><span id="p2-input-biao-qian">2、input 标签</span><a href="#p2-input-biao-qian" class="header-anchor">#</a></h2><h3><span id="p0-shu-xing">0 属性</span><a href="#p0-shu-xing" class="header-anchor">#</a></h3><table><thead><tr><th>属性</th><th>描述</th></tr></thead><tbody><tr><td><code>placeholder</code></td><td><strong>占位符</strong>。控制元素为空时的提示信息，只要输入内容就会消失。</td></tr></tbody></table><ul><li>name 当前表单元素键名。</li><li>value 当前表单元素输入内容，默认内容。</li><li>type 表单元素的类型。</li><li>autocomplete 是否提示用户输入历史输入值，默认为 ON。</li><li>autofocus 自动获取焦点。</li><li>required 必填。提交表单时必须填写此项。</li><li>disabled 禁用表单元素。不会被提交。</li><li>readonly 只读。会被提交。</li><li>checked 预先选中单选框或者多选框。</li><li>form 关联表单。如果 input 存在 form 属性，表示该 input 属于某个表单。通过 input 的 form 属性为 form 表单的 id，进行关联。 进行关联以后，无论 input 书写在哪里，都能随着表单提交数据。</li><li>selected 预先选择一个选项。</li><li>multiple 实现多选。</li></ul><h3><span id="p1-text-wen-ben-yu">1 text 文本域</span><a href="#p1-text-wen-ben-yu" class="header-anchor">#</a></h3><p>即单行文本输入框。</p><h3><span id="p2-password-mi-ma-yu">2 password 密码域</span><a href="#p2-password-mi-ma-yu" class="header-anchor">#</a></h3><h3><span id="p3-radio-dan-xuan-kuang">3 radio 单选框</span><a href="#p3-radio-dan-xuan-kuang" class="header-anchor">#</a></h3><p>注意需设置好 value 值。</p><pre class="line-numbers language-html" data-language="html"><code class="language-html"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>p</span><span class="token punctuation">></span></span>  请选择您的性别：  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>input</span> <span class="token attr-name">type</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>radio<span class="token punctuation">"</span></span> <span class="token attr-name">name</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>sex<span class="token punctuation">"</span></span> <span class="token attr-name">value</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>女<span class="token punctuation">"</span></span> <span class="token punctuation">/></span></span>女  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>input</span> <span class="token attr-name">type</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>radio<span class="token punctuation">"</span></span> <span class="token attr-name">name</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>sex<span class="token punctuation">"</span></span> <span class="token attr-name">value</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>男<span class="token punctuation">"</span></span> <span class="token punctuation">/></span></span>男<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>p</span><span class="token punctuation">></span></span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>默认选中：checked</p><ul><li>checked</li><li>checked = “”</li><li>checked = “checked”</li></ul><h3><span id="p4-checkbox-fu-xuan-kuang">4 checkbox 复选框</span><a href="#p4-checkbox-fu-xuan-kuang" class="header-anchor">#</a></h3><pre class="line-numbers language-html" data-language="html"><code class="language-html"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>p</span><span class="token punctuation">></span></span>  请选择您的学科  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>input</span> <span class="token attr-name">type</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>checkbox<span class="token punctuation">"</span></span> <span class="token attr-name">name</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>class<span class="token punctuation">"</span></span> <span class="token attr-name">value</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>HTML5<span class="token punctuation">"</span></span> <span class="token punctuation">/></span></span>HTML5  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>input</span> <span class="token attr-name">type</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>checkbox<span class="token punctuation">"</span></span> <span class="token attr-name">name</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>class<span class="token punctuation">"</span></span> <span class="token attr-name">value</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>ASP<span class="token punctuation">"</span></span> <span class="token punctuation">/></span></span>ASP  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>input</span> <span class="token attr-name">type</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>checkbox<span class="token punctuation">"</span></span> <span class="token attr-name">name</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>class<span class="token punctuation">"</span></span> <span class="token attr-name">value</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>c#<span class="token punctuation">"</span></span> <span class="token punctuation">/></span></span>c#  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>input</span> <span class="token attr-name">type</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>checkbox<span class="token punctuation">"</span></span> <span class="token attr-name">name</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>class<span class="token punctuation">"</span></span> <span class="token attr-name">value</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>Java<span class="token punctuation">"</span></span> <span class="token punctuation">/></span></span>Java<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>p</span><span class="token punctuation">></span></span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h3><span id="p5-file-wen-jian-yu">5 file 文件域</span><a href="#p5-file-wen-jian-yu" class="header-anchor">#</a></h3><p>上传文件。</p><p>调用相册和摄像头。</p><pre class="line-numbers language-html" data-language="html"><code class="language-html"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>input</span> <span class="token attr-name">type</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>file<span class="token punctuation">"</span></span> <span class="token attr-name">accept</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>image/*<span class="token punctuation">"</span></span> <span class="token attr-name">capture</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>camera<span class="token punctuation">"</span></span> <span class="token punctuation">/></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>input</span> <span class="token attr-name">type</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>file<span class="token punctuation">"</span></span> <span class="token attr-name">accept</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>image/*<span class="token punctuation">"</span></span> <span class="token attr-name">capture</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>photo<span class="token punctuation">"</span></span> <span class="token punctuation">/></span></span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre><h3><span id="p6-button-pu-tong-an-niu">6 button 普通按钮</span><a href="#p6-button-pu-tong-an-niu" class="header-anchor">#</a></h3><h3><span id="p7-submit-ti-jiao-an-niu">7 submit 提交按钮</span><a href="#p7-submit-ti-jiao-an-niu" class="header-anchor">#</a></h3><h3><span id="p8-reset-chong-zhi-an-niu">8 reset 重置按钮</span><a href="#p8-reset-chong-zhi-an-niu" class="header-anchor">#</a></h3><h3><span id="p9-hidden-yin-cang">9 hidden 隐藏</span><a href="#p9-hidden-yin-cang" class="header-anchor">#</a></h3><h3><span id="p10-qi-ta-lei-xing">10 其他类型</span><a href="#p10-qi-ta-lei-xing" class="header-anchor">#</a></h3><p>以下是一些 H5 新增的类型：</p><table><thead><tr><th>type</th><th>功能</th><th>备注</th></tr></thead><tbody><tr><td>color</td><td>颜色</td><td></td></tr><tr><td>date</td><td>日期-年月日</td><td></td></tr><tr><td>week</td><td>日期-年周</td><td>火狐不支持</td></tr><tr><td>month</td><td>日期-年月</td><td>火狐不支持</td></tr><tr><td>email</td><td>邮箱号</td><td>有校验，但是不完整</td></tr><tr><td>number</td><td>数字</td><td>min | max | value | step</td></tr><tr><td>search</td><td>搜索框</td><td></td></tr><tr><td>tel</td><td>电话号码</td><td></td></tr><tr><td>url</td><td>URL</td><td></td></tr><tr><td>range</td><td>可拖动控件</td><td>很少用</td></tr></tbody></table><h2><span id="p3-button-an-niu">3、button 按钮</span><a href="#p3-button-an-niu" class="header-anchor">#</a></h2><p>有 3 种 type，分别是 button，submit，reset。</p><p>具体功能需要配合 JS 实现。</p><blockquote><p>注 1：input 提交按钮和 button 提交按钮的区别：input 是单标签，button 是双标签。<br>注 2：button 是行内块标签。</p></blockquote><h2><span id="p4-label-biao-qian">4、label 标签</span><a href="#p4-label-biao-qian" class="header-anchor">#</a></h2><p>定义表单元素标注，获取焦点。</p><p>两种方式来绑定表单。</p><pre class="line-numbers language-html" data-language="html"><code class="language-html"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>label</span><span class="token punctuation">></span></span>...<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>label</span><span class="token punctuation">></span></span> <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>label</span> <span class="token attr-name">for</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>xxx<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>...<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>label</span><span class="token punctuation">></span></span> ...<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>p</span> <span class="token attr-name">id</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>xxx<span class="token punctuation">"</span></span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>p</span><span class="token punctuation">></span></span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre><h2><span id="p5-select-option-xia-lie-lie-biao">5、select-option 下列列表</span><a href="#p5-select-option-xia-lie-lie-biao" class="header-anchor">#</a></h2><p>在 option 中 value 属性书写的内容不会显示，但是最后会提交。显示的内容写在 option 标签中。</p><p><code>selected</code> 默认选中</p><p><code>multiple</code> 多选</p><pre class="line-numbers language-html" data-language="html"><code class="language-html">请选择你喜欢的地方：<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>select</span> <span class="token attr-name">name</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>address<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>option</span> <span class="token attr-name">value</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>北京<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>北京<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>option</span><span class="token punctuation">></span></span>  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>option</span> <span class="token attr-name">value</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>上海<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>上海<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>option</span><span class="token punctuation">></span></span>  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>option</span> <span class="token attr-name">value</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>广州<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>广州<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>option</span><span class="token punctuation">></span></span>  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>option</span> <span class="token attr-name">value</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>深圳<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>深圳<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>option</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>select</span><span class="token punctuation">></span></span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h2><span id="p5-textarea-duo-xing-wen-ben-shu-ru-kuang">5、textarea 多行文本输入框</span><a href="#p5-textarea-duo-xing-wen-ben-shu-ru-kuang" class="header-anchor">#</a></h2><h2><span id="p6-datalist-option">6、datalist-option +</span><a href="#p6-datalist-option" class="header-anchor">#</a></h2><h2><span id="p7-h5-biao-dan-xin-gui-fan">7、H5 表单新规范</span><a href="#p7-h5-biao-dan-xin-gui-fan" class="header-anchor">#</a></h2><ul><li>表单的属性名和属性值相等的时候，可以省略属性值，直接书写属性名即可。</li><li>在 JS 中，允许用布尔值[^6]来开启和关闭属性。</li><li>在多个表单元素，只能出现一次的属性，如果书写多个，以第一个为准。</li></ul><h2><span id="pdai-geng-xin">待更新</span><a href="#pdai-geng-xin" class="header-anchor">#</a></h2><p>form<br>action<br>method<br>表单的提交<br>input<br>类型 type<br>text | password | radio | checkbox<br>button | submit | reset<br>file | image | reset<br>email | url | tel | number<br>date | time | search<br>属性<br>autocomplete            自动完成 off<br>autofocus 自动获取焦点<br>placeholder<br>multiple<br>button</p><h2><span id="plabel">label</span><a href="#plabel" class="header-anchor">#</a></h2><p>定义表单控制件的关系</p><pre class="line-numbers language-html" data-language="html"><code class="language-html"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>label</span><span class="token punctuation">></span></span>...<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>label</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>label</span> <span class="token attr-name">for</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>id<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>...<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>label</span><span class="token punctuation">></span></span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre>]]></content>
      
      
      <categories>
          
          <category> 2101：HTML </category>
          
      </categories>
      
      
        <tags>
            
            <tag> HTML </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>HTML 标签</title>
      <link href="/210102/"/>
      <url>/210102/</url>
      
        <content type="html"><![CDATA[<h1><span id="html-biao-qian">HTML 标签</span><a href="#html-biao-qian" class="header-anchor">#</a></h1><h2><span id="pyi-gai-shu">一、概述</span><a href="#pyi-gai-shu" class="header-anchor">#</a></h2><p>标签，又称为元素。</p><h3><span id="p1-biao-qian-de-guan-xi">1、标签的关系</span><a href="#p1-biao-qian-de-guan-xi" class="header-anchor">#</a></h3><p>兄弟关系<br>父子关系</p><h3><span id="p2-biao-qian-de-fen-lei">2、标签的分类</span><a href="#p2-biao-qian-de-fen-lei" class="header-anchor">#</a></h3><p>（1）块标签 <code>block</code></p><ul><li>代表标签: <code>div</code></li><li>默认的宽度是占据父标签全部内容，即 <code>width: 100%</code></li><li>默认的高度由内容决定</li><li>设宽高、边距、边框没有限制</li><li>独占一行</li><li>允许嵌套块元素和行元素（<code>p</code>/<code>h</code>标签除外）</li></ul><p>（2）行内标签 <code>inline</code></p><ul><li>代表标签: <code>span</code></li><li>默认的宽高由内容决定。</li><li>内容过多时允许换行并断开（一般都是用于处理文字样式）。</li><li>设置宽高无效。上下边距、边框无法设置。</li><li>共用一行：在一行中如有剩余空间，允许同其他行内/行内块标签共用。</li><li>某些动画样式不能添加和使用。</li></ul><p>（3）行内块标签 <code>inline-block</code></p><ul><li>代表标签: <code>img</code>、<code>button</code>、<code>input</code></li><li>默认的宽高由内容决定。</li><li>内容过多时不会断开。</li><li>可以设置宽高。</li><li>在一行中如有剩余空间，允许同其他 行内/行内块 标签公用一行。</li><li>行内块和内行标签会有行高的概念。</li><li>行内块受父元素的 <code>line-height</code> 以及自身的 <code>vertical-align</code> 影响。</li></ul><p>将非块级元素转换成块级元素的方法</p><ul><li><code>display: block</code></li><li><code>float: left/right</code></li><li><code>position: absolute/fixed</code></li><li>父级元素使用 <code>display:flex</code></li></ul><h2><span id="p3-yu-yi-hua-biao-qian">3、语义化标签</span><a href="#p3-yu-yi-hua-biao-qian" class="header-anchor">#</a></h2><p>优点：</p><ul><li>语义化标签更具有可读性，便于团队的开发和维护</li><li>没有 CSS 的情况下，网页也能很好的呈现出内容结构和代码结构</li><li>关于SEO，搜索引擎更能理解到网页中各部分之间的关系，更准确更快速搜索信息</li></ul><p>布局的三个发展阶段：</p><ul><li>开荒时期：前端的代码主要是后台写的，使用 <code>table</code> 来布局</li><li>美工时期：有专门的人来写前端代码了，主要布局方式是 <code>DIV+CSS</code></li><li>现在：使用具有语义的标签，可以表达正确的内容，也利用开发和维护。</li></ul><h2><span id="per-chang-yong-biao-qian">二、常用标签</span><a href="#per-chang-yong-biao-qian" class="header-anchor">#</a></h2><h3><span id="p1-div-fen-kuai">1、<code>div</code> 分块</span><a href="#p1-div-fen-kuai" class="header-anchor">#</a></h3><p>用于分块。<br>分块原则：先行后列。</p><h3><span id="p2-biao-ti-duan-luo-huan-xing">2、标题、段落、换行</span><a href="#p2-biao-ti-duan-luo-huan-xing" class="header-anchor">#</a></h3><p>（1）标题：<code>h1</code> <code>h2</code> <code>h3</code> …<br>最多允许6级标题。<br>依次使用，避免跳过某级标题使用。<br>同一个网页最多使用一次 <code>h1</code> 标签。</p><p>（2）段落：<code>p</code><br>（3）换行：<code>br</code><br>单纯的换行，被称为软换行。</p><h3><span id="p3-lie-biao">3、列表</span><a href="#p3-lie-biao" class="header-anchor">#</a></h3><p>（1）无序列表：<code>ul</code>-<code>li</code><br>常用于重复结构的大块内容布局。<br>注：<br>1、<code>ol</code>/<code>ul</code>只能嵌套 <code>li</code>。<br>2、不建议在<code>ul</code>和<code>li</code>嵌套的中间，书写其他元素。</p><p>（2）有序列表：<code>ol</code>-<code>li</code><br>用的少。</p><p>（3）自定义列表<br><code>dl</code>-<code>dt</code>-<code>dd</code>，组合标签。</p><pre class="line-numbers language-html" data-language="html"><code class="language-html"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>dl</span><span class="token punctuation">></span></span>  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>dt</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>dt</span><span class="token punctuation">></span></span>  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>dd</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>dd</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>dl</span><span class="token punctuation">></span></span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span></span></code></pre><h3><span id="p4-biao-ge">4、表格</span><a href="#p4-biao-ge" class="header-anchor">#</a></h3><h3><span id="p5-span-e-wai-jie-gou">5、<code>span</code> 额外结构</span><a href="#p5-span-e-wai-jie-gou" class="header-anchor">#</a></h3><h3><span id="p6-mao-lian-jie">6、锚链接</span><a href="#p6-mao-lian-jie" class="header-anchor">#</a></h3><h3><span id="p7-tu-pian">7、图片</span><a href="#p7-tu-pian" class="header-anchor">#</a></h3><p>inline 行标签<br>span 额外结构<br>i 小图标<br><code>&lt;a&gt;</code> 链接<br>属性<br>href 跳转地址<br>title 悬浮提示<br>target 跳转设置<br>_self<br>_blank 新标签页打开<br>download<br>tel<br>sms<br>mailto<br>路径<br>绝对路径<br>相对路径<br>./ ：代表文件所在的目录（可以省略不写）<br>…/ ：代表文件所在的父级目录<br>…/…/ ：代表文件所在的父级目录的父级目录<br>/ ：代表文件所在的根目录,可以理解成项目内部的绝对路径。<br>网络路径<br>锚链接<br>#id<br>相关伪类<br>link：当有链接属性时<br>visited：当连接被访问过以后<br>hover：当连接被鼠标悬浮的时候<br>active：当连接在激活状态的时候<br>inline-block 行内块<br>img 图片<br>属性<br>src: 设置路径<br>alt: 设置替代文本<br>title: 鼠标悬浮提示文本<br>width / height<br>表格<br>属性<br>src &amp; href<br>href：文档之间的跳转<br>src：资源的引用</p>]]></content>
      
      
      <categories>
          
          <category> 2101：HTML </category>
          
      </categories>
      
      
        <tags>
            
            <tag> HTML </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>ES Map</title>
      <link href="/220405/"/>
      <url>/220405/</url>
      
        <content type="html"><![CDATA[<h1><span id="es-map">ES Map</span><a href="#es-map" class="header-anchor">#</a></h1><p>ES6+</p><p>类似于对象的一种数据结构，是键值对的集合，但是键的范围不限于字符串，各种类型的值（包括对象）都可以当作键。也就是说，Object 结构提供了“字符串—值”的对应，Map 结构提供了“值—值”的对应，是一种更完善的 Hash 结构实现。如果你需要“键值对”的数据结构，Map 比 Object 更合适。</p><pre class="line-numbers language-js" data-language="js"><code class="language-js"><span class="token comment">//为什么会有Map，因为对象属性名称必须是字符串，如果是其他类型则不行</span><span class="token keyword">let</span> p1 <span class="token operator">=</span> <span class="token punctuation">&#123;</span> name<span class="token operator">:</span> <span class="token string">"lily"</span> <span class="token punctuation">&#125;</span><span class="token punctuation">;</span><span class="token keyword">let</span> obj1 <span class="token operator">=</span> <span class="token punctuation">&#123;</span>  id<span class="token operator">:</span> <span class="token number">1</span><span class="token punctuation">,</span>  <span class="token punctuation">[</span>p1<span class="token punctuation">]</span><span class="token operator">:</span> <span class="token string">"good"</span><span class="token punctuation">,</span><span class="token punctuation">&#125;</span><span class="token punctuation">;</span>console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>obj1<span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment">// Map也是新增的数据解构  类似于对象</span><span class="token keyword">let</span> mp1 <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Map</span><span class="token punctuation">(</span><span class="token punctuation">[</span>  <span class="token punctuation">[</span><span class="token string">"a"</span><span class="token punctuation">,</span> <span class="token number">1</span><span class="token punctuation">]</span><span class="token punctuation">,</span>  <span class="token punctuation">[</span><span class="token string">"b"</span><span class="token punctuation">,</span> <span class="token number">2</span><span class="token punctuation">]</span><span class="token punctuation">,</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">;</span>console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>mp1<span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token keyword">let</span> p2 <span class="token operator">=</span> <span class="token punctuation">&#123;</span> name<span class="token operator">:</span> <span class="token string">"lily"</span> <span class="token punctuation">&#125;</span><span class="token punctuation">;</span><span class="token keyword">let</span> mp2 <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Map</span><span class="token punctuation">(</span><span class="token punctuation">[</span>  <span class="token punctuation">[</span><span class="token string">"a"</span><span class="token punctuation">,</span> <span class="token number">1</span><span class="token punctuation">]</span><span class="token punctuation">,</span>  <span class="token punctuation">[</span>p2<span class="token punctuation">,</span> <span class="token number">2</span><span class="token punctuation">]</span><span class="token punctuation">,</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">;</span>console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>mp2<span class="token punctuation">)</span><span class="token punctuation">;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h2><span id="papi">API</span><a href="#papi" class="header-anchor">#</a></h2><ul><li><code>size</code>属性返回 Map 结构的成员总数。</li><li><code>set</code>方法设置键名<code>key</code>对应的键值为<code>value</code>，然后返回整个 Map 结构。如果<code>key</code>已经有值，则键值会被更新，否则就新生成该键。<code>set</code>方法返回的是当前的<code>Map</code>对象，因此可以采用链式写法。</li><li><code>get</code>方法读取<code>key</code>对应的键值，如果找不到<code>key</code>，返回<code>undefined</code>。</li><li><code>has</code>方法返回一个布尔值，表示某个键是否在当前 Map 对象之中。</li><li><code>delete</code>方法删除某个键，返回<code>true</code>。如果删除失败，返回<code>false</code>。</li><li><code>clear</code>方法清除所有成员，没有返回值。</li><li><code>keys()</code>：返回键名的遍历器。</li><li><code>values()</code>：返回键值的遍历器。</li><li><code>entries()</code>：返回所有成员的遍历器。</li><li><code>forEach()</code>：遍历 Map 的所有成员。</li></ul>]]></content>
      
      
      <categories>
          
          <category> 2204：ES6 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> JavaScript </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>ES Set</title>
      <link href="/220404/"/>
      <url>/220404/</url>
      
        <content type="html"><![CDATA[<h1><span id="es-set">ES Set</span><a href="#es-set" class="header-anchor">#</a></h1><p>ES6+</p><p>一种数据结构，类似数组，但是<strong>成员的值都是唯一</strong>的，不能重复。</p><pre class="line-numbers language-js" data-language="js"><code class="language-js"><span class="token keyword">let</span> set <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Set</span><span class="token punctuation">(</span><span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">2</span><span class="token punctuation">,</span> <span class="token number">2</span><span class="token punctuation">,</span> <span class="token number">3</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">;</span>console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>set<span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// Set &#123;1, 2, 3&#125;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre><h2><span id="papi">API</span><a href="#papi" class="header-anchor">#</a></h2><table><thead><tr><th>api</th><th>描述</th></tr></thead><tbody><tr><td><code>size</code></td><td>返回 Set 的长度</td></tr><tr><td><code>add()</code></td><td>添加一个值，返回 Set 结构本身</td></tr><tr><td><code>delete()</code></td><td>删除一个值，返回一个布尔值</td></tr><tr><td><code>has()</code></td><td>判断是否存在某成员，返回一个布尔值</td></tr><tr><td><code>clear()</code></td><td>清除所有成员</td></tr><tr><td><code>keys()</code> <code>values</code></td><td>遍历键值，同 <code>for..of</code></td></tr><tr><td><code>entries()</code></td><td>遍历返回键值对</td></tr><tr><td><code>forEach()</code></td><td>使用回调函数遍历每个成员</td></tr></tbody></table><h2><span id="pying-yong">应用</span><a href="#pying-yong" class="header-anchor">#</a></h2><p>去除数组重复成员</p><pre class="line-numbers language-js" data-language="js"><code class="language-js"><span class="token punctuation">[</span><span class="token operator">...</span><span class="token keyword">new</span> <span class="token class-name">Set</span><span class="token punctuation">(</span>array<span class="token punctuation">)</span><span class="token punctuation">]</span><span class="token punctuation">;</span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>去除字符串里面重复字符</p><pre class="line-numbers language-js" data-language="js"><code class="language-js"><span class="token punctuation">[</span><span class="token operator">...</span><span class="token keyword">new</span> <span class="token class-name">Set</span><span class="token punctuation">(</span>str<span class="token punctuation">)</span><span class="token punctuation">]</span><span class="token punctuation">,</span> <span class="token function">join</span><span class="token punctuation">(</span><span class="token string">""</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre>]]></content>
      
      
      <categories>
          
          <category> 2204：ES6 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> JavaScript </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>ES 对象方法</title>
      <link href="/220306/"/>
      <url>/220306/</url>
      
        <content type="html"><![CDATA[<h1><span id="es-dui-xiang-fang-fa">ES 对象方法</span><a href="#es-dui-xiang-fang-fa" class="header-anchor">#</a></h1><p>Object.keys</p>]]></content>
      
      
      <categories>
          
          <category> 2203：ES API </category>
          
      </categories>
      
      
        <tags>
            
            <tag> JavaScript </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>ES Array API</title>
      <link href="/220305/"/>
      <url>/220305/</url>
      
        <content type="html"><![CDATA[<h1><span id="es-array-api">ES Array API</span><a href="#es-array-api" class="header-anchor">#</a></h1><blockquote><p>数组方法</p></blockquote><h2><span id="pyi-chang-yong-fang-fa">一、常用方法</span><a href="#pyi-chang-yong-fang-fa" class="header-anchor">#</a></h2><h2><span id="pyi-shu-zu-de-dui-lie-yu-zhan-cao-zuo">一、数组的队列与栈操作</span><a href="#pyi-shu-zu-de-dui-lie-yu-zhan-cao-zuo" class="header-anchor">#</a></h2><h3><span id="p1-push">1、<code>push</code></span><a href="#p1-push" class="header-anchor">#</a></h3><h3><span id="p2-pop">2、<code>pop</code></span><a href="#p2-pop" class="header-anchor">#</a></h3><h3><span id="p3-unshift">3、<code>unshift</code></span><a href="#p3-unshift" class="header-anchor">#</a></h3><h3><span id="p4-shift">4、<code>shift</code></span><a href="#p4-shift" class="header-anchor">#</a></h3><h2><span id="per-shu-zu-de-cao-zuo">二、数组的操作</span><a href="#per-shu-zu-de-cao-zuo" class="header-anchor">#</a></h2><h3><span id="p1-splice">1、<code>splice</code></span><a href="#p1-splice" class="header-anchor">#</a></h3><h3><span id="p2-slice">2、<code>slice</code></span><a href="#p2-slice" class="header-anchor">#</a></h3><h3><span id="p3-join">3、<code>join</code></span><a href="#p3-join" class="header-anchor">#</a></h3><h2><span id="psan-shu-zu-de-bian-li-yu-cha-zhao">三、数组的遍历与查找</span><a href="#psan-shu-zu-de-bian-li-yu-cha-zhao" class="header-anchor">#</a></h2><h3><span id="p1-indexof-lastindexof">1、<code>indexOf</code> / <code>lastIndexOf</code></span><a href="#p1-indexof-lastindexof" class="header-anchor">#</a></h3><h3><span id="p2-sort-pai-xu">2、<code>sort</code> 排序</span><a href="#p2-sort-pai-xu" class="header-anchor">#</a></h3><h3><span id="p3-reverse-fan-zhuan">3、<code>reverse</code> 反转</span><a href="#p3-reverse-fan-zhuan" class="header-anchor">#</a></h3><h3><span id="p4-foreach-map-filter-reduce-every-some-bian-li">4、<code>forEach</code>/<code>map</code>/<code>filter</code>/<code>reduce</code>/<code>every</code>/<code>some</code> 遍历</span><a href="#p4-foreach-map-filter-reduce-every-some-bian-li" class="header-anchor">#</a></h3>]]></content>
      
      
      <categories>
          
          <category> 2203：ES API </category>
          
      </categories>
      
      
        <tags>
            
            <tag> JavaScript </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>ES String API</title>
      <link href="/220304/"/>
      <url>/220304/</url>
      
        <content type="html"><![CDATA[<h1><span id="zi-fu-chuan-api">字符串 API</span><a href="#zi-fu-chuan-api" class="header-anchor">#</a></h1><p>字符串是基本类型，所有的方法都无法修改原字符串。</p><h2><span id="pcha-zhao-indexof-lastindexof">查找 - indexOf / lastIndexOf</span><a href="#pcha-zhao-indexof-lastindexof" class="header-anchor">#</a></h2><p><code>indexOf()</code> 返回指定字符串在字符串首次出现的位置（向后查找，对大小写敏感），如果没找到，返回<code>-1</code>。</p><pre class="line-numbers language-js" data-language="js"><code class="language-js"><span class="token constant">STR</span><span class="token punctuation">.</span> <span class="token function">indexOf</span><span class="token punctuation">(</span>search <span class="token punctuation">[</span><span class="token punctuation">,</span> start<span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token comment">// 参数</span><span class="token comment">//    search 需检索的字符串</span><span class="token comment">//    start  可选，指定开始检索的位置</span><span class="token comment">//          如果没指定就是从首字符开始搜索</span><span class="token comment">// 返回值</span><span class="token comment">//    目标字符串第一次出现的位置/-1</span><span class="token keyword">let</span> str <span class="token operator">=</span> “poxiaoispig"<span class="token punctuation">;</span>str<span class="token punctuation">.</span><span class="token function">indexOf</span><span class="token punctuation">(</span><span class="token string">"poxiao"</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// 0</span>str<span class="token punctuation">.</span><span class="token function">indexOf</span><span class="token punctuation">(</span><span class="token string">"pig"</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// 8</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p><code>lastIndexOf()</code> 同 <code>indexOf()</code> ，区别是逆序的（向前查找）。</p><pre class="line-numbers language-js" data-language="js"><code class="language-js">str<span class="token punctuation">.</span><span class="token function">lastIndexOf</span><span class="token punctuation">(</span><span class="token string">"pig"</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// 8</span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><h2><span id="pcha-zhao-includes">查找 - includes</span><a href="#pcha-zhao-includes" class="header-anchor">#</a></h2><p><code>includes()</code> 查找字符串是否包含指定字符串（对大小写敏感），如果找到返回<code>true</code> ,否则返回<code>false</code>。</p><pre class="line-numbers language-js" data-language="js"><code class="language-js"><span class="token constant">STR</span><span class="token punctuation">.</span> <span class="token function">includes</span><span class="token punctuation">(</span>search<span class="token punctuation">,</span> <span class="token punctuation">[</span><span class="token punctuation">,</span> start<span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token comment">// 参数</span><span class="token comment">//    search 需查找的字符串</span><span class="token comment">//    start  可选，指定开始检索的位置</span><span class="token comment">//          如果没指定就是从最后一个字符开始搜索</span><span class="token comment">// 返回值</span><span class="token comment">//    目标字符串第一次出现的位置/-1</span><span class="token keyword">let</span> str <span class="token operator">=</span> “poxiaoispig"<span class="token punctuation">;</span>str<span class="token punctuation">.</span><span class="token function">includes</span><span class="token punctuation">(</span><span class="token string">"poxiao"</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// true</span>str<span class="token punctuation">.</span><span class="token function">includes</span><span class="token punctuation">(</span><span class="token string">"px"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>   <span class="token comment">// false</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h2><span id="pcha-zhao-search">查找 - search</span><a href="#pcha-zhao-search" class="header-anchor">#</a></h2><p><code>search()</code>功能和<code>indexOf()</code>相同，定义匹配模式，只有一个参数，没有反向检索和全局模式。（正则表达式常用）</p><pre class="line-numbers language-js" data-language="js"><code class="language-js"><span class="token constant">STR</span><span class="token punctuation">.</span><span class="token function">search</span><span class="token punctuation">(</span>tar<span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment">// 参数</span><span class="token comment">//    tar 要搜索的字符串</span><span class="token comment">// 返回值</span><span class="token comment">//    目标字符串第一次出现的位置/-1</span><span class="token keyword">let</span> str <span class="token operator">=</span> <span class="token string">"poxiaoispig"</span><span class="token punctuation">;</span>str<span class="token punctuation">.</span><span class="token function">search</span><span class="token punctuation">(</span><span class="token string">"pig"</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// 8</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h2><span id="pcha-zhao-match">查找 - match</span><a href="#pcha-zhao-match" class="header-anchor">#</a></h2><p><code>match()</code> 找出所有匹配的子字符串，并以数组的形式返回，如果匹配模式没有指定全局（正则表达式），则进行单次匹配，如果没找到返回<code>null</code>。该方法类似 <code>indexOf()</code> 和 <code>lastIndexOf()</code>，但是它返回指定的值，而不是字符串的位置。</p><pre class="line-numbers language-js" data-language="js"><code class="language-js"><span class="token constant">STR</span><span class="token punctuation">.</span><span class="token function">match</span><span class="token punctuation">(</span>re<span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment">// 参数</span><span class="token comment">//    re  字符串或者正则表达式</span><span class="token comment">// 返回</span><span class="token comment">//    数组（包含所有匹配的字符串）</span><span class="token keyword">let</span> str <span class="token operator">=</span> <span class="token string">"poxiao"</span><span class="token punctuation">;</span>str<span class="token punctuation">.</span><span class="token function">match</span><span class="token punctuation">(</span><span class="token string">"xiao"</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment">// [ 'xiao', index: 2, input: 'poxiao', groups: undefined ]</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h2><span id="pcha-zhao-charat-charcodeat">查找 - charAt/charCodeAt</span><a href="#pcha-zhao-charat-charcodeat" class="header-anchor">#</a></h2><p><code>charAt(n)</code> 返回字符串中的第 n 个字符，如果 n 超出字符串范围，返回空串。</p><p><code>charCodeAt(n)</code> 返回字符串中第 n 个字符的字符编码。</p><h2><span id="ppan-duan-tou-wei-startswith-endswith">判断头尾 - startsWith/endsWith</span><a href="#ppan-duan-tou-wei-startswith-endswith" class="header-anchor">#</a></h2><p><code>startsWith()</code> <code>endsWith()</code> 判断字符串开头、结尾有没有包含某个字符串。</p><pre class="line-numbers language-js" data-language="js"><code class="language-js"><span class="token constant">STR</span><span class="token punctuation">.</span><span class="token function">startsWith</span><span class="token punctuation">(</span>key<span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token constant">STR</span><span class="token punctuation">.</span><span class="token function">endsWith</span><span class="token punctuation">(</span>key<span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment">// 参数</span><span class="token comment">//    key 目标字符串</span><span class="token comment">// 返回</span><span class="token comment">//    true / false</span><span class="token string">"poxiao"</span><span class="token punctuation">.</span><span class="token function">startsWith</span><span class="token punctuation">(</span><span class="token string">"po"</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// true</span><span class="token string">"poxiao"</span><span class="token punctuation">.</span><span class="token function">endsWith</span><span class="token punctuation">(</span><span class="token string">"po"</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// false</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h2><span id="pqie-cheng-shu-zu-split">切成数组 - split</span><a href="#pqie-cheng-shu-zu-split" class="header-anchor">#</a></h2><p><code>split()</code> 把一个字符串切割成数组，这个操作和数组<code>join</code>是相反的。</p><pre class="line-numbers language-js" data-language="js"><code class="language-js"><span class="token constant">STR</span><span class="token punctuation">.</span> <span class="token function">split</span><span class="token punctuation">(</span>rule<span class="token punctuation">[</span><span class="token punctuation">,</span> max<span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token comment">// 参数</span><span class="token comment">//    rule 字符串或者正则表达式</span><span class="token comment">//    max  可选，指定返回数组的的最大长度</span><span class="token comment">// 返回值</span><span class="token comment">//    数组</span><span class="token keyword">let</span> str <span class="token operator">=</span> <span class="token string">"poxiao"</span><span class="token punctuation">;</span>str<span class="token punctuation">.</span><span class="token function">split</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// ["poxiao", ]</span>str<span class="token punctuation">.</span><span class="token function">split</span><span class="token punctuation">(</span><span class="token string">""</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// ["p","o","x","i","a","o"]</span>str<span class="token punctuation">.</span><span class="token function">split</span><span class="token punctuation">(</span><span class="token string">""</span><span class="token punctuation">,</span> <span class="token number">2</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// ["p","o"]</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h2><span id="pjie-qu-substr-slice-substring">截取 - substr/slice/substring</span><a href="#pjie-qu-substr-slice-substring" class="header-anchor">#</a></h2><p><code>substr</code> 根据指定长度截取字符串（不推荐使用该方法）</p><pre class="line-numbers language-js" data-language="js"><code class="language-js"><span class="token constant">STR</span><span class="token punctuation">.</span> <span class="token function">substr</span><span class="token punctuation">(</span>start<span class="token punctuation">[</span><span class="token punctuation">,</span> length<span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment">// 参数</span><span class="token comment">//    start  起始下标</span><span class="token comment">//    length 可选，截取的长度</span><span class="token comment">//           如果省略，则截取到末尾</span><span class="token comment">// 返回值</span><span class="token comment">//    截取之后的字符串</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p><code>slice</code> 、<code>substring</code> 根据指定的起止下标截取字符串</p><pre class="line-numbers language-js" data-language="js"><code class="language-js"><span class="token constant">STR</span><span class="token punctuation">.</span> <span class="token function">slice</span><span class="token punctuation">(</span>start<span class="token punctuation">[</span><span class="token punctuation">,</span> end<span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token constant">STR</span><span class="token punctuation">.</span> <span class="token function">substring</span><span class="token punctuation">(</span>start<span class="token punctuation">[</span><span class="token punctuation">,</span> end<span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment">// 参数</span><span class="token comment">//    start 起始下标</span><span class="token comment">//    end   可选，结束下标（不包括）</span><span class="token comment">//          如果省略，代表剩下的全部截取</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>起始和结束位置相比较的大小无法确定的时候可以使用<code>substring</code>。</p><p>如果为负值，<code>slic</code>e 能把负值当作从右向左。而<code>substring</code>视其无效</p><h2><span id="pda-xiao-xie-zhuan-huan-tolowercase-touppercase">大小写转换 - toLowerCase / toUpperCase</span><a href="#pda-xiao-xie-zhuan-huan-tolowercase-touppercase" class="header-anchor">#</a></h2><p><code>toLowerCase()</code> 将字符串转换成小写</p><p><code>toUpperCase()</code> 将字符串转换成大写</p><pre class="line-numbers language-js" data-language="js"><code class="language-js"><span class="token constant">STR</span><span class="token punctuation">.</span><span class="token function">toLowerCase</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token constant">STR</span><span class="token punctuation">.</span><span class="token function">toUpperCase</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment">// 参数无</span><span class="token comment">// 返回</span><span class="token comment">//     转换之后的字符串</span><span class="token keyword">let</span> str <span class="token operator">=</span> <span class="token string">"poxiao"</span><span class="token punctuation">;</span>str<span class="token punctuation">.</span><span class="token function">toLowerCase</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">//"POXIAO"</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h2><span id="ppin-jie-concat-liao-jie">拼接 - concat <code>了解</code></span><a href="#ppin-jie-concat-liao-jie" class="header-anchor">#</a></h2><p><code>concat(s1[, s2, s3])</code></p><p>功能：把多个参数添加到指定字符串的尾部。</p><p>参数：要添加到字符串尾部的，参数类型和个数没有限制。</p><p>返回：连接以后的字符串。</p><pre class="line-numbers language-js" data-language="js"><code class="language-js"><span class="token keyword">let</span> str <span class="token operator">=</span> <span class="token string">"poxiao"</span><span class="token punctuation">;</span>str<span class="token punctuation">.</span><span class="token function">concat</span><span class="token punctuation">(</span><span class="token string">"is"</span><span class="token punctuation">,</span> <span class="token string">"pig"</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// "poxiaoispig"</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre><p>原来数组的 <code>join</code> 方法替代 <code>concat</code> 方法，速度很快，但是现代浏览器优化加号拼接，所以推荐使用加号拼接。</p><h2><span id="pfu-zhi-repeat">复制 - repeat</span><a href="#pfu-zhi-repeat" class="header-anchor">#</a></h2><p><code>repeat()</code> 复制字符串。</p><pre class="line-numbers language-js" data-language="js"><code class="language-js"><span class="token constant">STR</span><span class="token punctuation">.</span><span class="token function">repeat</span><span class="token punctuation">(</span>count<span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment">// 参数</span><span class="token comment">//    count 复制次数</span><span class="token comment">// 返回值</span><span class="token comment">//    复制之后的字符串</span><span class="token keyword">let</span> str <span class="token operator">=</span> <span class="token string">"poxiao"</span><span class="token punctuation">;</span>str<span class="token punctuation">.</span><span class="token function">repeat</span><span class="token punctuation">(</span><span class="token number">3</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// "poxiaopoxiaopoxiao"</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h2><span id="pbu-quan-padstart-padend">补全 - padStart / padEnd</span><a href="#pbu-quan-padstart-padend" class="header-anchor">#</a></h2><p><code>padStart()</code> <code>padEnd()</code> 是 ES2017 引入的字符串补全长度的方法。如果某个字符串不够指定长度，会在头部或尾部补全。</p><pre class="line-numbers language-js" data-language="js"><code class="language-js"><span class="token constant">STR</span><span class="token punctuation">.</span><span class="token function">padSrart</span><span class="token punctuation">(</span>length<span class="token punctuation">,</span> pad<span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token constant">STR</span><span class="token punctuation">.</span><span class="token function">padEnd</span><span class="token punctuation">(</span>length<span class="token punctuation">,</span> pad<span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment">// 参数</span><span class="token comment">//    length 指定字符串的最小长度</span><span class="token comment">//    pad    用来补全的字符串</span><span class="token comment">// 返回值</span><span class="token comment">//    补全之后的字符串</span><span class="token comment">//    如果原字符串的长度，等于或大于指定的最小长度，则返回原字符串。</span><span class="token keyword">let</span> str <span class="token operator">=</span> <span class="token string">"poxiao"</span><span class="token punctuation">;</span>str<span class="token punctuation">.</span><span class="token function">padStart</span><span class="token punctuation">(</span><span class="token number">2</span><span class="token punctuation">,</span> <span class="token string">"1"</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// "poxiao"</span>str<span class="token punctuation">.</span><span class="token function">padStart</span><span class="token punctuation">(</span><span class="token number">10</span><span class="token punctuation">,</span> <span class="token string">"is"</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// "isispoxiao"</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h2><span id="pti-huan-replace">替换 - replace</span><a href="#pti-huan-replace" class="header-anchor">#</a></h2><p>如果没有使用正则表达式，只能替换一次。</p><p>这是用于搜索和替换的通用方法，是最有用的方法之一。它是搜索和替换字符串的瑞士军刀。</p><p><strong>当 <code>replace</code> 的第一个参数是字符串时，它仅替换第一个匹配项。</strong></p><h2><span id="pshan-shou-wei-kong-ge-trim-trimstart-trimend">删首尾空格 - trim / trimStart / trimEnd</span><a href="#pshan-shou-wei-kong-ge-trim-trimstart-trimend" class="header-anchor">#</a></h2><p><code>trim()</code> <code>trimStart()</code> <code>trimEnd()</code> 去除字符串的头尾空格。</p><pre class="line-numbers language-js" data-language="js"><code class="language-js"><span class="token constant">STR</span><span class="token punctuation">.</span><span class="token function">trim</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token constant">STR</span><span class="token punctuation">.</span><span class="token function">trimStart</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token constant">STR</span><span class="token punctuation">.</span><span class="token function">trimEnd</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment">// 无参数</span><span class="token comment">// 返回处理之后的字符串（不会改变原字符串）</span><span class="token keyword">let</span> str <span class="token operator">=</span> <span class="token string">"   poxiao is pig   "</span><span class="token punctuation">;</span>str<span class="token punctuation">.</span><span class="token function">trim</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// "poxiao is pig"</span>str<span class="token punctuation">.</span><span class="token function">trimStart</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// "poxiao is pig   "</span>str<span class="token punctuation">.</span><span class="token function">trimEnd</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// "   poxiao is pig"</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h2><span id="pzhuan-huan-valueof-tostring">转换 - valueOf / toString</span><a href="#pzhuan-huan-valueof-tostring" class="header-anchor">#</a></h2><p><code>valueOf()</code> 返回对象的字符串、数值或者布尔值表示。</p><p><code>toString()</code> 返回对象的字符串表示。</p><h2><span id="pzheng-ze-ce-shi-test">正则测试 - test</span><a href="#pzheng-ze-ce-shi-test" class="header-anchor">#</a></h2><p>查找<br>indexOf / lastIndexOf<br>search<br>match<br>charAt<br>截取<br>substring<br>slice<br>substr<br>拼接<br>+<br>concat<br>大小写转换<br>toLowerCase<br>toUpperCase<br>转数组 split<br>清理字符串两侧空格 trim</p>]]></content>
      
      
      <categories>
          
          <category> 2203：ES API </category>
          
      </categories>
      
      
        <tags>
            
            <tag> JavaScript </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>ES Date</title>
      <link href="/220303/"/>
      <url>/220303/</url>
      
        <content type="html"><![CDATA[<h1><span id="es-date">ES Date</span><a href="#es-date" class="header-anchor">#</a></h1><p><code>Date</code> 是JS中用来处理<strong>日期和时间</strong>的内置对象。</p><p><a href="http://doc.lipeihua.vip:8800/#/./JS%E5%9F%BA%E7%A1%80/11.Date%E5%AF%B9%E8%B1%A1">参考链接</a></p><h2><span id="p1-ji-ben-shi-yong">1、基本使用</span><a href="#p1-ji-ben-shi-yong" class="header-anchor">#</a></h2><p>获取一个Date对象</p><pre class="line-numbers language-js" data-language="js"><code class="language-js"><span class="token keyword">let</span> now <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Date</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>now <span class="token comment">// 2020-08-26T12:11:25.743Z</span><span class="token keyword">typeof</span> now <span class="token comment">// object</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span></span></code></pre><p>创建一个时间</p><ul><li>传入一个毫秒数（会把毫秒数转换成一个时间c  然后加上1970年1月1日 8：00 的时间）</li><li>传入一个字符串格式的时间</li><li>传入多个参数 分别代表年 月 日 时 分 秒 毫秒</li></ul><pre class="line-numbers language-js" data-language="js"><code class="language-js"><span class="token keyword">var</span> date1 <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Date</span><span class="token punctuation">(</span><span class="token number">1000</span> <span class="token operator">*</span> <span class="token number">60</span> <span class="token operator">*</span> <span class="token number">60</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token keyword">var</span> date1 <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Date</span><span class="token punctuation">(</span><span class="token number">1546354578234</span><span class="token punctuation">)</span><span class="token punctuation">;</span>console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>date1<span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token keyword">var</span> date2 <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Date</span><span class="token punctuation">(</span><span class="token string">"2019-10-01 8:0:0"</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token keyword">var</span> date2 <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Date</span><span class="token punctuation">(</span><span class="token string">"2019-10-1"</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment">//如果不写时间 只写年月日 那么时间按照00点来计算</span><span class="token keyword">var</span> date2 <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Date</span><span class="token punctuation">(</span><span class="token string">"8:0:0"</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment">//Invalid Date 如果不写年月日 那么时间是错误的</span>console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>date2<span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment">//当数字形式传递或者获取月份的时候，月份是从0开始算  0 代表 1月</span><span class="token keyword">var</span> date3 <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Date</span><span class="token punctuation">(</span><span class="token number">2019</span><span class="token punctuation">,</span><span class="token number">9</span><span class="token punctuation">,</span><span class="token number">1</span><span class="token punctuation">,</span><span class="token number">8</span><span class="token punctuation">,</span><span class="token number">10</span><span class="token punctuation">,</span><span class="token number">20</span><span class="token punctuation">,</span><span class="token number">300</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment">//时间超出分为 会自动向前进一位  但是不建议这么写</span><span class="token keyword">var</span> date3 <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Date</span><span class="token punctuation">(</span><span class="token number">2019</span><span class="token punctuation">,</span><span class="token number">16</span><span class="token punctuation">,</span><span class="token number">1</span><span class="token punctuation">,</span><span class="token number">8</span><span class="token punctuation">,</span><span class="token number">10</span><span class="token punctuation">,</span><span class="token number">20</span><span class="token punctuation">,</span><span class="token number">300</span><span class="token punctuation">)</span><span class="token punctuation">;</span>console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>date3<span class="token punctuation">)</span><span class="token punctuation">;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h2><span id="p2-shi-jian-chuo">2、时间戳</span><a href="#p2-shi-jian-chuo" class="header-anchor">#</a></h2><p><strong>时间戳</strong>是一个整数，保存1970年1月1日到现在的毫秒数。</p><p>获取时间戳方法</p><ul><li><code>Date.now()</code></li><li><code>new Date().getTime()</code></li><li><code>Date.parse(new Date())</code></li><li><code>new Date().valueOf()</code></li></ul><h2><span id="p3-she-zhi-shi-jian">3、设置时间</span><a href="#p3-she-zhi-shi-jian" class="header-anchor">#</a></h2><pre class="line-numbers language-js" data-language="js"><code class="language-js"><span class="token comment">// 获取当前的时间戳</span>Date<span class="token punctuation">.</span><span class="token function">now</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment">// 获取当前时间</span><span class="token keyword">let</span> now <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Date</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment">// now => 2020-07-14T06:00:41.645Z</span><span class="token comment">// 作为构造函数使用</span><span class="token keyword">let</span> dt  <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Date</span><span class="token punctuation">(</span>年<span class="token punctuation">,</span>月<span class="token punctuation">,</span>日<span class="token punctuation">,</span><span class="token punctuation">[</span>时<span class="token punctuation">,</span>分<span class="token punctuation">,</span>秒<span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>自动校准机制，超过范围的会自动换算。</p><h2><span id="p4-shi-jian-huo-qu">4、时间获取</span><a href="#p4-shi-jian-huo-qu" class="header-anchor">#</a></h2><table><thead><tr><th>方法</th><th>功能</th><th>范围</th></tr></thead><tbody><tr><td><code>getFullYear()</code></td><td>获得四位年份</td><td></td></tr><tr><td><code>getMonth()</code></td><td>获取月份</td><td><strong>0-11</strong></td></tr><tr><td><code>getDate()</code></td><td>获取月份中的天数</td><td>1-31</td></tr><tr><td><code>getDay()</code></td><td>获取星期，0表示周日</td><td>0-6</td></tr><tr><td><code>getHours()</code></td><td>小时</td><td>0-23</td></tr><tr><td><code>getMinutes()</code></td><td>分钟</td><td>0-59</td></tr><tr><td><code>getSeconds()</code></td><td>秒数</td><td>0-59</td></tr><tr><td><code>getMilliseconds()</code></td><td>毫秒数</td><td>0-999</td></tr></tbody></table><h2><span id="p5-she-zhi-dan-du-de-shi-jian">5、设置单独的时间</span><a href="#p5-she-zhi-dan-du-de-shi-jian" class="header-anchor">#</a></h2><ul><li>设置年份 setFullYear</li><li>设置月份 setMonth</li><li>设置日 setDate</li><li>设置小时 setHours</li><li>设置分钟 setMinutes</li><li>设置秒 setSeconds</li><li>设置毫秒 setMilliseconds</li></ul><pre class="line-numbers language-html" data-language="html"><code class="language-html"><span class="token doctype"><span class="token punctuation">&lt;!</span><span class="token doctype-tag">DOCTYPE</span> <span class="token name">html</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>html</span> <span class="token attr-name">lang</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>en<span class="token punctuation">"</span></span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>head</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>meta</span> <span class="token attr-name">charset</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>UTF-8<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>title</span><span class="token punctuation">></span></span>设置时间<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>title</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>head</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>body</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>script</span><span class="token punctuation">></span></span><span class="token script"><span class="token language-javascript">    <span class="token keyword">var</span> now <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Date</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token comment">//设置年份</span>    now<span class="token punctuation">.</span><span class="token function">setFullYear</span><span class="token punctuation">(</span><span class="token number">2023</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>now<span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token comment">//设置月份</span>    now<span class="token punctuation">.</span><span class="token function">setMonth</span><span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>now<span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token comment">//设置日期</span>    now<span class="token punctuation">.</span><span class="token function">setDate</span><span class="token punctuation">(</span><span class="token number">4</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>now<span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token comment">//设置 小时</span>    now<span class="token punctuation">.</span><span class="token function">setHours</span><span class="token punctuation">(</span><span class="token number">19</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>now<span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token comment">//设置分钟</span>    now<span class="token punctuation">.</span><span class="token function">setMinutes</span><span class="token punctuation">(</span><span class="token number">40</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>now<span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token comment">//设置秒</span>    now<span class="token punctuation">.</span><span class="token function">setSeconds</span><span class="token punctuation">(</span><span class="token number">10</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>now<span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token comment">//设置毫秒</span>    now<span class="token punctuation">.</span><span class="token function">setMilliseconds</span><span class="token punctuation">(</span><span class="token number">100</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>now<span class="token punctuation">)</span>    <span class="token comment">//设置星期  不允许 没有这个方法</span>    now<span class="token punctuation">.</span><span class="token function">setDay</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>now<span class="token punctuation">)</span><span class="token punctuation">;</span></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>script</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>body</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>html</span><span class="token punctuation">></span></span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>设置一个3天后的当前时间</p><pre class="line-numbers language-js" data-language="js"><code class="language-js"> <span class="token comment">//设置一个3天后的当前时间</span><span class="token comment">/* //获取当前时间 var now = new Date(); //获取当前时间的日期 var nowDate = now.getDate(); //让当前的日期 加上3 newDate = nowDate+3; // 获取一个当前的时间，然后把当前时间的日期 设置为newDate // console.log(newDate) var newTime = new Date(); newTime = newTime.setDate(newDate); console.log(newTime);*/</span> <span class="token keyword">var</span> threeDatLast <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Date</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span> threeDatLast<span class="token punctuation">.</span><span class="token function">setDate</span><span class="token punctuation">(</span><span class="token keyword">new</span> <span class="token class-name">Date</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">getDate</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token operator">+</span><span class="token number">3</span><span class="token punctuation">)</span><span class="token punctuation">;</span> console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>threeDatLast<span class="token punctuation">.</span><span class="token function">toLocaleString</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h2><span id="p6-shi-li">6、示例</span><a href="#p6-shi-li" class="header-anchor">#</a></h2><pre class="line-numbers language-js" data-language="js"><code class="language-js"><span class="token comment">// 获取类似 2020-08-08 12:04:56 格式的字符串</span><span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>    <span class="token keyword">const</span> time <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Date</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token keyword">return</span> time<span class="token punctuation">.</span><span class="token function">getFullYear</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">+</span> <span class="token string">"-"</span> <span class="token operator">+</span>        <span class="token punctuation">(</span>time<span class="token punctuation">.</span><span class="token function">getMonth</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">+</span> <span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">toString</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">padStart</span><span class="token punctuation">(</span><span class="token number">2</span><span class="token punctuation">,</span> <span class="token string">"0"</span><span class="token punctuation">)</span> <span class="token operator">+</span> <span class="token string">"-"</span> <span class="token operator">+</span>        time<span class="token punctuation">.</span><span class="token function">getDate</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">toString</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">padStart</span><span class="token punctuation">(</span><span class="token number">2</span><span class="token punctuation">,</span> <span class="token string">"0"</span><span class="token punctuation">)</span> <span class="token operator">+</span> <span class="token string">" "</span> <span class="token operator">+</span>        time<span class="token punctuation">.</span><span class="token function">getHours</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">toString</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">padStart</span><span class="token punctuation">(</span><span class="token number">2</span><span class="token punctuation">,</span> <span class="token string">"0"</span><span class="token punctuation">)</span> <span class="token operator">+</span> <span class="token string">":"</span> <span class="token operator">+</span>        time<span class="token punctuation">.</span><span class="token function">getMinutes</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">toString</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">padStart</span><span class="token punctuation">(</span><span class="token number">2</span><span class="token punctuation">,</span> <span class="token string">"0"</span><span class="token punctuation">)</span> <span class="token operator">+</span> <span class="token string">":"</span> <span class="token operator">+</span>        time<span class="token punctuation">.</span><span class="token function">getSeconds</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">toString</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">padStart</span><span class="token punctuation">(</span><span class="token number">2</span><span class="token punctuation">,</span> <span class="token string">"0"</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>]]></content>
      
      
      <categories>
          
          <category> 2203：ES API </category>
          
      </categories>
      
      
        <tags>
            
            <tag> JavaScript </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>ES Math</title>
      <link href="/220302/"/>
      <url>/220302/</url>
      
        <content type="html"><![CDATA[<h1><span id="es-math">ES Math</span><a href="#es-math" class="header-anchor">#</a></h1><h2><span id="pqu-zheng">取整</span><a href="#pqu-zheng" class="header-anchor">#</a></h2><pre class="line-numbers language-js" data-language="js"><code class="language-js"><span class="token comment">// parseInt 保留整数部分</span><span class="token function">parseInt</span><span class="token punctuation">(</span><span class="token number">3</span> <span class="token operator">/</span> <span class="token number">2</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// 1</span><span class="token comment">// floor 向下取整（丢弃小数部分）</span>Math<span class="token punctuation">.</span><span class="token function">floor</span><span class="token punctuation">(</span><span class="token number">3</span> <span class="token operator">/</span> <span class="token number">2</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// 1</span><span class="token comment">// ceil 向上取整</span>Math<span class="token punctuation">.</span><span class="token function">ceil</span><span class="token punctuation">(</span><span class="token number">3</span> <span class="token operator">/</span> <span class="token number">2</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// 2</span><span class="token comment">// round 四舍五入</span>Math<span class="token punctuation">.</span><span class="token function">round</span><span class="token punctuation">(</span><span class="token number">3</span> <span class="token operator">/</span> <span class="token number">2</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// 2</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h2><span id="phuo-qu-sui-ji-shu">获取随机数</span><a href="#phuo-qu-sui-ji-shu" class="header-anchor">#</a></h2><p>获取 0~1 之间的随机数。</p><pre class="line-numbers language-js" data-language="js"><code class="language-js">Math<span class="token punctuation">.</span><span class="token function">random</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>获取指定范围的随机整数（常用）</p><pre class="line-numbers language-js" data-language="js"><code class="language-js"><span class="token comment">// 公式（MAX，最大值；MIN，最小值）</span><span class="token keyword">const</span> Result <span class="token operator">=</span> Math<span class="token punctuation">.</span><span class="token function">floor</span><span class="token punctuation">(</span>Math<span class="token punctuation">.</span><span class="token function">random</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">*</span> <span class="token punctuation">(</span><span class="token constant">MAX</span> <span class="token operator">-</span> <span class="token constant">MIN</span> <span class="token operator">+</span> <span class="token number">1</span><span class="token punctuation">)</span> <span class="token operator">+</span> <span class="token constant">MIN</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment">// 简写</span><span class="token keyword">const</span> Result <span class="token operator">=</span> <span class="token operator">~</span><span class="token operator">~</span><span class="token punctuation">(</span>Math<span class="token punctuation">.</span><span class="token function">random</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">*</span> <span class="token punctuation">(</span><span class="token constant">MAX</span> <span class="token operator">-</span> <span class="token constant">MIN</span> <span class="token operator">+</span> <span class="token number">1</span><span class="token punctuation">)</span> <span class="token operator">+</span> <span class="token constant">MIN</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span></span></code></pre><p>为什么不用 <code>ceil</code> 和 <code>round</code> 取整而用 <code>floor</code></p><ul><li>用 ceil 的话，第一个数被随机到的概率极小。</li><li>用 round 的话，第一个和最后一个的概率比中间各项的概率低 50%。</li></ul><h2><span id="p1-jin-zhi">1、进制</span><a href="#p1-jin-zhi" class="header-anchor">#</a></h2><p>（1）进制表示</p><pre class="line-numbers language-js" data-language="js"><code class="language-js"><span class="token comment">// 二进制</span><span class="token number">0b101</span><span class="token comment">// 八进制</span><span class="token number">0o123</span><span class="token comment">// 十六进制</span><span class="token number">0x123</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>（2）进制转换（待补充）</p><h2><span id="p2-qu-zheng">2、取整</span><a href="#p2-qu-zheng" class="header-anchor">#</a></h2><p>将小数转换成整数，如果是整数则不改变。</p><ul><li><code>Math.ceil()</code>  进一取整</li><li><code>Math.floor()</code> 舍一取整</li><li><code>Math.round()</code>  标准的四舍五入</li></ul><h2><span id="p3-zui-zhi">3、最值</span><a href="#p3-zui-zhi" class="header-anchor">#</a></h2><p><code>Math.max()</code> <code>Math.min()</code> 获取一个参数列表的最大值，最小值。</p><pre class="line-numbers language-js" data-language="js"><code class="language-js"><span class="token comment">// 获取一个数组的最值</span><span class="token keyword">let</span> arr <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">,</span><span class="token number">2</span><span class="token punctuation">,</span><span class="token number">3</span><span class="token punctuation">,</span><span class="token number">4</span><span class="token punctuation">,</span><span class="token number">5</span><span class="token punctuation">,</span><span class="token number">6</span><span class="token punctuation">,</span><span class="token number">7</span><span class="token punctuation">]</span><span class="token comment">// ES5</span>Math<span class="token punctuation">.</span><span class="token function">max</span><span class="token punctuation">.</span><span class="token function">apply</span><span class="token punctuation">(</span><span class="token keyword">null</span><span class="token punctuation">,</span>arr<span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment">// ES6</span>Math<span class="token punctuation">.</span><span class="token function">max</span><span class="token punctuation">(</span><span class="token operator">...</span>arr<span class="token punctuation">)</span><span class="token punctuation">;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h2><span id="p4-shu-xue-yun-suan">4、数学运算</span><a href="#p4-shu-xue-yun-suan" class="header-anchor">#</a></h2><p><code>Math.abs()</code>  取绝对值</p><p><code>Math.pow(底数，次方)</code> <code>**</code> 幂运算</p><p><code>Math.PI</code> 圆周率π</p><p><code>Math.random()</code> 返回大于等于0小于1的一个随机数</p><p><code>Math.sign()</code>   判断正负<br>正数 <code>1</code><br>零或者 <code>null</code>  <code>0</code><br>负数 <code>-1</code><br>其他 <code>NaN</code></p><p><code>Math.sqrt()</code> <code>Math.cbrt()</code> <code>Math.hypot(3, 4)==5</code>  平分根、立方根</p><h2><span id="p5-bu-chong">5、补充</span><a href="#p5-bu-chong" class="header-anchor">#</a></h2><p>去掉小数部分 <code>Math.trunc()</code></p><h2><span id="p6-sheng-cheng-zhi-ding-fan-wei-de-sui-ji-shu">6、生成指定范围的随机数</span><a href="#p6-sheng-cheng-zhi-ding-fan-wei-de-sui-ji-shu" class="header-anchor">#</a></h2><p><code>Math.floor (Math. random()*( MAX-MIN+1 ) + MIN)</code></p><h2><span id="p7-sheng-cheng-wei-yi-de-sui-ji-zi-fu-chuan">7、生成唯一的随机字符串</span><a href="#p7-sheng-cheng-wei-yi-de-sui-ji-zi-fu-chuan" class="header-anchor">#</a></h2><pre class="line-numbers language-js" data-language="js"><code class="language-js"><span class="token keyword">function</span> <span class="token function">uniqueId</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>  <span class="token comment">// substring去掉.</span>  <span class="token keyword">const</span> randomNum <span class="token operator">=</span> <span class="token function">Number</span><span class="token punctuation">(</span>Math<span class="token punctuation">.</span><span class="token function">random</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">toString</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">substring</span><span class="token punctuation">(</span><span class="token number">2</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>  <span class="token comment">// .toString(32) 转换为32进制</span>  <span class="token keyword">return</span> <span class="token punctuation">(</span>randomNum <span class="token operator">+</span> Date<span class="token punctuation">.</span><span class="token function">now</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">toString</span><span class="token punctuation">(</span><span class="token number">32</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>]]></content>
      
      
      <categories>
          
          <category> 2203：ES API </category>
          
      </categories>
      
      
        <tags>
            
            <tag> JavaScript </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>JSON</title>
      <link href="/220301/"/>
      <url>/220301/</url>
      
        <content type="html"><![CDATA[<h1><span id="json">JSON</span><a href="#json" class="header-anchor">#</a></h1><p><code>JSON</code> 是ES内置对象（不用定义就能用）。<br><code>.json</code> 是一种常用于前后端数据交互的格式，本质是字符串。</p><h2><span id="pyi-zhi-de-biao-shi">一、值的表示</span><a href="#pyi-zhi-de-biao-shi" class="header-anchor">#</a></h2><h3><span id="p1-ji-ben-zhi">1、基本值</span><a href="#p1-ji-ben-zhi" class="header-anchor">#</a></h3><p>可以表示除了 <code>undefined</code>、<code>symbol</code> 之外的基本数据类型，<strong>表示字符串必须加双引号。</strong></p><pre class="line-numbers language-json" data-language="json"><code class="language-json">false5&quot;hello world&quot; &#x2F;&#x2F; 表示字符串需加双引号null<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span></span></code></pre><h3><span id="p2-dui-xiang">2、对象</span><a href="#p2-dui-xiang" class="header-anchor">#</a></h3><p>表示的是一组无序的键值对，属性必须用双引号包起来。此外，最后一个属性末尾不能加逗号。</p><pre class="line-numbers language-json" data-language="json"><code class="language-json">&#123;    &quot;name&quot;: &quot;Tom&quot;,    &quot;age&quot;: 18&#125;<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span></span></code></pre><h3><span id="p3-shu-zu">3、数组</span><a href="#p3-shu-zu" class="header-anchor">#</a></h3><pre class="line-numbers language-json" data-language="json"><code class="language-json">[25, &quot;hi&quot;, true]<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><h2><span id="per-json-api">二、JSON API</span><a href="#per-json-api" class="header-anchor">#</a></h2><h3><span id="p1-json-stringify">1、<code>JSON.stringify()</code></span><a href="#p1-json-stringify" class="header-anchor">#</a></h3><pre class="line-numbers language-js" data-language="js"><code class="language-js"><span class="token keyword">let</span> data <span class="token operator">=</span> <span class="token operator">...</span><span class="token keyword">let</span> jsonData <span class="token operator">=</span> <span class="token constant">JSON</span><span class="token punctuation">.</span><span class="token function">Stringify</span><span class="token punctuation">(</span>data<span class="token punctuation">)</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre><p>将JS值序列化为JSON字符串，常用于向服务器发送数据。<br>函数，原型成员，<code>undefined</code>，<code>symbol</code> 会被忽略。</p><h3><span id="p2-json-parse">2、<code>JSON.parse()</code></span><a href="#p2-json-parse" class="header-anchor">#</a></h3><p>将JSON字符串解析成原生的JS值，常用于解析服务器获取的数据。<br>不是有效的JSON字符串就会报错。</p>]]></content>
      
      
      <categories>
          
          <category> 2203：ES API </category>
          
      </categories>
      
      
        <tags>
            
            <tag> JavaScript </tag>
            
            <tag> JSON </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>ES 对象</title>
      <link href="/220109/"/>
      <url>/220109/</url>
      
        <content type="html"><![CDATA[<h1><span id="es-dui-xiang">ES 对象</span><a href="#es-dui-xiang" class="header-anchor">#</a></h1>]]></content>
      
      
      <categories>
          
          <category> 2201：ES基础 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> JavaScript </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>ES 函数</title>
      <link href="/220108/"/>
      <url>/220108/</url>
      
        <content type="html"><![CDATA[<h1><span id="han-shu">函数</span><a href="#han-shu" class="header-anchor">#</a></h1><p><strong>函数</strong>是可以反复使用的并且命名的代码块。本质上也是一种属于对象类型的数据。与其他数据类型不同的是，函数的值是可执行的代码。分为<strong>系统函数</strong>和<strong>自定义函数</strong>。</p><p>函数是数据，函数名是这个数据的标识。需要访问函数的数据去掉圆括号就好。一个函数可以有多个标识。</p><h2><span id="p1-han-shu-de-zuo-yong">1、函数的作用</span><a href="#p1-han-shu-de-zuo-yong" class="header-anchor">#</a></h2><ul><li>解决代码的冗余问题，实现代码的复用。</li><li>封装代码，让函数内部的代码对外部不可见。</li><li>可以让整个代码项目通过函数模块化。</li></ul><h2><span id="p2-xin-jian-han-shu">2、新建函数</span><a href="#p2-xin-jian-han-shu" class="header-anchor">#</a></h2><p>函数名定义的规则遵循标识符的规则。函数的声明函数名可以重复，一旦重名，前面的覆盖后面的。</p><h3><span id="p2-1-sheng-ming-han-shu-chang">2.1 声明函数 <code>常</code></span><a href="#p2-1-sheng-ming-han-shu-chang" class="header-anchor">#</a></h3><pre class="line-numbers language-js" data-language="js"><code class="language-js"><span class="token keyword">function</span> <span class="token function">name</span><span class="token punctuation">(</span><span class="token parameter">args</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>  <span class="token comment">// 函数体</span>  <span class="token keyword">return</span> statement<span class="token punctuation">;</span> <span class="token comment">// 返回语句</span><span class="token punctuation">&#125;</span><span class="token comment">// name -- 函数名</span><span class="token comment">// args -- 参数列表（可选）</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p><code>var</code> 和 <code>function</code> 都是声明语句，它们声明的变量和函数都在 JS 预编译时被解析，也被称为变量提升和函数提升。</p><p>ES5 中，不允许函数书写在非函数的代码块中（比如 if 语句中）。</p><h3><span id="p2-2-han-shu-biao-da-shi-chang">2.2 函数表达式 <code>常</code></span><a href="#p2-2-han-shu-biao-da-shi-chang" class="header-anchor">#</a></h3><pre class="line-numbers language-js" data-language="js"><code class="language-js"><span class="token comment">// 赋值调用（被称为函数表达式，这种方法只能提升函数名，不能提升函数体）</span><span class="token comment">// 调用需在创建之后</span><span class="token keyword">let</span> <span class="token function-variable function">fun</span> <span class="token operator">=</span> <span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>  <span class="token comment">// 函数体</span><span class="token punctuation">&#125;</span><span class="token punctuation">;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>函数可以不书写名字，这种被称为<strong>匿名函数</strong>。</p><p>执行方法：</p><pre class="line-numbers language-js" data-language="js"><code class="language-js"><span class="token comment">// 自调用</span><span class="token punctuation">(</span><span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>  <span class="token comment">// 函数体</span><span class="token punctuation">&#125;</span><span class="token punctuation">)</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token operator">!</span><span class="token punctuation">(</span><span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>  <span class="token comment">// 函数体</span><span class="token punctuation">&#125;</span><span class="token punctuation">)</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h3><span id="p2-3-gou-zao-han-shu-shi-liao-jie">2.3 构造函数式 <code>了解</code></span><a href="#p2-3-gou-zao-han-shu-shi-liao-jie" class="header-anchor">#</a></h3><p>类如 <code>const x = new XXXX()</code> 的形式，被称为<strong>构造函数</strong>。</p><pre class="line-numbers language-js" data-language="js"><code class="language-js"><span class="token keyword">const</span> fun <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Function</span><span class="token punctuation">(</span><span class="token string">"执行字符串"</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment">// 这个定义函数的方法几乎不用（会执行两次）</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre><h3><span id="p2-4-jian-tou-han-shu-es6-chang">2.4 箭头函数 <code>ES6</code> <code>常</code></span><a href="#p2-4-jian-tou-han-shu-es6-chang" class="header-anchor">#</a></h3><ul><li>内部没有<code>this</code> ，箭头函数与包围它的代码共享一个<code>this</code>。</li><li>不能用于构造函数（不能被<code>new</code> 实例化）。</li><li>内部没有没有<code>argument</code>对象，可用<code>rest</code>参数代替。</li><li>箭头函数不能使用<code>yield</code>命令，即不能用作<code>Generator</code>函数。</li></ul><pre class="line-numbers language-js" data-language="js"><code class="language-js"><span class="token comment">// 1、函数有参数，函数体只有一句返回值</span><span class="token keyword">function</span> <span class="token function">fn1</span><span class="token punctuation">(</span><span class="token parameter">n</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>  <span class="token keyword">return</span> n <span class="token operator">+</span> <span class="token number">1</span><span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span class="token keyword">const</span> <span class="token function-variable function">fn1</span> <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token parameter">n</span><span class="token punctuation">)</span> <span class="token operator">=></span> n <span class="token operator">+</span> <span class="token number">1</span><span class="token punctuation">;</span><span class="token comment">// 2、函数没有参数，函数体只有一句返回值</span><span class="token keyword">function</span> <span class="token function">fn2</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>  <span class="token keyword">return</span> <span class="token string">"hello world"</span><span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span class="token keyword">const</span> <span class="token function-variable function">fn2</span> <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=></span> <span class="token string">"hello world"</span><span class="token punctuation">;</span><span class="token comment">// 3、函数参数随意，函数体不仅仅是一句返回值</span><span class="token keyword">function</span> <span class="token function">fn3</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span><span class="token punctuation">&#125;</span><span class="token keyword">const</span> <span class="token function-variable function">fn3</span> <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=></span> <span class="token punctuation">&#123;</span><span class="token punctuation">&#125;</span><span class="token punctuation">;</span><span class="token comment">// 用箭头函数和reduce数组求和</span><span class="token keyword">const</span> <span class="token function-variable function">arrSum</span> <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token parameter">arr</span><span class="token punctuation">)</span> <span class="token operator">=></span> arr<span class="token punctuation">.</span><span class="token function">reduce</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token parameter">p<span class="token punctuation">,</span> n</span><span class="token punctuation">)</span> <span class="token operator">=></span> p <span class="token operator">+</span> n<span class="token punctuation">)</span><span class="token punctuation">;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h2><span id="p3-shi-yong-han-shu">3、使用函数</span><a href="#p3-shi-yong-han-shu" class="header-anchor">#</a></h2><p>函数需要调用才会执行。</p><h2><span id="p4-can-shu">4、参数</span><a href="#p4-can-shu" class="header-anchor">#</a></h2><p>JS 数据传递只有值传递，没有引用传递。</p><h3><span id="p4-1-xing-can-yu-shi-can">4.1 形参与实参</span><a href="#p4-1-xing-can-yu-shi-can" class="header-anchor">#</a></h3><p><strong>形参</strong> 形式上的参数，声明函数时候提供的参数。</p><p><strong>实参</strong> 在调用时，实际使用的参数。</p><h3><span id="p4-2-mo-ren-can-shu">4.2 默认参数</span><a href="#p4-2-mo-ren-can-shu" class="header-anchor">#</a></h3><pre class="line-numbers language-js" data-language="js"><code class="language-js"><span class="token comment">// ES6之前</span><span class="token keyword">function</span> <span class="token function">f</span><span class="token punctuation">(</span><span class="token parameter">name<span class="token punctuation">,</span> age</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>  age <span class="token operator">?</span> age <span class="token operator">:</span> <span class="token punctuation">(</span>age <span class="token operator">=</span> <span class="token number">18</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span class="token comment">// ES6</span><span class="token keyword">function</span> <span class="token function">f</span><span class="token punctuation">(</span><span class="token parameter">name<span class="token punctuation">,</span> age <span class="token operator">=</span> <span class="token number">18</span></span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span><span class="token punctuation">&#125;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h3><span id="p4-3-sheng-yu-can-shu">4.3 剩余参数</span><a href="#p4-3-sheng-yu-can-shu" class="header-anchor">#</a></h3><pre class="line-numbers language-js" data-language="js"><code class="language-js"><span class="token comment">// 可以把不确定的参数表示成数组</span><span class="token keyword">function</span> <span class="token function">f</span><span class="token punctuation">(</span><span class="token parameter">a<span class="token punctuation">,</span> <span class="token operator">...</span>b</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>  <span class="token keyword">return</span> b<span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span class="token function">f</span><span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">2</span><span class="token punctuation">,</span> <span class="token number">3</span><span class="token punctuation">,</span> <span class="token number">4</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// [2,3,4]</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span></span></code></pre><h3><span id="p4-4-argument-dui-xiang">4.4 argument 对象</span><a href="#p4-4-argument-dui-xiang" class="header-anchor">#</a></h3><p>二者在传值的时候是一一对应的。二者的个数可以不相等，形参多的时候，多出来的自动被赋值 undefined，实参多的时候，多出来的放在**<code>arguments</code>**对象中。该对象在函数内部才有，实际上是一个类数组 array-like 的对象，可以访问这个对象获得传递给函数的每一个实参。函数中的形参可写可不写，即使不写形参也可以使用 arguments 对象获得，使用形参比较方便。arguments 对象的 length 属性用来确定传递进来多少个实参。可以通过 length 属性的值的不同（根据传入的参数个数的不同），进行不同的操作。<code>arguments</code>对象中保存着一个叫<code>callee</code>的属性，这个属性是一个指针，它指向拥有这个<code>arguments</code>对象的函数。</p><ul><li>使用 arguments 对象的 length 属性可以获取函数的实参个数。</li><li>argument 对象只能在函数内可见,因此 arguments.legth 也只能在函数体内使用。</li><li>使用函数对象的 length 属性可以获取函数的形参个数,该属性为只读属性,在函数体内,体外都可以使用</li></ul><p>callee 是 arguments 对象的属性，它引用当前 argument 对象所在的函数，使用该属性可以在函数体内调用自身。</p><pre class="line-numbers language-js" data-language="js"><code class="language-js"><span class="token comment">// 检测函数的形参和实参是否一致</span>arguments<span class="token punctuation">.</span>length <span class="token operator">!=</span> arguments<span class="token punctuation">.</span>callee<span class="token punctuation">.</span>length<span class="token punctuation">;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre><h2><span id="p5-fan-hui-zhi">5、返回值</span><a href="#p5-fan-hui-zhi" class="header-anchor">#</a></h2><p><code>return</code> 没有指定值时函数返回的是<code>undefined</code>，函数在执行完该语句以后立即停止执行并退出函数。</p><p>返回值是一个函数的函数称为<strong>高阶函数</strong>。</p>]]></content>
      
      
      <categories>
          
          <category> 2201：ES基础 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> JavaScript </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>ES 数组</title>
      <link href="/220107/"/>
      <url>/220107/</url>
      
        <content type="html"><![CDATA[<h1><span id="es-shu-zu">ES 数组</span><a href="#es-shu-zu" class="header-anchor">#</a></h1><p>Array<br>定义数组<br>数组的长度<br>操作数组<br>多维数组<br>伪数组<br>数组方法</p>]]></content>
      
      
      <categories>
          
          <category> 2201：ES基础 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> JavaScript </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>ES 错误与异常处理</title>
      <link href="/220106/"/>
      <url>/220106/</url>
      
        <content type="html"><![CDATA[<h1><span id="cuo-wu-yu-yi-chang-chu-li">错误与异常处理</span><a href="#cuo-wu-yu-yi-chang-chu-li" class="header-anchor">#</a></h1><p>ECMA-262 规范了7种错误类型。其中<code>Error</code>是基类，其他6种错误类型是子类，都继承了基类。基类的主要作用是自定义错误对象。</p><h2><span id="p1-cuo-wu-lei-xing">1、错误类型</span><a href="#p1-cuo-wu-lei-xing" class="header-anchor">#</a></h2><table><thead><tr><th>类型</th><th>说明</th></tr></thead><tbody><tr><td><code>Error</code></td><td>基类 <br><code>name</code> 可以读写异常类型（TypeError）<br><code>message</code> 可以读写详细的错误信息。</td></tr><tr><td><code>EvalError</code></td><td>不正确使用eval()方法时抛出</td></tr><tr><td><code>SyntaxError</code></td><td><strong>语法错误</strong></td></tr><tr><td><code>ReferenceError</code></td><td>读取不存在的变量时抛出</td></tr><tr><td><code>TypeError</code></td><td>值的类型发生错误的时候抛出</td></tr><tr><td><code>RangeError</code></td><td>数字超出合法范围</td></tr><tr><td><code>URIError</code></td><td>URI编码和解码错误</td></tr></tbody></table><h2><span id="p2-try-catch">2、try…catch</span><a href="#p2-try-catch" class="header-anchor">#</a></h2><pre class="line-numbers language-js" data-language="js"><code class="language-js"><span class="token keyword">try</span><span class="token punctuation">&#123;</span>    <span class="token comment">// 调试代码块</span><span class="token punctuation">&#125;</span> <span class="token keyword">catch</span> <span class="token punctuation">(</span>e<span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>    <span class="token comment">// 捕获异常，并进行异常处理代码块</span><span class="token punctuation">&#125;</span> <span class="token keyword">finally</span> <span class="token punctuation">&#123;</span>    <span class="token punctuation">&#125;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>一般情况下 <code>try...catch</code> 就够用了。</p><p>按顺序执行 try 子句中的代码，如果没有异常发生，将会忽略 catch 跳转到 finally 子句继续执行。</p><p>无法捕获逻辑错误。</p><h2><span id="p3-throw">3、throw</span><a href="#p3-throw" class="header-anchor">#</a></h2><p>抛出异常。</p><pre class="line-numbers language-js" data-language="js"><code class="language-js"><span class="token keyword">try</span> <span class="token punctuation">&#123;</span>    <span class="token keyword">let</span> num <span class="token operator">=</span> <span class="token number">1</span> <span class="token operator">/</span> <span class="token number">0</span><span class="token punctuation">;</span>    <span class="token keyword">if</span> <span class="token punctuation">(</span>num <span class="token operator">=</span> <span class="token number">Infinity</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>        <span class="token comment">// 抛出错误</span>        <span class="token keyword">throw</span> <span class="token keyword">new</span> <span class="token class-name">Error</span><span class="token punctuation">(</span><span class="token string">"除数不能为0"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">&#125;</span><span class="token punctuation">&#125;</span> <span class="token keyword">catch</span> <span class="token punctuation">(</span>exception<span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>    console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>exception<span class="token punctuation">.</span>message<span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>抛出错误之后，后续代码不会执行。</p>]]></content>
      
      
      <categories>
          
          <category> 2201：ES基础 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> JavaScript </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>ES 基本流程控制</title>
      <link href="/210105/"/>
      <url>/210105/</url>
      
        <content type="html"><![CDATA[<h1><span id="es-ji-ben-liu-cheng-kong-zhi">ES 基本流程控制</span><a href="#es-ji-ben-liu-cheng-kong-zhi" class="header-anchor">#</a></h1><h2><span id="pfen-zhi-kong-zhi">分支控制</span><a href="#pfen-zhi-kong-zhi" class="header-anchor">#</a></h2><p>if-else<br>switch</p><h2><span id="pxun-huan-kong-zhi">循环控制</span><a href="#pxun-huan-kong-zhi" class="header-anchor">#</a></h2><p>for<br>while<br>do-while<br>break<br>continue</p><h2><span id="plian-xi-shu-chu-jiu-jiu-cheng-fa-biao">练习：输出九九乘法表</span><a href="#plian-xi-shu-chu-jiu-jiu-cheng-fa-biao" class="header-anchor">#</a></h2>]]></content>
      
      
      <categories>
          
          <category> 2201：ES基础 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> JavaScript </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>展开运算符</title>
      <link href="/220403/"/>
      <url>/220403/</url>
      
        <content type="html"><![CDATA[<h1><span id="zhan-kai-yun-suan-fu">展开运算符</span><a href="#zhan-kai-yun-suan-fu" class="header-anchor">#</a></h1><pre class="line-numbers language-js" data-language="js"><code class="language-js"><span class="token comment">// 展开</span><span class="token punctuation">&#123;</span>  <span class="token keyword">let</span> arr <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">2</span><span class="token punctuation">,</span> <span class="token number">3</span><span class="token punctuation">]</span><span class="token punctuation">;</span>  <span class="token keyword">let</span> arr2 <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token operator">...</span>arr<span class="token punctuation">,</span> <span class="token number">4</span><span class="token punctuation">,</span> <span class="token number">5</span><span class="token punctuation">]</span><span class="token punctuation">;</span>  console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">"arr"</span><span class="token punctuation">,</span> arr2<span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// [1, 2, 3, 4, 5]</span><span class="token punctuation">&#125;</span><span class="token comment">// 复制数组</span><span class="token punctuation">&#123;</span>  <span class="token keyword">let</span> arr <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">2</span><span class="token punctuation">,</span> <span class="token number">3</span><span class="token punctuation">,</span> <span class="token number">4</span><span class="token punctuation">,</span> <span class="token number">5</span><span class="token punctuation">]</span><span class="token punctuation">;</span>  <span class="token comment">// 这个不是复制数组，他们是同一个数组</span>  <span class="token keyword">let</span> arr2 <span class="token operator">=</span> arr<span class="token punctuation">;</span>  <span class="token comment">// 数组复制方法之 for</span>  <span class="token keyword">let</span> arr3 <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">;</span>  <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">let</span> i <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span> i <span class="token operator">&lt;</span> arr<span class="token punctuation">.</span>length<span class="token punctuation">;</span> i<span class="token operator">++</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>    arr3<span class="token punctuation">[</span>i<span class="token punctuation">]</span> <span class="token operator">=</span> arr<span class="token punctuation">[</span>i<span class="token punctuation">]</span>  <span class="token punctuation">&#125;</span>  console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">"arr2"</span><span class="token punctuation">,</span> arr3<span class="token punctuation">)</span>  <span class="token comment">// 数组复制方法之 ...</span>  <span class="token keyword">let</span> arr4 <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token operator">...</span>arr<span class="token punctuation">]</span><span class="token punctuation">;</span>  console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">"arr3"</span><span class="token punctuation">,</span> arr4<span class="token punctuation">)</span><span class="token punctuation">&#125;</span><span class="token comment">// 合并数组</span><span class="token punctuation">&#123;</span>  <span class="token keyword">let</span> arr1 <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">2</span><span class="token punctuation">,</span> <span class="token number">3</span><span class="token punctuation">]</span><span class="token punctuation">;</span>  <span class="token keyword">let</span> arr2 <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token number">4</span><span class="token punctuation">,</span> <span class="token number">5</span><span class="token punctuation">,</span> <span class="token number">6</span><span class="token punctuation">]</span><span class="token punctuation">;</span>  <span class="token keyword">let</span> arr3 <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token operator">...</span>arr1<span class="token punctuation">,</span> <span class="token operator">...</span>arr2<span class="token punctuation">]</span><span class="token punctuation">;</span>  console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">"arr4"</span><span class="token punctuation">,</span> arr3<span class="token punctuation">)</span><span class="token punctuation">&#125;</span><span class="token comment">// 可以展开字符串</span><span class="token punctuation">&#123;</span>  <span class="token keyword">let</span> str <span class="token operator">=</span> <span class="token string">"abcde"</span><span class="token punctuation">;</span>  <span class="token keyword">let</span> arr <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token operator">...</span>str<span class="token punctuation">]</span><span class="token punctuation">;</span>  console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">"arr5"</span><span class="token punctuation">,</span> arr<span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span class="token comment">// 对象是没有部署 itertor 接口，所以不能被展开</span><span class="token punctuation">&#123;</span>  <span class="token keyword">let</span> obj <span class="token operator">=</span> <span class="token punctuation">&#123;</span>    name<span class="token operator">:</span> <span class="token string">'poxiao'</span><span class="token punctuation">,</span>    sex<span class="token operator">:</span> <span class="token string">'rbq'</span>  <span class="token punctuation">&#125;</span><span class="token punctuation">;</span>  <span class="token comment">// console.log(...obj)</span><span class="token punctuation">&#125;</span><span class="token comment">// 类数组对象上面也有iterator接口，所以也可以被展开</span><span class="token comment">// const olis = document.querySelectorAll("ul li")</span><span class="token comment">// console.log(...olis)</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>]]></content>
      
      
      <categories>
          
          <category> 2204：ES6 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> JavaScript </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>ES 运算符与类型转换</title>
      <link href="/220104/"/>
      <url>/220104/</url>
      
        <content type="html"><![CDATA[<h1><span id="es-yun-suan-fu-yu-lei-xing-zhuan-huan">ES 运算符与类型转换</span><a href="#es-yun-suan-fu-yu-lei-xing-zhuan-huan" class="header-anchor">#</a></h1><h2><span id="pyi-suan-zhu-yun-suan-fu">一、算术运算符</span><a href="#pyi-suan-zhu-yun-suan-fu" class="header-anchor">#</a></h2><h3><span id="p1-jia-fa">1、加法</span><a href="#p1-jia-fa" class="header-anchor">#</a></h3><pre class="line-numbers language-js" data-language="js"><code class="language-js"><span class="token comment">// 如果其中一个操作数是字符串，则会把另外一个操作数转换成字符串。</span><span class="token number">1</span> <span class="token operator">+</span> <span class="token string">"str"</span><span class="token punctuation">;</span> <span class="token comment">// 1str</span><span class="token string">"str"</span> <span class="token operator">+</span> <span class="token number">1</span><span class="token punctuation">;</span> <span class="token comment">// str1</span><span class="token number">1</span> <span class="token operator">+</span> <span class="token number">1</span> <span class="token operator">+</span> <span class="token string">"str"</span><span class="token punctuation">;</span> <span class="token comment">// 2str</span><span class="token number">1</span> <span class="token operator">+</span> <span class="token punctuation">(</span><span class="token number">1</span> <span class="token operator">+</span> str<span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// 11str</span><span class="token comment">// 如果都有是字符串，会拼接在一起</span><span class="token string">"str"</span> <span class="token operator">+</span> <span class="token string">"is"</span><span class="token punctuation">;</span> <span class="token comment">// stris</span><span class="token comment">// 其他类型自动调用Number()进行转换</span><span class="token boolean">true</span> <span class="token operator">+</span> <span class="token boolean">true</span><span class="token punctuation">;</span> <span class="token comment">// 2</span><span class="token keyword">null</span> <span class="token operator">+</span> <span class="token keyword">null</span><span class="token punctuation">;</span> <span class="token comment">// 0</span><span class="token number">NaN</span> <span class="token operator">+</span> <span class="token number">1</span><span class="token punctuation">;</span> <span class="token comment">// NaN</span><span class="token number">1</span> <span class="token operator">+</span>  <span class="token keyword">undefined</span> <span class="token operator">+</span> <span class="token comment">// NaN</span>  <span class="token comment">// 放在非数值前面，则会自动调用Number()进行转换（不会影响本身）</span>  <span class="token string">"123"</span><span class="token punctuation">;</span> <span class="token comment">// 123</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h3><span id="p2-jian-fa-cheng-fa-chu-fa">2、减法、乘法、除法</span><a href="#p2-jian-fa-cheng-fa-chu-fa" class="header-anchor">#</a></h3><pre class="line-numbers language-js" data-language="js"><code class="language-js"><span class="token comment">// 如果有操作数是非字符，则自动调用Number()转换。</span><span class="token string">"99"</span> <span class="token operator">-</span> <span class="token number">0</span><span class="token punctuation">;</span> <span class="token comment">// 99</span><span class="token string">"99"</span> <span class="token operator">*</span> <span class="token number">1</span><span class="token punctuation">;</span> <span class="token comment">// 99</span><span class="token string">"99"</span> <span class="token operator">/</span> <span class="token number">1</span><span class="token punctuation">;</span> <span class="token comment">// 99</span><span class="token comment">// 特殊</span><span class="token number">1</span> <span class="token operator">/</span> <span class="token number">0</span><span class="token punctuation">;</span> <span class="token comment">// Infinity</span><span class="token number">Infinity</span> <span class="token operator">*</span> <span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">;</span> <span class="token comment">// - Infinity</span><span class="token number">0</span> <span class="token operator">/</span> <span class="token number">0</span><span class="token punctuation">;</span> <span class="token comment">// NaN</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h3><span id="p3-qu-yu">3、取余</span><a href="#p3-qu-yu" class="header-anchor">#</a></h3><pre class="line-numbers language-js" data-language="js"><code class="language-js"><span class="token number">3</span> <span class="token operator">%</span> <span class="token number">5</span><span class="token punctuation">;</span> <span class="token comment">// 3</span><span class="token number">5</span> <span class="token operator">%</span> <span class="token number">0</span><span class="token punctuation">;</span> <span class="token comment">// NaN</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre><h3><span id="p4-zi-zeng-zi-jian">4、自增、自减</span><a href="#p4-zi-zeng-zi-jian" class="header-anchor">#</a></h3><p><code>++i</code> 表示，i 自增 1 后再参与其它运算（先加后用）；而 <code>i++</code> 则是 i 参与运算后，i 的值再自增 1。自增自减运算可能会改变原有变量类型。</p><pre class="line-numbers language-js" data-language="js"><code class="language-js"><span class="token keyword">var</span> a <span class="token operator">=</span> <span class="token number">100</span><span class="token number">1</span> <span class="token operator">+</span> a<span class="token operator">++</span> <span class="token comment">// 101</span><span class="token number">1</span> <span class="token operator">+</span> <span class="token operator">++</span>a <span class="token comment">// 102</span><span class="token comment">// 会改变原变量类型</span><span class="token keyword">var</span> a <span class="token operator">=</span> <span class="token boolean">true</span><span class="token punctuation">;</span><span class="token operator">++</span>a<span class="token punctuation">;</span> <span class="token comment">// a = 2</span><span class="token keyword">var</span> i <span class="token operator">=</span> <span class="token number">1</span>i <span class="token operator">=</span> i<span class="token operator">++</span> <span class="token comment">// i = 1</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h2><span id="per-guan-xi-yun-suan-fu">二、关系运算符</span><a href="#per-guan-xi-yun-suan-fu" class="header-anchor">#</a></h2><pre class="line-numbers language-js" data-language="js"><code class="language-js"><span class="token comment">// 如果两个操作数都是字符串，比较对应的字符编码</span><span class="token string">"234"</span> <span class="token operator">></span> <span class="token string">"123455"</span> <span class="token comment">// true</span><span class="token comment">// == 和 === 的区别</span><span class="token keyword">undefined</span> <span class="token operator">==</span> <span class="token keyword">null</span> <span class="token comment">// true</span><span class="token keyword">undefined</span> <span class="token operator">===</span> <span class="token keyword">null</span> <span class="token comment">// false</span><span class="token comment">// 坑</span><span class="token keyword">null</span> <span class="token operator">==</span> <span class="token number">0</span> <span class="token comment">// false 相等比较不进行类型转换</span><span class="token keyword">null</span> <span class="token operator">>=</span> <span class="token number">0</span> <span class="token comment">// true</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h2><span id="psan-fu-zhi-yun-suan-fu">三、赋值运算符</span><a href="#psan-fu-zhi-yun-suan-fu" class="header-anchor">#</a></h2><pre class="line-numbers language-js" data-language="js"><code class="language-js">a <span class="token operator">+=</span> b<span class="token punctuation">;</span> <span class="token comment">// 等价于 a = a + b</span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><h2><span id="psi-luo-ji-yun-suan-fu">四、逻辑运算符</span><a href="#psi-luo-ji-yun-suan-fu" class="header-anchor">#</a></h2><p><code>&amp;&amp;</code> 与</p><ul><li>第一步：计算第一个操作数</li><li>第二步：如果第一个操作数转换成 false，那么就会结束运算，直接第一个操作数</li><li>第三步：如果第一个操作数返回 true，则计算第二个操作数的值</li><li>第四步：第二个操作数如果返回 true 则逻辑与返回第二个操作数，否则返回第一个操作数</li></ul><p><code>||</code> 或</p><ul><li>第一步：计算第一个操作数的值。</li><li>第二步：检测第一个操作数的值。如果左侧的表达式的值可以转换为 true，那么就会结束运算。直接返回第一个操作数的值</li><li>第三步：如果第一个操作数可以转换为 false，则计算第二个操作数的值。并返回第二个操作数的值</li></ul><p><code>!</code> 非</p><pre class="line-numbers language-js" data-language="js"><code class="language-js"><span class="token number">1</span> <span class="token operator">&amp;&amp;</span> <span class="token number">2</span><span class="token punctuation">;</span> <span class="token comment">// 返回2</span><span class="token string">""</span> <span class="token operator">&amp;&amp;</span> <span class="token number">1</span><span class="token punctuation">;</span> <span class="token comment">// 返回''</span><span class="token string">"Cat"</span> <span class="token operator">&amp;&amp;</span> <span class="token string">"Dog"</span><span class="token punctuation">;</span> <span class="token comment">// 返回”Dog"</span><span class="token string">""</span> <span class="token operator">&amp;&amp;</span> <span class="token boolean">false</span><span class="token punctuation">;</span> <span class="token comment">// f &amp;&amp; f 返回 ""</span><span class="token boolean">false</span> <span class="token operator">&amp;&amp;</span> <span class="token string">""</span><span class="token punctuation">;</span> <span class="token comment">// f &amp;&amp; f 返回 false</span><span class="token number">1</span> <span class="token operator">||</span> <span class="token number">2</span><span class="token punctuation">;</span> <span class="token comment">// 1</span><span class="token number">0</span> <span class="token operator">||</span> <span class="token number">2</span><span class="token punctuation">;</span> <span class="token comment">// 2</span><span class="token number">0</span> <span class="token operator">||</span> <span class="token keyword">null</span><span class="token punctuation">;</span> <span class="token comment">// null</span><span class="token string">""</span> <span class="token operator">||</span> <span class="token boolean">false</span><span class="token punctuation">;</span> <span class="token comment">// f || f 返回 false</span><span class="token boolean">false</span> <span class="token operator">||</span> <span class="token string">""</span><span class="token punctuation">;</span> <span class="token comment">// f || f 返回 ""</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h3><span id="pduan-lu-yuan-li">短路原理</span><a href="#pduan-lu-yuan-li" class="header-anchor">#</a></h3><p>在逻辑运算中，如果第一个操作数就能决定结果，那么第二个操作数就不会运行了。（就算运行了会报错也能顺利通过）</p><pre class="line-numbers language-js" data-language="js"><code class="language-js"><span class="token keyword">var</span> a <span class="token operator">=</span> <span class="token boolean">false</span><span class="token punctuation">;</span><span class="token boolean">false</span> <span class="token operator">&amp;&amp;</span> <span class="token function">qwq</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre><h2><span id="pwu-wei-yun-suan-fu">五、位运算符</span><a href="#pwu-wei-yun-suan-fu" class="header-anchor">#</a></h2><h2><span id="pliu-san-yuan-yun-suan-fu">六、三元运算符</span><a href="#pliu-san-yuan-yun-suan-fu" class="header-anchor">#</a></h2><p>三元运算符：<code>运算元1?运算2:运算3</code></p><h2><span id="pqi-qi-ta">七、其他</span><a href="#pqi-qi-ta" class="header-anchor">#</a></h2><p>逗号操作符<br>它能够先执行运算符左侧的操作数，然后再执行右侧的操作数，最后返回右侧操作数的值。</p><pre class="line-numbers language-js" data-language="js"><code class="language-js"><span class="token keyword">var</span> a <span class="token operator">=</span> <span class="token number">1</span><span class="token punctuation">,</span>  b <span class="token operator">=</span> <span class="token number">2</span><span class="token punctuation">,</span>  c <span class="token operator">=</span> <span class="token number">3</span><span class="token punctuation">;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span></span></code></pre><h2><span id="pba-yun-suan-fu-de-you-xian-ji">八、运算符的优先级</span><a href="#pba-yun-suan-fu-de-you-xian-ji" class="header-anchor">#</a></h2><table><thead><tr><th>优先级</th><th>符号 + 描述</th></tr></thead><tbody><tr><td>20</td><td><code>()</code> 分组</td></tr><tr><td>19</td><td><code>()</code> 函数调用 <code>.</code> <code>[]</code> 成员调用 <code>new</code> 创建</td></tr></tbody></table><blockquote><p>通常简要规则: 一元 &gt; 二元 &gt; 三元<br>使用圆括号</p></blockquote><h2><span id="pjiu-kuo-zhan-yun-suan-fu">九、扩展运算符</span><a href="#pjiu-kuo-zhan-yun-suan-fu" class="header-anchor">#</a></h2><p><code>...</code> 三点运算符，把数组在其他数组中展开</p><p>（1）复制数组（深拷贝） <code>let nArr = [...arr]</code></p><p>（2）合并数组 <code>let nAtr = [...arr1, ...arr2]</code></p><p>（3）解构赋值</p><p>（4）字符串转数组 可以展开字符串，放在数组中，直接转为数组</p><h2><span id="pshi-lei-xing-zhuan-huan">十、类型转换</span><a href="#pshi-lei-xing-zhuan-huan" class="header-anchor">#</a></h2><p>强制类型转换<br><code>parseInt</code><br><code>parseFloat</code><br><code>toString</code> / <code>valueOf</code></p>]]></content>
      
      
      <categories>
          
          <category> 2201：ES基础 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> JavaScript </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Symbol</title>
      <link href="/220402/"/>
      <url>/220402/</url>
      
        <content type="html"><![CDATA[<h1><span id="symbol">Symbol</span><a href="#symbol" class="header-anchor">#</a></h1><p>保证对象的每个属性的名字都是独一无二的，从根本上面防止属性名冲突。</p><h2><span id="pyi-shi-yong">一、使用</span><a href="#pyi-shi-yong" class="header-anchor">#</a></h2><p>1、不用加 <code>new</code></p><pre class="line-numbers language-js" data-language="js"><code class="language-js"><span class="token keyword">let</span> s <span class="token operator">=</span> <span class="token function">Symbol</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token keyword">typeof</span> s <span class="token comment">// "symbol"</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre><p>2、可以加描述符</p><pre class="line-numbers language-js" data-language="js"><code class="language-js"><span class="token keyword">let</span> s <span class="token operator">=</span> <span class="token function">Symbol</span><span class="token punctuation">(</span><span class="token string">'foo'</span><span class="token punctuation">)</span> s<span class="token punctuation">.</span><span class="token function">toString</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token comment">// 'Symbol(foo)'</span><span class="token template-string"><span class="token template-punctuation string">`</span><span class="token template-punctuation string">`</span></span><span class="token template-string"><span class="token template-punctuation string">`</span><span class="token string"> 3、</span><span class="token template-punctuation string">`</span></span><span class="token class-name">Symbol</span><span class="token punctuation">.</span>prototype<span class="token punctuation">.</span>description<span class="token template-string"><span class="token template-punctuation string">`</span><span class="token string">> ES2019新增</span><span class="token template-punctuation string">`</span></span><span class="token template-string"><span class="token template-punctuation string">`</span><span class="token template-punctuation string">`</span></span>js<span class="token keyword">const</span> s <span class="token operator">=</span> <span class="token function">Symbol</span><span class="token punctuation">(</span><span class="token string">'foo'</span><span class="token punctuation">)</span>s<span class="token punctuation">.</span>description <span class="token comment">// "foo"</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>4、<code>Symbol.for</code> / <code>Symbol.keyFor</code><br>有时，我们希望重新使用同一个Symbol值，Symbol.for()方法可以做到这一点。它接受一个字符串作为参数，然后搜索有没有以该参数作为名称的 Symbol 值。如果有，就返回这个 Symbol 值，否则就新建一个以该字符串为名称的 Symbol 值，并将其注册到全局。</p><pre class="line-numbers language-js" data-language="js"><code class="language-js"><span class="token keyword">let</span> s <span class="token operator">=</span> Symbol<span class="token punctuation">.</span><span class="token function">for</span><span class="token punctuation">(</span><span class="token string">'foo'</span><span class="token punctuation">)</span><span class="token keyword">let</span> s2 <span class="token operator">=</span> Symbol<span class="token punctuation">.</span><span class="token function">for</span><span class="token punctuation">(</span><span class="token string">'foo'</span><span class="token punctuation">)</span>s1 <span class="token operator">===</span> s2 <span class="token comment">// true</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span></span></code></pre><p><code>Symbol.keyFor ()</code> 方法返回一个已登记的 Symbol 类型值的 key。</p><pre class="line-numbers language-js" data-language="js"><code class="language-js"><span class="token keyword">let</span> s <span class="token operator">=</span> Symbol<span class="token punctuation">.</span><span class="token function">for</span><span class="token punctuation">(</span><span class="token string">'foo'</span><span class="token punctuation">)</span>Symbol<span class="token punctuation">.</span><span class="token function">keyFor</span><span class="token punctuation">(</span>s<span class="token punctuation">)</span> <span class="token comment">// "foo"</span><span class="token keyword">let</span> s2 <span class="token operator">=</span> <span class="token function">Symbol</span><span class="token punctuation">(</span><span class="token string">'foo'</span><span class="token punctuation">)</span>Symbol<span class="token punctuation">.</span><span class="token function">keyFor</span><span class="token punctuation">(</span>s2<span class="token punctuation">)</span> <span class="token comment">// undefined</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span></span></code></pre><h2><span id="per-bian-li">二、遍历</span><a href="#per-bian-li" class="header-anchor">#</a></h2><p>无法遍历: <code>for...in</code>、<code>for...of</code>、<code>Object.keys()</code>、<code>Object.getOwnPropertyNames()</code>、<code>JSON.stringify()</code></p><p>可以遍历：<br><code>Object.getOwnPropertySymbols()</code></p><pre class="line-numbers language-js" data-language="js"><code class="language-js"><span class="token keyword">const</span> obj <span class="token operator">=</span> <span class="token punctuation">&#123;</span><span class="token punctuation">&#125;</span><span class="token keyword">let</span> a <span class="token operator">=</span> <span class="token function">Symbol</span><span class="token punctuation">(</span><span class="token string">'a'</span><span class="token punctuation">)</span><span class="token keyword">let</span> b <span class="token operator">=</span> <span class="token function">Symbol</span><span class="token punctuation">(</span><span class="token string">'b'</span><span class="token punctuation">)</span>obj<span class="token punctuation">[</span>a<span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token string">"Hello"</span>obj<span class="token punctuation">[</span>b<span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token string">"World"</span><span class="token keyword">const</span> objectSymbols <span class="token operator">=</span> Object<span class="token punctuation">.</span><span class="token function">getOwnPropertySymbols</span><span class="token punctuation">(</span>obj<span class="token punctuation">)</span><span class="token comment">// [Symbol(a), Symbol(b)]</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p><code>Reflect.ownKeys()</code></p><pre class="line-numbers language-js" data-language="js"><code class="language-js"><span class="token keyword">let</span> obj <span class="token operator">=</span> <span class="token punctuation">&#123;</span>  <span class="token punctuation">[</span><span class="token function">Symbol</span><span class="token punctuation">(</span><span class="token string">'key'</span><span class="token punctuation">)</span><span class="token punctuation">]</span><span class="token operator">:</span> <span class="token number">1</span><span class="token punctuation">,</span>  <span class="token keyword">enum</span><span class="token operator">:</span> <span class="token number">2</span><span class="token punctuation">,</span>  nonEnum<span class="token operator">:</span> <span class="token number">3</span><span class="token punctuation">&#125;</span>Reflect<span class="token punctuation">.</span><span class="token function">ownKeys</span><span class="token punctuation">(</span>obj<span class="token punctuation">)</span><span class="token comment">// ["enum", "nonEnum", Symbol(key)]</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h2><span id="psan-ying-yong">三、应用</span><a href="#psan-ying-yong" class="header-anchor">#</a></h2><p>1、作为对象的属性名</p><pre class="line-numbers language-js" data-language="js"><code class="language-js"><span class="token keyword">let</span> mySymbol <span class="token operator">=</span> <span class="token function">Symbol</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token comment">// 第一种写法</span><span class="token keyword">let</span> a <span class="token operator">=</span> <span class="token punctuation">&#123;</span><span class="token punctuation">&#125;</span>a<span class="token punctuation">[</span>mySymbol<span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token string">"hello"</span><span class="token comment">// 第二种写法</span><span class="token keyword">let</span> b <span class="token operator">=</span> <span class="token punctuation">&#123;</span>  <span class="token punctuation">[</span>mySymbol<span class="token punctuation">]</span><span class="token operator">:</span> <span class="token string">"hello"</span><span class="token punctuation">&#125;</span><span class="token comment">// 第三种写法</span><span class="token keyword">let</span> c <span class="token operator">=</span> <span class="token punctuation">&#123;</span><span class="token punctuation">&#125;</span>Object<span class="token punctuation">.</span><span class="token function">defineProperty</span><span class="token punctuation">(</span>c<span class="token punctuation">,</span> mySymbol<span class="token punctuation">,</span> <span class="token punctuation">&#123;</span> value<span class="token operator">:</span> <span class="token string">"hello"</span><span class="token punctuation">&#125;</span><span class="token punctuation">)</span><span class="token comment">// 以上写法都得到同样的结果</span><span class="token comment">// 只能用[]不能用.取值</span>a<span class="token punctuation">[</span>mySymbol<span class="token punctuation">]</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>2、消除魔术字符串<br>待更新。</p>]]></content>
      
      
      <categories>
          
          <category> 2204：ES6 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> JavaScript </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>ES 基本数据类型</title>
      <link href="/220103/"/>
      <url>/220103/</url>
      
        <content type="html"><![CDATA[<h1><span id="es-ji-ben-shu-ju-lei-xing">ES 基本数据类型</span><a href="#es-ji-ben-shu-ju-lei-xing" class="header-anchor">#</a></h1><p>在 ES 中，数据类型分为基本类型和引用类型（复杂类型）。</p><table><thead><tr><th></th><th>基本类型</th><th>引用类型</th></tr></thead><tbody><tr><td>值</td><td>不可变（注）</td><td>可变</td></tr><tr><td>添加属性和方法</td><td>无效</td><td>可以</td></tr><tr><td>存储方式</td><td>栈区</td><td>名字地址存栈区，值存堆区</td></tr><tr><td>比较方式</td><td>值比较</td><td>引用的比较</td></tr></tbody></table><p>基本类型分为</p><ul><li>布尔值 <code>Boolean</code></li><li>数值 <code>Number</code></li><li>大整数 <code>bigint</code> （ES6新增）</li><li>字符串 <code>String</code></li><li><code>null</code></li><li><code>undefined</code></li><li><code>Symbol</code> （ES6新增）</li></ul><h2><span id="pyi-bu-er-zhi">一、布尔值</span><a href="#pyi-bu-er-zhi" class="header-anchor">#</a></h2><h2><span id="per-shu-zhi-da-zheng-shu">二、数值、大整数</span><a href="#per-shu-zhi-da-zheng-shu" class="header-anchor">#</a></h2><p>NaN</p><p>最值</p><p>安全值</p><h2><span id="psan-zi-fu-chuan">三、字符串</span><a href="#psan-zi-fu-chuan" class="header-anchor">#</a></h2><p>模板字符串</p><h2><span id="psi-null-amp-undefined">四、<code>null</code> &amp; <code>undefined</code></span><a href="#psi-null-amp-undefined" class="header-anchor">#</a></h2><p>常见的 <code>undefined</code> 环境</p><ul><li>变量声明但是没有赋值</li><li>调用函数没有提供的参数</li><li>函数默认返回值</li><li>对象没有赋值的属性</li></ul><p>常见的 <code>null</code> 环境</p><ul><li>对象原型链的终点</li><li>让变量指向的对象成为垃圾对象</li></ul><h2><span id="pwu-symbol">五、<code>Symbol</code></span><a href="#pwu-symbol" class="header-anchor">#</a></h2><p>保证对象的每个属性的名字都是独一无二的，从根本上面防止属性名冲突。</p><p>更多内容详看 <code>ES6/Symbol</code></p><h2><span id="pliu-pan-duan-lei-xing">六、判断类型</span><a href="#pliu-pan-duan-lei-xing" class="header-anchor">#</a></h2><p><code>typeof</code><br><code>instanceof</code><br><code>isNaN</code></p>]]></content>
      
      
      <categories>
          
          <category> 2201：ES基础 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> JavaScript </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>ES 基本语法</title>
      <link href="/220102/"/>
      <url>/220102/</url>
      
        <content type="html"><![CDATA[<h1><span id="es-ji-ben-yu-fa">ES 基本语法</span><a href="#es-ji-ben-yu-fa" class="header-anchor">#</a></h1><h2><span id="pyi-yu-ju-zhu-shi-fen-hao-kong-ge">一、语句、注释、分号、空格</span><a href="#pyi-yu-ju-zhu-shi-fen-hao-kong-ge" class="header-anchor">#</a></h2><ul><li>语句是执行行为的语法结构和命令。分为声明语句、调试语句<code>debugger</code>等。</li><li>注释的语法和C语言一样。</li><li>建议每个语句结束都加分号，否则可能会出现奇奇怪怪的BUG。（后期使用框架可以不用加分号）</li><li>程序会忽略空白，合适的空白与缩进可以保持良好的代码结构。</li></ul><h2><span id="per-bian-liang">二、变量</span><a href="#per-bian-liang" class="header-anchor">#</a></h2><p>变量是一种用来储存数据的可变容器，是数据的命名储存，通常情况下由<strong>标识符</strong>和<strong>值</strong>构成。</p><h3><span id="p1-bian-liang-de-ming-ming-gui-fan">1、变量的命名规范</span><a href="#p1-bian-liang-de-ming-ming-gui-fan" class="header-anchor">#</a></h3><ul><li>由数字，字母，下划线，美元符组成。</li><li>不允许数字开头。</li><li>不能和关键字、保留字同名。</li><li>严格区分大小写。</li><li>变量的起名要有意义。避免使用拼音等。</li></ul><h3><span id="p2-var">2、var</span><a href="#p2-var" class="header-anchor">#</a></h3><h3><span id="p3-let-es6">3、let <code>ES6</code></span><a href="#p3-let-es6" class="header-anchor">#</a></h3><p>块级作用域。</p><h3><span id="p4-const-es6">4、const <code>ES6</code></span><a href="#p4-const-es6" class="header-anchor">#</a></h3><h2><span id="psan-yan-ge-mo-shi">三、严格模式</span><a href="#psan-yan-ge-mo-shi" class="header-anchor">#</a></h2><p>开启严格模式 <code>&quot;use strict&quot;</code></p><p>严格模式的特点：</p><pre class="line-numbers language-js" data-language="js"><code class="language-js"><span class="token comment">// 变量需声明才能使用</span><span class="token keyword">try</span> <span class="token punctuation">&#123;</span>    a <span class="token operator">=</span> <span class="token number">1</span><span class="token punctuation">;</span>    console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>a<span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token punctuation">&#125;</span> <span class="token keyword">catch</span> <span class="token punctuation">(</span>error<span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>    console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">"变量需声明才能使用"</span><span class="token punctuation">)</span><span class="token punctuation">&#125;</span>   <span class="token comment">// 函数全局调用的时候 this 指向 undefined</span><span class="token keyword">function</span> <span class="token function">fn</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">&#123;</span>    console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">)</span><span class="token punctuation">&#125;</span><span class="token function">fn</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token comment">// undefined</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>]]></content>
      
      
      <categories>
          
          <category> 2201：ES基础 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> JavaScript </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>ES 开始</title>
      <link href="/220101/"/>
      <url>/220101/</url>
      
        <content type="html"><![CDATA[<h1><span id="es-kai-shi">ES 开始</span><a href="#es-kai-shi" class="header-anchor">#</a></h1><p>JavaScript 最初的目的是为了赋予网页生命。<br>这种编程语言我们称之为<strong>脚本</strong>。它们可以写在 HTML 中，在页面加载的时候会自动执行。脚本作为纯文本存在和执行。它们不需要特殊的准备或编译即可运行。</p><ul><li>1995 JavaScript、JScript 诞生</li><li>1997 ECMA 给 JS 制定了标准<strong>ECMA-262</strong>，命名为<strong>ECMAScript</strong>，即 ES1.0。<strong>ES 是 JS 的规范标准，JS 是 ES 的实现。</strong></li><li>1999 发布 ES3，成为 JS 通用标准。</li><li>2009 发布 ES5。</li><li>2013 ES6 草案发布（其实就是之前不被接受的 ES4 激进方案）</li><li>2015 发布<strong>ES6</strong>，即 ES2015，从此 JS 新版本按 <code>ES+年份</code>形式发布。ES6 是一个历史名词，也是一个泛指，代表 ES6 以后的新一代标准。</li></ul><h2><span id="pyi-te-dian">一、特点</span><a href="#pyi-te-dian" class="header-anchor">#</a></h2><p><strong>弱类型</strong> 数据类型不固定，可以随时改变。<br><strong>解释型</strong> 解释型是一行一行解释运行，编译型是需要整体编译。<br><strong>脚本语言</strong> 脚本是需要载体运行的。<br><strong>基于对象/原型</strong> 只有对象，没有类，对象继承对象，而不是类继承类。<strong>原型对象</strong>是基于原型语言的核心概念。原型对象是新对象的模板，它将自身的属性共享给新对象。一个对象不但可以享有自己创建时和运行时定义的属性，而且可以享有原型对象的属性。</p><h2><span id="per-zu-cheng">二、组成</span><a href="#per-zu-cheng" class="header-anchor">#</a></h2><p>JavaScript 由 ECMAScript、BOM、DOM三部分组成，其中 ECMAScript （简称ES）是JS的核心语法规范。</p><ul><li><strong>ECMAScript</strong> 核心语法，简称 ES。</li><li><strong>DOM</strong> Document Object Model 文档对象模型。</li><li><strong>BOM</strong> Browser Object Model 浏览器对象模型。</li></ul><h2><span id="psan-wang-ye-zhong-shi-yong-js-de-fang-fa">三、网页中使用 JS 的方法</span><a href="#psan-wang-ye-zhong-shi-yong-js-de-fang-fa" class="header-anchor">#</a></h2><p>（1）页面嵌入（常用）</p><pre class="line-numbers language-html" data-language="html"><code class="language-html"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>script</span><span class="token punctuation">></span></span><span class="token script"><span class="token language-javascript"><span class="token comment">// 这里写JS代码</span></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>script</span><span class="token punctuation">></span></span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span></span></code></pre><p>（2）行内写法（几乎不用，局限性大，代码分离性差，可读性不强）<br>（3）外部文件引入（常用）</p><blockquote><p><code>script</code> 标签属性</p><ul><li><code>src</code> 指定外部脚本的 URI，如果设置了，标签内容会忽</li><li><code>type</code> 指定脚本的语言，默认为 JS。</li><li><code>async</code> 规定一旦脚本可用，则会异步执行。</li><li><code>defer</code> 是否对脚本执行进行延迟。</li></ul></blockquote><pre class="line-numbers language-html" data-language="html"><code class="language-html"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>script</span> <span class="token attr-name">src</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>链接<span class="token punctuation">"</span></span><span class="token punctuation">></span></span><span class="token script"></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>script</span><span class="token punctuation">></span></span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><h2><span id="psi-zai-wang-ye-zhong-diao-shi-fang-fa">四、在网页中调试方法</span><a href="#psi-zai-wang-ye-zhong-diao-shi-fang-fa" class="header-anchor">#</a></h2><ul><li>控制台日志: <code>console.log()</code>、<code>console.dir()</code></li><li>系统对话框（弹窗）: <code>alert()</code>、<code>confirm()</code>、<code>prompt()</code></li><li>直接显示在文档上: <code>document.write</code></li></ul>]]></content>
      
      
      <categories>
          
          <category> 2201：ES基础 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> JavaScript </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>微信小程序</title>
      <link href="/270201/"/>
      <url>/270201/</url>
      
        <content type="html"><![CDATA[<h1><span id="wei-xin-xiao-cheng-xu">微信小程序</span><a href="#wei-xin-xiao-cheng-xu" class="header-anchor">#</a></h1><p>2017年1月9日微信上线小程序。</p><p>要求：压缩包不能超过2M。</p><p>项目目录分析</p><pre class="line-numbers language-none"><code class="language-none">app ├── pages               # 所有页面 ├── app.js              # App(&#123;&#125;) 注册小程序 ├── app.wxss            # 全局、公共样式 ├── app.json            # page注册路由 window样式 tabbar配置 分包&#x2F;预加载 ├── sitemap.json        # 项目索引规则 └── project.config.json # 项目声明和配置：小程序id必须配置（不是uni-app id）<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>]]></content>
      
      
      <categories>
          
          <category> 2702：微信小程序 </category>
          
      </categories>
      
      
    </entry>
    
    
    
    <entry>
      <title>AntV</title>
      <link href="/210902/"/>
      <url>/210902/</url>
      
        <content type="html"><![CDATA[<h1><span id="antv">AntV</span><a href="#antv" class="header-anchor">#</a></h1><p>阿里出品</p><p>文档：<a href="https://antv.gitee.io/zh">https://antv.gitee.io/zh</a></p><p>待更新。</p>]]></content>
      
      
      <categories>
          
          <category> 2109：数据可视化 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 数据可视化 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>英语</title>
      <link href="/510401/"/>
      <url>/510401/</url>
      
        <content type="html"><![CDATA[]]></content>
      
      
      <categories>
          
          <category> 5104：英语 </category>
          
      </categories>
      
      
    </entry>
    
    
    
    <entry>
      <title>错误文档</title>
      <link href="/280301/"/>
      <url>/280301/</url>
      
        <content type="html"><![CDATA[<h1><span id="cuo-wu-wen-dang">错误文档</span><a href="#cuo-wu-wen-dang" class="header-anchor">#</a></h1><h2><span id="p2020-nian-12-yue">2020年12月</span><a href="#p2020-nian-12-yue" class="header-anchor">#</a></h2><p>1、<code>electron</code> 下载过慢的问题</p><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash">npm i -g cross-envcross-env ELECTRON_MIRROR&#x3D;&quot;https:&#x2F;&#x2F;npm.taobao.org&#x2F;mirrors&#x2F;electron&#x2F;&quot;  npm i -g electron@(你要下载的版本)<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span></span></code></pre><p>2、<code>node-sass</code> 编译环境的问题</p><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash">npm install --global --production windows-build-toolsnpm install node-sass<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre><h2><span id="p2021-nian-01-yue">2021年01月</span><a href="#p2021-nian-01-yue" class="header-anchor">#</a></h2><p>1、高德地图无法添加标记的问题（部分可以，部分不行）</p><p>问题：<code>AMap.LanLat(longitude, latitude)</code> 传递的经度、纬度参数不能为空。</p><p>解决：</p><pre class="line-numbers language-js" data-language="js"><code class="language-js"><span class="token keyword">if</span><span class="token punctuation">(</span> <span class="token function">isNaN</span><span class="token punctuation">(</span>jsonData<span class="token punctuation">.</span>latitude<span class="token punctuation">)</span> <span class="token operator">||</span> <span class="token function">isNaN</span><span class="token punctuation">(</span>jsonData<span class="token punctuation">.</span>longitude<span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token keyword">return</span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre>]]></content>
      
      
      <categories>
          
          <category> 2803：前端调试 </category>
          
      </categories>
      
      
    </entry>
    
    
    
    <entry>
      <title>ECharts</title>
      <link href="/210901/"/>
      <url>/210901/</url>
      
        <content type="html"><![CDATA[<h1><span id="echarts">ECharts</span><a href="#echarts" class="header-anchor">#</a></h1><p>百度出品</p><p>文档：<a href="https://echarts.apache.org/examples">https://echarts.apache.org/examples</a></p><h2><span id="pyi-kai-shi">一、开始</span><a href="#pyi-kai-shi" class="header-anchor">#</a></h2><p><code>npm install echarts --save</code></p><h2><span id="per-shi-yong-bu-zou">二、使用步骤</span><a href="#per-shi-yong-bu-zou" class="header-anchor">#</a></h2><ol><li>引入</li><li>创建一个具有宽高的容器</li><li>创建一个实例，绑定容器节点，并调用 <code>echarts.init</code> 方法</li><li>创建一个配置对象 <code>option</code> ，修改配置</li><li>通过这个实例 <code>.setOption(option)</code> 方法，传入配置对象</li></ol><h2><span id="psan-tu-biao-lei-xing">三、图表类型</span><a href="#psan-tu-biao-lei-xing" class="header-anchor">#</a></h2><ul><li><code>bar</code> 柱状图</li><li><code>line</code> 折线图</li><li><code>pie</code> 饼图</li><li><code>gauge</code> 仪表盘</li><li><code>scatter</code> 散点图</li></ul><h2><span id="psi-chang-jian-pei-zhi">四、常见配置</span><a href="#psi-chang-jian-pei-zhi" class="header-anchor">#</a></h2><p>（待更新）</p>]]></content>
      
      
      <categories>
          
          <category> 2109：数据可视化 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 数据可视化 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>防抖与节流</title>
      <link href="/240501/"/>
      <url>/240501/</url>
      
        <content type="html"><![CDATA[<h1><span id="fang-dou-yu-jie-liu">防抖与节流</span><a href="#fang-dou-yu-jie-liu" class="header-anchor">#</a></h1><h2><span id="pyi-jie-liu">一、节流</span><a href="#pyi-jie-liu" class="header-anchor">#</a></h2><p>防抖就是防止把一次事件触发多次，一般用在登录、发短信、调整窗口大小，文本编辑器的实时保存。<br>假设有一个场景，滚动就会发起网络请求，但是我们不希望用户在滚动过程中一直发请求，而是隔一段时间发一次，对于这种情况，我们可以使用节流。</p><h2><span id="per-fang-dou">二、防抖</span><a href="#per-fang-dou" class="header-anchor">#</a></h2><p>节流就是控制事件的发生频率，一般用在滚动事件，播放器进度条计算，实时搜索请求。<br>假设有一个按钮，用户点击一次就会触发网络请求，但是我们不希望用户一直点这个按钮发请求，而是这个用户点击这个按钮一段时间内没有再去点击才去发请求，对于这种情况，我们可以使用防抖。</p>]]></content>
      
      
      <categories>
          
          <category> 2405：前端性能优化 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> JavaScript </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Tree Shaking</title>
      <link href="/240302/"/>
      <url>/240302/</url>
      
        <content type="html"><![CDATA[<h1><span id="tree-shaking">Tree-Shaking</span><a href="#tree-shaking" class="header-anchor">#</a></h1><p>俗称树摇，摇树。作用是清理无用代码。<br>webpack 最新版本在生产环境会自动开启。</p>]]></content>
      
      
      <categories>
          
          <category> 2403：RollupJS </category>
          
      </categories>
      
      
        <tags>
            
            <tag> rollup </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>前端工程化</title>
      <link href="/240101/"/>
      <url>/240101/</url>
      
        <content type="html"><![CDATA[<h1><span id="qian-duan-gong-cheng-hua">前端工程化</span><a href="#qian-duan-gong-cheng-hua" class="header-anchor">#</a></h1><p>前端工程化就是为了让前端开发可以自成体系。<br>可以从 模块化、组件化、规范化、自动化 四个方面来思考。</p><h2><span id="pcan-kao">参考</span><a href="#pcan-kao" class="header-anchor">#</a></h2><ul><li><a href="https://www.jianshu.com/p/88ed70476adb">https://www.jianshu.com/p/88ed70476adb</a></li></ul>]]></content>
      
      
      <categories>
          
          <category> 2401：前端工程化 </category>
          
      </categories>
      
      
    </entry>
    
    
    
    <entry>
      <title>Vue 3</title>
      <link href="/250701/"/>
      <url>/250701/</url>
      
        <content type="html"><![CDATA[<h1><span id="vue-3">Vue 3</span><a href="#vue-3" class="header-anchor">#</a></h1><blockquote><p>前置知识：<code>Vue基础</code> <code>Vue高级</code> <code>TypeScript</code></p></blockquote><h2><span id="pcan-kao">参考</span><a href="#pcan-kao" class="header-anchor">#</a></h2><ul><li><a href="https://juejin.cn/post/6897030228867022856">https://juejin.cn/post/6897030228867022856</a></li></ul>]]></content>
      
      
      <categories>
          
          <category> 2507：Vue3 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> JavaScript </tag>
            
            <tag> Vue </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Vue + ElementUI</title>
      <link href="/250501/"/>
      <url>/250501/</url>
      
        <content type="html"><![CDATA[<h1><span id="element-ui">Element UI</span><a href="#element-ui" class="header-anchor">#</a></h1><p>作者：饿了么团队<br>文档：<a href="https://element.eleme.cn/#/zh-CN">https://element.eleme.cn/#/zh-CN</a><br>适用技术栈：Vue</p><h2><span id="pyi-ru-shou">一、入手</span><a href="#pyi-ru-shou" class="header-anchor">#</a></h2><h2><span id="per-zu-jian">二、组件</span><a href="#per-zu-jian" class="header-anchor">#</a></h2><p>使用比较多的组件：标签页（Tabs），表格，按钮，开关</p>]]></content>
      
      
      <categories>
          
          <category> 2505：Vue+ElementUI </category>
          
      </categories>
      
      
        <tags>
            
            <tag> JavaScript </tag>
            
            <tag> Vue </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>NodeJS</title>
      <link href="/220501/"/>
      <url>/220501/</url>
      
        <content type="html"><![CDATA[<h1><span id="node-js">Node.js</span><a href="#node-js" class="header-anchor">#</a></h1><p>Node.js 是一个基于 ChromeV8 引擎的 JS 运行环境。</p><p><a href="http://nodejs.cn/download/">下载</a></p><h2><span id="pyi-te-xing">一、特性</span><a href="#pyi-te-xing" class="header-anchor">#</a></h2><p>优点</p><ul><li>异步的非阻塞（处理高并发）</li><li>事件循环机制</li><li>单线程</li><li>跨平台</li><li>事件驱动</li></ul><p>主要应用场景</p><ul><li>中间层、RESTful API</li><li>I/O 密集型的领域，如服务端渲染，前端项目构建</li><li>低延迟的网络应用，如即时聊天</li></ul><h2><span id="per-rerl">二、RERL</span><a href="#per-rerl" class="header-anchor">#</a></h2><p>在命令行窗口运行 JS 程序。</p><h2><span id="psan-global-dui-xiang">三、<code>global</code> 对象</span><a href="#psan-global-dui-xiang" class="header-anchor">#</a></h2><p>全局对象。</p>]]></content>
      
      
      <categories>
          
          <category> 2205：NodeJS </category>
          
      </categories>
      
      
        <tags>
            
            <tag> JavaScript </tag>
            
            <tag> Node </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>解构赋值</title>
      <link href="/220401/"/>
      <url>/220401/</url>
      
        <content type="html"><![CDATA[<h1><span id="jie-gou-fu-zhi">解构赋值</span><a href="#jie-gou-fu-zhi" class="header-anchor">#</a></h1><p>基础使用</p><pre class="line-numbers language-js" data-language="js"><code class="language-js"><span class="token comment">// 字符串解构</span><span class="token keyword">const</span> <span class="token punctuation">[</span>a<span class="token punctuation">,</span> b<span class="token punctuation">,</span> c<span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token string">"qwq"</span><span class="token comment">// 数组解构</span><span class="token keyword">const</span> <span class="token punctuation">[</span>a<span class="token punctuation">,</span> b<span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">2</span><span class="token punctuation">]</span><span class="token comment">// 对象解构</span><span class="token keyword">const</span> <span class="token punctuation">&#123;</span>x<span class="token punctuation">,</span> y<span class="token punctuation">&#125;</span> <span class="token operator">=</span> <span class="token punctuation">&#123;</span> x<span class="token operator">:</span><span class="token number">1</span><span class="token punctuation">,</span> y<span class="token operator">:</span><span class="token number">2</span> <span class="token punctuation">&#125;</span><span class="token comment">// 默认值</span><span class="token keyword">const</span> <span class="token punctuation">&#123;</span>x<span class="token punctuation">,</span> y <span class="token operator">=</span> <span class="token number">2</span><span class="token punctuation">&#125;</span> <span class="token operator">=</span> <span class="token punctuation">&#123;</span> x<span class="token operator">:</span><span class="token number">1</span> <span class="token punctuation">&#125;</span><span class="token comment">// 改名</span><span class="token keyword">const</span> <span class="token punctuation">&#123;</span>x<span class="token punctuation">,</span> y<span class="token operator">:</span> z<span class="token punctuation">&#125;</span> <span class="token operator">=</span> <span class="token punctuation">&#123;</span>x<span class="token punctuation">,</span> y<span class="token punctuation">&#125;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>数组的解构赋值</p><pre class="line-numbers language-js" data-language="js"><code class="language-js"><span class="token comment">// 一一对应</span><span class="token keyword">const</span> <span class="token punctuation">[</span>x1<span class="token punctuation">,</span> x2<span class="token punctuation">,</span> x3<span class="token punctuation">,</span> x4<span class="token punctuation">]</span> <span class="token operator">=</span> arr<span class="token punctuation">;</span><span class="token comment">// 解构失败返回 undefined</span><span class="token comment">// 允许不完全解构</span><span class="token comment">// 可以设置默认值(没有对应关系时)</span><span class="token keyword">const</span> <span class="token punctuation">[</span>x1<span class="token punctuation">,</span> x2<span class="token operator">=</span><span class="token string">"qwq"</span><span class="token punctuation">,</span> x3<span class="token punctuation">,</span> x4<span class="token punctuation">]</span> <span class="token operator">=</span> arr<span class="token punctuation">;</span><span class="token comment">// 想把后面没有解构的值保存起来(rest参数必须是最后)</span><span class="token keyword">const</span> <span class="token punctuation">[</span>x1<span class="token punctuation">,</span> x2<span class="token punctuation">,</span> <span class="token operator">...</span>x<span class="token punctuation">]</span> <span class="token operator">=</span> arr<span class="token punctuation">;</span><span class="token comment">// 多维数组保证一一对应也能解构</span><span class="token comment">// 交换两个变量</span><span class="token keyword">let</span> a <span class="token operator">=</span> <span class="token number">1</span><span class="token punctuation">;</span><span class="token keyword">let</span> b <span class="token operator">=</span> <span class="token number">2</span><span class="token punctuation">;</span><span class="token punctuation">[</span>b<span class="token punctuation">,</span> a<span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token punctuation">[</span>a<span class="token punctuation">,</span> b<span class="token punctuation">]</span><span class="token punctuation">;</span><span class="token comment">// 例子</span><span class="token keyword">let</span> <span class="token punctuation">[</span>foo <span class="token operator">=</span> hoo<span class="token punctuation">,</span> hoo <span class="token operator">=</span> <span class="token number">2</span><span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">;</span><span class="token comment">// 报错 cannot access ‘hoo' before initialization</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>对象的解构赋值（用的很多）</p><pre class="line-numbers language-js" data-language="js"><code class="language-js"><span class="token comment">// 对象没有顺序，直接取 对应的方法 （保证同名，key）</span><span class="token keyword">const</span><span class="token punctuation">&#123;</span>    log<span class="token punctuation">&#125;</span> <span class="token operator">=</span> console<span class="token punctuation">;</span><span class="token comment">// 如果键名key和键值value是一样的，则可以直接简写</span><span class="token keyword">const</span> obj <span class="token operator">=</span> <span class="token punctuation">&#123;</span>    hoo<span class="token operator">:</span> <span class="token string">"hoo"</span><span class="token punctuation">,</span>    foo<span class="token operator">:</span> <span class="token string">"foo"</span><span class="token punctuation">&#125;</span><span class="token keyword">const</span> obj <span class="token operator">=</span> <span class="token punctuation">&#123;</span>    hoo<span class="token punctuation">,</span>    foo<span class="token punctuation">&#125;</span><span class="token comment">// 也能设置默认值</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>常用场景</p><pre class="line-numbers language-js" data-language="js"><code class="language-js"><span class="token comment">// 交换变量</span><span class="token punctuation">[</span>x<span class="token punctuation">,</span> y<span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token punctuation">[</span>y<span class="token punctuation">,</span> x<span class="token punctuation">]</span><span class="token comment">// 按需使用模块</span><span class="token keyword">const</span> <span class="token punctuation">&#123;</span> readFile <span class="token punctuation">&#125;</span> <span class="token operator">=</span> <span class="token function">require</span><span class="token punctuation">(</span><span class="token string">'fs'</span><span class="token punctuation">)</span><span class="token comment">// 函数传参</span><span class="token comment">// 待更新</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><pre class="line-numbers language-js" data-language="js"><code class="language-js"><span class="token comment">// 1、函数多个返回值返回</span><span class="token keyword">function</span> <span class="token function">fn</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">&#123;</span>    <span class="token keyword">return</span> <span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">,</span><span class="token number">2</span><span class="token punctuation">,</span><span class="token number">3</span><span class="token punctuation">,</span><span class="token number">4</span><span class="token punctuation">]</span><span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span class="token keyword">let</span> <span class="token punctuation">[</span>a<span class="token punctuation">,</span>b<span class="token punctuation">,</span>c<span class="token punctuation">,</span>d<span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token function">fn</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>a<span class="token punctuation">,</span>b<span class="token punctuation">,</span>c<span class="token punctuation">,</span>d<span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token keyword">function</span> <span class="token function">fn</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>    <span class="token keyword">return</span> <span class="token punctuation">&#123;</span> foo<span class="token operator">:</span> <span class="token string">"hello"</span><span class="token punctuation">,</span> hoo<span class="token operator">:</span> <span class="token string">"word"</span> <span class="token punctuation">&#125;</span><span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span class="token keyword">let</span> <span class="token punctuation">&#123;</span> foo <span class="token punctuation">&#125;</span> <span class="token operator">=</span> <span class="token function">fn</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>foo<span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment">// 2、函数传参数</span><span class="token keyword">function</span> <span class="token function">fn</span><span class="token punctuation">(</span><span class="token parameter"><span class="token punctuation">[</span>x<span class="token punctuation">,</span> y<span class="token punctuation">,</span> z<span class="token punctuation">]</span></span><span class="token punctuation">)</span><span class="token punctuation">&#123;</span>    console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token punctuation">[</span>x<span class="token punctuation">,</span> y<span class="token punctuation">,</span> z<span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span class="token keyword">function</span> <span class="token function">fn2</span><span class="token punctuation">(</span><span class="token parameter"><span class="token punctuation">&#123;</span> x<span class="token punctuation">,</span> y<span class="token punctuation">,</span> z <span class="token punctuation">&#125;</span></span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>   console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>x<span class="token punctuation">,</span> y<span class="token punctuation">,</span> z<span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span class="token comment">//3.json数据的提取</span><span class="token keyword">let</span> json <span class="token operator">=</span> <span class="token punctuation">&#123;</span>    name<span class="token operator">:</span> <span class="token string">"lily"</span><span class="token punctuation">,</span>    sex<span class="token operator">:</span> <span class="token string">"nv"</span><span class="token punctuation">,</span>    age<span class="token operator">:</span> <span class="token number">18</span><span class="token punctuation">&#125;</span><span class="token keyword">let</span> <span class="token punctuation">&#123;</span> name<span class="token punctuation">,</span> age<span class="token punctuation">,</span> sex <span class="token punctuation">&#125;</span> <span class="token operator">=</span> json<span class="token punctuation">;</span>console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>name<span class="token punctuation">,</span> age<span class="token punctuation">,</span> sex<span class="token punctuation">)</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>]]></content>
      
      
      <categories>
          
          <category> 2204：ES6 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> JavaScript </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>亲密关系</title>
      <link href="/630201/"/>
      <url>/630201/</url>
      
        <content type="html"><![CDATA[<h1><span id="qin-mi-guan-xi">亲密关系</span><a href="#qin-mi-guan-xi" class="header-anchor">#</a></h1><ul><li>男人的情感需求是信任，接纳，欣赏，崇拜，认可，鼓励。<br>女人的情感需求是关爱，理解，忠诚，尊重，体贴，安全感。</li><li>想要持续拥有感情中的幸福是一件很难的事情。可能比你在工作上获得成功还要难，所以需要你和伴侣都提升爱的能力，付出时间、精力、金钱、感情去学习提升和经营。</li><li>得不到的永远最好的。</li><li>一度追求结果，可能会适得其反。过度强求结果，是一个非常错误的恋爱观念。</li><li>虽然聊天的目的在于邀约和升级关系，但不要一味的在信息的世界里去升级关系。升级关系应该放在两人接触之后，双方感觉良好，适时且适当的升级关系。</li><li>你的自我感动和自我安慰，比又蠢又懒更致命，明明啥都没做，还在那儿觉得自己是全世界最努力的人。</li><li>拥抱可以带来阳光，温暖。<br>接近，碰触，拥抱可以增加幸福感，增强免疫力。</li><li>伴侣相处：<br>给予和索取应该平衡。<br>讲情，而不讲理，不站在道德的至高点（你总是. . . . ）<br>互相感情支持，给对方更好的安慰，提供依赖。<br>双方努力，需要双方不可避免的差异进行磨合。</li><li>在亲密关系中，你对自己的想法和行为控制力比你认为得要低得多。 尤其是一些不安全依恋风格的人，在感情中基本上处于被自己潜意识控制的状态。</li><li>我深以为然，最好的爱情状态应该是：保有自我的基础之上，拥有彼此。</li></ul><p><strong>吵架禁忌</strong></p><p>1、冷战<br>夫妻吵架，最忌讳冷暴力。你不理我，我也不理你，同住在一个屋檐下却像一个陌生人，明明有话却憋着不说。尽管没有“唇枪舌剑”，但对两人造成的伤害远比暴力要严重得多</p><p>2、翻旧账<br>吵架要一码归一码，不要总是揪着对方过去的错误不放。把陈芝麻烂谷子的事一股脑拿出来再说一遍，并不能解决现有的问题，反而还会加剧矛盾。</p><p>3、口不择言<br>人在愤怒的时候往往会说出很多伤感情的话：分手、离婚、你不如别人、你有什么用、当初真是瞎了眼才和你在一起……这些话一说出口，就会像一把尖刀插在对方的心中。给对方造成无可挽回的伤害。</p><p>4、兜圈子<br>很多夫妻在吵架中兜圈子，有问题不直说，而是希望对方猜测。但你要知道，对方并不是你肚子里的蛔虫，男女思维不同，想要解决问题就要剥离掉谩骂、羞辱的“外衣”，直接和对方划出内容重点，这样才能让对方的注意力回到事件本身。</p><p>和伴侣相处：<br>1、给予和索取应该平衡。<br>2、讲情，而不讲理，不站在道德的至高点（你总是. . . . ）。<br>3、互相感情支持，给对方更好的安慰，提供依赖。<br>4、双方努力，需要双方不可避免的差异进行磨合。</p><p>不失去自我，安全感不能从对方身上寻找。<br>不试图去改变对方。<br>不随意发脾气，不要冷战，不翻旧账。<br>不拿自己的尺子量对方。</p>]]></content>
      
      
      <categories>
          
          <category> 6302：亲密关系 </category>
          
      </categories>
      
      
    </entry>
    
    
    
    <entry>
      <title>建立知识体系</title>
      <link href="/640101/"/>
      <url>/640101/</url>
      
        <content type="html"><![CDATA[<h1><span id="jian-li-zhi-shi-ti-xi">建立知识体系</span><a href="#jian-li-zhi-shi-ti-xi" class="header-anchor">#</a></h1><h2><span id="pyi-kai-shi">一、开始</span><a href="#pyi-kai-shi" class="header-anchor">#</a></h2><p>为什么要建立知识体系？</p><ul><li>大脑的工作机制是基于索引</li><li>学那么多东西，为什么记不住，用不上？是因为你学到的都是零碎的，不成体系的。</li><li>我们给知识建立体系就是给知识建立索引，以及索引间的逻辑关系，当知识体系大厦搭建完毕以后，你就可以随意调用，只要在你知识体系涵盖的范围内，就可以任意使用。</li></ul><h2><span id="per-ru-he-jian-li-zhi-shi-ti-xi">二、如何建立知识体系</span><a href="#per-ru-he-jian-li-zhi-shi-ti-xi" class="header-anchor">#</a></h2><h3><span id="pgou-zao-zhi-shi-ti-xi-de-cai-liao">构造知识体系的材料</span><a href="#pgou-zao-zhi-shi-ti-xi-de-cai-liao" class="header-anchor">#</a></h3><p>（1）元认知（地基）</p><ul><li>能指导你思考背后的思考，指导你解释原理背后的原理。</li><li>最底层的知识，它为一切现象原理，提供最底层的解释和支撑。</li></ul><p>（2）方法（钢筋水泥）</p><ul><li>方法，套路。</li></ul><p>（3）概念（砖瓦）</p><ul><li>我们身处的世界都是由一个个概念构成的，这个时候我们理解事物的基本方式。</li><li>可以说我们认知这个世界的方式，就是在认知一个个概念，概念是组成我们思想的基本方式，你了解的概念越多，你认识这个世界的维度就会越丰富。</li></ul><p>（4）事实（边料）</p><ul><li>浩如烟海。</li><li>这些知识只在特定情况有用，大多数情况下是没有用的，所以它的可迁移能力最弱。</li></ul><h3><span id="pzhi-shi-de-ke-qian-yi">知识的可迁移</span><a href="#pzhi-shi-de-ke-qian-yi" class="header-anchor">#</a></h3><ul><li>知识的可迁移能力，就是<strong>我们学习的任何东西，都是为了实现知识的最大可迁移，我们可以从一个领域，迅速用同样的方式，进行跨界。</strong></li><li>元认知类知识最有用，迁移能力最强，但学习难度最高，而事实类知识迁移能力最弱，学习难度也是最容易的。</li></ul><h3><span id="pyuan-ren-zhi-yi-shi-cong-di-ceng-chu-fa">元认知意识 —— 从底层出发</span><a href="#pyuan-ren-zhi-yi-shi-cong-di-ceng-chu-fa" class="header-anchor">#</a></h3><h3><span id="pcong-wen-ti-xian-xiang-chu-fa">从问题、现象出发</span><a href="#pcong-wen-ti-xian-xiang-chu-fa" class="header-anchor">#</a></h3><h3><span id="pzhu-yi-shi-xiang">注意事项</span><a href="#pzhu-yi-shi-xiang" class="header-anchor">#</a></h3><ul><li><p>无用之用是为大用</p><p>很多人觉得哲学、美学、逻辑学、社会学、心理学、经济学、历史学等各大学科很高大上，很空洞，感觉学了也不能找到工作啥的，事实上恰恰相反，这些东西才是真正承载人类顶级智慧和知识的学科，你所见到的一切都是在这些底层学科之上构建而成的。</p></li><li><p>让知识间建立关系，切记一定不要孤立</p></li><li><p>寻找一切现象，填充你的知识框架：为理论找到实例，为实例提供理论。</p></li><li><p>搭建知识体系的过程一定是需要过程的</p></li></ul><h2><span id="psan-ru-he-guan-li-zhi-shi-ti-xi">三、如何管理知识体系</span><a href="#psan-ru-he-guan-li-zhi-shi-ti-xi" class="header-anchor">#</a></h2><h3><span id="pjian-li-wai-bu-zhi-shi-ku">建立外部知识库</span><a href="#pjian-li-wai-bu-zhi-shi-ku" class="header-anchor">#</a></h3><h3><span id="pdie-dai-geng-xin">迭代更新</span><a href="#pdie-dai-geng-xin" class="header-anchor">#</a></h3><h2><span id="psi-xue-yi-zhi-yong">四、学以致用</span><a href="#psi-xue-yi-zhi-yong" class="header-anchor">#</a></h2><p>知识拿去用了才有用</p><h2><span id="pcan-kao">参考</span><a href="#pcan-kao" class="header-anchor">#</a></h2><ul><li><a href="https://www.zhihu.com/question/19591121/answer/1364971134">https://www.zhihu.com/question/19591121/answer/1364971134</a></li></ul>]]></content>
      
      
      <categories>
          
          <category> 6401：知识管理 </category>
          
      </categories>
      
      
    </entry>
    
    
    
    <entry>
      <title>Electron</title>
      <link href="/270101/"/>
      <url>/270101/</url>
      
        <content type="html"><![CDATA[<h1><span id="electron">Electron</span><a href="#electron" class="header-anchor">#</a></h1><p>使用 JavaScript，HTML 和 CSS 构建跨平台的桌面应用程序（macOS / Windows / Linux）</p><p><a href="http://www.electronjs.org/">文档</a></p><p>VSCode 等应用是使用 <code>Electron</code> 搭建的。</p><h2><span id="pcan-kao">参考</span><a href="#pcan-kao" class="header-anchor">#</a></h2><ul><li><a href="https://juejin.cn/post/6844903896041652232">https://juejin.cn/post/6844903896041652232</a></li><li><a href="https://molunerfinn.com/electron-vue-1/">https://molunerfinn.com/electron-vue-1/</a></li></ul>]]></content>
      
      
      <categories>
          
          <category> 2701：Electron </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Electron </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Electron 环境配置</title>
      <link href="/210703/"/>
      <url>/210703/</url>
      
        <content type="html"><![CDATA[<h1><span id="electron-huan-jing-pei-zhi">Electron 环境配置</span><a href="#electron-huan-jing-pei-zhi" class="header-anchor">#</a></h1><h2><span id="pwindows-10">Windows 10</span><a href="#pwindows-10" class="header-anchor">#</a></h2><ul><li><a href="https://segmentfault.com/a/1190000018533945">electron打包踩过的坑总结</a></li></ul><h2><span id="pmacos-da-bao-huan-jing-pei-zhi">MacOS 打包环境配置</span><a href="#pmacos-da-bao-huan-jing-pei-zhi" class="header-anchor">#</a></h2><blockquote><p>推荐系统版本：<code>MacOS 10.14</code>，经过测试，10.15 会出现兼容性问题</p></blockquote><ol><li><p>通过 SVN 工具 <code>checkout</code> 代码到本地</p><blockquote><p>推荐用 <code>Cornerstone</code></p></blockquote></li><li><p>在官网下载并安装 Node.js</p><blockquote><p>推荐版本：<code>8.12</code></p><p>也可以安装最新稳定版本，然后通过 npm 版本切换工具 n 来切换版本</p><blockquote><p><code>sudo npm i n -g</code></p><p><code>sudo n 8.12</code></p><p><code>sudo n</code> 选择相应的版本回车即可</p></blockquote></blockquote></li><li><p>全局安装  <code>electron-builder</code></p><blockquote><p><code>sudo npm i electron-builder@20.19.2 -g</code></p><p>另外如果 <code>20.19.2</code> 不行可以换 <code>20.28.4</code> 试试</p></blockquote></li><li><p>终端进入要打包的版本目录，安装依赖</p><blockquote><p><code>cd 你的目录</code></p><p><code>sudo npm i -unsafe-perm</code></p><p>注：如果没有科学上网的话，下载 <code>electron</code> 会非常慢</p></blockquote></li><li><p>安装完依赖执行打包命令</p><blockquote><p><code>sudo npm run build:mac</code></p><p>注：这里需要科学上网，不然可能卡在 <code>downloading</code> 地方</p><p>如果失败，请进入<code>资源库/Cache/Electron</code> 删除全部内容，重新尝试打包</p><p>科学上网只要第一次就可以了，下次打包会有缓存</p></blockquote></li><li><p>下次打包之前运行</p><blockquote><p><code>sudo npm run build:clean</code></p></blockquote></li><li><p>如果出现问题，可以尝试清 npm 缓存</p><blockquote><p><code>sudo npm cache verify</code></p></blockquote><p>然后删除版本目录下面的 <code>node_modules</code> ，重新 <code>sudo npm i --unsafe-perm</code> 安装依赖</p></li></ol>]]></content>
      
      
      <categories>
          
          <category> 2701：Electron </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Electron </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>HTML &amp; 网页基础</title>
      <link href="/210101/"/>
      <url>/210101/</url>
      
        <content type="html"><![CDATA[<h1><span id="html-amp-wang-ye-ji-chu">HTML &amp; 网页基础</span><a href="#html-amp-wang-ye-ji-chu" class="header-anchor">#</a></h1><h2><span id="pyi-ji-ben-jie-gou">一、基本结构</span><a href="#pyi-ji-ben-jie-gou" class="header-anchor">#</a></h2><pre class="line-numbers language-html" data-language="html"><code class="language-html"><span class="token comment">&lt;!-- 版本声明 --></span><span class="token doctype"><span class="token punctuation">&lt;!</span><span class="token doctype-tag">DOCTYPE</span> <span class="token name">html</span><span class="token punctuation">></span></span><span class="token comment">&lt;!-- 根文档 --></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>html</span> <span class="token attr-name">lang</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>en<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>  <span class="token comment">&lt;!-- 头部 --></span>  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>head</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>meta</span> <span class="token attr-name">charset</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>utf-8<span class="token punctuation">"</span></span> <span class="token punctuation">/></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>title</span><span class="token punctuation">></span></span>标题<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>title</span><span class="token punctuation">></span></span>  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>head</span><span class="token punctuation">></span></span>  <span class="token comment">&lt;!-- 主体 --></span>  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>body</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>body</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>html</span><span class="token punctuation">></span></span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h2><span id="p1-zhu-shi">1、注释</span><a href="#p1-zhu-shi" class="header-anchor">#</a></h2><p>用<code>&lt;!-- </code>和<code>--&gt;</code>包裹起来。</p><h2><span id="p2-wen-dang-ban-ben-sheng-ming">2、文档版本声明</span><a href="#p2-wen-dang-ban-ben-sheng-ming" class="header-anchor">#</a></h2><pre class="line-numbers language-html" data-language="html"><code class="language-html"><span class="token doctype"><span class="token punctuation">&lt;!</span><span class="token doctype-tag">DOCTYPE</span> <span class="token name">html</span><span class="token punctuation">></span></span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>给浏览器声明，告诉浏览器应该按照 HTML5 的规范解析当前页面。 <strong>如果不写，浏览器就是按照自己默认的模式解析。</strong></p><p>版本声明必须写在第一行。我们不把他看做一个 html 标签，而是把它当做一个指令，并且这个指令对大小写不敏感。</p><pre class="line-numbers language-html" data-language="html"><code class="language-html"><span class="token comment">&lt;!-- html 4 的 版本说明(了解) --></span><span class="token doctype"><span class="token punctuation">&lt;!</span><span class="token doctype-tag">DOCTYPE</span> <span class="token name">html</span> <span class="token name">PUBLIC</span> <span class="token string">"-//W3C//DTD HTML 4.01 Transitional//EN"</span> <span class="token string">"http://www.w3.org/TR/html4/loose.dtd"</span><span class="token punctuation">></span></span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre><h2><span id="p3-html-head-body-biao-qian">3、html 、head、body 标签</span><a href="#p3-html-head-body-biao-qian" class="header-anchor">#</a></h2><p><code>html</code> 是一个双标签，所有网页内容全部书写在 html 标签中。<code>lang</code>就是 html 标签的属性，<code>en</code>就是<code>lang</code>属性的值，属性是对当前标签的信息的扩展。</p><p><code>head</code> 标签代表网页的头部，不会显示在网页中。主要是包含了标题，网页的描述，字符编码等等一些信息。</p><p><code>body</code> 标签是网页显示的主体内容。</p><h2><span id="p4-meta-biao-qian">4、meta 标签</span><a href="#p4-meta-biao-qian" class="header-anchor">#</a></h2><p>控制网页的<strong>元信息</strong>（信息的信息），根据属性的不同，有很多的作用。</p><h2><span id="p5-jie-jue-wang-ye-luan-ma-wen-ti">5、解决网页乱码问题</span><a href="#p5-jie-jue-wang-ye-luan-ma-wen-ti" class="header-anchor">#</a></h2><pre class="line-numbers language-html" data-language="html"><code class="language-html"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>meta</span> <span class="token attr-name">charset</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>utf-8<span class="token punctuation">"</span></span> <span class="token punctuation">/></span></span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p><code>charset</code>即字符编码。<code>utf-8</code>称作为万国码。</p><hr><p>W3C标准<br>HTML，超文本标记语言<br>XML，可标记扩展语言</p><p>网页的组成<br>结构 Structure<br>表现 Presentation<br>行为 Behavior</p><p>HTML 基本结构<br>doctype<br><code>&lt;!doctype html&gt;</code><br>html/head/body<br>title<br>meta charset<br><code>&lt;meta charset=&quot;utf-8&quot;&gt;</code><br>meta keywords<br>注释</p>]]></content>
      
      
      <categories>
          
          <category> 2101：HTML </category>
          
      </categories>
      
      
        <tags>
            
            <tag> HTML </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>C3 Transform</title>
      <link href="/210210/"/>
      <url>/210210/</url>
      
        <content type="html"><![CDATA[<h1><span id="css3-transform">CSS3：transform</span><a href="#css3-transform" class="header-anchor">#</a></h1><p><code>transforms</code> 和 <code>opacity</code> 这两个属性更改不会触发重排与重绘，它们是可以由合成器（composite）单独处理的属性。</p><h2><span id="pyi-transform-2d">一、transform 2d</span><a href="#pyi-transform-2d" class="header-anchor">#</a></h2><p>改变标签在二维平面的位置和形状。</p><p>类型</p><ul><li><code>translate</code> 移动</li><li><code>rotate</code> 旋转</li><li><code>scale</code> 缩放</li></ul><h3><span id="p1-yi-dong-translate">1. 移动 <code>translate</code></span><a href="#p1-yi-dong-translate" class="header-anchor">#</a></h3><ul><li><code>transform: translate(x, y)</code></li><li><code>transform: translateX(n)/Y(n)</code></li><li>最大的优点就是不影响其他元素的位置。</li><li>行内标签没有效果。</li></ul><h3><span id="p2-xuan-zhuan-rotate">2. 旋转 <code>rotate</code></span><a href="#p2-xuan-zhuan-rotate" class="header-anchor">#</a></h3><ul><li>单位是 <code>deg</code></li><li>正是顺时针，负是逆时针。</li><li>可以通过 <code>transform-oringin</code> 设置旋转中心点</li></ul><h3><span id="p3-suo-fang-scale">3. 缩放 <code>scale</code></span><a href="#p3-suo-fang-scale" class="header-anchor">#</a></h3><p>备注</p><ul><li>同时使用多个转换，其格式为 <code>transform: translate() rotate() scale()</code></li></ul><p>待更新。</p>]]></content>
      
      
      <categories>
          
          <category> 2102：CSS </category>
          
      </categories>
      
      
        <tags>
            
            <tag> CSS </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>CSS 选择器</title>
      <link href="/210202/"/>
      <url>/210202/</url>
      
        <content type="html"><![CDATA[<h1><span id="css-xuan-ze-qi">CSS 选择器</span><a href="#css-xuan-ze-qi" class="header-anchor">#</a></h1><p>要使用 CSS 对 HTML 页面元素实现一对一，一对多，多对一的控制，就要用到<strong>选择器</strong>。</p><h2><span id="pyi-ji-ben-xuan-ze-qi">一、基本选择器</span><a href="#pyi-ji-ben-xuan-ze-qi" class="header-anchor">#</a></h2><h3><span id="p1-yuan-su-xuan-ze-qi">1. 元素选择器</span><a href="#p1-yuan-su-xuan-ze-qi" class="header-anchor">#</a></h3><p>也叫标签选择器。</p><p>通过元素标签名字选择页面中所有这个标签的元素。</p><h3><span id="p2-lei-xuan-ze-qi">2. 类选择器</span><a href="#p2-lei-xuan-ze-qi" class="header-anchor">#</a></h3><p><code>class</code> 属性用来给元素分组，是允许多个元素拥有的，且一个元素可以拥有多个<code>class</code>。</p><p>通过 <code>.</code> + 元素的<code>class</code>属性进行选择。</p><pre class="line-numbers language-html" data-language="html"><code class="language-html"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>style</span><span class="token punctuation">></span></span><span class="token style"><span class="token language-css">  <span class="token selector">.qwq</span> <span class="token punctuation">&#123;</span>    ...  <span class="token punctuation">&#125;</span></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>style</span><span class="token punctuation">></span></span>...<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>qwq<span class="token punctuation">"</span></span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">></span></span><span class="token comment">&lt;!-- 允许书写多个类名，用空格分隔 --></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>qwq1 qwq2<span class="token punctuation">"</span></span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">></span></span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h3><span id="p3-id-xuan-ze-qi">3. id 选择器</span><a href="#p3-id-xuan-ze-qi" class="header-anchor">#</a></h3><p><code>id</code>相对<code>class</code>来说，是不允许重复的，且一个元素只能有一个id属性。</p><blockquote><p><code>id</code> 属性命名规范：</p><ul><li>以字母开头</li><li>不出现汉字、空格</li><li>不推荐带有<code>ad</code> 相关的英文单词，容易被浏览器广告过滤插件屏蔽</li><li>见名知意</li></ul></blockquote><p>通过 <code>#</code> + 元素的<code>id</code>属性进行选择。</p><pre class="line-numbers language-html" data-language="html"><code class="language-html"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>style</span><span class="token punctuation">></span></span><span class="token style"><span class="token language-css">  <span class="token selector">#qwq</span> <span class="token punctuation">&#123;</span>    ...  <span class="token punctuation">&#125;</span></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>style</span><span class="token punctuation">></span></span>...<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">id</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>qwq<span class="token punctuation">"</span></span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">></span></span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h3><span id="p4-tong-pei-fu-xuan-ze-qi">4. 通配符选择器</span><a href="#p4-tong-pei-fu-xuan-ze-qi" class="header-anchor">#</a></h3><p>表示选择所有的元素。</p><p>几乎不用，影响性能。</p><pre class="line-numbers language-css" data-language="css"><code class="language-css"><span class="token selector">*</span> <span class="token punctuation">&#123;</span>  ...<span class="token punctuation">&#125;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span></span></code></pre><h2><span id="per-guan-xi-xuan-ze-qi">二、关系选择器</span><a href="#per-guan-xi-xuan-ze-qi" class="header-anchor">#</a></h2><h3><span id="p1-qun-zu-xuan-ze-qi-bing-ji-xuan-ze-qi">1. 群组选择器（并集选择器）</span><a href="#p1-qun-zu-xuan-ze-qi-bing-ji-xuan-ze-qi" class="header-anchor">#</a></h3><p>用 <code>,</code>就能对多个选择器一起设置样式。</p><h3><span id="p2-jiao-ji-xuan-ze-qi">2. 交集选择器</span><a href="#p2-jiao-ji-xuan-ze-qi" class="header-anchor">#</a></h3><p>由两个选择器直接连接构成，其结果是选中二者各自元素范围的交集。其中第一必须是标签选择器，第二个必须是类选择器或者<code>id</code>选择器，两个选择器之间不能有空格，必须连续书写。</p><p>如：<code>p#xxx</code> 或者 <code>p.xxx</code>。</p><h3><span id="p3-zi-ji-xuan-ze-qi">3. 子级选择器</span><a href="#p3-zi-ji-xuan-ze-qi" class="header-anchor">#</a></h3><p>用<code>&gt;</code>隔开。如 <code>A&gt;B</code>，在A元素中寻找子元素是B的。</p><h3><span id="p4-hou-dai-xuan-ze-qi">4. 后代选择器</span><a href="#p4-hou-dai-xuan-ze-qi" class="header-anchor">#</a></h3><p>用空格隔开。如 <code>A B</code>，意思是在A元素中寻找后代是B的元素。</p><h3><span id="p5-xiong-di-xuan-ze-qi">5. 兄弟选择器</span><a href="#p5-xiong-di-xuan-ze-qi" class="header-anchor">#</a></h3><p>相邻兄弟选择器 <code>A+B</code>，意思是在A元素下紧贴这A的并且是B才能被选中。</p><p>通用兄弟选择器 <code>A~B</code>，在A元素下边的兄弟元素，并且是B就能被选中。</p><h2><span id="psan-shu-xing-xuan-ze-qi">三、属性选择器</span><a href="#psan-shu-xing-xuan-ze-qi" class="header-anchor">#</a></h2><table><thead><tr><th><strong>选择器</strong></th><th><strong>描述</strong></th></tr></thead><tbody><tr><td><code>E[attr]</code></td><td>有属性<code>attr</code>的所有E元素</td></tr><tr><td><code>E[attr='val']</code></td><td>属性<code>attr</code>的值是<code>val</code>的元素</td></tr><tr><td><code>E[attr^='val']</code></td><td>属性<code>attr</code>的值以<code>val</code>开头的元素</td></tr><tr><td><code>E[attr$='val']</code></td><td>属性<code>attr</code>的值以<code>val</code>结尾的元素</td></tr><tr><td><code>E[attr*='val']</code></td><td>属性<code>attr</code>的值包含<code>val</code>字符串的元素</td></tr></tbody></table><h2><span id="psi-wei-lei-xuan-ze-qi">四、伪类选择器</span><a href="#psi-wei-lei-xuan-ze-qi" class="header-anchor">#</a></h2><h3><span id="p1-dong-tai-wei-lei-xuan-ze-qi">1. 动态伪类选择器</span><a href="#p1-dong-tai-wei-lei-xuan-ze-qi" class="header-anchor">#</a></h3><ul><li>锚点伪类：<code>link</code>、<code>visited</code></li><li>用户行为伪类：<code>hover</code>、<code>active</code>、<code>focus</code></li><li>目标伪类：<code>target</code>（IE9及以上）</li></ul><h3><span id="p2-zhuang-tai-wei-lei-xuan-ze-qi">2. 状态伪类选择器</span><a href="#p2-zhuang-tai-wei-lei-xuan-ze-qi" class="header-anchor">#</a></h3><table><thead><tr><th><strong>选择器</strong></th><th><strong>描述</strong></th></tr></thead><tbody><tr><td><code>E:enabled</code></td><td>匹配表单中可用的元素</td></tr><tr><td><code>E:disabled</code></td><td>匹配表单中禁用的元素</td></tr><tr><td><code>E:checked</code></td><td>匹配表单中被选中的<code>radio</code>（单选框）或<code>checkbox</code>（复选框）元素</td></tr></tbody></table><h3><span id="p3-jie-gou-xing-wei-lei-xuan-ze-qi">3. 结构性伪类选择器</span><a href="#p3-jie-gou-xing-wei-lei-xuan-ze-qi" class="header-anchor">#</a></h3><table><thead><tr><th><strong>选择器</strong></th><th><strong>描述</strong></th></tr></thead><tbody><tr><td><code>E:first-child</code></td><td>选择第一个子元素E</td></tr><tr><td><code>E:last-child</code></td><td>选择最后一个子元素E</td></tr><tr><td><code>E:nth-child(n)</code></td><td>选择一个或多个特定的子元素 （第一个编号为1）</td></tr><tr><td><code>E:nth-last-child(n)</code></td><td>选择一个或多个特定的子元素，从最后一个子元素开始算</td></tr><tr><td><code>E:only-child</code></td><td>匹配父元素下仅有的一个子元素</td></tr><tr><td><code>E:empty</code></td><td>匹配一个不包含任何子元素的元素 ( 文本节点也被看作子元素 )</td></tr><tr><td><code>E:not(s)</code></td><td>匹配不符合当前选择器的任何元素( 反选 )</td></tr></tbody></table><h2><span id="pwu-wei-yuan-su-xuan-ze-qi">五、伪元素选择器</span><a href="#pwu-wei-yuan-su-xuan-ze-qi" class="header-anchor">#</a></h2><p><code>:before</code></p><p><code>:after</code></p><p>待更新。</p><h2><span id="pliu-xuan-ze-qi-de-you-xian-ji-yu-quan-chong">六、选择器的优先级与权重</span><a href="#pliu-xuan-ze-qi-de-you-xian-ji-yu-quan-chong" class="header-anchor">#</a></h2><h3><span id="p1-important">1. <code>!important</code></span><a href="#p1-important" class="header-anchor">#</a></h3><p>提高指定样式规则的优先级为最高优先级。</p><p>写在定义的最后面。如：</p><pre class="line-numbers language-css" data-language="css"><code class="language-css"><span class="token selector">.xxx</span> <span class="token punctuation">&#123;</span>  <span class="token property">color</span><span class="token punctuation">:</span> #fff <span class="token important">!important</span><span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span></span></code></pre><h3><span id="p2-you-xian-ji-shun-xu">2. 优先级顺序</span><a href="#p2-you-xian-ji-shun-xu" class="header-anchor">#</a></h3><p>从上到下，依次增加。</p><ul><li>默认 / 继承（<code>inherit</code>）的样式</li><li>通配符</li><li>标签选择器</li><li>类选择器</li><li><code>id</code> 选择器</li><li>行内书写的样式</li><li><code>!important</code></li></ul><p>当优先级相同时，后写的样式优先级更高。</p><h3><span id="p3-quan-chong-ji-suan">3. 权重计算</span><a href="#p3-quan-chong-ji-suan" class="header-anchor">#</a></h3><table><thead><tr><th>类型</th><th>优先级权重</th></tr></thead><tbody><tr><td><code>!important</code></td><td>∞</td></tr><tr><td>行内书写</td><td>1000</td></tr><tr><td><code>id</code> 选择器</td><td>100</td></tr><tr><td>类选择器、伪类选择器、属性选择器</td><td>10</td></tr><tr><td>标签选择器、伪元素选择器</td><td>1</td></tr></tbody></table><p>待更新。</p>]]></content>
      
      
      <categories>
          
          <category> 2102：CSS </category>
          
      </categories>
      
      
        <tags>
            
            <tag> CSS </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>CSS 开始</title>
      <link href="/210201/"/>
      <url>/210201/</url>
      
        <content type="html"><![CDATA[<h1><span id="css-kai-shi">CSS 开始</span><a href="#css-kai-shi" class="header-anchor">#</a></h1><p>CSS，即 Cascading Style Sheets，层叠样式表。</p><p>具有：</p><ul><li>像素级精确控制。</li><li>将内容和表现形式分离。</li><li>层叠特性。</li></ul><h2><span id="pyi-ji-ben-yu-ju">一、基本语句</span><a href="#pyi-ji-ben-yu-ju" class="header-anchor">#</a></h2><p>通常分为三部分：选择器，属性，属性值。</p><pre class="line-numbers language-css" data-language="css"><code class="language-css">       <span class="token selector">属性      分号.box</span> <span class="token punctuation">&#123;</span> <span class="token property">width</span><span class="token punctuation">:</span>10px<span class="token punctuation">;</span>  <span class="token property">height</span><span class="token punctuation">:</span>20px<span class="token punctuation">;</span> <span class="token punctuation">&#125;</span>  选择器        属性值  可以写多个<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span></span></code></pre><h2><span id="per-shi-yong-fang-shi">二、使用方式</span><a href="#per-shi-yong-fang-shi" class="header-anchor">#</a></h2><h3><span id="p1-nei-lian-shi">1. 内联式</span><a href="#p1-nei-lian-shi" class="header-anchor">#</a></h3><p>一般不推荐使用。</p><pre class="line-numbers language-html" data-language="html"><code class="language-html"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span><span class="token style-attr language-css"><span class="token attr-name"> <span class="token attr-name">style</span></span><span class="token punctuation">="</span><span class="token attr-value"><span class="token property">width</span><span class="token punctuation">:</span>10px<span class="token punctuation">;</span> <span class="token property">height</span><span class="token punctuation">:</span>10px<span class="token punctuation">;</span></span><span class="token punctuation">"</span></span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">></span></span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>特点：</p><ul><li>优先级高</li><li>臃肿，代码冗余（不能复用）</li><li>结构和样式没有分离，不方便维护</li></ul><h3><span id="p2-tou-bu-yin-ru">2. 头部引入</span><a href="#p2-tou-bu-yin-ru" class="header-anchor">#</a></h3><p>常用。</p><pre class="line-numbers language-html" data-language="html"><code class="language-html"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>head</span><span class="token punctuation">></span></span>  ...  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>style</span><span class="token punctuation">></span></span><span class="token style"><span class="token language-css">    <span class="token selector">div</span> <span class="token punctuation">&#123;</span>      <span class="token property">width</span><span class="token punctuation">:</span> 10px<span class="token punctuation">;</span>      <span class="token property">height</span><span class="token punctuation">:</span> 10px<span class="token punctuation">;</span>    <span class="token punctuation">&#125;</span>  </span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>style</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>head</span><span class="token punctuation">></span></span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>特点：</p><ul><li>方便维护和修改</li><li>样式和结构分离</li></ul><h3><span id="p3-wai-bu-yin-ru">3. 外部引入</span><a href="#p3-wai-bu-yin-ru" class="header-anchor">#</a></h3><p>（1）<code>link</code> 方式</p><pre class="line-numbers language-html" data-language="html"><code class="language-html"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>head</span><span class="token punctuation">></span></span>  ...  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>link</span> <span class="token attr-name">rel</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>stylesheet<span class="token punctuation">"</span></span> <span class="token attr-name">type</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>text/css<span class="token punctuation">"</span></span> <span class="token attr-name">href</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>index.css<span class="token punctuation">"</span></span> <span class="token punctuation">/></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>head</span><span class="token punctuation">></span></span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span></span></code></pre><p>（2）<code>@import</code> 方式</p><p>不推荐。</p><p>（3）<code>@import</code> 和 <code>link</code> 方式引入的区别：</p><ul><li><code>link</code> 功能较多，比如可以定义 RSS，而 <code>@import</code> 只能用于加载 CSS</li><li>当解析到 <code>link</code> 时，页面会同步加载所引用的 CSS，而 <code>@import</code> 所引用的 CSS 会等页面加载完才被加载</li><li><code>link</code> 可以用 JS 动态加载 CSS，而 <code>@import</code> 不允许</li><li><code>@import</code> 在 IE5 以上才能使用</li></ul>]]></content>
      
      
      <categories>
          
          <category> 2102：CSS </category>
          
      </categories>
      
      
        <tags>
            
            <tag> CSS </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Markdown 快速上手</title>
      <link href="/181002/"/>
      <url>/181002/</url>
      
        <content type="html"><![CDATA[<ol><li><p>Markdown 文档的格式是 <code>.md</code> ，推荐使用编辑器 <code>Typora</code></p></li><li><p>标题 <code>#</code> ：</p><pre class="line-numbers language-md" data-language="md"><code class="language-md"># 一级标题## 二级标题### 三级标题<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span></span></code></pre></li><li><p>注释 <code>&gt;</code></p><blockquote><p>这是注释</p></blockquote><pre class="line-numbers language-none"><code class="language-none">&gt; 这是注释<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre></li><li><p>行内代码用 ` （Tab键上面，1键右边）包裹起来即可</p><p><code>这是行内代码</code></p></li><li><p>多行代码用 ``` 包裹起来即可，可以在第一个上面注明是什么语言</p><pre class="line-numbers language-md" data-language="md"><code class="language-md">​&#96;&#96;&#96;js这里写的是JS代码哦！​&#96;&#96;&#96;<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span></span></code></pre></li><li><p>加粗内容 <code>**</code> 包裹，如 <strong>加粗</strong></p></li><li><p>链接：<a href>链接</a></p><pre class="line-numbers language-md" data-language="md"><code class="language-md">[要显示的链接名字](链接地址)<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre></li><li><p>图片</p><pre class="line-numbers language-md" data-language="md"><code class="language-md">![](图片地址)<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre></li><li><p>无序列表，用 <code>-</code> （也可以用<code>+</code> 或者 <code>*</code> ，建议统一）</p></li><li><p>有序列表用 <code>序号.</code></p><pre class="line-numbers language-md" data-language="md"><code class="language-md">- 无序列表- 无序列表1.有序列表2.有序列表<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span></span></code></pre></li></ol>]]></content>
      
      
      <categories>
          
          <category> 1810：Markdown </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Markdown </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>用户交互心理学</title>
      <link href="/170201/"/>
      <url>/170201/</url>
      
        <content type="html"><![CDATA[<h1><span id="yong-hu-jiao-hu-xin-li-xue">用户交互心理学</span><a href="#yong-hu-jiao-hu-xin-li-xue" class="header-anchor">#</a></h1><p>心理学是为了更好地帮助用户理解产品，做出更加易用的、能为用户解决问题的产品。</p><h2><span id="pyi-xi-ke-ding-lu">一、希克定律</span><a href="#pyi-xi-ke-ding-lu" class="header-anchor">#</a></h2><blockquote><p>Hick’s Law</p></blockquote><p>增加可选项也就增加了做决定的时间。<br>建议：要减少用户心理疲惫，就要减少选项，并给出默认选项来保持简洁。<br><img src="/images/2020/%E5%B8%8C%E5%85%8B%E5%AE%9A%E5%BE%8B.png" alt></p><h2><span id="per-fei-ci-fa-ze">二、费茨法则</span><a href="#per-fei-ci-fa-ze" class="header-anchor">#</a></h2><blockquote><p>Fitt’s Law</p></blockquote><p>简单地说，越大、离得越近的物体对用户来说越容易准确地接触；速度越快、目标尺寸越小，错误率就越高；用户对尺寸大但距离远和尺寸小但距离近的元素（同等比例）完成任务的时间相等。<br>建议：将你界面上的关键元素做得越小越远，用户完成任务的时间就越长。这并不是说要把元素设计得越大、越近就越好，而是要根据实际需要来进行调整。<br>例子：比如，Chrome 浏览器的关闭键在最右上角的最边缘位置，离鼠标常规操作位置（浏览器界面偏中间）最远，用户要到达关闭的距离最远，给出了用户足够多的反应时间来做出关闭这一决定，防止误操作。再比如，打开你的百度地图，切换到驾车导航界面，是不是发现整个界面元素都比百度地图其他界面大了好多倍？利用费茨法则就容易解释了，因为开车的人并没有那么多的时间和精力去进行精细的操作，并且，司机需要一边看路一边看地图，所以这个时候大、近、准确就是界面元素设计最需要的，这种大大的风格也就不难理解了。</p><h2><span id="psan-mi-le-ding-lu">三、米勒定律</span><a href="#psan-mi-le-ding-lu" class="header-anchor">#</a></h2><blockquote><p>Miller’s Law</p></blockquote><p>人脑记忆可存储的元素块平均是7个一组。<br>建议：必要时，对元素进行分组，并且参考希克定律减少复杂性。<br>例子：在神经科学对记忆的研究里，科学家发现人脑记忆不是一次性记下很多元素，而是分组块记忆的。每个记忆组块平均最多包含7个元素。所以这对设计师在对功能架构分区的启示就可以体现在，每个分类标签（比如网页导航栏）最好不要超过7个。</p><h2><span id="psi-ge-shi-ta-xin-li-xue-wan-xing-fa-ze">四、格式塔心理学完形法则</span><a href="#psi-ge-shi-ta-xin-li-xue-wan-xing-fa-ze" class="header-anchor">#</a></h2><blockquote><p>Gestalt Principles</p></blockquote><p>相似性：相似/相同的视觉特征趋于自动产生联系。<br>相近性：相近的物体趋于组成整体。<br>持续性：一旦目光开始注意到一个物体，就会持续跟随物体移动方向移动，直到碰到另一个障碍物。<br>闭合性：当信息给出可辨识的一部分的时候，大脑会自动补全缺失的信息。</p><h2><span id="pwu-shuo-fu-yuan-ze">五、说服原则</span><a href="#pwu-shuo-fu-yuan-ze" class="header-anchor">#</a></h2><blockquote><p>Persuasion Principles from Robert Cialdini</p></blockquote><p>互惠：如果我们受到了某种恩惠，就趋于回报这种恩惠。<br>一致：我们都倾向于保持一致的人格特征、原则和价值观。<br>社会认同：当不确定要不要做的时候，我们倾向于寻求他人的做法作为指导。<br>喜好：我们更容易认同我们喜欢的人提出的要求。<br>权威：如果我们认为一个人是可信赖的专家，就更倾向认同他的观点。<br>稀缺：我们跟偏爱难以得到的东西。</p><h2><span id="pwu-mian-fei-de-mo-li">五、免费的魔力</span><a href="#pwu-mian-fei-de-mo-li" class="header-anchor">#</a></h2><p>人们总是喜欢免费的东西，哪怕这实际上会付出一定的成本。</p><blockquote><p>在《可预见的非理性》一书里面提到一个实验。受试者有两个选择。价值 $10 的亚马逊免费礼券或是花 $7 购买价值 $20 的亚马逊礼券，大部分人都选择了免费的那一款。即使后者明显会带来更多价值。</p></blockquote><p>建议：考虑利用关键词「免费 」来提升点击率和转化率。</p><h2><span id="pliu-xuan-ze-xing-wu-shi">六、选择性无视</span><a href="#pliu-xuan-ze-xing-wu-shi" class="header-anchor">#</a></h2><p>忽视与任务无关的元素。<br>建议：突出页面所做的改变。遵循用户心理习惯来提供可用性，完成用户期待。</p><h2><span id="pqi-neng-gong-xing-li-lun">七、能供性理论</span><a href="#pqi-neng-gong-xing-li-lun" class="header-anchor">#</a></h2><blockquote><p>Affordance Theory</p></blockquote><p>人们对世界的感知不仅仅来自于物体的形状和空间关系，还来自于物体的所能给人提供的用途。<br>例子：用来按的按钮，用来拉的门把，用来撬的杠杆等等。<br>建议：不要用超出常理的设计或暗示来让用户对你的产品功能造成误解。</p>]]></content>
      
      
      <categories>
          
          <category> 1702：用户交互心理学 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 设计 </tag>
            
            <tag> 心理学 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>平面设计基础</title>
      <link href="/170101/"/>
      <url>/170101/</url>
      
        <content type="html"><![CDATA[<blockquote><p>除非有更好的选择，否则就遵从标准。—— 阿兰库珀</p></blockquote><h1><span id="ping-mian-she-ji-ji-ben-yuan-ze">平面设计基本原则</span><a href="#ping-mian-she-ji-ji-ben-yuan-ze" class="header-anchor">#</a></h1><ul><li>对齐：可用网格、辅助线。</li><li>重复：控制元素数量，避免杀马特化。</li><li>对比：重复太多需要用对比来强调。</li><li>亲密性：物理位置的接近意味着内容的关联。</li></ul><h1><span id="bian-ping-hua">扁平化</span><a href="#bian-ping-hua" class="header-anchor">#</a></h1><p>扁平化的概念最核心的地方就是：去掉冗余的装饰效果，去掉多余的透视，纹理，渐变等等能做出3D效果的元素。让信息本身重新作为核心被凸显出来。并且在设计元素上强调抽象、极简、符号化。</p>]]></content>
      
      
      <categories>
          
          <category> 1701：平面设计基础 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 设计 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>色彩库</title>
      <link href="/170301/"/>
      <url>/170301/</url>
      
        <content type="html"><![CDATA[<h1><span id="se-cai-ku">色彩库</span><a href="#se-cai-ku" class="header-anchor">#</a></h1><ul><li>果灰 <code>#7ecdb6</code>  <span style="display: inline-block; width: 20px; height: 20px; background-color: #7ecdb6"></span></li><li>龙泉青瓷釉 <code>#c8e6c6</code>  <span style="display: inline-block; width: 20px; height: 20px; background-color: #c8e6c6"></span></li><li>银箔 <code>#d4d4d4</code>  <span style="display: inline-block; width: 20px; height: 20px; background-color: #d4d4d4"></span></li><li>芽灰 <code>#e3dbbf</code>  <span style="display: inline-block; width: 20px; height: 20px; background-color: #e3dbbf"></span></li></ul>]]></content>
      
      
      <categories>
          
          <category> 1703：色彩 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 设计 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Typora</title>
      <link href="/181005/"/>
      <url>/181005/</url>
      
        <content type="html"><![CDATA[<h1><span id="1-kuai-jie-jian">1、快捷键</span><a href="#1-kuai-jie-jian" class="header-anchor">#</a></h1><ul><li>源代码模式：CTRL + /</li><li>打字机模式：F8</li><li>专注模式：F9</li><li>显示/隐藏侧边栏：CTRL + SHIFT + L</li><li>段落：CTRL + 0</li><li>标题：CTRL + 1/6</li><li>表格：CTRL + T</li><li>选中一整行：CTRL + L</li><li>选中单词：CTRL + D</li><li>跳转到文章开头：CTRL + HOME</li><li>跳转到文章结尾：CTRL + END</li><li>插入链接：CTRL + K</li><li>设置：CTRL + ，</li><li>返回顶部: CTRL + Home</li></ul><h1><span id="2-zhuan-zhu-mo-shi">2、专注模式</span><a href="#2-zhuan-zhu-mo-shi" class="header-anchor">#</a></h1><p>快捷键 <code>F8</code> 打开专注模式，编辑器会高亮显示当前正在编辑的段落，让你更加专注于当前内容，不受视觉干扰。</p><h1><span id="3-da-zi-ji-mo-shi">3、打字机模式</span><a href="#3-da-zi-ji-mo-shi" class="header-anchor">#</a></h1><p>快捷键 <code>F9</code> 打开打字机模式，当前正在编辑的段落会居中显示。</p><h1><span id="4-shu-xue-gong-shi">4、数学公式</span><a href="#4-shu-xue-gong-shi" class="header-anchor">#</a></h1><p>数学的公式块是使用 <em>LaTeX</em> 语言实现，输入<code>$$</code>，然后按下<code>Enter</code>键就会弹出一个支持 TeX/LaTeX 语法的输入框。</p><h3><span id="pxiang-guan-lian-jie">相关链接</span><a href="#pxiang-guan-lian-jie" class="header-anchor">#</a></h3><ul><li><a href="https://typora.io/">首页</a></li><li><a href="https://theme.typora.io/">主题</a></li></ul>]]></content>
      
      
      <categories>
          
          <category> 1810：Markdown </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Markdown </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Vue×高德地图：使用技巧</title>
      <link href="/250602/"/>
      <url>/250602/</url>
      
        <content type="html"><![CDATA[<h1><span id="shi-yong-ji-qiao">使用技巧</span><a href="#shi-yong-ji-qiao" class="header-anchor">#</a></h1><ol><li><p>隐藏高德地图标识</p><pre class="line-numbers language-css" data-language="css"><code class="language-css"><span class="token comment">/* 去掉高德地图的标识 */</span><span class="token selector">.amap-logo, .amap-copyright</span> <span class="token punctuation">&#123;</span>  <span class="token property">display</span><span class="token punctuation">:</span> none <span class="token important">!important</span><span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span></span></code></pre></li></ol>]]></content>
      
      
      <categories>
          
          <category> 2506：Vue+高德地图 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Vue </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Vue+高德地图：基本使用</title>
      <link href="/250601/"/>
      <url>/250601/</url>
      
        <content type="html"><![CDATA[<h1><span id="shi-yong-bu-zou">使用步骤</span><a href="#shi-yong-bu-zou" class="header-anchor">#</a></h1><ol><li><p>注册/登录账号，申请 <code>key</code></p><blockquote><p>控制台 <code>https://console.amap.com/dev/index</code><br>文档 <code>https://lbs.amap.com/api/javascript-api</code></p></blockquote></li><li><p>在 <code>index.html</code> 引入</p><pre class="line-numbers language-html" data-language="html"><code class="language-html"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>script</span>     <span class="token attr-name">type</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>text/javascript<span class="token punctuation">"</span></span>    <span class="token attr-name">src</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>https://webapi.amap.com/mapsv=你的版本&amp;key=你的key<span class="token punctuation">"</span></span><span class="token punctuation">></span></span><span class="token script"></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>script</span><span class="token punctuation">></span></span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span></span></code></pre></li><li><p>创建一个容器</p><pre class="line-numbers language-html" data-language="html"><code class="language-html"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>template</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">id</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>container<span class="token punctuation">"</span></span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>template</span><span class="token punctuation">></span></span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span></span></code></pre></li><li><p>新建一个初始化函数</p><pre class="line-numbers language-js" data-language="js"><code class="language-js">methods<span class="token operator">:</span> <span class="token punctuation">&#123;</span>  <span class="token function">init</span> <span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">&#123;</span>    <span class="token keyword">var</span> map <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">AMap<span class="token punctuation">.</span>Map</span><span class="token punctuation">(</span><span class="token string">"container"</span><span class="token punctuation">)</span>    window<span class="token punctuation">.</span>map <span class="token operator">=</span> map  <span class="token punctuation">&#125;</span><span class="token punctuation">&#125;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre></li><li><p>调用初始化函数</p><pre class="line-numbers language-js" data-language="js"><code class="language-js"><span class="token function">mounted</span> <span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">&#123;</span>  <span class="token keyword">this</span><span class="token punctuation">.</span><span class="token function">init</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">&#125;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span></span></code></pre></li></ol><h1><span id="can-kao">参考</span><a href="#can-kao" class="header-anchor">#</a></h1><ul><li><a href="https://www.jianshu.com/p/1c7ec47a8451">vue3中使用高德地图</a></li></ul>]]></content>
      
      
      <categories>
          
          <category> 2506：Vue+高德地图 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Vue </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>前端面试之道</title>
      <link href="/280101/"/>
      <url>/280101/</url>
      
        <content type="html"><![CDATA[<p><a href="../../pages/%E5%89%8D%E7%AB%AF%E9%9D%A2%E8%AF%95%E4%B9%8B%E9%81%93/1-%E5%B0%8F%E5%86%8C%E9%A3%9F%E7%94%A8%E6%8C%87%E5%8D%97.htm">1-小册食用指南</a><br><a href="../../pages/%E5%89%8D%E7%AB%AF%E9%9D%A2%E8%AF%95%E4%B9%8B%E9%81%93/2-JS%20%E5%9F%BA%E7%A1%80%E7%9F%A5%E8%AF%86%E7%82%B9%E5%8F%8A%E5%B8%B8%E8%80%83%E9%9D%A2%E8%AF%95%E9%A2%98%EF%BC%88%E4%B8%80%EF%BC%89.htm">2-基础知识点及常考面试题一</a><br><a href="../../pages/%E5%89%8D%E7%AB%AF%E9%9D%A2%E8%AF%95%E4%B9%8B%E9%81%93/3-JS%20%E5%9F%BA%E7%A1%80%E7%9F%A5%E8%AF%86%E7%82%B9%E5%8F%8A%E5%B8%B8%E8%80%83%E9%9D%A2%E8%AF%95%E9%A2%98%EF%BC%88%E4%BA%8C%EF%BC%89.htm">3-基础知识点及常考面试题二</a><br><a href="../../pages/%E5%89%8D%E7%AB%AF%E9%9D%A2%E8%AF%95%E4%B9%8B%E9%81%93/4-ES6%20%E7%9F%A5%E8%AF%86%E7%82%B9%E5%8F%8A%E5%B8%B8%E8%80%83%E9%9D%A2%E8%AF%95%E9%A2%98.htm">4-ES6 知识点及常考面试题</a><br><a href="../../pages/%E5%89%8D%E7%AB%AF%E9%9D%A2%E8%AF%95%E4%B9%8B%E9%81%93/5-JS%20%E5%BC%82%E6%AD%A5%E7%BC%96%E7%A8%8B%E5%8F%8A%E5%B8%B8%E8%80%83%E9%9D%A2%E8%AF%95%E9%A2%98.htm">5-JS 异步编程及常考面试题</a><br><a href="../../pages/%E5%89%8D%E7%AB%AF%E9%9D%A2%E8%AF%95%E4%B9%8B%E9%81%93/6-%E6%89%8B%E5%86%99%20Promise.htm">6-手写 Promise</a><br><a href="../../pages/%E5%89%8D%E7%AB%AF%E9%9D%A2%E8%AF%95%E4%B9%8B%E9%81%93/7-Event%20Loop.htm">7-Event Loop</a><br><a href="../../pages/%E5%89%8D%E7%AB%AF%E9%9D%A2%E8%AF%95%E4%B9%8B%E9%81%93/8-JS%20%E8%BF%9B%E9%98%B6%E7%9F%A5%E8%AF%86%E7%82%B9%E5%8F%8A%E5%B8%B8%E8%80%83%E9%9D%A2%E8%AF%95%E9%A2%98.htm">8-JS 进阶知识点及常考面试题</a><br><a href="../../pages/%E5%89%8D%E7%AB%AF%E9%9D%A2%E8%AF%95%E4%B9%8B%E9%81%93/9-JS%20%E6%80%9D%E8%80%83%E9%A2%98.htm">9-JS 思考题</a><br><a href="../../pages/%E5%89%8D%E7%AB%AF%E9%9D%A2%E8%AF%95%E4%B9%8B%E9%81%93/10-DevTools%20Tips.htm">10-DevTools Tips</a><br><a href="../../pages/%E5%89%8D%E7%AB%AF%E9%9D%A2%E8%AF%95%E4%B9%8B%E9%81%93/11-%E6%B5%8F%E8%A7%88%E5%99%A8%E5%9F%BA%E7%A1%80%E7%9F%A5%E8%AF%86%E7%82%B9%E5%8F%8A%E5%B8%B8%E8%80%83%E9%9D%A2%E8%AF%95%E9%A2%98.htm">11-浏览器基础知识点及常考面试题</a><br><a href="../../pages/%E5%89%8D%E7%AB%AF%E9%9D%A2%E8%AF%95%E4%B9%8B%E9%81%93/12-%E6%B5%8F%E8%A7%88%E5%99%A8%E7%BC%93%E5%AD%98%E6%9C%BA%E5%88%B6.htm">12-浏览器缓存机制</a><br><a href="../../pages/%E5%89%8D%E7%AB%AF%E9%9D%A2%E8%AF%95%E4%B9%8B%E9%81%93/13-%E6%B5%8F%E8%A7%88%E5%99%A8%E6%B8%B2%E6%9F%93%E5%8E%9F%E7%90%86.htm">13-浏览器渲染原理</a><br><a href="../../pages/%E5%89%8D%E7%AB%AF%E9%9D%A2%E8%AF%95%E4%B9%8B%E9%81%93/14-%E5%AE%89%E5%85%A8%E9%98%B2%E8%8C%83%E7%9F%A5%E8%AF%86%E7%82%B9.htm">14-安全防范知识点</a><br><a href="../../pages/%E5%89%8D%E7%AB%AF%E9%9D%A2%E8%AF%95%E4%B9%8B%E9%81%93/15-%E4%BB%8E%20V8%20%E4%B8%AD%E7%9C%8B%20JS%20%E6%80%A7%E8%83%BD%E4%BC%98%E5%8C%96.htm">15-从 V8 中看 JS 性能优化</a><br><a href="../../pages/%E5%89%8D%E7%AB%AF%E9%9D%A2%E8%AF%95%E4%B9%8B%E9%81%93/16-%E6%80%A7%E8%83%BD%E4%BC%98%E5%8C%96%E7%90%90%E7%A2%8E%E4%BA%8B.htm">16-性能优化琐碎事</a><br><a href="../../pages/%E5%89%8D%E7%AB%AF%E9%9D%A2%E8%AF%95%E4%B9%8B%E9%81%93/17-Webpack%20%E6%80%A7%E8%83%BD%E4%BC%98%E5%8C%96.htm">17-Webpack 性能优化</a><br><a href="../../pages/%E5%89%8D%E7%AB%AF%E9%9D%A2%E8%AF%95%E4%B9%8B%E9%81%93/18-%E5%AE%9E%E7%8E%B0%E5%B0%8F%E5%9E%8B%E6%89%93%E5%8C%85%E5%B7%A5%E5%85%B7.htm">18-实现小型打包工具</a><br><a href="../../pages/%E5%89%8D%E7%AB%AF%E9%9D%A2%E8%AF%95%E4%B9%8B%E9%81%93/19-React%20%E5%92%8C%20Vue%20%E4%B8%A4%E5%A4%A7%E6%A1%86%E6%9E%B6%E4%B9%8B%E9%97%B4%E7%9A%84%E7%9B%B8%E7%88%B1%E7%9B%B8%E6%9D%80.htm">19-React 和 Vue 两大框架之间的相爱相杀</a><br><a href="../../pages/%E5%89%8D%E7%AB%AF%E9%9D%A2%E8%AF%95%E4%B9%8B%E9%81%93/20-Vue%20%E5%B8%B8%E8%80%83%E5%9F%BA%E7%A1%80%E7%9F%A5%E8%AF%86%E7%82%B9.htm">20-Vue 常考基础知识点</a><br><a href="../../pages/%E5%89%8D%E7%AB%AF%E9%9D%A2%E8%AF%95%E4%B9%8B%E9%81%93/21-Vue%20%E5%B8%B8%E8%80%83%E8%BF%9B%E9%98%B6%E7%9F%A5%E8%AF%86%E7%82%B9.htm">21-Vue 常考进阶知识点</a><br><a href="../../pages/%E5%89%8D%E7%AB%AF%E9%9D%A2%E8%AF%95%E4%B9%8B%E9%81%93/22-React%20%E5%B8%B8%E8%80%83%E5%9F%BA%E7%A1%80%E7%9F%A5%E8%AF%86%E7%82%B9.htm">22-React 常考基础知识点</a><br><a href="../../pages/%E5%89%8D%E7%AB%AF%E9%9D%A2%E8%AF%95%E4%B9%8B%E9%81%93/23-React%20%E5%B8%B8%E8%80%83%E8%BF%9B%E9%98%B6%E7%9F%A5%E8%AF%86%E7%82%B9.htm">23-React 常考进阶知识点</a><br><a href="../../pages/%E5%89%8D%E7%AB%AF%E9%9D%A2%E8%AF%95%E4%B9%8B%E9%81%93/24-%E7%9B%91%E6%8E%A7.htm">24-监控</a><br><a href="../../pages/%E5%89%8D%E7%AB%AF%E9%9D%A2%E8%AF%95%E4%B9%8B%E9%81%93/25-UDP.htm">25-UDP</a><br><a href="../../pages/%E5%89%8D%E7%AB%AF%E9%9D%A2%E8%AF%95%E4%B9%8B%E9%81%93/26-TCP.htm">26-TCP</a><br><a href="../../pages/%E5%89%8D%E7%AB%AF%E9%9D%A2%E8%AF%95%E4%B9%8B%E9%81%93/27-HTTP%20%E5%8F%8A%20TLS.htm">27-HTTP 及 TLS</a><br><a href="../../pages/%E5%89%8D%E7%AB%AF%E9%9D%A2%E8%AF%95%E4%B9%8B%E9%81%93/28-HTTP23.htm">28-HTTP/2 及 HTTP/3</a><br><a href="../../pages/%E5%89%8D%E7%AB%AF%E9%9D%A2%E8%AF%95%E4%B9%8B%E9%81%93/29-%E8%BE%93%E5%85%A5%20URL%20%E5%88%B0%E9%A1%B5%E9%9D%A2%E6%B8%B2%E6%9F%93%E7%9A%84%E6%95%B4%E4%B8%AA%E6%B5%81%E7%A8%8B.htm">29-输入 URL 到页面渲染的整个流程</a><br><a href="../../pages/%E5%89%8D%E7%AB%AF%E9%9D%A2%E8%AF%95%E4%B9%8B%E9%81%93/30-%E8%AE%BE%E8%AE%A1%E6%A8%A1%E5%BC%8F.htm">30-设计模式</a><br><a href="../../pages/%E5%89%8D%E7%AB%AF%E9%9D%A2%E8%AF%95%E4%B9%8B%E9%81%93/31-%E5%B8%B8%E8%A7%81%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84.htm">31-常见数据结构</a><br><a href="../../pages/%E5%89%8D%E7%AB%AF%E9%9D%A2%E8%AF%95%E4%B9%8B%E9%81%93/32-%E5%B8%B8%E8%80%83%E7%AE%97%E6%B3%95%E9%A2%98%E8%A7%A3%E6%9E%90.htm">32-常考算法题解析</a><br><a href="../../pages/%E5%89%8D%E7%AB%AF%E9%9D%A2%E8%AF%95%E4%B9%8B%E9%81%93/33-CSS%20%E5%B8%B8%E8%80%83%E9%9D%A2%E8%AF%95%E9%A2%98%E8%B5%84%E6%96%99.htm">33-CSS 常考面试题资料</a><br><a href="../../pages/%E5%89%8D%E7%AB%AF%E9%9D%A2%E8%AF%95%E4%B9%8B%E9%81%93/34-%E5%A6%82%E4%BD%95%E5%86%99%E5%A5%BD%E4%B8%80%E5%B0%81%E7%AE%80%E5%8E%86.htm">34-如何写好一封简历</a><br><a href="../../pages/%E5%89%8D%E7%AB%AF%E9%9D%A2%E8%AF%95%E4%B9%8B%E9%81%93/35-%E9%9D%A2%E8%AF%95%E5%B8%B8%E7%94%A8%E6%8A%80%E5%B7%A7.htm">35-面试常用技巧</a><br><a href="../../pages/%E5%89%8D%E7%AB%AF%E9%9D%A2%E8%AF%95%E4%B9%8B%E9%81%93/36-%E5%89%8D%E6%96%B9%E7%9A%84%E8%B7%AF%EF%BC%8C%E8%AE%A9%E6%88%91%E4%BB%AC%E7%BB%93%E4%BC%B4%E5%90%8C%E8%A1%8C.htm">36-前方的路，让我们结伴同行</a></p>]]></content>
      
      
      <categories>
          
          <category> 2801：前端面试 </category>
          
      </categories>
      
      
    </entry>
    
    
    
    <entry>
      <title>Markdown 使用心得</title>
      <link href="/181009/"/>
      <url>/181009/</url>
      
        <content type="html"><![CDATA[<h2><span id="p1-lian-jie-de-wen-jian-ming-zi-dai-kong-ge-bu-shi-bie-zen-me-ban">1、链接的文件名字带空格不识别怎么办？</span><a href="#p1-lian-jie-de-wen-jian-ming-zi-dai-kong-ge-bu-shi-bie-zen-me-ban" class="header-anchor">#</a></h2><p>解决: 在链接中用<code>%20</code>替代空格的书写</p><h2><span id="p2-yong-jiu-cha-ru-tu-pian">2、永久插入图片</span><a href="#p2-yong-jiu-cha-ru-tu-pian" class="header-anchor">#</a></h2><p>首先将图片通过在线转码工具转换成base64的编码，并用以下格式嵌入即可，格式如下：</p><p><code>![image] (base64)</code></p><p>但是由于这base64编码往往都很长，很占篇幅，因此我们可以给图片编号，并将所有的图片base64编码放在文档的最后即可，格式如下：</p><ul><li>在插入图片的地方使用：<code>![image] [图片编号]</code></li><li>在文档最后使用：<code>[图片编号]:base64编码</code></li></ul><p>这样即可完成图片的永久插入！</p>]]></content>
      
      
      <categories>
          
          <category> 1810：Markdown </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Markdown </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Hexo 内嵌脑图</title>
      <link href="/181802/"/>
      <url>/181802/</url>
      
        <content type="html"><![CDATA[<h1><span id="hexo-nei-qian-nao-tu">Hexo 内嵌脑图</span><a href="#hexo-nei-qian-nao-tu" class="header-anchor">#</a></h1><p>工具:</p><ul><li>MindManager 2020</li><li>Hexo</li></ul><p>第一步: MindManager 导出，选择 <code>HTML5 交互式导图</code>，选择局部导出<br>第二步: 在 Hexo 博客目录的 source 目录下新建一个 map 文件夹（也可以是其他名字）<br>第三步: 编辑 Hexo 博客目录下的 <code>_config.yml</code> ，搜索 <code>skip_render</code>，在下面添加 <code>&quot;map/**&quot;</code>，保存。<br>第四步: <code>hexo clean</code><br>第五步: 在你想插入导图的页面:</p><pre class="line-numbers language-html" data-language="html"><code class="language-html"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>iframe</span> <span class="token attr-name">src</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>../map/1.html<span class="token punctuation">"</span></span> <span class="token attr-name">width</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>1000<span class="token punctuation">"</span></span> <span class="token attr-name">height</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>1000<span class="token punctuation">"</span></span> <span class="token attr-name">frameborder</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>0<span class="token punctuation">"</span></span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>iframe</span><span class="token punctuation">></span></span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre>]]></content>
      
      
      <categories>
          
          <category> 1818：Hexo </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Hexo </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>闭包</title>
      <link href="/220202/"/>
      <url>/220202/</url>
      
        <content type="html"><![CDATA[<h1><span id="bi-bao">闭包</span><a href="#bi-bao" class="header-anchor">#</a></h1><h2><span id="p1-shi-me-shi-bi-bao">1、什么是闭包</span><a href="#p1-shi-me-shi-bi-bao" class="header-anchor">#</a></h2><p>闭包是一个包含被引用局部变量的 <code>closure</code> 对象，存在嵌套的内部函数中。</p><h2><span id="p2-zen-me-chan-sheng-bi-bao-amp-sheng-ming-zhou-qi">2、怎么产生闭包 &amp; 生命周期</span><a href="#p2-zen-me-chan-sheng-bi-bao-amp-sheng-ming-zhou-qi" class="header-anchor">#</a></h2><p>必须满足三个条件</p><ul><li>函数嵌套函数</li><li>内部函数调用外部函数的局部变量（引入全局变量是不会产生闭包的）</li><li>调用外部函数</li></ul><p>生命周期</p><ul><li>内部函数定义执行完成就产生</li><li>内部函数成为垃圾对象就销毁</li></ul><h2><span id="p3-bi-bao-de-zuo-yong-yu-que-dian">3、闭包的作用与缺点</span><a href="#p3-bi-bao-de-zuo-yong-yu-que-dian" class="header-anchor">#</a></h2><p>作用</p><ul><li>延长了局部变量的存活时间</li><li>让函数外部操作函数内部的数据</li></ul><p>缺点</p><ul><li>用太多可能会导致内存泄露（因为占用内部空间不释放）</li></ul><h2><span id="p4-bi-bao-de-ying-yong">4、闭包的应用</span><a href="#p4-bi-bao-de-ying-yong" class="header-anchor">#</a></h2><ul><li>迭代器</li><li>React 组件高阶函数（为了复用函数，给内部函数传参）</li><li>Vue 原理中存在（双向数据绑定原理）</li></ul>]]></content>
      
      
      <categories>
          
          <category> 2202：ES高级 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> JavaScript </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>NodeJS 版本管理</title>
      <link href="/220503/"/>
      <url>/220503/</url>
      
        <content type="html"><![CDATA[<h1><span id="nodejs-ban-ben-guan-li">NodeJS 版本管理</span><a href="#nodejs-ban-ben-guan-li" class="header-anchor">#</a></h1><h2><span id="pyi-n">一、<code>n</code></span><a href="#pyi-n" class="header-anchor">#</a></h2><p>用于 Mac 系统。</p><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"># 安装sudo npm i -g n# 安装指定版本的 node.jssudo n 12.18.2# 切换sudo n<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h2><span id="per-nvm">二、<code>NVM</code></span><a href="#per-nvm" class="header-anchor">#</a></h2><p>用于 Windows 系统。<br>全称 <code>Node.js Version Management</code></p><ul><li><p><a href="https://github.com/coreybutler/nvm-windows/releases">下载</a>，推荐使用 <code>nvm-setup.zip</code></p></li><li><p>相关命令</p><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"># 查看已经安装的node版本nvm ls# 安装对应的版本 nvm install xxx# 卸载nvm uninstall xxx# 使用nvm use xxx<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre></li></ul>]]></content>
      
      
      <categories>
          
          <category> 2205：NodeJS </category>
          
      </categories>
      
      
        <tags>
            
            <tag> JavaScript </tag>
            
            <tag> Node </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Mac</title>
      <link href="/180201/"/>
      <url>/180201/</url>
      
        <content type="html"><![CDATA[<h1><span id="mac">Mac</span><a href="#mac" class="header-anchor">#</a></h1><ul><li>切换输入法：<code>Command + 空格</code>（<code>ctrl + 空格</code>）</li><li>显示/隐藏隐藏文件：<code>Command + Shift + .</code></li></ul><h2><span id="pcan-kao">参考</span><a href="#pcan-kao" class="header-anchor">#</a></h2><ul><li><a href="https://blog.csdn.net/a4019069/article/details/80585612">VMWare虚拟机安装dmg格式的macOS操作系统</a></li><li><a href="https://blog.csdn.net/weixin_43825552/article/details/86763378">调分辨率</a></li></ul>]]></content>
      
      
      <categories>
          
          <category> 1802：Mac </category>
          
      </categories>
      
      
        <tags>
            
            <tag> OS </tag>
            
            <tag> Mac </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>NPM</title>
      <link href="/220502/"/>
      <url>/220502/</url>
      
        <content type="html"><![CDATA[<h1><span id="npm">NPM</span><a href="#npm" class="header-anchor">#</a></h1><p><code>npm</code> 是 Node 的模块管理器，全称 <code>Node Package Manager</code>。</p><h2><span id="pyi-chang-yong-ming-ling">一、常用命令</span><a href="#pyi-chang-yong-ming-ling" class="header-anchor">#</a></h2><p>1、安装</p><blockquote><p><code>npm install &lt;package&gt;</code></p><p><code>npm install</code> 可以简写为 <code>npm i</code> （？二者有一些微小的差异）</p><p><strong>强制安装</strong> 安装之前，会先检查 <code>node_modules</code> 目录之中是否已经存在指定模块，就会跳过，即使有一个新版本也是如此。使用<code>-f</code>或者<code>--force</code> 参数强制安装。</p><p><strong>安装指定版本</strong> 在包名@指定版本</p><p>全局安装 <code>-g</code> 或者 <code>-global</code></p><p>安装到生产和开发环境(dependencies) <code>-D</code> 或者 <code>--save-dev</code> （默认）</p><p>仅安装到开发环境(devDependencies) <code>-S</code> 或者 <code>--save</code></p><p><strong>安装项目依赖</strong> <code>npm i</code></p></blockquote><p>2、更新</p><blockquote><p><code>npm updata &lt;package&gt;</code></p></blockquote><p>3、查询版本</p><blockquote><p><code>npm view &lt;package&gt;</code></p><p>简写为 <code>npm v</code></p></blockquote><p>4、查看全局安装的包</p><blockquote><p><code>npm list -g --depth 0</code></p></blockquote><p>5、卸载</p><blockquote><p><code>npm uninstall &lt;package&gt;</code></p></blockquote><p>6、启动、停止、重启模块</p><blockquote><p><code>npm start</code></p><p><code>npm stop</code></p><p><code>npm restart</code></p></blockquote><p>7、切换镜像</p><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"># 切换阿里镜像npm config set registry http:&#x2F;&#x2F;registry.npm.taobao.org# 切换回原镜像npm config set registry https:&#x2F;&#x2F;registry.npmjs.org<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span></span></code></pre><p>8、清缓存</p><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash">npm cache verify# mac 要加 sudo 前缀<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre><h2><span id="pcan-kao">参考</span><a href="#pcan-kao" class="header-anchor">#</a></h2><ul><li><a href="http://www.ruanyifeng.com/blog/2016/01/npm-install.html">npm 模块安装机制简介</a></li></ul><h2><span id="pxu-zheng-li">需整理</span><a href="#pxu-zheng-li" class="header-anchor">#</a></h2><h3><span id="pchang-yong-ming-ling">常用命令</span><a href="#pchang-yong-ming-ling" class="header-anchor">#</a></h3><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"># 查看版本npm -v# 初始化项目npm initnpm init -y# 安装项目的所有依赖npm inpm install# 安装npm i 包名npm install 包名# 安装到项目的生产依赖npm install 包名 --savenpm install 包名 -S# 安装到项目的开发依赖npm install 包名 --save-devnpm install 包名 -D# 安装到全局环境npm install 包名 -g# 删除包npm remove 包名npm r 包名<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h3><span id="pcnpm">cnpm</span><a href="#pcnpm" class="header-anchor">#</a></h3><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash">npm install -g cnpm --registry&#x3D;https:&#x2F;&#x2F;registry.npm.taobao.org# 或者npm config set registry https:&#x2F;&#x2F;registry.npm.taobao.org<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span></span></code></pre><h3><span id="pyarn">Yarn</span><a href="#pyarn" class="header-anchor">#</a></h3><p>待更新。</p><h2><span id="ppackage-json">package.json</span><a href="#ppackage-json" class="header-anchor">#</a></h2><p>NodeJS 的包基本遵循 CommonJS 规范，包将一组相关的模块组合在一起，形成一套完整的工具，主要文件就是 <code>package.json</code>。</p><p><code>package.json</code> 文件其实就是对项目或者模块包的描述，里面包含许多元信息。比如项目名称，项目版本，项目执行入口文件，项目贡献者等等。<code>npm install</code>命令会根据这个文件下载所有依赖模块。</p><p>在项目根目录下执行 <code>npm init</code>，然后根据提示一步步输入相应的内容完成后即可自动创建该文件。</p><p>包描述文件包含以下字段：</p><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash">name - 包名，不能有中文、特殊字符等version - 包的版本号description - 包的描述homepage - 包的官网URLauthor - 包的作者contributors - 包的其他贡献者description - 项目描述，是一个字符串keywords - 项目关键字，是一个字符串数组private - 是否私有，设置为 true 时，npm 拒绝发布license - 软件授权条款，让用户知道他们的使用权利和限制bugs - bug 提交地址repository - 项目仓库地址homepage - 项目包的官网 URLdependencies - 生产环境下，项目运行所需依赖，运行包时需要使用的依赖\&gt; 显示的版本号：\&gt; 1.12.4 --&gt; 必须是 1.12.4 版本\&gt; ^1.12.4 --&gt; 必须是 1.12.x 版本，x取最新的\&gt; ~1.12.4 --&gt; 必须是 1.x.x 版本，x取最新的devDependencies - 开发环境下，项目所需依赖，构建包时需要使用依赖scripts - 执行 npm 脚本命令简写，比如 “start”: “react-scripts start”, 执行 npm start 就是运行 “react-scripts start”bin - 内部命令对应的可执行文件的路径。eslintConfig - EsLint 检查文件配置，自动读取验证engines - 项目运行的平台browseslist - 供浏览器使用的版本列表files - 被项目包含的文件名数组<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>]]></content>
      
      
      <categories>
          
          <category> 2205：NodeJS </category>
          
      </categories>
      
      
        <tags>
            
            <tag> JavaScript </tag>
            
            <tag> Node </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>前端代码规范</title>
      <link href="/240102/"/>
      <url>/240102/</url>
      
        <content type="html"><![CDATA[<h1><span id="qian-duan-dai-ma-gui-fan">前端代码规范</span><a href="#qian-duan-dai-ma-gui-fan" class="header-anchor">#</a></h1><p>JS</p><ol><li>使用单引号</li><li>代码换号</li><li><code>:</code> 后加空格，函数名和 <code>()</code> 前后加空格</li><li>废弃 <code>var</code> 用 <code>let</code> 和 <code>const</code></li><li>去除未使用的变量和函数</li><li>如有多个属性引用至同一个对象：<pre class="line-numbers language-js" data-language="js"><code class="language-js"><span class="token comment">// 错误写法</span><span class="token keyword">this</span><span class="token punctuation">.</span>$route<span class="token punctuation">.</span>query<span class="token punctuation">.</span>a<span class="token keyword">this</span><span class="token punctuation">.</span>$route<span class="token punctuation">.</span>query<span class="token punctuation">.</span>b<span class="token comment">// 正确写法</span><span class="token keyword">let</span> query <span class="token operator">=</span> <span class="token keyword">this</span><span class="token punctuation">.</span>$route query<span class="token punctuation">.</span>aquery<span class="token punctuation">.</span>b <span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre></li><li>不用分号</li><li>四个空格缩进</li><li>使用小驼峰命名法，并且变量都有明确的用途 <pre class="line-numbers language-js" data-language="js"><code class="language-js"><span class="token keyword">let</span> getComputedStyle<span class="token keyword">let</span> setProjectName<span class="token keyword">let</span> deleteProject<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span></span></code></pre></li><li>代码注释</li></ol><p>CSS：</p><ol><li>尽量在三层嵌套以内</li><li>不使用 <code>*</code></li><li>注重公共样式提取</li><li>命名用<code>-</code>拼接，应明确功能用途</li></ol><p>HTML：</p><ol><li><p>组件尽量遵守柯里化，例如一个确认框组件，尽可能拆散：<br>（1. 头部组件<br>- 标题<br>- close</p><p>（2. 中间内容</p><p>（3. 底部组件<br>- 按钮组件</p><p>（4. 遮罩组件<br>…</p></li><li><p>class 名使用 <code>-</code> 拼接</p></li><li><p>Tab / 4格缩进</p></li><li><p>尽量各个组件维护各个组件的 JS/CSS/HTML</p></li></ol><p>VSCode 配置</p><pre class="line-numbers language-json" data-language="json"><code class="language-json">&#123;  &#x2F;&#x2F; 调整窗口的缩放级别  &#x2F;&#x2F; &quot;window.zoomLevel&quot;: 1,  &#x2F;&#x2F;设置文字大小  &quot;editor.fontSize&quot;: 16,  &#x2F;&#x2F;设置文字行高  &quot;editor.lineHeight&quot;: 24,  &#x2F;&#x2F;开启行数提示  &quot;editor.lineNumbers&quot;: &quot;on&quot;,  &#x2F;&#x2F;开启自动显示建议  &quot;editor.quickSuggestions&quot;: &#123;    &quot;other&quot;: true,    &quot;comments&quot;: true,    &quot;strings&quot;: true  &#125;,  &#x2F;&#x2F;指定工作台中使用的颜色主题  &#x2F;&#x2F; &quot;workbench.colorTheme&quot;: &quot;Darcula Theme from IntelliJ&quot;,  &#x2F;&#x2F; vscode默认启用了根据文件类型自动设置tabsize的选项  &quot;editor.detectIndentation&quot;: false,  &#x2F;&#x2F; 重新设定 tabSize  &quot;editor.tabSize&quot;: 4,  &#x2F;&#x2F; #每次保存的时候自动格式化  &quot;editor.formatOnSave&quot;: false,  &#x2F;&#x2F; #每次保存的时候将代码按eslint格式进行修复  &quot;eslint.autoFixOnSave&quot;: false,  &#x2F;&#x2F; 添加 vue 支持, 开启对.vue文件中错误的检查  &quot;eslint.validate&quot;: [    &quot;javascript&quot;,    &quot;javascriptreact&quot;,    &#123;      &quot;language&quot;: &quot;vue&quot;,      &quot;autoFix&quot;: true    &#125;  ],  &#x2F;&#x2F;  #让prettier使用eslint的代码格式进行校验  &quot;prettier.eslintIntegration&quot;: true,  &#x2F;&#x2F;  #去掉代码结尾的分号  &quot;prettier.semi&quot;: false,  &#x2F;&#x2F;  #使用带引号替代双引号  &quot;prettier.singleQuote&quot;: true,  &#x2F;&#x2F;  #让函数(名)和后面的括号之间加个空格  &quot;javascript.format.insertSpaceBeforeFunctionParenthesis&quot;: true,  &#x2F;&#x2F; #这个按用户自身习惯选择  &quot;vetur.format.defaultFormatter.html&quot;: &quot;js-beautify-html&quot;,  &#x2F;&#x2F; #让vue中的js按编辑器自带的ts格式进行格式化  &quot;vetur.format.defaultFormatter.js&quot;: &quot;vscode-typescript&quot;,  &quot;vetur.format.defaultFormatterOptions&quot;: &#123;    &quot;js-beautify-html&quot;: &#123;      &#x2F;&#x2F; #vue组件中html代码格式化样式      &quot;wrap_attributes&quot;: &quot;auto&quot;    &#125;  &#125;&#125;<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>]]></content>
      
      
      <categories>
          
          <category> 2401：前端工程化 </category>
          
      </categories>
      
      
    </entry>
    
    
    
    <entry>
      <title>开发词汇集</title>
      <link href="/180901/"/>
      <url>/180901/</url>
      
        <content type="html"><![CDATA[<h2><span id="pa">A</span><a href="#pa" class="header-anchor">#</a></h2><ul><li>absolute 绝对</li><li>abstract 抽象</li><li>action 活动</li><li>active 活动的</li><li>activity 活动</li><li>add 添加</li><li>admin / administrator 管理员</li><li>align 对齐</li><li>alpha 阿尔法，内测版本</li><li>anchor 锚标记</li><li><strong>animation</strong> 动画</li><li>application / app 应用</li><li>API / Application Programming Interface 应用程序接口</li><li>area 区域</li><li>array 数组</li><li>aside 侧边栏</li><li>async 异步</li><li><strong>attribute</strong> 属性</li><li>auto 自动</li></ul><h2><span id="pb">B</span><a href="#pb" class="header-anchor">#</a></h2><ul><li>background 背景</li><li>banner 横幅</li><li>base 基础</li><li>beta 贝塔，公测版本</li><li>bit 位</li><li>BIOS / Basic Input Output System 基础输入输出系统</li><li>blog 博客</li><li>BOM / Browser Object Model 浏览器对象模型</li><li>border 边框</li><li>boolean 布尔值（true/false）</li><li>browser 浏览器</li><li>break 中断</li><li>bug 问题，漏洞（近：debug 调试）</li><li>button / btn 按钮</li><li>byte 字节</li></ul><h2><span id="pc">C</span><a href="#pc" class="header-anchor">#</a></h2><ul><li>cache 缓存</li><li>call 调用</li><li>callback 回调函数</li><li>card 卡片</li><li>carousel 轮播图（旋转木马，跑马灯）</li><li>catch 捕获</li><li>category 类别</li><li>center 居中，中心</li><li>change 改变</li><li>check 检查</li><li>children 子集</li><li>class 类</li><li>click 点击</li><li>client 客户端</li><li>code 码，代码</li><li>cookies</li><li>color 颜色</li><li><strong>component</strong> 组件</li><li>config 配置（近：option）</li><li>const 常量</li><li><strong>constructor</strong> 构造函数</li><li>container 容器</li><li>content 内容</li><li>continue 继续</li><li>count 数量</li><li>CPU / Central Processing Unit 中央处理器</li><li>create 创建</li><li>CSS / Cascading Style Sheets 层叠样式表</li><li>current 当前</li><li>custom 自定义，习惯</li></ul><h2><span id="pd">D</span><a href="#pd" class="header-anchor">#</a></h2><ul><li>data 数据（混：date 日期）</li><li>database 数据库</li><li>detail 详情</li><li>date 日期（混：data 数据）</li><li>debounce 防抖</li><li>debug 调试</li><li>deep 深度</li><li><strong>default</strong> 默认</li><li>define  定义（宏定义）</li><li>delay 延时</li><li>delegate 委托，代理</li><li>delete 删除（近：remove）</li><li>demo 演示</li><li>description 描述</li><li><strong>development</strong> 开发环境</li><li>dialog 对话框</li><li>dictionary 字典</li><li>direction 方向</li><li><strong>directive</strong> 指令</li><li>disable 禁用</li><li>display 显示</li><li>document 文档</li><li>DOM / Document Object Model 文档对象模式</li><li>download 下载</li></ul><h2><span id="pe">E</span><a href="#pe" class="header-anchor">#</a></h2><ul><li>element 元素</li><li>electron 电子</li><li>emit 分发</li><li>engine 引擎</li><li>enterprise 企业版</li><li>entry / entries 进入</li><li>environment / env 环境</li><li>error 错误</li><li>ES / ECMAScript</li><li>event 事件</li><li>exclude 排除</li><li>exception 异常</li><li>expired 到期，过期</li><li>export 导出</li><li>expand 展开</li><li>extend 扩展（近：extra），继承（extends）</li></ul><h2><span id="pf">F</span><a href="#pf" class="header-anchor">#</a></h2><ul><li>false 假</li><li>fast 快速</li><li>feedback 反馈</li><li>filter 过滤，滤镜</li><li>flex 弹性</li><li>focus 焦点，得到焦点（反：blur 失去焦点）</li><li>follow 关注（follower 关注者），遵循</li><li>footer 底部</li><li>force / -f 强制</li><li>form 表单</li><li>format 格式，格式化</li><li>found 发现（Not Found）</li><li>function 函数</li><li>full 全部，完整（full screen 全屏）</li></ul><h2><span id="pg">G</span><a href="#pg" class="header-anchor">#</a></h2><ul><li>GIS / Geographic Information System 地理信息系统</li><li>GMT / Greenwich Mean Time 格林威治时间（零时区）</li><li>grade 层级，等级（近：level）</li><li>grid 网格</li><li>get 获取</li><li>getter/setter 存取器</li><li>global 全局</li><li>GPU / Graphics Processing Unit 图形处理器</li></ul><h2><span id="ph">H</span><a href="#ph" class="header-anchor">#</a></h2><ul><li>handle 处理</li><li>HDMI / High Definition Multimedia Interface 高清多媒体接口</li><li>header 头部</li><li>height 高度</li><li>hide / hidden 隐藏</li><li>horizontal 水平（反：vertical 垂直）</li><li>host 主机</li><li>hover 鼠标悬浮效果</li><li>HTML / Hypertext Markup Language 超文本标记语言</li><li>HTTP / HyperText Transfer Protocol 超文本传输协议</li><li>HTTPS / Hyper Text Transfer Protocol over SecureSocket Layer</li><li>href / hypertext reference 超文本引用</li></ul><h2><span id="pi">I</span><a href="#pi" class="header-anchor">#</a></h2><ul><li>icon 图标</li><li>IDE / Integrated Development Environment 集成开发环境</li><li>image / img 图像</li><li>import 引入、导入</li><li>important 重要的</li><li>in 在</li><li>inactive 不活跃的</li><li>include 包含</li><li>index 序列</li><li>infinite 无限</li><li>info / information 信息（近：message）</li><li>init 初始化</li><li>install 安装（反：uninstall 卸载）</li><li>interface 接口</li><li>item 项</li><li>iterator 迭代器</li></ul><h2><span id="pj">J</span><a href="#pj" class="header-anchor">#</a></h2><ul><li>JS / JavaScript</li><li>JSX / JavaScript XML</li><li>jQuery*</li></ul><h2><span id="pk">K</span><a href="#pk" class="header-anchor">#</a></h2><ul><li>keep-alive 保持长连接，Vue 缓存组件</li><li>key 键</li><li>keyword 关键字</li></ul><h2><span id="pl">L</span><a href="#pl" class="header-anchor">#</a></h2><ul><li>label 标签</li><li>language / lang 语言</li><li>launch 启动</li><li>layout 布局</li><li>length 长度</li><li>let 让（定义）</li><li>level / lv 等级</li><li>library 库</li><li>lifecycle 生命周期</li><li>linear 线性</li><li>list 列表</li><li>load / loading 加载</li><li>local 本地</li><li>log 日志</li><li>login 登录</li><li>logo 商标，标志</li><li>logout 登出，注销</li></ul><h2><span id="pm">M</span><a href="#pm" class="header-anchor">#</a></h2><ul><li>main 主</li><li>manifest 清单</li><li>map 映射</li><li>margin 外边距</li><li>mask 蒙板，遮罩</li><li>max 最大值</li><li>menu 菜单</li><li>message 消息</li><li>merge 合并</li><li>method 方法</li><li>modal 模态（框）</li><li>mode 模式</li><li>model 模型</li><li>modern 现代</li><li>modify 修改</li><li>modifiers 修饰符</li><li><strong>module</strong> 模块</li><li>mount 挂载</li><li>multiple 多个</li><li><strong>mutation</strong> 变化</li></ul><h2><span id="pn">N</span><a href="#pn" class="header-anchor">#</a></h2><ul><li>NaN / Not a Number 非数字</li><li>native 原生的</li><li>navigation / nav 导航</li><li>network 网络</li><li>node 节点</li><li>notice 通知</li></ul><h2><span id="po">O</span><a href="#po" class="header-anchor">#</a></h2><ul><li>OA / Office Automation 办公自动化</li><li>object 对象</li><li>offline 离线</li><li>offset 偏移</li><li>open 打开，开放（开放平台）</li><li>operation 操作</li><li>option 选项，配置（近：setting 设置）</li><li>origin 源</li><li>OS / Operating System 操作系统</li><li>overflow 溢出</li><li>overview 总览，概述</li><li>outline 轮廓</li></ul><h2><span id="pp">P</span><a href="#pp" class="header-anchor">#</a></h2><ul><li>pack / package 包</li><li>padding 内边距</li><li>page 页面</li><li>pagination 分页</li><li>password 密码</li><li>path 路径（文件路径）</li><li>pay 支付</li><li>param 参数</li><li>parse 解析</li><li>pause 暂停</li><li><strong>permissions</strong> 权限</li><li>person 个人</li><li>phone 电话</li><li>plain 朴素的</li><li>player 播放器</li><li>position 定位，位置</li><li>power 驱动</li><li>preview 预览</li><li>private 私有</li><li>process 过程</li><li>product 产品</li><li>progress 进度，进度条</li><li><strong>promise</strong> 承诺</li><li><strong>production</strong> 生产环境</li><li>proportion 比例</li><li><strong>prototype</strong> 原型</li><li>proxy 委托</li><li>public 公共</li></ul><h2><span id="pq">Q</span><a href="#pq" class="header-anchor">#</a></h2><ul><li>query 查询</li></ul><h2><span id="pr">R</span><a href="#pr" class="header-anchor">#</a></h2><ul><li>radius 半径</li><li>RAM / Random Access Memory 随机存取存储器</li><li>react / reactive 响应式</li><li>readonly 只读</li><li>recover 恢复</li><li>reflect 反射</li><li>refresh 刷新</li><li>register 注册；寄存器</li><li>remove / rm 移除（近：delete）</li><li>render 渲染</li><li>renderer 渲染器</li><li>repeat 重复，平铺</li><li>REST / Representational State Transfer 表现层状态转移</li><li>return 返回</li><li>request / req 请求</li><li>require 必需</li><li>response 响应</li><li>result 结果</li><li>ROM / Read-Only Memory 只读存储器</li><li>root 根（根路径，Android 系统代表最高权限）</li><li><strong>router</strong> 路由，路由器</li><li>row 行</li></ul><h2><span id="ps">S</span><a href="#ps" class="header-anchor">#</a></h2><ul><li>save 保存</li><li>scope 范围</li><li>script 脚本</li><li>scroll 滚动</li><li>search 搜索</li><li>section 分区，分块</li><li>select 选择</li><li>server 服务器</li><li>service 服务</li><li>set 设置</li><li>setting 设置</li><li>size 尺寸，大小</li><li>slot 插槽</li><li>SQL / Structured Query Language 结构化查询语言</li><li>standard 标准</li><li>start 开始</li><li>state / status  状态值</li><li>static 静态</li><li>storage 存储</li><li>store 仓库</li><li>string / str 字符串</li><li>style 样式</li><li>sum 求和</li><li>support 支持，帮助</li><li>SVG / Scalable Vector Graphics 可伸缩矢量图</li><li>switch 开关（近：toggle）</li><li>symbol 唯一标志</li><li>sync 同步（反：async 异步）</li><li>system 系统</li></ul><h2><span id="pt">T</span><a href="#pt" class="header-anchor">#</a></h2><ul><li>table 表格</li><li>target 目标</li><li>temp 临时</li><li>template 模板</li><li>theme 主题</li><li>throttle 节流</li><li>time 时间</li><li>timeout 超时</li><li>tip 提示</li><li>title 标题</li><li>TLS / Transport Layer Security 传输层安全协议</li><li>tool 工具</li><li>toggle 切换、开关（近：switch）</li><li>transition 过渡动画</li><li>transparent 透明</li><li>tree 树形，树形控件</li><li>Trigger 触发器</li><li>tutorial 教程</li><li>type 类型</li></ul><h2><span id="pu">U</span><a href="#pu" class="header-anchor">#</a></h2><ul><li>undefined 未定义的</li><li>unicode 万国码（utf-8 是其实现方式之一）</li><li>update 更新</li><li>URL / Uniform Resource Locator 网址（统一资源定位器）</li><li>usage 用法</li><li>USB / Universal Serial Bus 通用串行总线</li><li>use 使用</li><li>user 用户</li><li>UTC / Coordinated Universal Time 协调世界时</li></ul><h2><span id="pv">V</span><a href="#pv" class="header-anchor">#</a></h2><ul><li>value 值</li><li>version / ver 版本</li><li>verify 验证</li><li>verification 验证（近：check）</li><li>vertical 垂直（反：horizontal 水平）</li><li>view 视图</li><li>viewport 视口</li><li>visibility 可见性</li><li>VPN / Virtual Private Network 虚拟专用网络</li></ul><h2><span id="pw">W</span><a href="#pw" class="header-anchor">#</a></h2><ul><li>warn / warning 警告</li><li>watch 监视，侦听</li><li>weak 弱</li><li>webkit 浏览器渲染内核（Safari）</li><li>webpack</li><li>WebSocket</li><li>width 宽度</li><li>Wi-Fi 无线局域网</li><li>window 窗口</li><li>wrapper 包裹</li><li>WWW / World Wide Web 万维网</li></ul><h2><span id="px">X</span><a href="#px" class="header-anchor">#</a></h2><ul><li>XML / Extensible Markup Language 可扩展标记语言</li></ul><h2><span id="py">Y</span><a href="#py" class="header-anchor">#</a></h2><h2><span id="pz">Z</span><a href="#pz" class="header-anchor">#</a></h2>]]></content>
      
      
      <categories>
          
          <category> 1809：计算机英语 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 英语 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Vue 开始</title>
      <link href="/250101/"/>
      <url>/250101/</url>
      
        <content type="html"><![CDATA[<h1><span id="vue-kai-shi">Vue 开始</span><a href="#vue-kai-shi" class="header-anchor">#</a></h1><p>渐进式，动态构建用户界面</p><p><a href="https://cn.vuejs.org/">文档</a></p><h2><span id="pte-dian">特点</span><a href="#pte-dian" class="header-anchor">#</a></h2><p>编码简洁，体积小，运行效率高，适合移动和PC端开发<br>借鉴了 Angular 的模版和数据绑定技术<br>借鉴了 React 的组件化和虚拟DOM技术</p>]]></content>
      
      
      <categories>
          
          <category> 2501：Vue基础 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> JavaScript </tag>
            
            <tag> Vue </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>JavaScript Promise</title>
      <link href="/220211/"/>
      <url>/220211/</url>
      
        <content type="html"><![CDATA[<p>进行异步编程的新解决方案。<br>以同步的形式把异步代码表达出来，避免回调函数层层嵌套的回调地狱。</p><h2><span id="p1-zhuang-tai">1、状态</span><a href="#p1-zhuang-tai" class="header-anchor">#</a></h2><table><thead><tr><th>状态</th><th>描述</th></tr></thead><tbody><tr><td><code>pending</code></td><td>初始化状态</td></tr><tr><td><code>fulfilled</code>（<code>resolve</code>）</td><td>成功状态，完成状态</td></tr><tr><td><code>reject</code></td><td>失败状态</td></tr></tbody></table><p>状态只能被改变一次。</p><h2><span id="p2-ji-ben-yong-fa">2、基本用法</span><a href="#p2-ji-ben-yong-fa" class="header-anchor">#</a></h2><pre class="line-numbers language-js" data-language="js"><code class="language-js"><span class="token keyword">const</span> p <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Promise</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token parameter">resolve<span class="token punctuation">,</span> reject</span><span class="token punctuation">)</span><span class="token operator">=></span><span class="token punctuation">&#123;</span>  <span class="token comment">// excutor 函数（同步的）</span>  <span class="token function">resolve</span><span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// reject(2)</span><span class="token punctuation">&#125;</span><span class="token punctuation">)</span><span class="token comment">// 写法一</span>p<span class="token punctuation">.</span><span class="token function">then</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token parameter">num</span><span class="token punctuation">)</span><span class="token operator">=></span><span class="token punctuation">&#123;</span><span class="token punctuation">&#125;</span><span class="token punctuation">,</span> <span class="token punctuation">(</span><span class="token parameter">num</span><span class="token punctuation">)</span><span class="token operator">=></span><span class="token punctuation">&#123;</span><span class="token punctuation">&#125;</span><span class="token punctuation">)</span><span class="token comment">// 写法二</span>p<span class="token punctuation">.</span><span class="token function">then</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token parameter">num</span><span class="token punctuation">)</span><span class="token operator">=></span><span class="token punctuation">&#123;</span><span class="token punctuation">&#125;</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">catch</span><span class="token punctuation">(</span><span class="token parameter">reason</span><span class="token punctuation">)</span><span class="token operator">=></span><span class="token punctuation">&#123;</span><span class="token punctuation">&#125;</span><span class="token punctuation">)</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h2><span id="p3-lian-shi-diao-yong">3、链式调用</span><a href="#p3-lian-shi-diao-yong" class="header-anchor">#</a></h2><p><code>Promise</code> 实现了<strong>链式调用</strong>，也就是说每次调用 <code>then</code> 之后返回的都是一个 <code>Promise</code>，并且是一个全新的 <code>Promise</code>，原因也是因为状态不可变。如果你在 <code>then</code> 中 使用了 <code>return</code>，那么 <code>return</code> 的值会被 <code>Promise.resolve()</code> 包装。</p><h2><span id="p4-geng-duo-fang-fa">4、更多方法</span><a href="#p4-geng-duo-fang-fa" class="header-anchor">#</a></h2><p>（1）<code>Promise.prototype.then</code></p><p>返回一个<code>Promise</code> 对象。</p><p>（2）<code>Promise.prototype.catch</code></p><p>返回一个<code>Promise</code> 对象。</p><p>（3）<code>Promise.resolve</code></p><p>返回的<code>Promise</code>对象状态为<code>fulfilled</code>。</p><p>（4）<code>Promise.reject</code></p><p>返回一个状态为<strong>失败</strong>的<code>Promise</code>对象，并将给定的失败信息传递给对应的处理方法。</p><p>（5）<code>Promise.all</code></p><ul><li>接收一个数组，数组的每一个元素都的 <code>Promise</code></li><li>返回的是一个 <code>Promise</code></li><li>数组中所有成功，则返回成功，如果有一个失败，则返回失败状态</li></ul><p>这个方法返回一个新的 promise 对象，该 promise 对象在 iterable 参数对象里所有的 promise 对象都成功的时候才会触发成功，一旦有任何一个 iterable 里面的 promise 对象失败则立即触发该 promise 对象的失败。</p><p>（6）<code>Promise.race</code></p><p>当 iterable 参数里的任意一个子 promise 被成功或失败后，父 promise 马上也会用子 promise 的成功返回值或失败详情作为参数调用父 promise 绑定的相应句柄，并返回该 promise 对象。</p><p>（7）<code>Promise.any</code></p><p>接收一个 Promise 对象的集合，当其中的一个 promise 成功，就返回那个成功的 promise 的值。</p><p>（8）<code>Promise.allSettled</code></p><p>等到所有 promises 都完成（每个 promise 返回成功或失败）。<br>返回一个 promise，该 promise 在所有 promise 完成后完成。并带有一个对象数组，每个对象对应每个 promise 的结果。</p><h2><span id="p5-li-zi-feng-zhuang-ajax">5、例子：封装 ajax</span><a href="#p5-li-zi-feng-zhuang-ajax" class="header-anchor">#</a></h2><pre class="line-numbers language-js" data-language="js"><code class="language-js"><span class="token comment">// 封装 ajax</span><span class="token keyword">function</span> <span class="token function">ajax</span><span class="token punctuation">(</span><span class="token parameter">url</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>  <span class="token keyword">return</span> <span class="token keyword">new</span> <span class="token class-name">Promise</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token parameter">resolve<span class="token punctuation">,</span> reject</span><span class="token punctuation">)</span> <span class="token operator">=></span> <span class="token punctuation">&#123;</span>    <span class="token keyword">const</span> xhr <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">XMLHttpRequest</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    xhr<span class="token punctuation">.</span><span class="token function-variable function">onreadystatechange</span> <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=></span> <span class="token punctuation">&#123;</span>      <span class="token keyword">if</span> <span class="token punctuation">(</span>xhr<span class="token punctuation">.</span>readyState <span class="token operator">===</span> <span class="token number">4</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>        <span class="token keyword">if</span> <span class="token punctuation">(</span>xhr<span class="token punctuation">.</span>status <span class="token operator">>=</span> <span class="token number">200</span> <span class="token operator">&amp;&amp;</span> xhr<span class="token punctuation">.</span>status <span class="token operator">&lt;</span> <span class="token number">300</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>          <span class="token function">resolve</span><span class="token punctuation">(</span>xhr<span class="token punctuation">.</span>responseText<span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token punctuation">&#125;</span> <span class="token keyword">else</span> <span class="token punctuation">&#123;</span>          <span class="token function">reject</span><span class="token punctuation">(</span>xhr<span class="token punctuation">.</span>responseText<span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token punctuation">&#125;</span>      <span class="token punctuation">&#125;</span>    <span class="token punctuation">&#125;</span><span class="token punctuation">;</span>    xhr<span class="token punctuation">.</span><span class="token function">open</span><span class="token punctuation">(</span><span class="token string">"GET"</span><span class="token punctuation">,</span> url<span class="token punctuation">)</span><span class="token punctuation">;</span>    xhr<span class="token punctuation">.</span><span class="token function">send</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>  <span class="token punctuation">&#125;</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span class="token comment">// 使用</span><span class="token function">ajax</span><span class="token punctuation">(</span><span class="token string">"xxx"</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">then</span><span class="token punctuation">(</span>  <span class="token punctuation">(</span><span class="token parameter">value</span><span class="token punctuation">)</span> <span class="token operator">=></span> <span class="token punctuation">&#123;</span>    <span class="token comment">// ....</span>  <span class="token punctuation">&#125;</span><span class="token punctuation">,</span>  <span class="token punctuation">(</span><span class="token parameter">result</span><span class="token punctuation">)</span> <span class="token operator">=></span> <span class="token punctuation">&#123;</span>    <span class="token comment">// .....</span>  <span class="token punctuation">&#125;</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h2><span id="p6-shou-xie-yi-ge-jian-dan-de-promise">6、手写一个简单的 Promise</span><a href="#p6-shou-xie-yi-ge-jian-dan-de-promise" class="header-anchor">#</a></h2><pre class="line-numbers language-js" data-language="js"><code class="language-js"><span class="token keyword">const</span> <span class="token constant">PENDING</span> <span class="token operator">=</span> <span class="token string">"pending"</span><span class="token punctuation">;</span><span class="token keyword">const</span> <span class="token constant">RESOLVED</span> <span class="token operator">=</span> <span class="token string">"fulfilled"</span><span class="token punctuation">;</span><span class="token keyword">const</span> <span class="token constant">REJECTED</span> <span class="token operator">=</span> <span class="token string">"rejected"</span><span class="token punctuation">;</span><span class="token keyword">function</span> <span class="token function">Promise</span><span class="token punctuation">(</span><span class="token parameter">exec</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>  <span class="token keyword">const</span> that <span class="token operator">=</span> <span class="token keyword">this</span><span class="token punctuation">;</span>  that<span class="token punctuation">.</span>state <span class="token operator">=</span> <span class="token constant">PENDING</span><span class="token punctuation">;</span>  that<span class="token punctuation">.</span>value <span class="token operator">=</span> <span class="token keyword">null</span><span class="token punctuation">;</span>  that<span class="token punctuation">.</span>resolvedCallbacks <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">;</span>  that<span class="token punctuation">.</span>rejectedCallbacks <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">;</span>  <span class="token keyword">function</span> <span class="token function">resolved</span><span class="token punctuation">(</span><span class="token parameter">value</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>    <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">.</span>state <span class="token operator">!==</span> <span class="token constant">PENDING</span><span class="token punctuation">)</span> <span class="token keyword">return</span><span class="token punctuation">;</span>    that<span class="token punctuation">.</span>state <span class="token operator">=</span> <span class="token constant">RESOLVED</span><span class="token punctuation">;</span>    that<span class="token punctuation">.</span>value <span class="token operator">=</span> value<span class="token punctuation">;</span>    that<span class="token punctuation">.</span>resolvedCallbacks<span class="token punctuation">.</span><span class="token function">map</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token parameter">v</span><span class="token punctuation">)</span> <span class="token operator">=></span> <span class="token function">v</span><span class="token punctuation">(</span>that<span class="token punctuation">.</span>value<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>  <span class="token punctuation">&#125;</span>  <span class="token keyword">function</span> <span class="token function">rejected</span><span class="token punctuation">(</span><span class="token parameter">value</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>    <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">.</span>state <span class="token operator">!==</span> <span class="token constant">PENDING</span><span class="token punctuation">)</span> <span class="token keyword">return</span><span class="token punctuation">;</span>    that<span class="token punctuation">.</span>state <span class="token operator">=</span> <span class="token constant">REJECTED</span><span class="token punctuation">;</span>    <span class="token keyword">this</span><span class="token punctuation">.</span>value <span class="token operator">=</span> value<span class="token punctuation">;</span>    that<span class="token punctuation">.</span>rejectedCallbacks<span class="token punctuation">.</span><span class="token function">map</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token parameter">v</span><span class="token punctuation">)</span> <span class="token operator">=></span> <span class="token function">v</span><span class="token punctuation">(</span>that<span class="token punctuation">.</span>value<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>  <span class="token punctuation">&#125;</span>  <span class="token keyword">try</span> <span class="token punctuation">&#123;</span>    <span class="token function">exec</span><span class="token punctuation">(</span>resolved<span class="token punctuation">,</span> rejected<span class="token punctuation">)</span><span class="token punctuation">;</span>  <span class="token punctuation">&#125;</span> <span class="token keyword">catch</span> <span class="token punctuation">(</span>err<span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>    <span class="token function">rejected</span><span class="token punctuation">(</span>err<span class="token punctuation">)</span><span class="token punctuation">;</span>  <span class="token punctuation">&#125;</span><span class="token punctuation">&#125;</span><span class="token class-name">Promise</span><span class="token punctuation">.</span>prototype<span class="token punctuation">.</span><span class="token function-variable function">then</span> <span class="token operator">=</span> <span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token parameter">onResolved<span class="token punctuation">,</span> onRejected</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>  <span class="token keyword">const</span> that <span class="token operator">=</span> <span class="token keyword">this</span><span class="token punctuation">;</span>  onResolved <span class="token operator">=</span> <span class="token keyword">typeof</span> onResolved <span class="token operator">===</span> <span class="token string">"function"</span> <span class="token operator">?</span> <span class="token function-variable function">onResolved</span> <span class="token operator">:</span> <span class="token punctuation">(</span><span class="token parameter">v</span><span class="token punctuation">)</span> <span class="token operator">=></span> v<span class="token punctuation">;</span>  onRejected <span class="token operator">=</span>    <span class="token keyword">typeof</span> onRejected <span class="token operator">===</span> <span class="token string">"function"</span> <span class="token operator">?</span> <span class="token function-variable function">onRejected</span> <span class="token operator">:</span> <span class="token punctuation">(</span><span class="token parameter">err</span><span class="token punctuation">)</span> <span class="token operator">=></span> <span class="token keyword">throw</span> err<span class="token punctuation">;</span>  <span class="token keyword">switch</span> <span class="token punctuation">(</span>that<span class="token punctuation">.</span>state<span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>    <span class="token keyword">case</span> <span class="token constant">PENDING</span><span class="token operator">:</span>      that<span class="token punctuation">.</span>resolvedCallbacks<span class="token punctuation">.</span><span class="token function">push</span><span class="token punctuation">(</span>onResolved<span class="token punctuation">)</span><span class="token punctuation">;</span>      that<span class="token punctuation">.</span>rejectedCallbacks<span class="token punctuation">.</span><span class="token function">push</span><span class="token punctuation">(</span>onRejected<span class="token punctuation">)</span><span class="token punctuation">;</span>      <span class="token keyword">break</span><span class="token punctuation">;</span>    <span class="token keyword">case</span> <span class="token constant">RESOLVED</span><span class="token operator">:</span>      <span class="token function">onResolved</span><span class="token punctuation">(</span>that<span class="token punctuation">.</span>value<span class="token punctuation">)</span><span class="token punctuation">;</span>      <span class="token keyword">break</span><span class="token punctuation">;</span>    <span class="token keyword">case</span> <span class="token constant">REJECTED</span><span class="token operator">:</span>      <span class="token function">onRejected</span><span class="token punctuation">(</span>that<span class="token punctuation">.</span>value<span class="token punctuation">)</span><span class="token punctuation">;</span>      <span class="token keyword">break</span><span class="token punctuation">;</span>  <span class="token punctuation">&#125;</span><span class="token punctuation">&#125;</span><span class="token punctuation">;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>]]></content>
      
      
      <categories>
          
          <category> 2202：ES高级 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> JavaScript </tag>
            
            <tag> JS异步 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>uni-app</title>
      <link href="/270202/"/>
      <url>/270202/</url>
      
        <content type="html"><![CDATA[<h1><span id="uni-app">uni-app</span><a href="#uni-app" class="header-anchor">#</a></h1><p>跨终端 | 基于 Vue</p><p>一套代码，可以在十个平台使用。</p><h2><span id="pyi-kai-shi">一、开始</span><a href="#pyi-kai-shi" class="header-anchor">#</a></h2><h3><span id="p1-kai-fa-huan-jing">1、开发环境</span><a href="#p1-kai-fa-huan-jing" class="header-anchor">#</a></h3><p>IDE：<code>HBuilderX</code></p><p>运行在浏览器需要配置程序路径（.exe）。运行在小程序模拟器需要配置程序文件夹并打开小程序开发工具安全设置<strong>开启端口</strong>。</p><h3><span id="p2-xiang-mu-mu-lu-fen-xi">2、项目目录分析</span><a href="#p2-xiang-mu-mu-lu-fen-xi" class="header-anchor">#</a></h3><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash">app ├── App.vue ├── main.js       # 等同 Vue 的 main.js || mpType 声明App组件代表整个小程序 ├── pages.json    # 对应小程序的 app.json └── mainfest.json # 项目声明和配置：小程序id必须配置（不是uni-app id）<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span></span></code></pre><h3><span id="p3-yu-fa">3、语法</span><a href="#p3-yu-fa" class="header-anchor">#</a></h3><ul><li>用 <code>view</code> 代替 <code>div</code></li><li>单位 <code>upx</code></li></ul>]]></content>
      
      
      <categories>
          
          <category> 2702：微信小程序 </category>
          
      </categories>
      
      
    </entry>
    
    
    
    <entry>
      <title>ES 杂项</title>
      <link href="/220110/"/>
      <url>/220110/</url>
      
        <content type="html"><![CDATA[<h2><span id="peval">eval</span><a href="#peval" class="header-anchor">#</a></h2><h2><span id="pdebugger">debugger</span><a href="#pdebugger" class="header-anchor">#</a></h2><h2><span id="pin-of">in/of</span><a href="#pin-of" class="header-anchor">#</a></h2><p>1、<code>in</code> 用来判断对象是否是数组/对象的元素/属性</p><pre class="line-numbers language-js" data-language="js"><code class="language-js"><span class="token constant">A</span> <span class="token keyword">in</span> <span class="token constant">B</span><span class="token comment">// 当B是数组时，A指的是数组的索引</span><span class="token comment">// 当B是对象时，A指的是对象的属性</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span></span></code></pre><p>2、<code>for...in</code> 对数组或者对象循环（迭代）操作</p><p>对于数组来说，遍历出来的是数组元素</p><p>对于对象来说，遍历出来的是对象属性（key）</p><p>可枚举属性（<code>enumerable</code> ，不包括 <code>symbol</code>），会循环原型链和手动添加的键</p><p>某些情况下，循环顺序是随机的</p><p>3、<code>for...of</code> 遍历出来的是对象（数组、类数组、字符串）的值</p><p>可以使用 <code>break</code> <code>continue</code> <code>return</code></p>]]></content>
      
      
      <categories>
          
          <category> 2201：ES基础 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> JavaScript </tag>
            
        </tags>
      
    </entry>
    
    
  
  
</search>
